

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jul  2 21:52:36 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16LF1708
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.10
    56                           ; Generated 31/07/2019 GMT
    57                           ; 
    58                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16LF1708 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  0111                     	;# 
   138  0112                     	;# 
   139  0113                     	;# 
   140  0114                     	;# 
   141  0115                     	;# 
   142  0116                     	;# 
   143  0117                     	;# 
   144  0118                     	;# 
   145  0119                     	;# 
   146  011C                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  018E                     	;# 
   150  0191                     	;# 
   151  0191                     	;# 
   152  0192                     	;# 
   153  0193                     	;# 
   154  0193                     	;# 
   155  0194                     	;# 
   156  0195                     	;# 
   157  0196                     	;# 
   158  0199                     	;# 
   159  0199                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019A                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019C                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019D                     	;# 
   173  019D                     	;# 
   174  019D                     	;# 
   175  019E                     	;# 
   176  019E                     	;# 
   177  019E                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  020C                     	;# 
   184  020D                     	;# 
   185  020E                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0213                     	;# 
   192  0214                     	;# 
   193  0214                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0216                     	;# 
   200  0217                     	;# 
   201  0217                     	;# 
   202  028C                     	;# 
   203  028D                     	;# 
   204  028E                     	;# 
   205  0291                     	;# 
   206  0291                     	;# 
   207  0292                     	;# 
   208  0293                     	;# 
   209  0293                     	;# 
   210  0298                     	;# 
   211  0298                     	;# 
   212  0299                     	;# 
   213  029A                     	;# 
   214  029A                     	;# 
   215  029E                     	;# 
   216  030C                     	;# 
   217  030D                     	;# 
   218  030E                     	;# 
   219  038C                     	;# 
   220  038D                     	;# 
   221  038E                     	;# 
   222  0391                     	;# 
   223  0392                     	;# 
   224  0393                     	;# 
   225  0394                     	;# 
   226  0395                     	;# 
   227  0396                     	;# 
   228  0397                     	;# 
   229  0398                     	;# 
   230  0399                     	;# 
   231  0415                     	;# 
   232  0416                     	;# 
   233  0417                     	;# 
   234  041C                     	;# 
   235  041D                     	;# 
   236  041E                     	;# 
   237  0511                     	;# 
   238  0515                     	;# 
   239  0617                     	;# 
   240  0618                     	;# 
   241  0619                     	;# 
   242  0619                     	;# 
   243  061A                     	;# 
   244  061B                     	;# 
   245  061C                     	;# 
   246  061C                     	;# 
   247  0691                     	;# 
   248  0692                     	;# 
   249  0693                     	;# 
   250  0694                     	;# 
   251  0695                     	;# 
   252  0696                     	;# 
   253  0697                     	;# 
   254  0698                     	;# 
   255  0699                     	;# 
   256  069A                     	;# 
   257  069B                     	;# 
   258  069C                     	;# 
   259  069D                     	;# 
   260  069E                     	;# 
   261  069F                     	;# 
   262  0E0F                     	;# 
   263  0E10                     	;# 
   264  0E11                     	;# 
   265  0E12                     	;# 
   266  0E13                     	;# 
   267  0E14                     	;# 
   268  0E15                     	;# 
   269  0E17                     	;# 
   270  0E20                     	;# 
   271  0E21                     	;# 
   272  0E22                     	;# 
   273  0E24                     	;# 
   274  0E25                     	;# 
   275  0E28                     	;# 
   276  0E29                     	;# 
   277  0E2A                     	;# 
   278  0E2B                     	;# 
   279  0E90                     	;# 
   280  0E91                     	;# 
   281  0E92                     	;# 
   282  0E94                     	;# 
   283  0E95                     	;# 
   284  0E9C                     	;# 
   285  0E9D                     	;# 
   286  0E9E                     	;# 
   287  0E9F                     	;# 
   288  0EA0                     	;# 
   289  0EA1                     	;# 
   290  0EA2                     	;# 
   291  0EA3                     	;# 
   292  0EA4                     	;# 
   293  0EA5                     	;# 
   294  0EA6                     	;# 
   295  0EA7                     	;# 
   296  0F0F                     	;# 
   297  0F10                     	;# 
   298  0F11                     	;# 
   299  0F12                     	;# 
   300  0F13                     	;# 
   301  0F14                     	;# 
   302  0F15                     	;# 
   303  0F16                     	;# 
   304  0F17                     	;# 
   305  0F18                     	;# 
   306  0F19                     	;# 
   307  0F1A                     	;# 
   308  0F1B                     	;# 
   309  0F1C                     	;# 
   310  0F1D                     	;# 
   311  0F1E                     	;# 
   312  0F1F                     	;# 
   313  0F20                     	;# 
   314  0F21                     	;# 
   315  0F22                     	;# 
   316  0F23                     	;# 
   317  0F24                     	;# 
   318  0F25                     	;# 
   319  0F26                     	;# 
   320  0F27                     	;# 
   321  0F28                     	;# 
   322  0F29                     	;# 
   323  0F2A                     	;# 
   324  0F2B                     	;# 
   325  0F2C                     	;# 
   326  0F2D                     	;# 
   327  0FE4                     	;# 
   328  0FE5                     	;# 
   329  0FE6                     	;# 
   330  0FE7                     	;# 
   331  0FE8                     	;# 
   332  0FE9                     	;# 
   333  0FEA                     	;# 
   334  0FEB                     	;# 
   335  0FED                     	;# 
   336  0FEE                     	;# 
   337  0FEF                     	;# 
   338  0000                     	;# 
   339  0001                     	;# 
   340  0002                     	;# 
   341  0003                     	;# 
   342  0004                     	;# 
   343  0005                     	;# 
   344  0006                     	;# 
   345  0007                     	;# 
   346  0008                     	;# 
   347  0009                     	;# 
   348  000A                     	;# 
   349  000B                     	;# 
   350  000C                     	;# 
   351  000D                     	;# 
   352  000E                     	;# 
   353  0011                     	;# 
   354  0012                     	;# 
   355  0013                     	;# 
   356  0015                     	;# 
   357  0016                     	;# 
   358  0016                     	;# 
   359  0017                     	;# 
   360  0018                     	;# 
   361  0019                     	;# 
   362  001A                     	;# 
   363  001B                     	;# 
   364  001C                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0095                     	;# 
   372  0096                     	;# 
   373  0097                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009A                     	;# 
   377  009B                     	;# 
   378  009B                     	;# 
   379  009C                     	;# 
   380  009D                     	;# 
   381  009E                     	;# 
   382  009F                     	;# 
   383  010C                     	;# 
   384  010D                     	;# 
   385  010E                     	;# 
   386  0111                     	;# 
   387  0112                     	;# 
   388  0113                     	;# 
   389  0114                     	;# 
   390  0115                     	;# 
   391  0116                     	;# 
   392  0117                     	;# 
   393  0118                     	;# 
   394  0119                     	;# 
   395  011C                     	;# 
   396  018C                     	;# 
   397  018D                     	;# 
   398  018E                     	;# 
   399  0191                     	;# 
   400  0191                     	;# 
   401  0192                     	;# 
   402  0193                     	;# 
   403  0193                     	;# 
   404  0194                     	;# 
   405  0195                     	;# 
   406  0196                     	;# 
   407  0199                     	;# 
   408  0199                     	;# 
   409  0199                     	;# 
   410  019A                     	;# 
   411  019A                     	;# 
   412  019A                     	;# 
   413  019B                     	;# 
   414  019B                     	;# 
   415  019B                     	;# 
   416  019B                     	;# 
   417  019B                     	;# 
   418  019C                     	;# 
   419  019C                     	;# 
   420  019C                     	;# 
   421  019D                     	;# 
   422  019D                     	;# 
   423  019D                     	;# 
   424  019E                     	;# 
   425  019E                     	;# 
   426  019E                     	;# 
   427  019F                     	;# 
   428  019F                     	;# 
   429  019F                     	;# 
   430  019F                     	;# 
   431  019F                     	;# 
   432  020C                     	;# 
   433  020D                     	;# 
   434  020E                     	;# 
   435  0211                     	;# 
   436  0211                     	;# 
   437  0212                     	;# 
   438  0212                     	;# 
   439  0213                     	;# 
   440  0213                     	;# 
   441  0214                     	;# 
   442  0214                     	;# 
   443  0215                     	;# 
   444  0215                     	;# 
   445  0215                     	;# 
   446  0215                     	;# 
   447  0216                     	;# 
   448  0216                     	;# 
   449  0217                     	;# 
   450  0217                     	;# 
   451  028C                     	;# 
   452  028D                     	;# 
   453  028E                     	;# 
   454  0291                     	;# 
   455  0291                     	;# 
   456  0292                     	;# 
   457  0293                     	;# 
   458  0293                     	;# 
   459  0298                     	;# 
   460  0298                     	;# 
   461  0299                     	;# 
   462  029A                     	;# 
   463  029A                     	;# 
   464  029E                     	;# 
   465  030C                     	;# 
   466  030D                     	;# 
   467  030E                     	;# 
   468  038C                     	;# 
   469  038D                     	;# 
   470  038E                     	;# 
   471  0391                     	;# 
   472  0392                     	;# 
   473  0393                     	;# 
   474  0394                     	;# 
   475  0395                     	;# 
   476  0396                     	;# 
   477  0397                     	;# 
   478  0398                     	;# 
   479  0399                     	;# 
   480  0415                     	;# 
   481  0416                     	;# 
   482  0417                     	;# 
   483  041C                     	;# 
   484  041D                     	;# 
   485  041E                     	;# 
   486  0511                     	;# 
   487  0515                     	;# 
   488  0617                     	;# 
   489  0618                     	;# 
   490  0619                     	;# 
   491  0619                     	;# 
   492  061A                     	;# 
   493  061B                     	;# 
   494  061C                     	;# 
   495  061C                     	;# 
   496  0691                     	;# 
   497  0692                     	;# 
   498  0693                     	;# 
   499  0694                     	;# 
   500  0695                     	;# 
   501  0696                     	;# 
   502  0697                     	;# 
   503  0698                     	;# 
   504  0699                     	;# 
   505  069A                     	;# 
   506  069B                     	;# 
   507  069C                     	;# 
   508  069D                     	;# 
   509  069E                     	;# 
   510  069F                     	;# 
   511  0E0F                     	;# 
   512  0E10                     	;# 
   513  0E11                     	;# 
   514  0E12                     	;# 
   515  0E13                     	;# 
   516  0E14                     	;# 
   517  0E15                     	;# 
   518  0E17                     	;# 
   519  0E20                     	;# 
   520  0E21                     	;# 
   521  0E22                     	;# 
   522  0E24                     	;# 
   523  0E25                     	;# 
   524  0E28                     	;# 
   525  0E29                     	;# 
   526  0E2A                     	;# 
   527  0E2B                     	;# 
   528  0E90                     	;# 
   529  0E91                     	;# 
   530  0E92                     	;# 
   531  0E94                     	;# 
   532  0E95                     	;# 
   533  0E9C                     	;# 
   534  0E9D                     	;# 
   535  0E9E                     	;# 
   536  0E9F                     	;# 
   537  0EA0                     	;# 
   538  0EA1                     	;# 
   539  0EA2                     	;# 
   540  0EA3                     	;# 
   541  0EA4                     	;# 
   542  0EA5                     	;# 
   543  0EA6                     	;# 
   544  0EA7                     	;# 
   545  0F0F                     	;# 
   546  0F10                     	;# 
   547  0F11                     	;# 
   548  0F12                     	;# 
   549  0F13                     	;# 
   550  0F14                     	;# 
   551  0F15                     	;# 
   552  0F16                     	;# 
   553  0F17                     	;# 
   554  0F18                     	;# 
   555  0F19                     	;# 
   556  0F1A                     	;# 
   557  0F1B                     	;# 
   558  0F1C                     	;# 
   559  0F1D                     	;# 
   560  0F1E                     	;# 
   561  0F1F                     	;# 
   562  0F20                     	;# 
   563  0F21                     	;# 
   564  0F22                     	;# 
   565  0F23                     	;# 
   566  0F24                     	;# 
   567  0F25                     	;# 
   568  0F26                     	;# 
   569  0F27                     	;# 
   570  0F28                     	;# 
   571  0F29                     	;# 
   572  0F2A                     	;# 
   573  0F2B                     	;# 
   574  0F2C                     	;# 
   575  0F2D                     	;# 
   576  0FE4                     	;# 
   577  0FE5                     	;# 
   578  0FE6                     	;# 
   579  0FE7                     	;# 
   580  0FE8                     	;# 
   581  0FE9                     	;# 
   582  0FEA                     	;# 
   583  0FEB                     	;# 
   584  0FED                     	;# 
   585  0FEE                     	;# 
   586  0FEF                     	;# 
   587  0000                     	;# 
   588  0001                     	;# 
   589  0002                     	;# 
   590  0003                     	;# 
   591  0004                     	;# 
   592  0005                     	;# 
   593  0006                     	;# 
   594  0007                     	;# 
   595  0008                     	;# 
   596  0009                     	;# 
   597  000A                     	;# 
   598  000B                     	;# 
   599  000C                     	;# 
   600  000D                     	;# 
   601  000E                     	;# 
   602  0011                     	;# 
   603  0012                     	;# 
   604  0013                     	;# 
   605  0015                     	;# 
   606  0016                     	;# 
   607  0016                     	;# 
   608  0017                     	;# 
   609  0018                     	;# 
   610  0019                     	;# 
   611  001A                     	;# 
   612  001B                     	;# 
   613  001C                     	;# 
   614  008C                     	;# 
   615  008D                     	;# 
   616  008E                     	;# 
   617  0091                     	;# 
   618  0092                     	;# 
   619  0093                     	;# 
   620  0095                     	;# 
   621  0096                     	;# 
   622  0097                     	;# 
   623  0098                     	;# 
   624  0099                     	;# 
   625  009A                     	;# 
   626  009B                     	;# 
   627  009B                     	;# 
   628  009C                     	;# 
   629  009D                     	;# 
   630  009E                     	;# 
   631  009F                     	;# 
   632  010C                     	;# 
   633  010D                     	;# 
   634  010E                     	;# 
   635  0111                     	;# 
   636  0112                     	;# 
   637  0113                     	;# 
   638  0114                     	;# 
   639  0115                     	;# 
   640  0116                     	;# 
   641  0117                     	;# 
   642  0118                     	;# 
   643  0119                     	;# 
   644  011C                     	;# 
   645  018C                     	;# 
   646  018D                     	;# 
   647  018E                     	;# 
   648  0191                     	;# 
   649  0191                     	;# 
   650  0192                     	;# 
   651  0193                     	;# 
   652  0193                     	;# 
   653  0194                     	;# 
   654  0195                     	;# 
   655  0196                     	;# 
   656  0199                     	;# 
   657  0199                     	;# 
   658  0199                     	;# 
   659  019A                     	;# 
   660  019A                     	;# 
   661  019A                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019B                     	;# 
   665  019B                     	;# 
   666  019B                     	;# 
   667  019C                     	;# 
   668  019C                     	;# 
   669  019C                     	;# 
   670  019D                     	;# 
   671  019D                     	;# 
   672  019D                     	;# 
   673  019E                     	;# 
   674  019E                     	;# 
   675  019E                     	;# 
   676  019F                     	;# 
   677  019F                     	;# 
   678  019F                     	;# 
   679  019F                     	;# 
   680  019F                     	;# 
   681  020C                     	;# 
   682  020D                     	;# 
   683  020E                     	;# 
   684  0211                     	;# 
   685  0211                     	;# 
   686  0212                     	;# 
   687  0212                     	;# 
   688  0213                     	;# 
   689  0213                     	;# 
   690  0214                     	;# 
   691  0214                     	;# 
   692  0215                     	;# 
   693  0215                     	;# 
   694  0215                     	;# 
   695  0215                     	;# 
   696  0216                     	;# 
   697  0216                     	;# 
   698  0217                     	;# 
   699  0217                     	;# 
   700  028C                     	;# 
   701  028D                     	;# 
   702  028E                     	;# 
   703  0291                     	;# 
   704  0291                     	;# 
   705  0292                     	;# 
   706  0293                     	;# 
   707  0293                     	;# 
   708  0298                     	;# 
   709  0298                     	;# 
   710  0299                     	;# 
   711  029A                     	;# 
   712  029A                     	;# 
   713  029E                     	;# 
   714  030C                     	;# 
   715  030D                     	;# 
   716  030E                     	;# 
   717  038C                     	;# 
   718  038D                     	;# 
   719  038E                     	;# 
   720  0391                     	;# 
   721  0392                     	;# 
   722  0393                     	;# 
   723  0394                     	;# 
   724  0395                     	;# 
   725  0396                     	;# 
   726  0397                     	;# 
   727  0398                     	;# 
   728  0399                     	;# 
   729  0415                     	;# 
   730  0416                     	;# 
   731  0417                     	;# 
   732  041C                     	;# 
   733  041D                     	;# 
   734  041E                     	;# 
   735  0511                     	;# 
   736  0515                     	;# 
   737  0617                     	;# 
   738  0618                     	;# 
   739  0619                     	;# 
   740  0619                     	;# 
   741  061A                     	;# 
   742  061B                     	;# 
   743  061C                     	;# 
   744  061C                     	;# 
   745  0691                     	;# 
   746  0692                     	;# 
   747  0693                     	;# 
   748  0694                     	;# 
   749  0695                     	;# 
   750  0696                     	;# 
   751  0697                     	;# 
   752  0698                     	;# 
   753  0699                     	;# 
   754  069A                     	;# 
   755  069B                     	;# 
   756  069C                     	;# 
   757  069D                     	;# 
   758  069E                     	;# 
   759  069F                     	;# 
   760  0E0F                     	;# 
   761  0E10                     	;# 
   762  0E11                     	;# 
   763  0E12                     	;# 
   764  0E13                     	;# 
   765  0E14                     	;# 
   766  0E15                     	;# 
   767  0E17                     	;# 
   768  0E20                     	;# 
   769  0E21                     	;# 
   770  0E22                     	;# 
   771  0E24                     	;# 
   772  0E25                     	;# 
   773  0E28                     	;# 
   774  0E29                     	;# 
   775  0E2A                     	;# 
   776  0E2B                     	;# 
   777  0E90                     	;# 
   778  0E91                     	;# 
   779  0E92                     	;# 
   780  0E94                     	;# 
   781  0E95                     	;# 
   782  0E9C                     	;# 
   783  0E9D                     	;# 
   784  0E9E                     	;# 
   785  0E9F                     	;# 
   786  0EA0                     	;# 
   787  0EA1                     	;# 
   788  0EA2                     	;# 
   789  0EA3                     	;# 
   790  0EA4                     	;# 
   791  0EA5                     	;# 
   792  0EA6                     	;# 
   793  0EA7                     	;# 
   794  0F0F                     	;# 
   795  0F10                     	;# 
   796  0F11                     	;# 
   797  0F12                     	;# 
   798  0F13                     	;# 
   799  0F14                     	;# 
   800  0F15                     	;# 
   801  0F16                     	;# 
   802  0F17                     	;# 
   803  0F18                     	;# 
   804  0F19                     	;# 
   805  0F1A                     	;# 
   806  0F1B                     	;# 
   807  0F1C                     	;# 
   808  0F1D                     	;# 
   809  0F1E                     	;# 
   810  0F1F                     	;# 
   811  0F20                     	;# 
   812  0F21                     	;# 
   813  0F22                     	;# 
   814  0F23                     	;# 
   815  0F24                     	;# 
   816  0F25                     	;# 
   817  0F26                     	;# 
   818  0F27                     	;# 
   819  0F28                     	;# 
   820  0F29                     	;# 
   821  0F2A                     	;# 
   822  0F2B                     	;# 
   823  0F2C                     	;# 
   824  0F2D                     	;# 
   825  0FE4                     	;# 
   826  0FE5                     	;# 
   827  0FE6                     	;# 
   828  0FE7                     	;# 
   829  0FE8                     	;# 
   830  0FE9                     	;# 
   831  0FEA                     	;# 
   832  0FEB                     	;# 
   833  0FED                     	;# 
   834  0FEE                     	;# 
   835  0FEF                     	;# 
   836  0000                     	;# 
   837  0001                     	;# 
   838  0002                     	;# 
   839  0003                     	;# 
   840  0004                     	;# 
   841  0005                     	;# 
   842  0006                     	;# 
   843  0007                     	;# 
   844  0008                     	;# 
   845  0009                     	;# 
   846  000A                     	;# 
   847  000B                     	;# 
   848  000C                     	;# 
   849  000D                     	;# 
   850  000E                     	;# 
   851  0011                     	;# 
   852  0012                     	;# 
   853  0013                     	;# 
   854  0015                     	;# 
   855  0016                     	;# 
   856  0016                     	;# 
   857  0017                     	;# 
   858  0018                     	;# 
   859  0019                     	;# 
   860  001A                     	;# 
   861  001B                     	;# 
   862  001C                     	;# 
   863  008C                     	;# 
   864  008D                     	;# 
   865  008E                     	;# 
   866  0091                     	;# 
   867  0092                     	;# 
   868  0093                     	;# 
   869  0095                     	;# 
   870  0096                     	;# 
   871  0097                     	;# 
   872  0098                     	;# 
   873  0099                     	;# 
   874  009A                     	;# 
   875  009B                     	;# 
   876  009B                     	;# 
   877  009C                     	;# 
   878  009D                     	;# 
   879  009E                     	;# 
   880  009F                     	;# 
   881  010C                     	;# 
   882  010D                     	;# 
   883  010E                     	;# 
   884  0111                     	;# 
   885  0112                     	;# 
   886  0113                     	;# 
   887  0114                     	;# 
   888  0115                     	;# 
   889  0116                     	;# 
   890  0117                     	;# 
   891  0118                     	;# 
   892  0119                     	;# 
   893  011C                     	;# 
   894  018C                     	;# 
   895  018D                     	;# 
   896  018E                     	;# 
   897  0191                     	;# 
   898  0191                     	;# 
   899  0192                     	;# 
   900  0193                     	;# 
   901  0193                     	;# 
   902  0194                     	;# 
   903  0195                     	;# 
   904  0196                     	;# 
   905  0199                     	;# 
   906  0199                     	;# 
   907  0199                     	;# 
   908  019A                     	;# 
   909  019A                     	;# 
   910  019A                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019B                     	;# 
   914  019B                     	;# 
   915  019B                     	;# 
   916  019C                     	;# 
   917  019C                     	;# 
   918  019C                     	;# 
   919  019D                     	;# 
   920  019D                     	;# 
   921  019D                     	;# 
   922  019E                     	;# 
   923  019E                     	;# 
   924  019E                     	;# 
   925  019F                     	;# 
   926  019F                     	;# 
   927  019F                     	;# 
   928  019F                     	;# 
   929  019F                     	;# 
   930  020C                     	;# 
   931  020D                     	;# 
   932  020E                     	;# 
   933  0211                     	;# 
   934  0211                     	;# 
   935  0212                     	;# 
   936  0212                     	;# 
   937  0213                     	;# 
   938  0213                     	;# 
   939  0214                     	;# 
   940  0214                     	;# 
   941  0215                     	;# 
   942  0215                     	;# 
   943  0215                     	;# 
   944  0215                     	;# 
   945  0216                     	;# 
   946  0216                     	;# 
   947  0217                     	;# 
   948  0217                     	;# 
   949  028C                     	;# 
   950  028D                     	;# 
   951  028E                     	;# 
   952  0291                     	;# 
   953  0291                     	;# 
   954  0292                     	;# 
   955  0293                     	;# 
   956  0293                     	;# 
   957  0298                     	;# 
   958  0298                     	;# 
   959  0299                     	;# 
   960  029A                     	;# 
   961  029A                     	;# 
   962  029E                     	;# 
   963  030C                     	;# 
   964  030D                     	;# 
   965  030E                     	;# 
   966  038C                     	;# 
   967  038D                     	;# 
   968  038E                     	;# 
   969  0391                     	;# 
   970  0392                     	;# 
   971  0393                     	;# 
   972  0394                     	;# 
   973  0395                     	;# 
   974  0396                     	;# 
   975  0397                     	;# 
   976  0398                     	;# 
   977  0399                     	;# 
   978  0415                     	;# 
   979  0416                     	;# 
   980  0417                     	;# 
   981  041C                     	;# 
   982  041D                     	;# 
   983  041E                     	;# 
   984  0511                     	;# 
   985  0515                     	;# 
   986  0617                     	;# 
   987  0618                     	;# 
   988  0619                     	;# 
   989  0619                     	;# 
   990  061A                     	;# 
   991  061B                     	;# 
   992  061C                     	;# 
   993  061C                     	;# 
   994  0691                     	;# 
   995  0692                     	;# 
   996  0693                     	;# 
   997  0694                     	;# 
   998  0695                     	;# 
   999  0696                     	;# 
  1000  0697                     	;# 
  1001  0698                     	;# 
  1002  0699                     	;# 
  1003  069A                     	;# 
  1004  069B                     	;# 
  1005  069C                     	;# 
  1006  069D                     	;# 
  1007  069E                     	;# 
  1008  069F                     	;# 
  1009  0E0F                     	;# 
  1010  0E10                     	;# 
  1011  0E11                     	;# 
  1012  0E12                     	;# 
  1013  0E13                     	;# 
  1014  0E14                     	;# 
  1015  0E15                     	;# 
  1016  0E17                     	;# 
  1017  0E20                     	;# 
  1018  0E21                     	;# 
  1019  0E22                     	;# 
  1020  0E24                     	;# 
  1021  0E25                     	;# 
  1022  0E28                     	;# 
  1023  0E29                     	;# 
  1024  0E2A                     	;# 
  1025  0E2B                     	;# 
  1026  0E90                     	;# 
  1027  0E91                     	;# 
  1028  0E92                     	;# 
  1029  0E94                     	;# 
  1030  0E95                     	;# 
  1031  0E9C                     	;# 
  1032  0E9D                     	;# 
  1033  0E9E                     	;# 
  1034  0E9F                     	;# 
  1035  0EA0                     	;# 
  1036  0EA1                     	;# 
  1037  0EA2                     	;# 
  1038  0EA3                     	;# 
  1039  0EA4                     	;# 
  1040  0EA5                     	;# 
  1041  0EA6                     	;# 
  1042  0EA7                     	;# 
  1043  0F0F                     	;# 
  1044  0F10                     	;# 
  1045  0F11                     	;# 
  1046  0F12                     	;# 
  1047  0F13                     	;# 
  1048  0F14                     	;# 
  1049  0F15                     	;# 
  1050  0F16                     	;# 
  1051  0F17                     	;# 
  1052  0F18                     	;# 
  1053  0F19                     	;# 
  1054  0F1A                     	;# 
  1055  0F1B                     	;# 
  1056  0F1C                     	;# 
  1057  0F1D                     	;# 
  1058  0F1E                     	;# 
  1059  0F1F                     	;# 
  1060  0F20                     	;# 
  1061  0F21                     	;# 
  1062  0F22                     	;# 
  1063  0F23                     	;# 
  1064  0F24                     	;# 
  1065  0F25                     	;# 
  1066  0F26                     	;# 
  1067  0F27                     	;# 
  1068  0F28                     	;# 
  1069  0F29                     	;# 
  1070  0F2A                     	;# 
  1071  0F2B                     	;# 
  1072  0F2C                     	;# 
  1073  0F2D                     	;# 
  1074  0FE4                     	;# 
  1075  0FE5                     	;# 
  1076  0FE6                     	;# 
  1077  0FE7                     	;# 
  1078  0FE8                     	;# 
  1079  0FE9                     	;# 
  1080  0FEA                     	;# 
  1081  0FEB                     	;# 
  1082  0FED                     	;# 
  1083  0FEE                     	;# 
  1084  0FEF                     	;# 
  1085  0000                     	;# 
  1086  0001                     	;# 
  1087  0002                     	;# 
  1088  0003                     	;# 
  1089  0004                     	;# 
  1090  0005                     	;# 
  1091  0006                     	;# 
  1092  0007                     	;# 
  1093  0008                     	;# 
  1094  0009                     	;# 
  1095  000A                     	;# 
  1096  000B                     	;# 
  1097  000C                     	;# 
  1098  000D                     	;# 
  1099  000E                     	;# 
  1100  0011                     	;# 
  1101  0012                     	;# 
  1102  0013                     	;# 
  1103  0015                     	;# 
  1104  0016                     	;# 
  1105  0016                     	;# 
  1106  0017                     	;# 
  1107  0018                     	;# 
  1108  0019                     	;# 
  1109  001A                     	;# 
  1110  001B                     	;# 
  1111  001C                     	;# 
  1112  008C                     	;# 
  1113  008D                     	;# 
  1114  008E                     	;# 
  1115  0091                     	;# 
  1116  0092                     	;# 
  1117  0093                     	;# 
  1118  0095                     	;# 
  1119  0096                     	;# 
  1120  0097                     	;# 
  1121  0098                     	;# 
  1122  0099                     	;# 
  1123  009A                     	;# 
  1124  009B                     	;# 
  1125  009B                     	;# 
  1126  009C                     	;# 
  1127  009D                     	;# 
  1128  009E                     	;# 
  1129  009F                     	;# 
  1130  010C                     	;# 
  1131  010D                     	;# 
  1132  010E                     	;# 
  1133  0111                     	;# 
  1134  0112                     	;# 
  1135  0113                     	;# 
  1136  0114                     	;# 
  1137  0115                     	;# 
  1138  0116                     	;# 
  1139  0117                     	;# 
  1140  0118                     	;# 
  1141  0119                     	;# 
  1142  011C                     	;# 
  1143  018C                     	;# 
  1144  018D                     	;# 
  1145  018E                     	;# 
  1146  0191                     	;# 
  1147  0191                     	;# 
  1148  0192                     	;# 
  1149  0193                     	;# 
  1150  0193                     	;# 
  1151  0194                     	;# 
  1152  0195                     	;# 
  1153  0196                     	;# 
  1154  0199                     	;# 
  1155  0199                     	;# 
  1156  0199                     	;# 
  1157  019A                     	;# 
  1158  019A                     	;# 
  1159  019A                     	;# 
  1160  019B                     	;# 
  1161  019B                     	;# 
  1162  019B                     	;# 
  1163  019B                     	;# 
  1164  019B                     	;# 
  1165  019C                     	;# 
  1166  019C                     	;# 
  1167  019C                     	;# 
  1168  019D                     	;# 
  1169  019D                     	;# 
  1170  019D                     	;# 
  1171  019E                     	;# 
  1172  019E                     	;# 
  1173  019E                     	;# 
  1174  019F                     	;# 
  1175  019F                     	;# 
  1176  019F                     	;# 
  1177  019F                     	;# 
  1178  019F                     	;# 
  1179  020C                     	;# 
  1180  020D                     	;# 
  1181  020E                     	;# 
  1182  0211                     	;# 
  1183  0211                     	;# 
  1184  0212                     	;# 
  1185  0212                     	;# 
  1186  0213                     	;# 
  1187  0213                     	;# 
  1188  0214                     	;# 
  1189  0214                     	;# 
  1190  0215                     	;# 
  1191  0215                     	;# 
  1192  0215                     	;# 
  1193  0215                     	;# 
  1194  0216                     	;# 
  1195  0216                     	;# 
  1196  0217                     	;# 
  1197  0217                     	;# 
  1198  028C                     	;# 
  1199  028D                     	;# 
  1200  028E                     	;# 
  1201  0291                     	;# 
  1202  0291                     	;# 
  1203  0292                     	;# 
  1204  0293                     	;# 
  1205  0293                     	;# 
  1206  0298                     	;# 
  1207  0298                     	;# 
  1208  0299                     	;# 
  1209  029A                     	;# 
  1210  029A                     	;# 
  1211  029E                     	;# 
  1212  030C                     	;# 
  1213  030D                     	;# 
  1214  030E                     	;# 
  1215  038C                     	;# 
  1216  038D                     	;# 
  1217  038E                     	;# 
  1218  0391                     	;# 
  1219  0392                     	;# 
  1220  0393                     	;# 
  1221  0394                     	;# 
  1222  0395                     	;# 
  1223  0396                     	;# 
  1224  0397                     	;# 
  1225  0398                     	;# 
  1226  0399                     	;# 
  1227  0415                     	;# 
  1228  0416                     	;# 
  1229  0417                     	;# 
  1230  041C                     	;# 
  1231  041D                     	;# 
  1232  041E                     	;# 
  1233  0511                     	;# 
  1234  0515                     	;# 
  1235  0617                     	;# 
  1236  0618                     	;# 
  1237  0619                     	;# 
  1238  0619                     	;# 
  1239  061A                     	;# 
  1240  061B                     	;# 
  1241  061C                     	;# 
  1242  061C                     	;# 
  1243  0691                     	;# 
  1244  0692                     	;# 
  1245  0693                     	;# 
  1246  0694                     	;# 
  1247  0695                     	;# 
  1248  0696                     	;# 
  1249  0697                     	;# 
  1250  0698                     	;# 
  1251  0699                     	;# 
  1252  069A                     	;# 
  1253  069B                     	;# 
  1254  069C                     	;# 
  1255  069D                     	;# 
  1256  069E                     	;# 
  1257  069F                     	;# 
  1258  0E0F                     	;# 
  1259  0E10                     	;# 
  1260  0E11                     	;# 
  1261  0E12                     	;# 
  1262  0E13                     	;# 
  1263  0E14                     	;# 
  1264  0E15                     	;# 
  1265  0E17                     	;# 
  1266  0E20                     	;# 
  1267  0E21                     	;# 
  1268  0E22                     	;# 
  1269  0E24                     	;# 
  1270  0E25                     	;# 
  1271  0E28                     	;# 
  1272  0E29                     	;# 
  1273  0E2A                     	;# 
  1274  0E2B                     	;# 
  1275  0E90                     	;# 
  1276  0E91                     	;# 
  1277  0E92                     	;# 
  1278  0E94                     	;# 
  1279  0E95                     	;# 
  1280  0E9C                     	;# 
  1281  0E9D                     	;# 
  1282  0E9E                     	;# 
  1283  0E9F                     	;# 
  1284  0EA0                     	;# 
  1285  0EA1                     	;# 
  1286  0EA2                     	;# 
  1287  0EA3                     	;# 
  1288  0EA4                     	;# 
  1289  0EA5                     	;# 
  1290  0EA6                     	;# 
  1291  0EA7                     	;# 
  1292  0F0F                     	;# 
  1293  0F10                     	;# 
  1294  0F11                     	;# 
  1295  0F12                     	;# 
  1296  0F13                     	;# 
  1297  0F14                     	;# 
  1298  0F15                     	;# 
  1299  0F16                     	;# 
  1300  0F17                     	;# 
  1301  0F18                     	;# 
  1302  0F19                     	;# 
  1303  0F1A                     	;# 
  1304  0F1B                     	;# 
  1305  0F1C                     	;# 
  1306  0F1D                     	;# 
  1307  0F1E                     	;# 
  1308  0F1F                     	;# 
  1309  0F20                     	;# 
  1310  0F21                     	;# 
  1311  0F22                     	;# 
  1312  0F23                     	;# 
  1313  0F24                     	;# 
  1314  0F25                     	;# 
  1315  0F26                     	;# 
  1316  0F27                     	;# 
  1317  0F28                     	;# 
  1318  0F29                     	;# 
  1319  0F2A                     	;# 
  1320  0F2B                     	;# 
  1321  0F2C                     	;# 
  1322  0F2D                     	;# 
  1323  0FE4                     	;# 
  1324  0FE5                     	;# 
  1325  0FE6                     	;# 
  1326  0FE7                     	;# 
  1327  0FE8                     	;# 
  1328  0FE9                     	;# 
  1329  0FEA                     	;# 
  1330  0FEB                     	;# 
  1331  0FED                     	;# 
  1332  0FEE                     	;# 
  1333  0FEF                     	;# 
  1334  0000                     	;# 
  1335  0001                     	;# 
  1336  0002                     	;# 
  1337  0003                     	;# 
  1338  0004                     	;# 
  1339  0005                     	;# 
  1340  0006                     	;# 
  1341  0007                     	;# 
  1342  0008                     	;# 
  1343  0009                     	;# 
  1344  000A                     	;# 
  1345  000B                     	;# 
  1346  000C                     	;# 
  1347  000D                     	;# 
  1348  000E                     	;# 
  1349  0011                     	;# 
  1350  0012                     	;# 
  1351  0013                     	;# 
  1352  0015                     	;# 
  1353  0016                     	;# 
  1354  0016                     	;# 
  1355  0017                     	;# 
  1356  0018                     	;# 
  1357  0019                     	;# 
  1358  001A                     	;# 
  1359  001B                     	;# 
  1360  001C                     	;# 
  1361  008C                     	;# 
  1362  008D                     	;# 
  1363  008E                     	;# 
  1364  0091                     	;# 
  1365  0092                     	;# 
  1366  0093                     	;# 
  1367  0095                     	;# 
  1368  0096                     	;# 
  1369  0097                     	;# 
  1370  0098                     	;# 
  1371  0099                     	;# 
  1372  009A                     	;# 
  1373  009B                     	;# 
  1374  009B                     	;# 
  1375  009C                     	;# 
  1376  009D                     	;# 
  1377  009E                     	;# 
  1378  009F                     	;# 
  1379  010C                     	;# 
  1380  010D                     	;# 
  1381  010E                     	;# 
  1382  0111                     	;# 
  1383  0112                     	;# 
  1384  0113                     	;# 
  1385  0114                     	;# 
  1386  0115                     	;# 
  1387  0116                     	;# 
  1388  0117                     	;# 
  1389  0118                     	;# 
  1390  0119                     	;# 
  1391  011C                     	;# 
  1392  018C                     	;# 
  1393  018D                     	;# 
  1394  018E                     	;# 
  1395  0191                     	;# 
  1396  0191                     	;# 
  1397  0192                     	;# 
  1398  0193                     	;# 
  1399  0193                     	;# 
  1400  0194                     	;# 
  1401  0195                     	;# 
  1402  0196                     	;# 
  1403  0199                     	;# 
  1404  0199                     	;# 
  1405  0199                     	;# 
  1406  019A                     	;# 
  1407  019A                     	;# 
  1408  019A                     	;# 
  1409  019B                     	;# 
  1410  019B                     	;# 
  1411  019B                     	;# 
  1412  019B                     	;# 
  1413  019B                     	;# 
  1414  019C                     	;# 
  1415  019C                     	;# 
  1416  019C                     	;# 
  1417  019D                     	;# 
  1418  019D                     	;# 
  1419  019D                     	;# 
  1420  019E                     	;# 
  1421  019E                     	;# 
  1422  019E                     	;# 
  1423  019F                     	;# 
  1424  019F                     	;# 
  1425  019F                     	;# 
  1426  019F                     	;# 
  1427  019F                     	;# 
  1428  020C                     	;# 
  1429  020D                     	;# 
  1430  020E                     	;# 
  1431  0211                     	;# 
  1432  0211                     	;# 
  1433  0212                     	;# 
  1434  0212                     	;# 
  1435  0213                     	;# 
  1436  0213                     	;# 
  1437  0214                     	;# 
  1438  0214                     	;# 
  1439  0215                     	;# 
  1440  0215                     	;# 
  1441  0215                     	;# 
  1442  0215                     	;# 
  1443  0216                     	;# 
  1444  0216                     	;# 
  1445  0217                     	;# 
  1446  0217                     	;# 
  1447  028C                     	;# 
  1448  028D                     	;# 
  1449  028E                     	;# 
  1450  0291                     	;# 
  1451  0291                     	;# 
  1452  0292                     	;# 
  1453  0293                     	;# 
  1454  0293                     	;# 
  1455  0298                     	;# 
  1456  0298                     	;# 
  1457  0299                     	;# 
  1458  029A                     	;# 
  1459  029A                     	;# 
  1460  029E                     	;# 
  1461  030C                     	;# 
  1462  030D                     	;# 
  1463  030E                     	;# 
  1464  038C                     	;# 
  1465  038D                     	;# 
  1466  038E                     	;# 
  1467  0391                     	;# 
  1468  0392                     	;# 
  1469  0393                     	;# 
  1470  0394                     	;# 
  1471  0395                     	;# 
  1472  0396                     	;# 
  1473  0397                     	;# 
  1474  0398                     	;# 
  1475  0399                     	;# 
  1476  0415                     	;# 
  1477  0416                     	;# 
  1478  0417                     	;# 
  1479  041C                     	;# 
  1480  041D                     	;# 
  1481  041E                     	;# 
  1482  0511                     	;# 
  1483  0515                     	;# 
  1484  0617                     	;# 
  1485  0618                     	;# 
  1486  0619                     	;# 
  1487  0619                     	;# 
  1488  061A                     	;# 
  1489  061B                     	;# 
  1490  061C                     	;# 
  1491  061C                     	;# 
  1492  0691                     	;# 
  1493  0692                     	;# 
  1494  0693                     	;# 
  1495  0694                     	;# 
  1496  0695                     	;# 
  1497  0696                     	;# 
  1498  0697                     	;# 
  1499  0698                     	;# 
  1500  0699                     	;# 
  1501  069A                     	;# 
  1502  069B                     	;# 
  1503  069C                     	;# 
  1504  069D                     	;# 
  1505  069E                     	;# 
  1506  069F                     	;# 
  1507  0E0F                     	;# 
  1508  0E10                     	;# 
  1509  0E11                     	;# 
  1510  0E12                     	;# 
  1511  0E13                     	;# 
  1512  0E14                     	;# 
  1513  0E15                     	;# 
  1514  0E17                     	;# 
  1515  0E20                     	;# 
  1516  0E21                     	;# 
  1517  0E22                     	;# 
  1518  0E24                     	;# 
  1519  0E25                     	;# 
  1520  0E28                     	;# 
  1521  0E29                     	;# 
  1522  0E2A                     	;# 
  1523  0E2B                     	;# 
  1524  0E90                     	;# 
  1525  0E91                     	;# 
  1526  0E92                     	;# 
  1527  0E94                     	;# 
  1528  0E95                     	;# 
  1529  0E9C                     	;# 
  1530  0E9D                     	;# 
  1531  0E9E                     	;# 
  1532  0E9F                     	;# 
  1533  0EA0                     	;# 
  1534  0EA1                     	;# 
  1535  0EA2                     	;# 
  1536  0EA3                     	;# 
  1537  0EA4                     	;# 
  1538  0EA5                     	;# 
  1539  0EA6                     	;# 
  1540  0EA7                     	;# 
  1541  0F0F                     	;# 
  1542  0F10                     	;# 
  1543  0F11                     	;# 
  1544  0F12                     	;# 
  1545  0F13                     	;# 
  1546  0F14                     	;# 
  1547  0F15                     	;# 
  1548  0F16                     	;# 
  1549  0F17                     	;# 
  1550  0F18                     	;# 
  1551  0F19                     	;# 
  1552  0F1A                     	;# 
  1553  0F1B                     	;# 
  1554  0F1C                     	;# 
  1555  0F1D                     	;# 
  1556  0F1E                     	;# 
  1557  0F1F                     	;# 
  1558  0F20                     	;# 
  1559  0F21                     	;# 
  1560  0F22                     	;# 
  1561  0F23                     	;# 
  1562  0F24                     	;# 
  1563  0F25                     	;# 
  1564  0F26                     	;# 
  1565  0F27                     	;# 
  1566  0F28                     	;# 
  1567  0F29                     	;# 
  1568  0F2A                     	;# 
  1569  0F2B                     	;# 
  1570  0F2C                     	;# 
  1571  0F2D                     	;# 
  1572  0FE4                     	;# 
  1573  0FE5                     	;# 
  1574  0FE6                     	;# 
  1575  0FE7                     	;# 
  1576  0FE8                     	;# 
  1577  0FE9                     	;# 
  1578  0FEA                     	;# 
  1579  0FEB                     	;# 
  1580  0FED                     	;# 
  1581  0FEE                     	;# 
  1582  0FEF                     	;# 
  1583  0000                     	;# 
  1584  0001                     	;# 
  1585  0002                     	;# 
  1586  0003                     	;# 
  1587  0004                     	;# 
  1588  0005                     	;# 
  1589  0006                     	;# 
  1590  0007                     	;# 
  1591  0008                     	;# 
  1592  0009                     	;# 
  1593  000A                     	;# 
  1594  000B                     	;# 
  1595  000C                     	;# 
  1596  000D                     	;# 
  1597  000E                     	;# 
  1598  0011                     	;# 
  1599  0012                     	;# 
  1600  0013                     	;# 
  1601  0015                     	;# 
  1602  0016                     	;# 
  1603  0016                     	;# 
  1604  0017                     	;# 
  1605  0018                     	;# 
  1606  0019                     	;# 
  1607  001A                     	;# 
  1608  001B                     	;# 
  1609  001C                     	;# 
  1610  008C                     	;# 
  1611  008D                     	;# 
  1612  008E                     	;# 
  1613  0091                     	;# 
  1614  0092                     	;# 
  1615  0093                     	;# 
  1616  0095                     	;# 
  1617  0096                     	;# 
  1618  0097                     	;# 
  1619  0098                     	;# 
  1620  0099                     	;# 
  1621  009A                     	;# 
  1622  009B                     	;# 
  1623  009B                     	;# 
  1624  009C                     	;# 
  1625  009D                     	;# 
  1626  009E                     	;# 
  1627  009F                     	;# 
  1628  010C                     	;# 
  1629  010D                     	;# 
  1630  010E                     	;# 
  1631  0111                     	;# 
  1632  0112                     	;# 
  1633  0113                     	;# 
  1634  0114                     	;# 
  1635  0115                     	;# 
  1636  0116                     	;# 
  1637  0117                     	;# 
  1638  0118                     	;# 
  1639  0119                     	;# 
  1640  011C                     	;# 
  1641  018C                     	;# 
  1642  018D                     	;# 
  1643  018E                     	;# 
  1644  0191                     	;# 
  1645  0191                     	;# 
  1646  0192                     	;# 
  1647  0193                     	;# 
  1648  0193                     	;# 
  1649  0194                     	;# 
  1650  0195                     	;# 
  1651  0196                     	;# 
  1652  0199                     	;# 
  1653  0199                     	;# 
  1654  0199                     	;# 
  1655  019A                     	;# 
  1656  019A                     	;# 
  1657  019A                     	;# 
  1658  019B                     	;# 
  1659  019B                     	;# 
  1660  019B                     	;# 
  1661  019B                     	;# 
  1662  019B                     	;# 
  1663  019C                     	;# 
  1664  019C                     	;# 
  1665  019C                     	;# 
  1666  019D                     	;# 
  1667  019D                     	;# 
  1668  019D                     	;# 
  1669  019E                     	;# 
  1670  019E                     	;# 
  1671  019E                     	;# 
  1672  019F                     	;# 
  1673  019F                     	;# 
  1674  019F                     	;# 
  1675  019F                     	;# 
  1676  019F                     	;# 
  1677  020C                     	;# 
  1678  020D                     	;# 
  1679  020E                     	;# 
  1680  0211                     	;# 
  1681  0211                     	;# 
  1682  0212                     	;# 
  1683  0212                     	;# 
  1684  0213                     	;# 
  1685  0213                     	;# 
  1686  0214                     	;# 
  1687  0214                     	;# 
  1688  0215                     	;# 
  1689  0215                     	;# 
  1690  0215                     	;# 
  1691  0215                     	;# 
  1692  0216                     	;# 
  1693  0216                     	;# 
  1694  0217                     	;# 
  1695  0217                     	;# 
  1696  028C                     	;# 
  1697  028D                     	;# 
  1698  028E                     	;# 
  1699  0291                     	;# 
  1700  0291                     	;# 
  1701  0292                     	;# 
  1702  0293                     	;# 
  1703  0293                     	;# 
  1704  0298                     	;# 
  1705  0298                     	;# 
  1706  0299                     	;# 
  1707  029A                     	;# 
  1708  029A                     	;# 
  1709  029E                     	;# 
  1710  030C                     	;# 
  1711  030D                     	;# 
  1712  030E                     	;# 
  1713  038C                     	;# 
  1714  038D                     	;# 
  1715  038E                     	;# 
  1716  0391                     	;# 
  1717  0392                     	;# 
  1718  0393                     	;# 
  1719  0394                     	;# 
  1720  0395                     	;# 
  1721  0396                     	;# 
  1722  0397                     	;# 
  1723  0398                     	;# 
  1724  0399                     	;# 
  1725  0415                     	;# 
  1726  0416                     	;# 
  1727  0417                     	;# 
  1728  041C                     	;# 
  1729  041D                     	;# 
  1730  041E                     	;# 
  1731  0511                     	;# 
  1732  0515                     	;# 
  1733  0617                     	;# 
  1734  0618                     	;# 
  1735  0619                     	;# 
  1736  0619                     	;# 
  1737  061A                     	;# 
  1738  061B                     	;# 
  1739  061C                     	;# 
  1740  061C                     	;# 
  1741  0691                     	;# 
  1742  0692                     	;# 
  1743  0693                     	;# 
  1744  0694                     	;# 
  1745  0695                     	;# 
  1746  0696                     	;# 
  1747  0697                     	;# 
  1748  0698                     	;# 
  1749  0699                     	;# 
  1750  069A                     	;# 
  1751  069B                     	;# 
  1752  069C                     	;# 
  1753  069D                     	;# 
  1754  069E                     	;# 
  1755  069F                     	;# 
  1756  0E0F                     	;# 
  1757  0E10                     	;# 
  1758  0E11                     	;# 
  1759  0E12                     	;# 
  1760  0E13                     	;# 
  1761  0E14                     	;# 
  1762  0E15                     	;# 
  1763  0E17                     	;# 
  1764  0E20                     	;# 
  1765  0E21                     	;# 
  1766  0E22                     	;# 
  1767  0E24                     	;# 
  1768  0E25                     	;# 
  1769  0E28                     	;# 
  1770  0E29                     	;# 
  1771  0E2A                     	;# 
  1772  0E2B                     	;# 
  1773  0E90                     	;# 
  1774  0E91                     	;# 
  1775  0E92                     	;# 
  1776  0E94                     	;# 
  1777  0E95                     	;# 
  1778  0E9C                     	;# 
  1779  0E9D                     	;# 
  1780  0E9E                     	;# 
  1781  0E9F                     	;# 
  1782  0EA0                     	;# 
  1783  0EA1                     	;# 
  1784  0EA2                     	;# 
  1785  0EA3                     	;# 
  1786  0EA4                     	;# 
  1787  0EA5                     	;# 
  1788  0EA6                     	;# 
  1789  0EA7                     	;# 
  1790  0F0F                     	;# 
  1791  0F10                     	;# 
  1792  0F11                     	;# 
  1793  0F12                     	;# 
  1794  0F13                     	;# 
  1795  0F14                     	;# 
  1796  0F15                     	;# 
  1797  0F16                     	;# 
  1798  0F17                     	;# 
  1799  0F18                     	;# 
  1800  0F19                     	;# 
  1801  0F1A                     	;# 
  1802  0F1B                     	;# 
  1803  0F1C                     	;# 
  1804  0F1D                     	;# 
  1805  0F1E                     	;# 
  1806  0F1F                     	;# 
  1807  0F20                     	;# 
  1808  0F21                     	;# 
  1809  0F22                     	;# 
  1810  0F23                     	;# 
  1811  0F24                     	;# 
  1812  0F25                     	;# 
  1813  0F26                     	;# 
  1814  0F27                     	;# 
  1815  0F28                     	;# 
  1816  0F29                     	;# 
  1817  0F2A                     	;# 
  1818  0F2B                     	;# 
  1819  0F2C                     	;# 
  1820  0F2D                     	;# 
  1821  0FE4                     	;# 
  1822  0FE5                     	;# 
  1823  0FE6                     	;# 
  1824  0FE7                     	;# 
  1825  0FE8                     	;# 
  1826  0FE9                     	;# 
  1827  0FEA                     	;# 
  1828  0FEB                     	;# 
  1829  0FED                     	;# 
  1830  0FEE                     	;# 
  1831  0FEF                     	;# 
  1832  0000                     	;# 
  1833  0001                     	;# 
  1834  0002                     	;# 
  1835  0003                     	;# 
  1836  0004                     	;# 
  1837  0005                     	;# 
  1838  0006                     	;# 
  1839  0007                     	;# 
  1840  0008                     	;# 
  1841  0009                     	;# 
  1842  000A                     	;# 
  1843  000B                     	;# 
  1844  000C                     	;# 
  1845  000D                     	;# 
  1846  000E                     	;# 
  1847  0011                     	;# 
  1848  0012                     	;# 
  1849  0013                     	;# 
  1850  0015                     	;# 
  1851  0016                     	;# 
  1852  0016                     	;# 
  1853  0017                     	;# 
  1854  0018                     	;# 
  1855  0019                     	;# 
  1856  001A                     	;# 
  1857  001B                     	;# 
  1858  001C                     	;# 
  1859  008C                     	;# 
  1860  008D                     	;# 
  1861  008E                     	;# 
  1862  0091                     	;# 
  1863  0092                     	;# 
  1864  0093                     	;# 
  1865  0095                     	;# 
  1866  0096                     	;# 
  1867  0097                     	;# 
  1868  0098                     	;# 
  1869  0099                     	;# 
  1870  009A                     	;# 
  1871  009B                     	;# 
  1872  009B                     	;# 
  1873  009C                     	;# 
  1874  009D                     	;# 
  1875  009E                     	;# 
  1876  009F                     	;# 
  1877  010C                     	;# 
  1878  010D                     	;# 
  1879  010E                     	;# 
  1880  0111                     	;# 
  1881  0112                     	;# 
  1882  0113                     	;# 
  1883  0114                     	;# 
  1884  0115                     	;# 
  1885  0116                     	;# 
  1886  0117                     	;# 
  1887  0118                     	;# 
  1888  0119                     	;# 
  1889  011C                     	;# 
  1890  018C                     	;# 
  1891  018D                     	;# 
  1892  018E                     	;# 
  1893  0191                     	;# 
  1894  0191                     	;# 
  1895  0192                     	;# 
  1896  0193                     	;# 
  1897  0193                     	;# 
  1898  0194                     	;# 
  1899  0195                     	;# 
  1900  0196                     	;# 
  1901  0199                     	;# 
  1902  0199                     	;# 
  1903  0199                     	;# 
  1904  019A                     	;# 
  1905  019A                     	;# 
  1906  019A                     	;# 
  1907  019B                     	;# 
  1908  019B                     	;# 
  1909  019B                     	;# 
  1910  019B                     	;# 
  1911  019B                     	;# 
  1912  019C                     	;# 
  1913  019C                     	;# 
  1914  019C                     	;# 
  1915  019D                     	;# 
  1916  019D                     	;# 
  1917  019D                     	;# 
  1918  019E                     	;# 
  1919  019E                     	;# 
  1920  019E                     	;# 
  1921  019F                     	;# 
  1922  019F                     	;# 
  1923  019F                     	;# 
  1924  019F                     	;# 
  1925  019F                     	;# 
  1926  020C                     	;# 
  1927  020D                     	;# 
  1928  020E                     	;# 
  1929  0211                     	;# 
  1930  0211                     	;# 
  1931  0212                     	;# 
  1932  0212                     	;# 
  1933  0213                     	;# 
  1934  0213                     	;# 
  1935  0214                     	;# 
  1936  0214                     	;# 
  1937  0215                     	;# 
  1938  0215                     	;# 
  1939  0215                     	;# 
  1940  0215                     	;# 
  1941  0216                     	;# 
  1942  0216                     	;# 
  1943  0217                     	;# 
  1944  0217                     	;# 
  1945  028C                     	;# 
  1946  028D                     	;# 
  1947  028E                     	;# 
  1948  0291                     	;# 
  1949  0291                     	;# 
  1950  0292                     	;# 
  1951  0293                     	;# 
  1952  0293                     	;# 
  1953  0298                     	;# 
  1954  0298                     	;# 
  1955  0299                     	;# 
  1956  029A                     	;# 
  1957  029A                     	;# 
  1958  029E                     	;# 
  1959  030C                     	;# 
  1960  030D                     	;# 
  1961  030E                     	;# 
  1962  038C                     	;# 
  1963  038D                     	;# 
  1964  038E                     	;# 
  1965  0391                     	;# 
  1966  0392                     	;# 
  1967  0393                     	;# 
  1968  0394                     	;# 
  1969  0395                     	;# 
  1970  0396                     	;# 
  1971  0397                     	;# 
  1972  0398                     	;# 
  1973  0399                     	;# 
  1974  0415                     	;# 
  1975  0416                     	;# 
  1976  0417                     	;# 
  1977  041C                     	;# 
  1978  041D                     	;# 
  1979  041E                     	;# 
  1980  0511                     	;# 
  1981  0515                     	;# 
  1982  0617                     	;# 
  1983  0618                     	;# 
  1984  0619                     	;# 
  1985  0619                     	;# 
  1986  061A                     	;# 
  1987  061B                     	;# 
  1988  061C                     	;# 
  1989  061C                     	;# 
  1990  0691                     	;# 
  1991  0692                     	;# 
  1992  0693                     	;# 
  1993  0694                     	;# 
  1994  0695                     	;# 
  1995  0696                     	;# 
  1996  0697                     	;# 
  1997  0698                     	;# 
  1998  0699                     	;# 
  1999  069A                     	;# 
  2000  069B                     	;# 
  2001  069C                     	;# 
  2002  069D                     	;# 
  2003  069E                     	;# 
  2004  069F                     	;# 
  2005  0E0F                     	;# 
  2006  0E10                     	;# 
  2007  0E11                     	;# 
  2008  0E12                     	;# 
  2009  0E13                     	;# 
  2010  0E14                     	;# 
  2011  0E15                     	;# 
  2012  0E17                     	;# 
  2013  0E20                     	;# 
  2014  0E21                     	;# 
  2015  0E22                     	;# 
  2016  0E24                     	;# 
  2017  0E25                     	;# 
  2018  0E28                     	;# 
  2019  0E29                     	;# 
  2020  0E2A                     	;# 
  2021  0E2B                     	;# 
  2022  0E90                     	;# 
  2023  0E91                     	;# 
  2024  0E92                     	;# 
  2025  0E94                     	;# 
  2026  0E95                     	;# 
  2027  0E9C                     	;# 
  2028  0E9D                     	;# 
  2029  0E9E                     	;# 
  2030  0E9F                     	;# 
  2031  0EA0                     	;# 
  2032  0EA1                     	;# 
  2033  0EA2                     	;# 
  2034  0EA3                     	;# 
  2035  0EA4                     	;# 
  2036  0EA5                     	;# 
  2037  0EA6                     	;# 
  2038  0EA7                     	;# 
  2039  0F0F                     	;# 
  2040  0F10                     	;# 
  2041  0F11                     	;# 
  2042  0F12                     	;# 
  2043  0F13                     	;# 
  2044  0F14                     	;# 
  2045  0F15                     	;# 
  2046  0F16                     	;# 
  2047  0F17                     	;# 
  2048  0F18                     	;# 
  2049  0F19                     	;# 
  2050  0F1A                     	;# 
  2051  0F1B                     	;# 
  2052  0F1C                     	;# 
  2053  0F1D                     	;# 
  2054  0F1E                     	;# 
  2055  0F1F                     	;# 
  2056  0F20                     	;# 
  2057  0F21                     	;# 
  2058  0F22                     	;# 
  2059  0F23                     	;# 
  2060  0F24                     	;# 
  2061  0F25                     	;# 
  2062  0F26                     	;# 
  2063  0F27                     	;# 
  2064  0F28                     	;# 
  2065  0F29                     	;# 
  2066  0F2A                     	;# 
  2067  0F2B                     	;# 
  2068  0F2C                     	;# 
  2069  0F2D                     	;# 
  2070  0FE4                     	;# 
  2071  0FE5                     	;# 
  2072  0FE6                     	;# 
  2073  0FE7                     	;# 
  2074  0FE8                     	;# 
  2075  0FE9                     	;# 
  2076  0FEA                     	;# 
  2077  0FEB                     	;# 
  2078  0FED                     	;# 
  2079  0FEE                     	;# 
  2080  0FEF                     	;# 
  2081  0000                     	;# 
  2082  0001                     	;# 
  2083  0002                     	;# 
  2084  0003                     	;# 
  2085  0004                     	;# 
  2086  0005                     	;# 
  2087  0006                     	;# 
  2088  0007                     	;# 
  2089  0008                     	;# 
  2090  0009                     	;# 
  2091  000A                     	;# 
  2092  000B                     	;# 
  2093  000C                     	;# 
  2094  000D                     	;# 
  2095  000E                     	;# 
  2096  0011                     	;# 
  2097  0012                     	;# 
  2098  0013                     	;# 
  2099  0015                     	;# 
  2100  0016                     	;# 
  2101  0016                     	;# 
  2102  0017                     	;# 
  2103  0018                     	;# 
  2104  0019                     	;# 
  2105  001A                     	;# 
  2106  001B                     	;# 
  2107  001C                     	;# 
  2108  008C                     	;# 
  2109  008D                     	;# 
  2110  008E                     	;# 
  2111  0091                     	;# 
  2112  0092                     	;# 
  2113  0093                     	;# 
  2114  0095                     	;# 
  2115  0096                     	;# 
  2116  0097                     	;# 
  2117  0098                     	;# 
  2118  0099                     	;# 
  2119  009A                     	;# 
  2120  009B                     	;# 
  2121  009B                     	;# 
  2122  009C                     	;# 
  2123  009D                     	;# 
  2124  009E                     	;# 
  2125  009F                     	;# 
  2126  010C                     	;# 
  2127  010D                     	;# 
  2128  010E                     	;# 
  2129  0111                     	;# 
  2130  0112                     	;# 
  2131  0113                     	;# 
  2132  0114                     	;# 
  2133  0115                     	;# 
  2134  0116                     	;# 
  2135  0117                     	;# 
  2136  0118                     	;# 
  2137  0119                     	;# 
  2138  011C                     	;# 
  2139  018C                     	;# 
  2140  018D                     	;# 
  2141  018E                     	;# 
  2142  0191                     	;# 
  2143  0191                     	;# 
  2144  0192                     	;# 
  2145  0193                     	;# 
  2146  0193                     	;# 
  2147  0194                     	;# 
  2148  0195                     	;# 
  2149  0196                     	;# 
  2150  0199                     	;# 
  2151  0199                     	;# 
  2152  0199                     	;# 
  2153  019A                     	;# 
  2154  019A                     	;# 
  2155  019A                     	;# 
  2156  019B                     	;# 
  2157  019B                     	;# 
  2158  019B                     	;# 
  2159  019B                     	;# 
  2160  019B                     	;# 
  2161  019C                     	;# 
  2162  019C                     	;# 
  2163  019C                     	;# 
  2164  019D                     	;# 
  2165  019D                     	;# 
  2166  019D                     	;# 
  2167  019E                     	;# 
  2168  019E                     	;# 
  2169  019E                     	;# 
  2170  019F                     	;# 
  2171  019F                     	;# 
  2172  019F                     	;# 
  2173  019F                     	;# 
  2174  019F                     	;# 
  2175  020C                     	;# 
  2176  020D                     	;# 
  2177  020E                     	;# 
  2178  0211                     	;# 
  2179  0211                     	;# 
  2180  0212                     	;# 
  2181  0212                     	;# 
  2182  0213                     	;# 
  2183  0213                     	;# 
  2184  0214                     	;# 
  2185  0214                     	;# 
  2186  0215                     	;# 
  2187  0215                     	;# 
  2188  0215                     	;# 
  2189  0215                     	;# 
  2190  0216                     	;# 
  2191  0216                     	;# 
  2192  0217                     	;# 
  2193  0217                     	;# 
  2194  028C                     	;# 
  2195  028D                     	;# 
  2196  028E                     	;# 
  2197  0291                     	;# 
  2198  0291                     	;# 
  2199  0292                     	;# 
  2200  0293                     	;# 
  2201  0293                     	;# 
  2202  0298                     	;# 
  2203  0298                     	;# 
  2204  0299                     	;# 
  2205  029A                     	;# 
  2206  029A                     	;# 
  2207  029E                     	;# 
  2208  030C                     	;# 
  2209  030D                     	;# 
  2210  030E                     	;# 
  2211  038C                     	;# 
  2212  038D                     	;# 
  2213  038E                     	;# 
  2214  0391                     	;# 
  2215  0392                     	;# 
  2216  0393                     	;# 
  2217  0394                     	;# 
  2218  0395                     	;# 
  2219  0396                     	;# 
  2220  0397                     	;# 
  2221  0398                     	;# 
  2222  0399                     	;# 
  2223  0415                     	;# 
  2224  0416                     	;# 
  2225  0417                     	;# 
  2226  041C                     	;# 
  2227  041D                     	;# 
  2228  041E                     	;# 
  2229  0511                     	;# 
  2230  0515                     	;# 
  2231  0617                     	;# 
  2232  0618                     	;# 
  2233  0619                     	;# 
  2234  0619                     	;# 
  2235  061A                     	;# 
  2236  061B                     	;# 
  2237  061C                     	;# 
  2238  061C                     	;# 
  2239  0691                     	;# 
  2240  0692                     	;# 
  2241  0693                     	;# 
  2242  0694                     	;# 
  2243  0695                     	;# 
  2244  0696                     	;# 
  2245  0697                     	;# 
  2246  0698                     	;# 
  2247  0699                     	;# 
  2248  069A                     	;# 
  2249  069B                     	;# 
  2250  069C                     	;# 
  2251  069D                     	;# 
  2252  069E                     	;# 
  2253  069F                     	;# 
  2254  0E0F                     	;# 
  2255  0E10                     	;# 
  2256  0E11                     	;# 
  2257  0E12                     	;# 
  2258  0E13                     	;# 
  2259  0E14                     	;# 
  2260  0E15                     	;# 
  2261  0E17                     	;# 
  2262  0E20                     	;# 
  2263  0E21                     	;# 
  2264  0E22                     	;# 
  2265  0E24                     	;# 
  2266  0E25                     	;# 
  2267  0E28                     	;# 
  2268  0E29                     	;# 
  2269  0E2A                     	;# 
  2270  0E2B                     	;# 
  2271  0E90                     	;# 
  2272  0E91                     	;# 
  2273  0E92                     	;# 
  2274  0E94                     	;# 
  2275  0E95                     	;# 
  2276  0E9C                     	;# 
  2277  0E9D                     	;# 
  2278  0E9E                     	;# 
  2279  0E9F                     	;# 
  2280  0EA0                     	;# 
  2281  0EA1                     	;# 
  2282  0EA2                     	;# 
  2283  0EA3                     	;# 
  2284  0EA4                     	;# 
  2285  0EA5                     	;# 
  2286  0EA6                     	;# 
  2287  0EA7                     	;# 
  2288  0F0F                     	;# 
  2289  0F10                     	;# 
  2290  0F11                     	;# 
  2291  0F12                     	;# 
  2292  0F13                     	;# 
  2293  0F14                     	;# 
  2294  0F15                     	;# 
  2295  0F16                     	;# 
  2296  0F17                     	;# 
  2297  0F18                     	;# 
  2298  0F19                     	;# 
  2299  0F1A                     	;# 
  2300  0F1B                     	;# 
  2301  0F1C                     	;# 
  2302  0F1D                     	;# 
  2303  0F1E                     	;# 
  2304  0F1F                     	;# 
  2305  0F20                     	;# 
  2306  0F21                     	;# 
  2307  0F22                     	;# 
  2308  0F23                     	;# 
  2309  0F24                     	;# 
  2310  0F25                     	;# 
  2311  0F26                     	;# 
  2312  0F27                     	;# 
  2313  0F28                     	;# 
  2314  0F29                     	;# 
  2315  0F2A                     	;# 
  2316  0F2B                     	;# 
  2317  0F2C                     	;# 
  2318  0F2D                     	;# 
  2319  0FE4                     	;# 
  2320  0FE5                     	;# 
  2321  0FE6                     	;# 
  2322  0FE7                     	;# 
  2323  0FE8                     	;# 
  2324  0FE9                     	;# 
  2325  0FEA                     	;# 
  2326  0FEB                     	;# 
  2327  0FED                     	;# 
  2328  0FEE                     	;# 
  2329  0FEF                     	;# 
  2330  0000                     	;# 
  2331  0001                     	;# 
  2332  0002                     	;# 
  2333  0003                     	;# 
  2334  0004                     	;# 
  2335  0005                     	;# 
  2336  0006                     	;# 
  2337  0007                     	;# 
  2338  0008                     	;# 
  2339  0009                     	;# 
  2340  000A                     	;# 
  2341  000B                     	;# 
  2342  000C                     	;# 
  2343  000D                     	;# 
  2344  000E                     	;# 
  2345  0011                     	;# 
  2346  0012                     	;# 
  2347  0013                     	;# 
  2348  0015                     	;# 
  2349  0016                     	;# 
  2350  0016                     	;# 
  2351  0017                     	;# 
  2352  0018                     	;# 
  2353  0019                     	;# 
  2354  001A                     	;# 
  2355  001B                     	;# 
  2356  001C                     	;# 
  2357  008C                     	;# 
  2358  008D                     	;# 
  2359  008E                     	;# 
  2360  0091                     	;# 
  2361  0092                     	;# 
  2362  0093                     	;# 
  2363  0095                     	;# 
  2364  0096                     	;# 
  2365  0097                     	;# 
  2366  0098                     	;# 
  2367  0099                     	;# 
  2368  009A                     	;# 
  2369  009B                     	;# 
  2370  009B                     	;# 
  2371  009C                     	;# 
  2372  009D                     	;# 
  2373  009E                     	;# 
  2374  009F                     	;# 
  2375  010C                     	;# 
  2376  010D                     	;# 
  2377  010E                     	;# 
  2378  0111                     	;# 
  2379  0112                     	;# 
  2380  0113                     	;# 
  2381  0114                     	;# 
  2382  0115                     	;# 
  2383  0116                     	;# 
  2384  0117                     	;# 
  2385  0118                     	;# 
  2386  0119                     	;# 
  2387  011C                     	;# 
  2388  018C                     	;# 
  2389  018D                     	;# 
  2390  018E                     	;# 
  2391  0191                     	;# 
  2392  0191                     	;# 
  2393  0192                     	;# 
  2394  0193                     	;# 
  2395  0193                     	;# 
  2396  0194                     	;# 
  2397  0195                     	;# 
  2398  0196                     	;# 
  2399  0199                     	;# 
  2400  0199                     	;# 
  2401  0199                     	;# 
  2402  019A                     	;# 
  2403  019A                     	;# 
  2404  019A                     	;# 
  2405  019B                     	;# 
  2406  019B                     	;# 
  2407  019B                     	;# 
  2408  019B                     	;# 
  2409  019B                     	;# 
  2410  019C                     	;# 
  2411  019C                     	;# 
  2412  019C                     	;# 
  2413  019D                     	;# 
  2414  019D                     	;# 
  2415  019D                     	;# 
  2416  019E                     	;# 
  2417  019E                     	;# 
  2418  019E                     	;# 
  2419  019F                     	;# 
  2420  019F                     	;# 
  2421  019F                     	;# 
  2422  019F                     	;# 
  2423  019F                     	;# 
  2424  020C                     	;# 
  2425  020D                     	;# 
  2426  020E                     	;# 
  2427  0211                     	;# 
  2428  0211                     	;# 
  2429  0212                     	;# 
  2430  0212                     	;# 
  2431  0213                     	;# 
  2432  0213                     	;# 
  2433  0214                     	;# 
  2434  0214                     	;# 
  2435  0215                     	;# 
  2436  0215                     	;# 
  2437  0215                     	;# 
  2438  0215                     	;# 
  2439  0216                     	;# 
  2440  0216                     	;# 
  2441  0217                     	;# 
  2442  0217                     	;# 
  2443  028C                     	;# 
  2444  028D                     	;# 
  2445  028E                     	;# 
  2446  0291                     	;# 
  2447  0291                     	;# 
  2448  0292                     	;# 
  2449  0293                     	;# 
  2450  0293                     	;# 
  2451  0298                     	;# 
  2452  0298                     	;# 
  2453  0299                     	;# 
  2454  029A                     	;# 
  2455  029A                     	;# 
  2456  029E                     	;# 
  2457  030C                     	;# 
  2458  030D                     	;# 
  2459  030E                     	;# 
  2460  038C                     	;# 
  2461  038D                     	;# 
  2462  038E                     	;# 
  2463  0391                     	;# 
  2464  0392                     	;# 
  2465  0393                     	;# 
  2466  0394                     	;# 
  2467  0395                     	;# 
  2468  0396                     	;# 
  2469  0397                     	;# 
  2470  0398                     	;# 
  2471  0399                     	;# 
  2472  0415                     	;# 
  2473  0416                     	;# 
  2474  0417                     	;# 
  2475  041C                     	;# 
  2476  041D                     	;# 
  2477  041E                     	;# 
  2478  0511                     	;# 
  2479  0515                     	;# 
  2480  0617                     	;# 
  2481  0618                     	;# 
  2482  0619                     	;# 
  2483  0619                     	;# 
  2484  061A                     	;# 
  2485  061B                     	;# 
  2486  061C                     	;# 
  2487  061C                     	;# 
  2488  0691                     	;# 
  2489  0692                     	;# 
  2490  0693                     	;# 
  2491  0694                     	;# 
  2492  0695                     	;# 
  2493  0696                     	;# 
  2494  0697                     	;# 
  2495  0698                     	;# 
  2496  0699                     	;# 
  2497  069A                     	;# 
  2498  069B                     	;# 
  2499  069C                     	;# 
  2500  069D                     	;# 
  2501  069E                     	;# 
  2502  069F                     	;# 
  2503  0E0F                     	;# 
  2504  0E10                     	;# 
  2505  0E11                     	;# 
  2506  0E12                     	;# 
  2507  0E13                     	;# 
  2508  0E14                     	;# 
  2509  0E15                     	;# 
  2510  0E17                     	;# 
  2511  0E20                     	;# 
  2512  0E21                     	;# 
  2513  0E22                     	;# 
  2514  0E24                     	;# 
  2515  0E25                     	;# 
  2516  0E28                     	;# 
  2517  0E29                     	;# 
  2518  0E2A                     	;# 
  2519  0E2B                     	;# 
  2520  0E90                     	;# 
  2521  0E91                     	;# 
  2522  0E92                     	;# 
  2523  0E94                     	;# 
  2524  0E95                     	;# 
  2525  0E9C                     	;# 
  2526  0E9D                     	;# 
  2527  0E9E                     	;# 
  2528  0E9F                     	;# 
  2529  0EA0                     	;# 
  2530  0EA1                     	;# 
  2531  0EA2                     	;# 
  2532  0EA3                     	;# 
  2533  0EA4                     	;# 
  2534  0EA5                     	;# 
  2535  0EA6                     	;# 
  2536  0EA7                     	;# 
  2537  0F0F                     	;# 
  2538  0F10                     	;# 
  2539  0F11                     	;# 
  2540  0F12                     	;# 
  2541  0F13                     	;# 
  2542  0F14                     	;# 
  2543  0F15                     	;# 
  2544  0F16                     	;# 
  2545  0F17                     	;# 
  2546  0F18                     	;# 
  2547  0F19                     	;# 
  2548  0F1A                     	;# 
  2549  0F1B                     	;# 
  2550  0F1C                     	;# 
  2551  0F1D                     	;# 
  2552  0F1E                     	;# 
  2553  0F1F                     	;# 
  2554  0F20                     	;# 
  2555  0F21                     	;# 
  2556  0F22                     	;# 
  2557  0F23                     	;# 
  2558  0F24                     	;# 
  2559  0F25                     	;# 
  2560  0F26                     	;# 
  2561  0F27                     	;# 
  2562  0F28                     	;# 
  2563  0F29                     	;# 
  2564  0F2A                     	;# 
  2565  0F2B                     	;# 
  2566  0F2C                     	;# 
  2567  0F2D                     	;# 
  2568  0FE4                     	;# 
  2569  0FE5                     	;# 
  2570  0FE6                     	;# 
  2571  0FE7                     	;# 
  2572  0FE8                     	;# 
  2573  0FE9                     	;# 
  2574  0FEA                     	;# 
  2575  0FEB                     	;# 
  2576  0FED                     	;# 
  2577  0FEE                     	;# 
  2578  0FEF                     	;# 
  2579  0000                     	;# 
  2580  0001                     	;# 
  2581  0002                     	;# 
  2582  0003                     	;# 
  2583  0004                     	;# 
  2584  0005                     	;# 
  2585  0006                     	;# 
  2586  0007                     	;# 
  2587  0008                     	;# 
  2588  0009                     	;# 
  2589  000A                     	;# 
  2590  000B                     	;# 
  2591  000C                     	;# 
  2592  000D                     	;# 
  2593  000E                     	;# 
  2594  0011                     	;# 
  2595  0012                     	;# 
  2596  0013                     	;# 
  2597  0015                     	;# 
  2598  0016                     	;# 
  2599  0016                     	;# 
  2600  0017                     	;# 
  2601  0018                     	;# 
  2602  0019                     	;# 
  2603  001A                     	;# 
  2604  001B                     	;# 
  2605  001C                     	;# 
  2606  008C                     	;# 
  2607  008D                     	;# 
  2608  008E                     	;# 
  2609  0091                     	;# 
  2610  0092                     	;# 
  2611  0093                     	;# 
  2612  0095                     	;# 
  2613  0096                     	;# 
  2614  0097                     	;# 
  2615  0098                     	;# 
  2616  0099                     	;# 
  2617  009A                     	;# 
  2618  009B                     	;# 
  2619  009B                     	;# 
  2620  009C                     	;# 
  2621  009D                     	;# 
  2622  009E                     	;# 
  2623  009F                     	;# 
  2624  010C                     	;# 
  2625  010D                     	;# 
  2626  010E                     	;# 
  2627  0111                     	;# 
  2628  0112                     	;# 
  2629  0113                     	;# 
  2630  0114                     	;# 
  2631  0115                     	;# 
  2632  0116                     	;# 
  2633  0117                     	;# 
  2634  0118                     	;# 
  2635  0119                     	;# 
  2636  011C                     	;# 
  2637  018C                     	;# 
  2638  018D                     	;# 
  2639  018E                     	;# 
  2640  0191                     	;# 
  2641  0191                     	;# 
  2642  0192                     	;# 
  2643  0193                     	;# 
  2644  0193                     	;# 
  2645  0194                     	;# 
  2646  0195                     	;# 
  2647  0196                     	;# 
  2648  0199                     	;# 
  2649  0199                     	;# 
  2650  0199                     	;# 
  2651  019A                     	;# 
  2652  019A                     	;# 
  2653  019A                     	;# 
  2654  019B                     	;# 
  2655  019B                     	;# 
  2656  019B                     	;# 
  2657  019B                     	;# 
  2658  019B                     	;# 
  2659  019C                     	;# 
  2660  019C                     	;# 
  2661  019C                     	;# 
  2662  019D                     	;# 
  2663  019D                     	;# 
  2664  019D                     	;# 
  2665  019E                     	;# 
  2666  019E                     	;# 
  2667  019E                     	;# 
  2668  019F                     	;# 
  2669  019F                     	;# 
  2670  019F                     	;# 
  2671  019F                     	;# 
  2672  019F                     	;# 
  2673  020C                     	;# 
  2674  020D                     	;# 
  2675  020E                     	;# 
  2676  0211                     	;# 
  2677  0211                     	;# 
  2678  0212                     	;# 
  2679  0212                     	;# 
  2680  0213                     	;# 
  2681  0213                     	;# 
  2682  0214                     	;# 
  2683  0214                     	;# 
  2684  0215                     	;# 
  2685  0215                     	;# 
  2686  0215                     	;# 
  2687  0215                     	;# 
  2688  0216                     	;# 
  2689  0216                     	;# 
  2690  0217                     	;# 
  2691  0217                     	;# 
  2692  028C                     	;# 
  2693  028D                     	;# 
  2694  028E                     	;# 
  2695  0291                     	;# 
  2696  0291                     	;# 
  2697  0292                     	;# 
  2698  0293                     	;# 
  2699  0293                     	;# 
  2700  0298                     	;# 
  2701  0298                     	;# 
  2702  0299                     	;# 
  2703  029A                     	;# 
  2704  029A                     	;# 
  2705  029E                     	;# 
  2706  030C                     	;# 
  2707  030D                     	;# 
  2708  030E                     	;# 
  2709  038C                     	;# 
  2710  038D                     	;# 
  2711  038E                     	;# 
  2712  0391                     	;# 
  2713  0392                     	;# 
  2714  0393                     	;# 
  2715  0394                     	;# 
  2716  0395                     	;# 
  2717  0396                     	;# 
  2718  0397                     	;# 
  2719  0398                     	;# 
  2720  0399                     	;# 
  2721  0415                     	;# 
  2722  0416                     	;# 
  2723  0417                     	;# 
  2724  041C                     	;# 
  2725  041D                     	;# 
  2726  041E                     	;# 
  2727  0511                     	;# 
  2728  0515                     	;# 
  2729  0617                     	;# 
  2730  0618                     	;# 
  2731  0619                     	;# 
  2732  0619                     	;# 
  2733  061A                     	;# 
  2734  061B                     	;# 
  2735  061C                     	;# 
  2736  061C                     	;# 
  2737  0691                     	;# 
  2738  0692                     	;# 
  2739  0693                     	;# 
  2740  0694                     	;# 
  2741  0695                     	;# 
  2742  0696                     	;# 
  2743  0697                     	;# 
  2744  0698                     	;# 
  2745  0699                     	;# 
  2746  069A                     	;# 
  2747  069B                     	;# 
  2748  069C                     	;# 
  2749  069D                     	;# 
  2750  069E                     	;# 
  2751  069F                     	;# 
  2752  0E0F                     	;# 
  2753  0E10                     	;# 
  2754  0E11                     	;# 
  2755  0E12                     	;# 
  2756  0E13                     	;# 
  2757  0E14                     	;# 
  2758  0E15                     	;# 
  2759  0E17                     	;# 
  2760  0E20                     	;# 
  2761  0E21                     	;# 
  2762  0E22                     	;# 
  2763  0E24                     	;# 
  2764  0E25                     	;# 
  2765  0E28                     	;# 
  2766  0E29                     	;# 
  2767  0E2A                     	;# 
  2768  0E2B                     	;# 
  2769  0E90                     	;# 
  2770  0E91                     	;# 
  2771  0E92                     	;# 
  2772  0E94                     	;# 
  2773  0E95                     	;# 
  2774  0E9C                     	;# 
  2775  0E9D                     	;# 
  2776  0E9E                     	;# 
  2777  0E9F                     	;# 
  2778  0EA0                     	;# 
  2779  0EA1                     	;# 
  2780  0EA2                     	;# 
  2781  0EA3                     	;# 
  2782  0EA4                     	;# 
  2783  0EA5                     	;# 
  2784  0EA6                     	;# 
  2785  0EA7                     	;# 
  2786  0F0F                     	;# 
  2787  0F10                     	;# 
  2788  0F11                     	;# 
  2789  0F12                     	;# 
  2790  0F13                     	;# 
  2791  0F14                     	;# 
  2792  0F15                     	;# 
  2793  0F16                     	;# 
  2794  0F17                     	;# 
  2795  0F18                     	;# 
  2796  0F19                     	;# 
  2797  0F1A                     	;# 
  2798  0F1B                     	;# 
  2799  0F1C                     	;# 
  2800  0F1D                     	;# 
  2801  0F1E                     	;# 
  2802  0F1F                     	;# 
  2803  0F20                     	;# 
  2804  0F21                     	;# 
  2805  0F22                     	;# 
  2806  0F23                     	;# 
  2807  0F24                     	;# 
  2808  0F25                     	;# 
  2809  0F26                     	;# 
  2810  0F27                     	;# 
  2811  0F28                     	;# 
  2812  0F29                     	;# 
  2813  0F2A                     	;# 
  2814  0F2B                     	;# 
  2815  0F2C                     	;# 
  2816  0F2D                     	;# 
  2817  0FE4                     	;# 
  2818  0FE5                     	;# 
  2819  0FE6                     	;# 
  2820  0FE7                     	;# 
  2821  0FE8                     	;# 
  2822  0FE9                     	;# 
  2823  0FEA                     	;# 
  2824  0FEB                     	;# 
  2825  0FED                     	;# 
  2826  0FEE                     	;# 
  2827  0FEF                     	;# 
  2828                           
  2829 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2830  0000                     
  2831 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2832  0000                     
  2833 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2834  0000                     
  2835                           	psect	stringtext1
  2836  047C                     __pstringtext1:	
  2837  047C                     _hexpowers:	
  2838  047C  3401               	retlw	1
  2839  047D  3400               	retlw	0
  2840  047E  3400               	retlw	0
  2841  047F  3400               	retlw	0
  2842  0480  3410               	retlw	16
  2843  0481  3400               	retlw	0
  2844  0482  3400               	retlw	0
  2845  0483  3400               	retlw	0
  2846  0484  3400               	retlw	0
  2847  0485  3401               	retlw	1
  2848  0486  3400               	retlw	0
  2849  0487  3400               	retlw	0
  2850  0488  3400               	retlw	0
  2851  0489  3410               	retlw	16
  2852  048A  3400               	retlw	0
  2853  048B  3400               	retlw	0
  2854  048C  3400               	retlw	0
  2855  048D  3400               	retlw	0
  2856  048E  3401               	retlw	1
  2857  048F  3400               	retlw	0
  2858  0490  3400               	retlw	0
  2859  0491  3400               	retlw	0
  2860  0492  3410               	retlw	16
  2861  0493  3400               	retlw	0
  2862  0494  3400               	retlw	0
  2863  0495  3400               	retlw	0
  2864  0496  3400               	retlw	0
  2865  0497  3401               	retlw	1
  2866  0498  3400               	retlw	0
  2867  0499  3400               	retlw	0
  2868  049A  3400               	retlw	0
  2869  049B  3410               	retlw	16
  2870  049C                     __end_of_hexpowers:	
  2871                           
  2872                           	psect	nvBANK0
  2873  006C                     __pnvBANK0:	
  2874  006C                     _INT_InterruptHandler:	
  2875  006C                     	ds	2
  2876                           
  2877                           	psect	nvBANK1
  2878  00A0                     __pnvBANK1:	
  2879  00A0                     _EUSART_ErrorHandler:	
  2880  00A0                     	ds	2
  2881  00A2                     _EUSART_OverrunErrorHandler:	
  2882  00A2                     	ds	2
  2883  00A4                     _EUSART_FramingErrorHandler:	
  2884  00A4                     	ds	2
  2885  001C                     _T2CONbits	set	28
  2886  001C                     _T2CON	set	28
  2887  001A                     _TMR2	set	26
  2888  001B                     _PR2	set	27
  2889  0015                     _TMR0	set	21
  2890  0011                     _PIR1bits	set	17
  2891  000B                     _INTCONbits	set	11
  2892  009D                     _ADCON0bits	set	157
  2893  009E                     _ADCON1	set	158
  2894  009D                     _ADCON0	set	157
  2895  0095                     _OPTION_REG	set	149
  2896  0095                     _OPTION_REGbits	set	149
  2897  008E                     _TRISC	set	142
  2898  008D                     _TRISB	set	141
  2899  008C                     _TRISA	set	140
  2900  0097                     _WDTCON	set	151
  2901  0098                     _OSCTUNE	set	152
  2902  009A                     _OSCSTAT	set	154
  2903  0099                     _OSCCON	set	153
  2904  009B                     _ADRES	set	155
  2905  0117                     _FVRCONbits	set	279
  2906  0117                     _FVRCON	set	279
  2907  010E                     _LATC	set	270
  2908  010D                     _LATB	set	269
  2909  010C                     _LATA	set	268
  2910  0116                     _BORCON	set	278
  2911  0119                     _DAC1CON1	set	281
  2912  0118                     _DAC1CON0	set	280
  2913  019A                     _TX1REG	set	410
  2914  0199                     _RC1REG	set	409
  2915  019D                     _RC1STAbits	set	413
  2916  019E                     _TX1STAbits	set	414
  2917  019C                     _SP1BRGH	set	412
  2918  019B                     _SP1BRGL	set	411
  2919  019E                     _TX1STA	set	414
  2920  019D                     _RC1STA	set	413
  2921  019F                     _BAUD1CON	set	415
  2922  018C                     _ANSELA	set	396
  2923  018D                     _ANSELB	set	397
  2924  018E                     _ANSELC	set	398
  2925  020E                     _WPUC	set	526
  2926  020C                     _WPUA	set	524
  2927  020D                     _WPUB	set	525
  2928  0291                     _CCPR1L	set	657
  2929  0293                     _CCP1CONbits	set	659
  2930  029E                     _CCPTMRSbits	set	670
  2931  028E                     _ODCONC	set	654
  2932  028D                     _ODCONB	set	653
  2933  028C                     _ODCONA	set	652
  2934  030E                     _SLRCONC	set	782
  2935  030D                     _SLRCONB	set	781
  2936  030C                     _SLRCONA	set	780
  2937  038E                     _INLVLC	set	910
  2938  038D                     _INLVLB	set	909
  2939  038C                     _INLVLA	set	908
  2940  0515                     _OPA2CON	set	1301
  2941  0511                     _OPA1CON	set	1297
  2942  061C                     _PWM4CONbits	set	1564
  2943  061A                     _PWM4DCLbits	set	1562
  2944  061B                     _PWM4DCH	set	1563
  2945  0619                     _PWM3CONbits	set	1561
  2946  0617                     _PWM3DCLbits	set	1559
  2947  0618                     _PWM3DCH	set	1560
  2948  0E24                     _RXPPS	set	3620
  2949  0E10                     _INTPPS	set	3600
  2950  0EA5                     _RC5PPS	set	3749
  2951  0E95                     _RA5PPS	set	3733
  2952  0EA4                     _RC4PPS	set	3748
  2953  0E9F                     _RB7PPS	set	3743
  2954                           
  2955                           	psect	stringtext2
  2956  04D6                     __pstringtext2:	
  2957  04D6                     STR_2:	
  2958  04D6  3463               	retlw	99	;'c'
  2959  04D7  346F               	retlw	111	;'o'
  2960  04D8  346D               	retlw	109	;'m'
  2961  04D9  346D               	retlw	109	;'m'
  2962  04DA  3461               	retlw	97	;'a'
  2963  04DB  346E               	retlw	110	;'n'
  2964  04DC  3464               	retlw	100	;'d'
  2965  04DD  343A               	retlw	58	;':'
  2966  04DE  3420               	retlw	32	;' '
  2967  04DF  3420               	retlw	32	;' '
  2968  04E0  3420               	retlw	32	;' '
  2969  04E1  3420               	retlw	32	;' '
  2970  04E2  3420               	retlw	32	;' '
  2971  04E3  3420               	retlw	32	;' '
  2972  04E4  3420               	retlw	32	;' '
  2973  04E5  3420               	retlw	32	;' '
  2974  04E6  3420               	retlw	32	;' '
  2975  04E7  3420               	retlw	32	;' '
  2976  04E8  3430               	retlw	48	;'0'
  2977  04E9  3478               	retlw	120	;'x'
  2978  04EA  3425               	retlw	37	;'%'
  2979  04EB  3430               	retlw	48	;'0'
  2980  04EC  3432               	retlw	50	;'2'
  2981  04ED  3478               	retlw	120	;'x'
  2982  04EE  340D               	retlw	13
  2983  04EF  340A               	retlw	10
  2984  04F0  3400               	retlw	0
  2985                           
  2986                           	psect	stringtext3
  2987  04F1                     __pstringtext3:	
  2988  04F1                     STR_4:	
  2989  04F1  3461               	retlw	97	;'a'
  2990  04F2  3464               	retlw	100	;'d'
  2991  04F3  3464               	retlw	100	;'d'
  2992  04F4  3472               	retlw	114	;'r'
  2993  04F5  3465               	retlw	101	;'e'
  2994  04F6  3473               	retlw	115	;'s'
  2995  04F7  3473               	retlw	115	;'s'
  2996  04F8  343A               	retlw	58	;':'
  2997  04F9  3420               	retlw	32	;' '
  2998  04FA  3420               	retlw	32	;' '
  2999  04FB  3420               	retlw	32	;' '
  3000  04FC  3420               	retlw	32	;' '
  3001  04FD  3420               	retlw	32	;' '
  3002  04FE  3420               	retlw	32	;' '
  3003  04FF  3420               	retlw	32	;' '
  3004  0500  3420               	retlw	32	;' '
  3005  0501  3420               	retlw	32	;' '
  3006  0502  3420               	retlw	32	;' '
  3007  0503  3430               	retlw	48	;'0'
  3008  0504  3478               	retlw	120	;'x'
  3009  0505  3425               	retlw	37	;'%'
  3010  0506  3430               	retlw	48	;'0'
  3011  0507  3432               	retlw	50	;'2'
  3012  0508  3478               	retlw	120	;'x'
  3013  0509  340D               	retlw	13
  3014  050A  340A               	retlw	10
  3015  050B  3400               	retlw	0
  3016                           
  3017                           	psect	stringtext4
  3018  050C                     __pstringtext4:	
  3019  050C                     STR_3:	
  3020  050C  3463               	retlw	99	;'c'
  3021  050D  346F               	retlw	111	;'o'
  3022  050E  346D               	retlw	109	;'m'
  3023  050F  346D               	retlw	109	;'m'
  3024  0510  3461               	retlw	97	;'a'
  3025  0511  346E               	retlw	110	;'n'
  3026  0512  3464               	retlw	100	;'d'
  3027  0513  345F               	retlw	95	;'_'
  3028  0514  3462               	retlw	98	;'b'
  3029  0515  343A               	retlw	58	;':'
  3030  0516  3420               	retlw	32	;' '
  3031  0517  3420               	retlw	32	;' '
  3032  0518  3420               	retlw	32	;' '
  3033  0519  3420               	retlw	32	;' '
  3034  051A  3420               	retlw	32	;' '
  3035  051B  3420               	retlw	32	;' '
  3036  051C  3420               	retlw	32	;' '
  3037  051D  3420               	retlw	32	;' '
  3038  051E  3430               	retlw	48	;'0'
  3039  051F  3478               	retlw	120	;'x'
  3040  0520  3425               	retlw	37	;'%'
  3041  0521  3430               	retlw	48	;'0'
  3042  0522  3432               	retlw	50	;'2'
  3043  0523  3478               	retlw	120	;'x'
  3044  0524  340D               	retlw	13
  3045  0525  340A               	retlw	10
  3046  0526  3400               	retlw	0
  3047                           
  3048                           	psect	stringtext5
  3049  0527                     __pstringtext5:	
  3050  0527                     STR_5:	
  3051  0527  3461               	retlw	97	;'a'
  3052  0528  3464               	retlw	100	;'d'
  3053  0529  3464               	retlw	100	;'d'
  3054  052A  3472               	retlw	114	;'r'
  3055  052B  3465               	retlw	101	;'e'
  3056  052C  3473               	retlw	115	;'s'
  3057  052D  3473               	retlw	115	;'s'
  3058  052E  345F               	retlw	95	;'_'
  3059  052F  3462               	retlw	98	;'b'
  3060  0530  343A               	retlw	58	;':'
  3061  0531  3420               	retlw	32	;' '
  3062  0532  3420               	retlw	32	;' '
  3063  0533  3420               	retlw	32	;' '
  3064  0534  3420               	retlw	32	;' '
  3065  0535  3420               	retlw	32	;' '
  3066  0536  3420               	retlw	32	;' '
  3067  0537  3420               	retlw	32	;' '
  3068  0538  3420               	retlw	32	;' '
  3069  0539  3430               	retlw	48	;'0'
  3070  053A  3478               	retlw	120	;'x'
  3071  053B  3425               	retlw	37	;'%'
  3072  053C  3430               	retlw	48	;'0'
  3073  053D  3432               	retlw	50	;'2'
  3074  053E  3478               	retlw	120	;'x'
  3075  053F  340D               	retlw	13
  3076  0540  340A               	retlw	10
  3077  0541  3400               	retlw	0
  3078                           
  3079                           	psect	stringtext6
  3080  0542                     __pstringtext6:	
  3081  0542                     STR_6:	
  3082  0542  3465               	retlw	101	;'e'
  3083  0543  3478               	retlw	120	;'x'
  3084  0544  3474               	retlw	116	;'t'
  3085  0545  3465               	retlw	101	;'e'
  3086  0546  346E               	retlw	110	;'n'
  3087  0547  3464               	retlw	100	;'d'
  3088  0548  3465               	retlw	101	;'e'
  3089  0549  3464               	retlw	100	;'d'
  3090  054A  3420               	retlw	32	;' '
  3091  054B  3461               	retlw	97	;'a'
  3092  054C  3464               	retlw	100	;'d'
  3093  054D  3464               	retlw	100	;'d'
  3094  054E  3472               	retlw	114	;'r'
  3095  054F  3465               	retlw	101	;'e'
  3096  0550  3473               	retlw	115	;'s'
  3097  0551  3473               	retlw	115	;'s'
  3098  0552  343A               	retlw	58	;':'
  3099  0553  3420               	retlw	32	;' '
  3100  0554  3430               	retlw	48	;'0'
  3101  0555  3478               	retlw	120	;'x'
  3102  0556  3425               	retlw	37	;'%'
  3103  0557  3430               	retlw	48	;'0'
  3104  0558  3434               	retlw	52	;'4'
  3105  0559  3478               	retlw	120	;'x'
  3106  055A  340D               	retlw	13
  3107  055B  340A               	retlw	10
  3108  055C  3400               	retlw	0
  3109                           
  3110                           	psect	stringtext7
  3111  055D                     __pstringtext7:	
  3112  055D                     STR_1:	
  3113  055D  340D               	retlw	13
  3114  055E  340A               	retlw	10
  3115  055F  3463               	retlw	99	;'c'
  3116  0560  346F               	retlw	111	;'o'
  3117  0561  3464               	retlw	100	;'d'
  3118  0562  3465               	retlw	101	;'e'
  3119  0563  343A               	retlw	58	;':'
  3120  0564  3420               	retlw	32	;' '
  3121  0565  3420               	retlw	32	;' '
  3122  0566  3420               	retlw	32	;' '
  3123  0567  3420               	retlw	32	;' '
  3124  0568  3420               	retlw	32	;' '
  3125  0569  3420               	retlw	32	;' '
  3126  056A  3420               	retlw	32	;' '
  3127  056B  3420               	retlw	32	;' '
  3128  056C  3420               	retlw	32	;' '
  3129  056D  3430               	retlw	48	;'0'
  3130  056E  3478               	retlw	120	;'x'
  3131  056F  3425               	retlw	37	;'%'
  3132  0570  3430               	retlw	48	;'0'
  3133  0571  3438               	retlw	56	;'8'
  3134  0572  346C               	retlw	108	;'l'
  3135  0573  3478               	retlw	120	;'x'
  3136  0574  340D               	retlw	13
  3137  0575  340A               	retlw	10
  3138  0576  3400               	retlw	0
  3139                           
  3140                           	psect	stringtext8
  3141  0577                     __pstringtext8:	
  3142  0577                     STR_7:	
  3143  0577  3430               	retlw	48	;'0'
  3144  0578  3431               	retlw	49	;'1'
  3145  0579  3432               	retlw	50	;'2'
  3146  057A  3433               	retlw	51	;'3'
  3147  057B  3434               	retlw	52	;'4'
  3148  057C  3435               	retlw	53	;'5'
  3149  057D  3436               	retlw	54	;'6'
  3150  057E  3437               	retlw	55	;'7'
  3151  057F  3438               	retlw	56	;'8'
  3152  0580  3439               	retlw	57	;'9'
  3153  0581  3461               	retlw	97	;'a'
  3154  0582  3462               	retlw	98	;'b'
  3155  0583  3463               	retlw	99	;'c'
  3156  0584  3464               	retlw	100	;'d'
  3157  0585  3465               	retlw	101	;'e'
  3158  0586  3466               	retlw	102	;'f'
  3159  0587  3400               	retlw	0
  3160                           
  3161                           	psect	stringtext9
  3162  0000                     __pstringtext9:	
  3163                           
  3164                           ; #config settings
  3165  0000                     
  3166                           	psect	cinit
  3167  0016                     start_initialization:	
  3168  0016                     __initialization:	
  3169                           
  3170                           ; Clear objects allocated to COMMON
  3171  0016  01F0               	clrf	__pbssCOMMON& (0+127)
  3172  0017  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  3173  0018  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  3174  0019  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  3175  001A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  3176  001B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  3177  001C  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  3178                           
  3179                           ; Clear objects allocated to BANK0
  3180  001D  3047               	movlw	low __pbssBANK0
  3181  001E  0084               	movwf	4
  3182  001F  3000               	movlw	high __pbssBANK0
  3183  0020  0085               	movwf	5
  3184  0021  3025               	movlw	37
  3185  0022  3185  25F7         	fcall	clear_ram0
  3186  0024                     end_of_initialization:	
  3187                           ;End of C runtime variable initialization code
  3188                           
  3189  0024                     __end_of__initialization:	
  3190  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3191  0025  0020               	movlb	0
  3192  0026  3181  297C         	ljmp	_main	;jump to C main() function
  3193                           
  3194                           	psect	bssCOMMON
  3195  0070                     __pbssCOMMON:	
  3196  0070                     _timer0ReloadVal:	
  3197  0070                     	ds	1
  3198  0071                     _ir_code:	
  3199  0071                     	ds	6
  3200                           
  3201                           	psect	bssBANK0
  3202  0047                     __pbssBANK0:	
  3203  0047                     _stats:	
  3204  0047                     	ds	33
  3205  0068                     _LED_blue:	
  3206  0068                     	ds	1
  3207  0069                     _LED_green:	
  3208  0069                     	ds	1
  3209  006A                     _LED_red:	
  3210  006A                     	ds	1
  3211  006B                     _eusartRxLastError:	
  3212  006B                     	ds	1
  3213                           
  3214                           	psect	clrtext
  3215  05F7                     clear_ram0:	
  3216                           ;	Called with FSR0 containing the base address, and
  3217                           ;	WREG with the size to clear
  3218                           
  3219  05F7  0064               	clrwdt	;clear the watchdog before getting into this loop
  3220  05F8                     clrloop0:	
  3221  05F8  0180               	clrf	0	;clear RAM location pointed to by FSR
  3222  05F9  3101               	addfsr 0,1
  3223  05FA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3224  05FB  2DF8               	goto	clrloop0	;have we reached the end yet?
  3225  05FC  3400               	retlw	0	;all done for this memory range, return
  3226                           
  3227                           	psect	cstackCOMMON
  3228  0077                     __pcstackCOMMON:	
  3229  0077                     ?_isdigit:	
  3230  0077                     ?_PIN_MANAGER_Initialize:	
  3231                           ; 1 bit 
  3232                           
  3233  0077                     ?_OSCILLATOR_Initialize:	
  3234                           ; 1 bytes @ 0x0
  3235                           
  3236  0077                     ?_WDT_Initialize:	
  3237                           ; 1 bytes @ 0x0
  3238                           
  3239  0077                     ?_OPA1_Initialize:	
  3240                           ; 1 bytes @ 0x0
  3241                           
  3242  0077                     ?_OPA2_Initialize:	
  3243                           ; 1 bytes @ 0x0
  3244                           
  3245  0077                     ?_TMR2_Initialize:	
  3246                           ; 1 bytes @ 0x0
  3247                           
  3248  0077                     ?_EXT_INT_Initialize:	
  3249                           ; 1 bytes @ 0x0
  3250                           
  3251  0077                     ?_TMR0_Initialize:	
  3252                           ; 1 bytes @ 0x0
  3253                           
  3254  0077                     ?_EUSART_Initialize:	
  3255                           ; 1 bytes @ 0x0
  3256                           
  3257  0077                     ?_INT_ISR:	
  3258                           ; 1 bytes @ 0x0
  3259                           
  3260  0077                     ?_INT_CallBack:	
  3261                           ; 1 bytes @ 0x0
  3262                           
  3263  0077                     ?_DAC_Initialize:	
  3264                           ; 1 bytes @ 0x0
  3265                           
  3266  0077                     ?_SYSTEM_Initialize:	
  3267                           ; 1 bytes @ 0x0
  3268                           
  3269  0077                     ?_PIN_MANAGER_IOC:	
  3270                           ; 1 bytes @ 0x0
  3271                           
  3272  0077                     ??_PIN_MANAGER_IOC:	
  3273                           ; 1 bytes @ 0x0
  3274                           
  3275  0077                     ?_INTERRUPT_InterruptManager:	
  3276                           ; 1 bytes @ 0x0
  3277                           
  3278  0077                     ?_EUSART_Write:	
  3279                           ; 1 bytes @ 0x0
  3280                           
  3281  0077                     ?_putch:	
  3282                           ; 1 bytes @ 0x0
  3283                           
  3284  0077                     ?_INT_DefaultInterruptHandler:	
  3285                           ; 1 bytes @ 0x0
  3286                           
  3287  0077                     ??_INT_DefaultInterruptHandler:	
  3288                           ; 1 bytes @ 0x0
  3289                           
  3290  0077                     ?_initLED:	
  3291                           ; 1 bytes @ 0x0
  3292                           
  3293  0077                     ?_process_remote_command:	
  3294                           ; 1 bytes @ 0x0
  3295                           
  3296  0077                     ?_main:	
  3297                           ; 1 bytes @ 0x0
  3298                           
  3299                           
  3300                           ; 1 bytes @ 0x0
  3301  0077                     	ds	1
  3302  0078                     INT_DefaultInterruptHandler@time:	
  3303                           
  3304                           ; 1 bytes @ 0x1
  3305  0078                     	ds	1
  3306  0079                     ??_PIN_MANAGER_Initialize:	
  3307  0079                     ??_OSCILLATOR_Initialize:	
  3308                           ; 1 bytes @ 0x2
  3309                           
  3310  0079                     ??_WDT_Initialize:	
  3311                           ; 1 bytes @ 0x2
  3312                           
  3313  0079                     ??_OPA1_Initialize:	
  3314                           ; 1 bytes @ 0x2
  3315                           
  3316  0079                     ??_OPA2_Initialize:	
  3317                           ; 1 bytes @ 0x2
  3318                           
  3319  0079                     ??_TMR2_Initialize:	
  3320                           ; 1 bytes @ 0x2
  3321                           
  3322  0079                     ??_EXT_INT_Initialize:	
  3323                           ; 1 bytes @ 0x2
  3324                           
  3325  0079                     ??_TMR0_Initialize:	
  3326                           ; 1 bytes @ 0x2
  3327                           
  3328  0079                     ??_EUSART_Initialize:	
  3329                           ; 1 bytes @ 0x2
  3330                           
  3331  0079                     ??_INT_ISR:	
  3332                           ; 1 bytes @ 0x2
  3333                           
  3334  0079                     ??_EUSART_SetFramingErrorHandler:	
  3335                           ; 1 bytes @ 0x2
  3336                           
  3337  0079                     ??_EUSART_SetOverrunErrorHandler:	
  3338                           ; 1 bytes @ 0x2
  3339                           
  3340  0079                     ??_EUSART_SetErrorHandler:	
  3341                           ; 1 bytes @ 0x2
  3342                           
  3343  0079                     ??_INT_CallBack:	
  3344                           ; 1 bytes @ 0x2
  3345                           
  3346  0079                     ??_isdigit:	
  3347                           ; 1 bytes @ 0x2
  3348                           
  3349  0079                     ??_DAC_Initialize:	
  3350                           ; 1 bytes @ 0x2
  3351                           
  3352  0079                     ??_SYSTEM_Initialize:	
  3353                           ; 1 bytes @ 0x2
  3354                           
  3355  0079                     ??_INTERRUPT_InterruptManager:	
  3356                           ; 1 bytes @ 0x2
  3357                           
  3358  0079                     ??_EUSART_Write:	
  3359                           ; 1 bytes @ 0x2
  3360                           
  3361  0079                     ??_INT_SetInterruptHandler:	
  3362                           ; 1 bytes @ 0x2
  3363                           
  3364  0079                     ??_initLED:	
  3365                           ; 1 bytes @ 0x2
  3366                           
  3367  0079                     ??_setLEDColor:	
  3368                           ; 1 bytes @ 0x2
  3369                           
  3370  0079                     ??___wmul:	
  3371                           ; 1 bytes @ 0x2
  3372                           
  3373  0079                     ??___lldiv:	
  3374                           ; 1 bytes @ 0x2
  3375                           
  3376  0079                     ??___aldiv:	
  3377                           ; 1 bytes @ 0x2
  3378                           
  3379  0079                     EUSART_Write@txData:	
  3380                           ; 1 bytes @ 0x2
  3381                           
  3382  0079                     setLEDColor@red:	
  3383                           ; 1 bytes @ 0x2
  3384                           
  3385  0079                     _isdigit$1219:	
  3386                           ; 1 bytes @ 0x2
  3387                           
  3388  0079                     ___wmul@product:	
  3389                           ; 1 bytes @ 0x2
  3390                           
  3391                           
  3392                           ; 2 bytes @ 0x2
  3393  0079                     	ds	1
  3394  007A                     ??_putch:	
  3395  007A                     ??_battery_voltage:	
  3396                           ; 1 bytes @ 0x3
  3397                           
  3398  007A                     ??_process_remote_command:	
  3399                           ; 1 bytes @ 0x3
  3400                           
  3401  007A                     putch@txData:	
  3402                           ; 1 bytes @ 0x3
  3403                           
  3404  007A                     isdigit@c:	
  3405                           ; 1 bytes @ 0x3
  3406                           
  3407                           
  3408                           ; 1 bytes @ 0x3
  3409  007A                     	ds	2
  3410                           
  3411                           	psect	cstackBANK0
  3412  0020                     __pcstackBANK0:	
  3413  0020                     ?_EUSART_SetFramingErrorHandler:	
  3414  0020                     ?_EUSART_SetOverrunErrorHandler:	
  3415                           ; 1 bytes @ 0x0
  3416                           
  3417  0020                     ?_EUSART_SetErrorHandler:	
  3418                           ; 1 bytes @ 0x0
  3419                           
  3420  0020                     ?_INT_SetInterruptHandler:	
  3421                           ; 1 bytes @ 0x0
  3422                           
  3423  0020                     ?_setLEDColor:	
  3424                           ; 1 bytes @ 0x0
  3425                           
  3426  0020                     ?___wmul:	
  3427                           ; 1 bytes @ 0x0
  3428                           
  3429  0020                     ?___lldiv:	
  3430                           ; 2 bytes @ 0x0
  3431                           
  3432  0020                     ?___aldiv:	
  3433                           ; 4 bytes @ 0x0
  3434                           
  3435  0020                     setLEDColor@green:	
  3436                           ; 4 bytes @ 0x0
  3437                           
  3438  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3439                           ; 1 bytes @ 0x0
  3440                           
  3441  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3442                           ; 2 bytes @ 0x0
  3443                           
  3444  0020                     EUSART_SetErrorHandler@interruptHandler:	
  3445                           ; 2 bytes @ 0x0
  3446                           
  3447  0020                     INT_SetInterruptHandler@InterruptHandler:	
  3448                           ; 2 bytes @ 0x0
  3449                           
  3450  0020                     ___wmul@multiplier:	
  3451                           ; 2 bytes @ 0x0
  3452                           
  3453  0020                     ___lldiv@divisor:	
  3454                           ; 2 bytes @ 0x0
  3455                           
  3456  0020                     ___aldiv@divisor:	
  3457                           ; 4 bytes @ 0x0
  3458                           
  3459                           
  3460                           ; 4 bytes @ 0x0
  3461  0020                     	ds	1
  3462  0021                     setLEDColor@blue:	
  3463                           
  3464                           ; 1 bytes @ 0x1
  3465  0021                     	ds	1
  3466  0022                     process_remote_command@code:	
  3467  0022                     ___wmul@multiplicand:	
  3468                           ; 1 bytes @ 0x2
  3469                           
  3470                           
  3471                           ; 2 bytes @ 0x2
  3472  0022                     	ds	2
  3473  0024                     ___lldiv@dividend:	
  3474  0024                     ___aldiv@dividend:	
  3475                           ; 4 bytes @ 0x4
  3476                           
  3477                           
  3478                           ; 4 bytes @ 0x4
  3479  0024                     	ds	4
  3480  0028                     ___aldiv@counter:	
  3481  0028                     ___lldiv@quotient:	
  3482                           ; 1 bytes @ 0x8
  3483                           
  3484                           
  3485                           ; 4 bytes @ 0x8
  3486  0028                     	ds	1
  3487  0029                     ___aldiv@sign:	
  3488                           
  3489                           ; 1 bytes @ 0x9
  3490  0029                     	ds	1
  3491  002A                     ___aldiv@quotient:	
  3492                           
  3493                           ; 4 bytes @ 0xA
  3494  002A                     	ds	2
  3495  002C                     ___lldiv@counter:	
  3496                           
  3497                           ; 1 bytes @ 0xC
  3498  002C                     	ds	1
  3499  002D                     ?_printf:	
  3500  002D                     printf@f:	
  3501                           ; 2 bytes @ 0xD
  3502                           
  3503                           
  3504                           ; 2 bytes @ 0xD
  3505  002D                     	ds	1
  3506  002E                     ?_battery_voltage:	
  3507                           
  3508                           ; 2 bytes @ 0xE
  3509  002E                     	ds	5
  3510  0033                     ??_printf:	
  3511                           
  3512                           ; 1 bytes @ 0x13
  3513  0033                     	ds	6
  3514  0039                     printf@idx:	
  3515                           
  3516                           ; 1 bytes @ 0x19
  3517  0039                     	ds	1
  3518  003A                     printf@prec:	
  3519                           
  3520                           ; 2 bytes @ 0x1A
  3521  003A                     	ds	2
  3522  003C                     printf@val:	
  3523                           
  3524                           ; 4 bytes @ 0x1C
  3525  003C                     	ds	4
  3526  0040                     printf@ap:	
  3527                           
  3528                           ; 1 bytes @ 0x20
  3529  0040                     	ds	1
  3530  0041                     printf@flag:	
  3531                           
  3532                           ; 1 bytes @ 0x21
  3533  0041                     	ds	1
  3534  0042                     printf@width:	
  3535                           
  3536                           ; 2 bytes @ 0x22
  3537  0042                     	ds	2
  3538  0044                     printf@c:	
  3539                           
  3540                           ; 1 bytes @ 0x24
  3541  0044                     	ds	1
  3542  0045                     ??_main:	
  3543                           
  3544                           ; 1 bytes @ 0x25
  3545  0045                     	ds	2
  3546                           
  3547                           	psect	maintext
  3548  017C                     __pmaintext:	
  3549 ;;
  3550 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3551 ;;
  3552 ;; *************** function _main *****************
  3553 ;; Defined at:
  3554 ;;		line 184 in file "main.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;		None
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3563 ;; Tracked objects:
  3564 ;;		On entry : B1F/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3568 ;;      Params:         0       0       0       0       0       0       0       0
  3569 ;;      Locals:         0       0       0       0       0       0       0       0
  3570 ;;      Temps:          0       2       0       0       0       0       0       0
  3571 ;;      Totals:         0       2       0       0       0       0       0       0
  3572 ;;Total ram usage:        2 bytes
  3573 ;; Hardware stack levels required when called:    7
  3574 ;; This function calls:
  3575 ;;		_DAC_Initialize
  3576 ;;		_OPA1_Initialize
  3577 ;;		_OPA2_Initialize
  3578 ;;		_SYSTEM_Initialize
  3579 ;;		_battery_voltage
  3580 ;;		_initLED
  3581 ;;		_printf
  3582 ;;		_process_remote_command
  3583 ;;		_setLEDColor
  3584 ;; This function is called by:
  3585 ;;		Startup code after reset
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           
  3590                           ;psect for function _main
  3591  017C                     _main:	
  3592                           
  3593                           ;main.c: 187: SYSTEM_Initialize();
  3594                           
  3595                           ;incstack = 0
  3596                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3597  017C  3184  249C  3181   	fcall	_SYSTEM_Initialize
  3598                           
  3599                           ;main.c: 188: DAC_Initialize();
  3600  017F  3186  2603  3181   	fcall	_DAC_Initialize
  3601                           
  3602                           ;main.c: 189: OPA1_Initialize();
  3603  0182  3186  2616  3181   	fcall	_OPA1_Initialize
  3604                           
  3605                           ;main.c: 190: OPA2_Initialize();
  3606  0185  3186  2612  3181   	fcall	_OPA2_Initialize
  3607                           
  3608                           ;main.c: 191: initLED();
  3609  0188  3183  23B6  3181   	fcall	_initLED
  3610                           
  3611                           ;main.c: 200: setLEDColor(255, 0, 255);
  3612  018B  0020               	movlb	0	; select bank0
  3613  018C  01A0               	clrf	setLEDColor@green
  3614  018D  30FF               	movlw	255
  3615  018E  00C5               	movwf	??_main
  3616  018F  0845               	movf	??_main,w
  3617  0190  00A1               	movwf	setLEDColor@blue
  3618  0191  30FF               	movlw	255
  3619  0192  3185  2596  3181   	fcall	_setLEDColor
  3620                           
  3621                           ;main.c: 202: (INTCONbits.GIE = 1);
  3622  0195  178B               	bsf	11,7	;volatile
  3623                           
  3624                           ;main.c: 205: (INTCONbits.PEIE = 1);
  3625  0196  170B               	bsf	11,6	;volatile
  3626  0197                     l436:	
  3627                           ;main.c: 207: while(1){
  3628                           
  3629                           
  3630                           ;main.c: 208: setLEDColor(255, 0, 255);
  3631  0197  0020               	movlb	0	; select bank0
  3632  0198  01A0               	clrf	setLEDColor@green
  3633  0199  30FF               	movlw	255
  3634  019A  00C5               	movwf	??_main
  3635  019B  0845               	movf	??_main,w
  3636  019C  00A1               	movwf	setLEDColor@blue
  3637  019D  30FF               	movlw	255
  3638  019E  3185  2596  3181   	fcall	_setLEDColor
  3639                           
  3640                           ;main.c: 210: if ((int)battery_voltage() < 2500)
  3641  01A1  3184  242A  3181   	fcall	_battery_voltage
  3642  01A4  0020               	movlb	0	; select bank0
  3643  01A5  082F               	movf	?_battery_voltage+1,w
  3644  01A6  3A80               	xorlw	128
  3645  01A7  00C5               	movwf	??_main
  3646  01A8  3089               	movlw	137
  3647  01A9  0245               	subwf	??_main,w
  3648  01AA  1D03               	skipz
  3649  01AB  29AE               	goto	u1625
  3650  01AC  30C4               	movlw	196
  3651  01AD  022E               	subwf	?_battery_voltage,w
  3652  01AE                     u1625:	
  3653  01AE  1803               	skipnc
  3654  01AF  29B6               	goto	l2174
  3655                           
  3656                           ;main.c: 211: {;main.c: 214: setLEDColor(255, 0, 255);
  3657  01B0  0020               	movlb	0	; select bank0
  3658  01B1  01A0               	clrf	setLEDColor@green
  3659  01B2  30FF               	movlw	255
  3660  01B3  00C5               	movwf	??_main
  3661  01B4  0845               	movf	??_main,w
  3662  01B5  29BE               	goto	L1
  3663  01B6                     l2174:	
  3664                           ;main.c: 215: }
  3665                           
  3666                           
  3667                           ;main.c: 216: else;main.c: 217: setLEDColor(255, 255, 255);
  3668  01B6  30FF               	movlw	255
  3669  01B7  0020               	movlb	0	; select bank0
  3670  01B8  00C5               	movwf	??_main
  3671  01B9  0845               	movf	??_main,w
  3672  01BA  00A0               	movwf	setLEDColor@green
  3673  01BB  30FF               	movlw	255
  3674  01BC  00C6               	movwf	??_main+1
  3675  01BD  0846               	movf	??_main+1,w
  3676  01BE                     L1:	
  3677  01BE  00A1               	movwf	setLEDColor@blue
  3678  01BF  30FF               	movlw	255
  3679  01C0  3185  2596  3181   	fcall	_setLEDColor
  3680                           
  3681                           ;main.c: 219: if (STATE_DONE == ir_code.state){
  3682  01C3  3002               	movlw	2
  3683  01C4  0672               	xorwf	_ir_code+1,w
  3684  01C5  1D03               	btfss	3,2
  3685  01C6  2997               	goto	l436
  3686                           
  3687                           ;main.c: 221: printf("\r\ncode:         0x%08lx\r\n", (unsigned long)ir_code.code);
  3688  01C7  305D               	movlw	low (STR_1| (0+32768))
  3689  01C8  0020               	movlb	0	; select bank0
  3690  01C9  00AD               	movwf	printf@f
  3691  01CA  3085               	movlw	high (STR_1| (0+32768))
  3692  01CB  00AE               	movwf	printf@f+1
  3693  01CC  3002               	movlw	2
  3694  01CD  3E71               	addlw	(low (_ir_code| 0))& (0+255)
  3695  01CE  0086               	movwf	6
  3696  01CF  0187               	clrf	7
  3697  01D0  3F40               	moviw [0]fsr1
  3698  01D1  00AF               	movwf	?_printf+2
  3699  01D2  3F41               	moviw [1]fsr1
  3700  01D3  00B0               	movwf	?_printf+3
  3701  01D4  3F42               	moviw [2]fsr1
  3702  01D5  00B1               	movwf	?_printf+4
  3703  01D6  3F43               	moviw [3]fsr1
  3704  01D7  00B2               	movwf	?_printf+5
  3705  01D8  3180  2028  3181   	fcall	_printf
  3706                           
  3707                           ;main.c: 222: printf("command:          0x%02x\r\n", ir_code.command);
  3708  01DB  30D6               	movlw	low (STR_2| (0+32768))
  3709  01DC  0020               	movlb	0	; select bank0
  3710  01DD  00AD               	movwf	printf@f
  3711  01DE  3084               	movlw	high (STR_2| (0+32768))
  3712  01DF  00AE               	movwf	printf@f+1
  3713  01E0  0874               	movf	_ir_code+3,w
  3714  01E1  00C5               	movwf	??_main
  3715  01E2  01C6               	clrf	??_main+1
  3716  01E3  0845               	movf	??_main,w
  3717  01E4  00AF               	movwf	?_printf+2
  3718  01E5  0846               	movf	??_main+1,w
  3719  01E6  00B0               	movwf	?_printf+3
  3720  01E7  3180  2028  3181   	fcall	_printf
  3721                           
  3722                           ;main.c: 223: printf("command_b:        0x%02x\r\n", ir_code.command_b);
  3723  01EA  300C               	movlw	low (STR_3| (0+32768))
  3724  01EB  0020               	movlb	0	; select bank0
  3725  01EC  00AD               	movwf	printf@f
  3726  01ED  3085               	movlw	high (STR_3| (0+32768))
  3727  01EE  00AE               	movwf	printf@f+1
  3728  01EF  0873               	movf	_ir_code+2,w
  3729  01F0  00C5               	movwf	??_main
  3730  01F1  01C6               	clrf	??_main+1
  3731  01F2  0845               	movf	??_main,w
  3732  01F3  00AF               	movwf	?_printf+2
  3733  01F4  0846               	movf	??_main+1,w
  3734  01F5  00B0               	movwf	?_printf+3
  3735  01F6  3180  2028  3181   	fcall	_printf
  3736                           
  3737                           ;main.c: 224: printf("address:          0x%02x\r\n", ir_code.address);
  3738  01F9  30F1               	movlw	low (STR_4| (0+32768))
  3739  01FA  0020               	movlb	0	; select bank0
  3740  01FB  00AD               	movwf	printf@f
  3741  01FC  3084               	movlw	high (STR_4| (0+32768))
  3742  01FD  00AE               	movwf	printf@f+1
  3743  01FE  0876               	movf	_ir_code+5,w
  3744  01FF  00C5               	movwf	??_main
  3745  0200  01C6               	clrf	??_main+1
  3746  0201  0845               	movf	??_main,w
  3747  0202  00AF               	movwf	?_printf+2
  3748  0203  0846               	movf	??_main+1,w
  3749  0204  00B0               	movwf	?_printf+3
  3750  0205  3180  2028  3181   	fcall	_printf
  3751                           
  3752                           ;main.c: 225: printf("address_b:        0x%02x\r\n", ir_code.address_b);
  3753  0208  3027               	movlw	low (STR_5| (0+32768))
  3754  0209  0020               	movlb	0	; select bank0
  3755  020A  00AD               	movwf	printf@f
  3756  020B  3085               	movlw	high (STR_5| (0+32768))
  3757  020C  00AE               	movwf	printf@f+1
  3758  020D  0875               	movf	_ir_code+4,w
  3759  020E  00C5               	movwf	??_main
  3760  020F  01C6               	clrf	??_main+1
  3761  0210  0845               	movf	??_main,w
  3762  0211  00AF               	movwf	?_printf+2
  3763  0212  0846               	movf	??_main+1,w
  3764  0213  00B0               	movwf	?_printf+3
  3765  0214  3180  2028  3181   	fcall	_printf
  3766                           
  3767                           ;main.c: 226: printf("extended address: 0x%04x\r\n", (unsigned int)ir_code.extended_addr
      +                          ess);
  3768  0217  3042               	movlw	low (STR_6| (0+32768))
  3769  0218  0020               	movlb	0	; select bank0
  3770  0219  00AD               	movwf	printf@f
  3771  021A  3085               	movlw	high (STR_6| (0+32768))
  3772  021B  00AE               	movwf	printf@f+1
  3773  021C  0876               	movf	_ir_code+5,w
  3774  021D  00B0               	movwf	?_printf+3
  3775  021E  0875               	movf	_ir_code+4,w
  3776  021F  00AF               	movwf	?_printf+2
  3777  0220  3180  2028  3181   	fcall	_printf
  3778                           
  3779                           ;main.c: 237: process_remote_command(&ir_code);
  3780  0223  3071               	movlw	(low (_ir_code| 0))& (0+255)
  3781  0224  3183  230F  3181   	fcall	_process_remote_command
  3782                           
  3783                           ;main.c: 240: ir_code.state = STATE_RESET;
  3784  0227  01F2               	clrf	_ir_code+1
  3785  0228  2997               	goto	l436
  3786  0229                     __end_of_main:	
  3787                           
  3788                           	psect	text1
  3789  030F                     __ptext1:	
  3790 ;; *************** function _process_remote_command *****************
  3791 ;; Defined at:
  3792 ;;		line 139 in file "main.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;  code            1    wreg     PTR struct .
  3795 ;;		 -> ir_code(6), 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  code            1    2[BANK0 ] PTR struct .
  3798 ;;		 -> ir_code(6), 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3808 ;;      Params:         0       0       0       0       0       0       0       0
  3809 ;;      Locals:         0       1       0       0       0       0       0       0
  3810 ;;      Temps:          2       0       0       0       0       0       0       0
  3811 ;;      Totals:         2       1       0       0       0       0       0       0
  3812 ;;Total ram usage:        3 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    5
  3815 ;; This function calls:
  3816 ;;		_setLEDColor
  3817 ;; This function is called by:
  3818 ;;		_main
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           
  3823                           ;psect for function _process_remote_command
  3824  030F                     _process_remote_command:	
  3825                           
  3826                           ;incstack = 0
  3827                           ; Regs used in _process_remote_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3828                           ;process_remote_command@code stored from wreg
  3829  030F  0020               	movlb	0	; select bank0
  3830  0310  00A2               	movwf	process_remote_command@code
  3831                           
  3832                           ;main.c: 140: switch(code->command){
  3833  0311  2B2A               	goto	l2080
  3834  0312                     l2066:	
  3835                           
  3836                           ;main.c: 142: LED_red += 10;
  3837  0312  300A               	movlw	10
  3838  0313  00FA               	movwf	??_process_remote_command
  3839  0314  087A               	movf	??_process_remote_command,w
  3840  0315  07EA               	addwf	_LED_red,f
  3841                           
  3842                           ;main.c: 143: break;
  3843  0316  2B57               	goto	l2082
  3844  0317                     l2068:	
  3845                           
  3846                           ;main.c: 145: LED_red -= 10;
  3847  0317  300A               	movlw	10
  3848  0318  02EA               	subwf	_LED_red,f
  3849                           
  3850                           ;main.c: 146: break;
  3851  0319  2B57               	goto	l2082
  3852  031A                     l2070:	
  3853                           
  3854                           ;main.c: 148: LED_green += 10;
  3855  031A  300A               	movlw	10
  3856  031B  00FA               	movwf	??_process_remote_command
  3857  031C  087A               	movf	??_process_remote_command,w
  3858  031D  07E9               	addwf	_LED_green,f
  3859                           
  3860                           ;main.c: 149: break;
  3861  031E  2B57               	goto	l2082
  3862  031F                     l2072:	
  3863                           
  3864                           ;main.c: 151: LED_green -= 10;
  3865  031F  300A               	movlw	10
  3866  0320  02E9               	subwf	_LED_green,f
  3867                           
  3868                           ;main.c: 152: break;
  3869  0321  2B57               	goto	l2082
  3870  0322                     l2074:	
  3871                           
  3872                           ;main.c: 154: LED_blue += 10;
  3873  0322  300A               	movlw	10
  3874  0323  00FA               	movwf	??_process_remote_command
  3875  0324  087A               	movf	??_process_remote_command,w
  3876  0325  07E8               	addwf	_LED_blue,f
  3877                           
  3878                           ;main.c: 155: break;
  3879  0326  2B57               	goto	l2082
  3880  0327                     l2076:	
  3881                           
  3882                           ;main.c: 157: LED_blue -= 10;
  3883  0327  300A               	movlw	10
  3884  0328  02E8               	subwf	_LED_blue,f
  3885                           
  3886                           ;main.c: 158: break;
  3887  0329  2B57               	goto	l2082
  3888  032A                     l2080:	
  3889  032A  0822               	movf	process_remote_command@code,w
  3890  032B  3E03               	addlw	3
  3891  032C  0086               	movwf	6
  3892  032D  0187               	clrf	7
  3893  032E  0801               	movf	1,w
  3894                           
  3895                           ; Switch size 1, requested type "simple"
  3896                           ; Number of cases is 13, Range of values is 8 to 176
  3897                           ; switch strategies available:
  3898                           ; Name         Instructions Cycles
  3899                           ; simple_byte           40    21 (average)
  3900                           ; jumptable            263     9 (fixed)
  3901                           ;	Chosen strategy is simple_byte
  3902  032F  3A08               	xorlw	8	; case 8
  3903  0330  1903               	skipnz
  3904  0331  2B22               	goto	l2074
  3905  0332  3A18               	xorlw	24	; case 16
  3906  0333  1903               	skipnz
  3907  0334  2B1F               	goto	l2072
  3908  0335  3A08               	xorlw	8	; case 24
  3909  0336  1903               	skipnz
  3910  0337  2B57               	goto	l2082
  3911  0338  3A30               	xorlw	48	; case 40
  3912  0339  1903               	skipnz
  3913  033A  2B57               	goto	l2082
  3914  033B  3A60               	xorlw	96	; case 72
  3915  033C  1903               	skipnz
  3916  033D  2B57               	goto	l2082
  3917  033E  3A18               	xorlw	24	; case 80
  3918  033F  1903               	skipnz
  3919  0340  2B1A               	goto	l2070
  3920  0341  3A08               	xorlw	8	; case 88
  3921  0342  1903               	skipnz
  3922  0343  2B57               	goto	l2082
  3923  0344  3A30               	xorlw	48	; case 104
  3924  0345  1903               	skipnz
  3925  0346  2B57               	goto	l2082
  3926  0347  3AE0               	xorlw	224	; case 136
  3927  0348  1903               	skipnz
  3928  0349  2B27               	goto	l2076
  3929  034A  3A10               	xorlw	16	; case 152
  3930  034B  1903               	skipnz
  3931  034C  2B57               	goto	l2082
  3932  034D  3A38               	xorlw	56	; case 160
  3933  034E  1903               	skipnz
  3934  034F  2B12               	goto	l2066
  3935  0350  3A08               	xorlw	8	; case 168
  3936  0351  1903               	skipnz
  3937  0352  2B57               	goto	l2082
  3938  0353  3A18               	xorlw	24	; case 176
  3939  0354  1903               	skipnz
  3940  0355  2B17               	goto	l2068
  3941  0356  2B57               	goto	l2082
  3942  0357                     l2082:	
  3943                           
  3944                           ;main.c: 177: setLEDColor(LED_red, LED_green, LED_blue);
  3945  0357  0869               	movf	_LED_green,w
  3946  0358  00FA               	movwf	??_process_remote_command
  3947  0359  087A               	movf	??_process_remote_command,w
  3948  035A  00A0               	movwf	setLEDColor@green
  3949  035B  0868               	movf	_LED_blue,w
  3950  035C  00FB               	movwf	??_process_remote_command+1
  3951  035D  087B               	movf	??_process_remote_command+1,w
  3952  035E  00A1               	movwf	setLEDColor@blue
  3953  035F  086A               	movf	_LED_red,w
  3954  0360  3185  2596         	fcall	_setLEDColor
  3955  0362  0008               	return
  3956  0363                     __end_of_process_remote_command:	
  3957                           
  3958                           	psect	text2
  3959  0596                     __ptext2:	
  3960 ;; *************** function _setLEDColor *****************
  3961 ;; Defined at:
  3962 ;;		line 122 in file "main.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  red             1    wreg     unsigned char 
  3965 ;;  green           1    0[BANK0 ] unsigned char 
  3966 ;;  blue            1    1[BANK0 ] unsigned char 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;  red             1    2[COMMON] unsigned char 
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1    wreg      void 
  3971 ;; Registers used:
  3972 ;;		wreg
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3978 ;;      Params:         0       2       0       0       0       0       0       0
  3979 ;;      Locals:         1       0       0       0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0
  3981 ;;      Totals:         1       2       0       0       0       0       0       0
  3982 ;;Total ram usage:        3 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; Hardware stack levels required when called:    4
  3985 ;; This function calls:
  3986 ;;		Nothing
  3987 ;; This function is called by:
  3988 ;;		_process_remote_command
  3989 ;;		_main
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           
  3994                           ;psect for function _setLEDColor
  3995  0596                     _setLEDColor:	
  3996                           
  3997                           ;incstack = 0
  3998                           ; Regs used in _setLEDColor: [wreg]
  3999                           ;setLEDColor@red stored from wreg
  4000  0596  00F9               	movwf	setLEDColor@red
  4001                           
  4002                           ;main.c: 127: CCPR1L = red;
  4003  0597  0879               	movf	setLEDColor@red,w
  4004  0598  0025               	movlb	5	; select bank5
  4005  0599  0091               	movwf	17	;volatile
  4006                           
  4007                           ;main.c: 129: PWM3DCH = green;
  4008  059A  0020               	movlb	0	; select bank0
  4009  059B  0820               	movf	setLEDColor@green,w
  4010  059C  002C               	movlb	12	; select bank12
  4011  059D  0098               	movwf	24	;volatile
  4012                           
  4013                           ;main.c: 131: PWM4DCH = blue;
  4014  059E  0020               	movlb	0	; select bank0
  4015  059F  0821               	movf	setLEDColor@blue,w
  4016  05A0  002C               	movlb	12	; select bank12
  4017  05A1  009B               	movwf	27	;volatile
  4018  05A2  0008               	return
  4019  05A3                     __end_of_setLEDColor:	
  4020                           
  4021                           	psect	text3
  4022  0028                     __ptext3:	
  4023 ;; *************** function _printf *****************
  4024 ;; Defined at:
  4025 ;;		line 477 in file "/Applications/microchip/xc8/v2.10/pic/sources/c90/common/doprnt.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  f               2   13[BANK0 ] PTR const unsigned char 
  4028 ;;		 -> STR_6(27), STR_5(27), STR_4(27), STR_3(27), 
  4029 ;;		 -> STR_2(27), STR_1(26), 
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;  idx             1   25[BANK0 ] unsigned char 
  4032 ;;  val             4   28[BANK0 ] unsigned long 
  4033 ;;  tmpval          4    0        struct .
  4034 ;;  width           2   34[BANK0 ] int 
  4035 ;;  prec            2   26[BANK0 ] int 
  4036 ;;  cp              2    0        PTR const unsigned char 
  4037 ;;  len             2    0        unsigned int 
  4038 ;;  c               1   36[BANK0 ] unsigned char 
  4039 ;;  flag            1   33[BANK0 ] unsigned char 
  4040 ;;  ap              1   32[BANK0 ] PTR void [1]
  4041 ;;		 -> ?_printf(2), 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  2   13[BANK0 ] int 
  4044 ;; Registers used:
  4045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4051 ;;      Params:         0       6       0       0       0       0       0       0
  4052 ;;      Locals:         0      12       0       0       0       0       0       0
  4053 ;;      Temps:          0       6       0       0       0       0       0       0
  4054 ;;      Totals:         0      24       0       0       0       0       0       0
  4055 ;;Total ram usage:       24 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:    6
  4058 ;; This function calls:
  4059 ;;		___lldiv
  4060 ;;		___wmul
  4061 ;;		_isdigit
  4062 ;;		_putch
  4063 ;; This function is called by:
  4064 ;;		_main
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           
  4069                           ;psect for function _printf
  4070  0028                     _printf:	
  4071                           
  4072                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: u
      +                          nsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: un
      +                          signed long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 
      +                          550: *ap = __va_start();
  4073                           
  4074                           ;incstack = 0
  4075                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4076  0028  302F               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4077  0029  0020               	movlb	0	; select bank0
  4078  002A  00B3               	movwf	??_printf
  4079  002B  0833               	movf	??_printf,w
  4080  002C  00C0               	movwf	printf@ap
  4081  002D                     l2164:	
  4082                           ;doprnt.c: 553: while((c = *f++)) {
  4083                           
  4084  002D  0020               	movlb	0	; select bank0
  4085  002E  082E               	movf	printf@f+1,w
  4086  002F  00B4               	movwf	??_printf+1
  4087  0030  082D               	movf	printf@f,w
  4088  0031  00B3               	movwf	??_printf
  4089  0032  0AAD               	incf	printf@f,f
  4090  0033  1903               	skipnz
  4091  0034  0AAE               	incf	printf@f+1,f
  4092  0035  0833               	movf	??_printf,w
  4093  0036  0084               	movwf	4
  4094  0037  0834               	movf	??_printf+1,w
  4095  0038  0085               	movwf	5
  4096  0039  0800               	movf	0,w	;code access
  4097  003A  00B5               	movwf	??_printf+2
  4098  003B  0835               	movf	??_printf+2,w
  4099  003C  00C4               	movwf	printf@c
  4100  003D  0844               	movf	printf@c,w
  4101  003E  1903               	btfsc	3,2
  4102  003F  0008               	return
  4103                           
  4104                           ;doprnt.c: 555: if(c != '%')
  4105  0040  3025               	movlw	37
  4106  0041  0644               	xorwf	printf@c,w
  4107  0042  1903               	btfsc	3,2
  4108  0043  2849               	goto	l2090
  4109                           
  4110                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  4111  0044  0844               	movf	printf@c,w
  4112  0045  3186  2609  3180   	fcall	_putch
  4113                           
  4114                           ;doprnt.c: 559: continue;
  4115  0048  282D               	goto	l2164
  4116  0049                     l2090:	
  4117                           
  4118                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  4119  0049  01C2               	clrf	printf@width
  4120  004A  01C3               	clrf	printf@width+1
  4121                           
  4122                           ;doprnt.c: 565: flag = 0;
  4123  004B  01C1               	clrf	printf@flag
  4124  004C  2852               	goto	l2096
  4125  004D                     l524:	
  4126                           ;doprnt.c: 596: case '0':
  4127                           
  4128                           
  4129                           ;doprnt.c: 597: flag |= 0x04;
  4130  004D  1541               	bsf	printf@flag,2
  4131                           
  4132                           ;doprnt.c: 598: f++;
  4133  004E  3001               	movlw	1
  4134  004F  07AD               	addwf	printf@f,f
  4135  0050  3000               	movlw	0
  4136  0051  3DAE               	addwfc	printf@f+1,f
  4137  0052                     l2096:	
  4138                           ;doprnt.c: 599: continue;
  4139                           
  4140  0052  082D               	movf	printf@f,w
  4141  0053  0084               	movwf	4
  4142  0054  082E               	movf	printf@f+1,w
  4143  0055  0085               	movwf	5
  4144  0056  0800               	movf	0,w	;code access
  4145                           
  4146                           ; Switch size 1, requested type "simple"
  4147                           ; Number of cases is 1, Range of values is 48 to 48
  4148                           ; switch strategies available:
  4149                           ; Name         Instructions Cycles
  4150                           ; simple_byte            4     3 (average)
  4151                           ; direct_byte           11     9 (fixed)
  4152                           ; jumptable            263     9 (fixed)
  4153                           ;	Chosen strategy is simple_byte
  4154  0057  3A30               	xorlw	48	; case 48
  4155  0058  1903               	skipnz
  4156  0059  284D               	goto	l524
  4157  005A  285B               	goto	l2098
  4158  005B                     l2098:	
  4159                           
  4160                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  4161  005B  082D               	movf	printf@f,w
  4162  005C  0084               	movwf	4
  4163  005D  082E               	movf	printf@f+1,w
  4164  005E  0085               	movwf	5
  4165  005F  0800               	movf	0,w	;code access
  4166  0060  3185  2588  3180   	fcall	_isdigit
  4167  0063  1C03               	btfss	3,0
  4168  0064  2898               	goto	l2112
  4169                           
  4170                           ;doprnt.c: 615: width = 0;
  4171  0065  0020               	movlb	0	; select bank0
  4172  0066  01C2               	clrf	printf@width
  4173  0067  01C3               	clrf	printf@width+1
  4174  0068                     l2102:	
  4175                           
  4176                           ;doprnt.c: 617: width *= 10;
  4177  0068  300A               	movlw	10
  4178  0069  0020               	movlb	0	; select bank0
  4179  006A  00A0               	movwf	___wmul@multiplier
  4180  006B  3000               	movlw	0
  4181  006C  00A1               	movwf	___wmul@multiplier+1
  4182  006D  0843               	movf	printf@width+1,w
  4183  006E  00A3               	movwf	___wmul@multiplicand+1
  4184  006F  0842               	movf	printf@width,w
  4185  0070  00A2               	movwf	___wmul@multiplicand
  4186  0071  3184  24BA  3180   	fcall	___wmul
  4187  0074  0020               	movlb	0	; select bank0
  4188  0075  0821               	movf	?___wmul+1,w
  4189  0076  00C3               	movwf	printf@width+1
  4190  0077  0820               	movf	?___wmul,w
  4191  0078  00C2               	movwf	printf@width
  4192                           
  4193                           ;doprnt.c: 618: width += *f++ - '0';
  4194  0079  082D               	movf	printf@f,w
  4195  007A  0084               	movwf	4
  4196  007B  082E               	movf	printf@f+1,w
  4197  007C  0085               	movwf	5
  4198  007D  0800               	movf	0,w	;code access
  4199  007E  3ED0               	addlw	208
  4200  007F  00B3               	movwf	??_printf
  4201  0080  30FF               	movlw	255
  4202  0081  1803               	skipnc
  4203  0082  3000               	movlw	0
  4204  0083  00B4               	movwf	??_printf+1
  4205  0084  0833               	movf	??_printf,w
  4206  0085  07C2               	addwf	printf@width,f
  4207  0086  0834               	movf	??_printf+1,w
  4208  0087  3DC3               	addwfc	printf@width+1,f
  4209  0088  3001               	movlw	1
  4210  0089  07AD               	addwf	printf@f,f
  4211  008A  3000               	movlw	0
  4212  008B  3DAE               	addwfc	printf@f+1,f
  4213                           
  4214                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  4215  008C  082D               	movf	printf@f,w
  4216  008D  0084               	movwf	4
  4217  008E  082E               	movf	printf@f+1,w
  4218  008F  0085               	movwf	5
  4219  0090  0800               	movf	0,w	;code access
  4220  0091  3185  2588  3180   	fcall	_isdigit
  4221  0094  1C03               	btfss	3,0
  4222  0095  2898               	goto	l2112
  4223  0096  2868               	goto	l2102
  4224  0097                     l535:	
  4225                           ;doprnt.c: 667: case 'l':
  4226                           
  4227                           
  4228                           ;doprnt.c: 669: flag |= 0x10;
  4229  0097  1641               	bsf	printf@flag,4
  4230  0098                     l2112:	
  4231                           ;doprnt.c: 670: goto loop;
  4232                           
  4233  0098  0020               	movlb	0	; select bank0
  4234  0099  082E               	movf	printf@f+1,w
  4235  009A  00B4               	movwf	??_printf+1
  4236  009B  082D               	movf	printf@f,w
  4237  009C  00B3               	movwf	??_printf
  4238  009D  0AAD               	incf	printf@f,f
  4239  009E  1903               	skipnz
  4240  009F  0AAE               	incf	printf@f+1,f
  4241  00A0  0833               	movf	??_printf,w
  4242  00A1  0084               	movwf	4
  4243  00A2  0834               	movf	??_printf+1,w
  4244  00A3  0085               	movwf	5
  4245  00A4  0800               	movf	0,w	;code access
  4246  00A5  00C4               	movwf	printf@c
  4247                           
  4248                           ; Switch size 1, requested type "simple"
  4249                           ; Number of cases is 3, Range of values is 0 to 120
  4250                           ; switch strategies available:
  4251                           ; Name         Instructions Cycles
  4252                           ; simple_byte           10     6 (average)
  4253                           ; direct_byte          248     6 (fixed)
  4254                           ; jumptable            260     6 (fixed)
  4255                           ;	Chosen strategy is simple_byte
  4256  00A6  3A00               	xorlw	0	; case 0
  4257  00A7  1903               	skipnz
  4258  00A8  297B               	goto	l558
  4259  00A9  3A6C               	xorlw	108	; case 108
  4260  00AA  1903               	skipnz
  4261  00AB  2897               	goto	l535
  4262  00AC  3A14               	xorlw	20	; case 120
  4263  00AD  1903               	skipnz
  4264  00AE  28B0               	goto	l537
  4265  00AF  282D               	goto	l2164
  4266  00B0                     l537:	
  4267                           
  4268                           ;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  4269  00B0  1E41               	btfss	printf@flag,4
  4270  00B1  28BF               	goto	l2118
  4271                           
  4272                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  4273  00B2  0840               	movf	printf@ap,w
  4274  00B3  0086               	movwf	6
  4275  00B4  0187               	clrf	7
  4276  00B5  3F40               	moviw [0]fsr1
  4277  00B6  00BC               	movwf	printf@val
  4278  00B7  3F41               	moviw [1]fsr1
  4279  00B8  00BD               	movwf	printf@val+1
  4280  00B9  3F42               	moviw [2]fsr1
  4281  00BA  00BE               	movwf	printf@val+2
  4282  00BB  3F43               	moviw [3]fsr1
  4283  00BC  00BF               	movwf	printf@val+3
  4284  00BD  3004               	movlw	4
  4285  00BE  28CD               	goto	L2
  4286  00BF                     l2118:	
  4287                           
  4288                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  4289  00BF  0840               	movf	printf@ap,w
  4290  00C0  0086               	movwf	6
  4291  00C1  0187               	clrf	7
  4292  00C2  3F40               	moviw [0]fsr1
  4293  00C3  00B3               	movwf	??_printf
  4294  00C4  3F41               	moviw [1]fsr1
  4295  00C5  00B4               	movwf	??_printf+1
  4296  00C6  0833               	movf	??_printf,w
  4297  00C7  00BC               	movwf	printf@val
  4298  00C8  0834               	movf	??_printf+1,w
  4299  00C9  00BD               	movwf	printf@val+1
  4300  00CA  01BE               	clrf	printf@val+2
  4301  00CB  01BF               	clrf	printf@val+3
  4302  00CC  3002               	movlw	2
  4303  00CD                     L2:	
  4304  00CD  00B3               	movwf	??_printf
  4305  00CE  0833               	movf	??_printf,w
  4306  00CF  07C0               	addwf	printf@ap,f
  4307                           
  4308                           ;doprnt.c: 1313: };doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0]
      +                           ; c++)
  4309  00D0  01C4               	clrf	printf@c
  4310  00D1  0AC4               	incf	printf@c,f
  4311  00D2                     l2128:	
  4312                           
  4313                           ;doprnt.c: 1343: if(val < hexpowers[c])
  4314  00D2  0844               	movf	printf@c,w
  4315  00D3  00B3               	movwf	??_printf
  4316  00D4  01B4               	clrf	??_printf+1
  4317  00D5  35B3               	lslf	??_printf,f
  4318  00D6  0DB4               	rlf	??_printf+1,f
  4319  00D7  35B3               	lslf	??_printf,f
  4320  00D8  0DB4               	rlf	??_printf+1,f
  4321  00D9  307C               	movlw	low (_hexpowers| (0+32768))
  4322  00DA  0733               	addwf	??_printf,w
  4323  00DB  0084               	movwf	4
  4324  00DC  3084               	movlw	high (_hexpowers| (0+32768))
  4325  00DD  3D34               	addwfc	??_printf+1,w
  4326  00DE  0085               	movwf	5
  4327  00DF  3F00               	moviw [0]fsr0
  4328  00E0  00B5               	movwf	??_printf+2
  4329  00E1  3F01               	moviw [1]fsr0
  4330  00E2  00B6               	movwf	??_printf+3
  4331  00E3  3F02               	moviw [2]fsr0
  4332  00E4  00B7               	movwf	??_printf+4
  4333  00E5  3F03               	moviw [3]fsr0
  4334  00E6  00B8               	movwf	??_printf+5
  4335  00E7  0838               	movf	??_printf+5,w
  4336  00E8  023F               	subwf	printf@val+3,w
  4337  00E9  1D03               	skipz
  4338  00EA  28F5               	goto	u1525
  4339  00EB  0837               	movf	??_printf+4,w
  4340  00EC  023E               	subwf	printf@val+2,w
  4341  00ED  1D03               	skipz
  4342  00EE  28F5               	goto	u1525
  4343  00EF  0836               	movf	??_printf+3,w
  4344  00F0  023D               	subwf	printf@val+1,w
  4345  00F1  1D03               	skipz
  4346  00F2  28F5               	goto	u1525
  4347  00F3  0835               	movf	??_printf+2,w
  4348  00F4  023C               	subwf	printf@val,w
  4349  00F5                     u1525:	
  4350  00F5  1C03               	btfss	3,0
  4351  00F6  28FF               	goto	l2134
  4352  00F7  3001               	movlw	1
  4353  00F8  00B3               	movwf	??_printf
  4354  00F9  0833               	movf	??_printf,w
  4355  00FA  07C4               	addwf	printf@c,f
  4356  00FB  3008               	movlw	8
  4357  00FC  0644               	xorwf	printf@c,w
  4358  00FD  1D03               	btfss	3,2
  4359  00FE  28D2               	goto	l2128
  4360  00FF                     l2134:	
  4361                           
  4362                           ;doprnt.c: 1407: if(width > c)
  4363  00FF  0843               	movf	printf@width+1,w
  4364  0100  3A80               	xorlw	128
  4365  0101  3C80               	sublw	128
  4366  0102  1D03               	skipz
  4367  0103  2906               	goto	u1545
  4368  0104  0842               	movf	printf@width,w
  4369  0105  0244               	subwf	printf@c,w
  4370  0106                     u1545:	
  4371  0106  1803               	skipnc
  4372  0107  2911               	goto	l2138
  4373                           
  4374                           ;doprnt.c: 1408: width -= c;
  4375  0108  0020               	movlb	0	; select bank0
  4376  0109  0844               	movf	printf@c,w
  4377  010A  00B3               	movwf	??_printf
  4378  010B  01B4               	clrf	??_printf+1
  4379  010C  0833               	movf	??_printf,w
  4380  010D  02C2               	subwf	printf@width,f
  4381  010E  0834               	movf	??_printf+1,w
  4382  010F  3BC3               	subwfb	printf@width+1,f
  4383  0110  2914               	goto	l2140
  4384  0111                     l2138:	
  4385                           
  4386                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  4387  0111  0020               	movlb	0	; select bank0
  4388  0112  01C2               	clrf	printf@width
  4389  0113  01C3               	clrf	printf@width+1
  4390  0114                     l2140:	
  4391                           
  4392                           ;doprnt.c: 1413: if(flag & 0x04) {
  4393  0114  1D41               	btfss	printf@flag,2
  4394  0115  2924               	goto	l2148
  4395  0116                     L3:	
  4396                           
  4397                           ;doprnt.c: 1441: if(width)
  4398  0116  0842               	movf	printf@width,w
  4399  0117  0443               	iorwf	printf@width+1,w
  4400  0118  1903               	btfsc	3,2
  4401  0119  2935               	goto	l2154
  4402                           
  4403                           ;doprnt.c: 1443: (putch('0') );
  4404  011A  3030               	movlw	48
  4405  011B  3186  2609  3180   	fcall	_putch
  4406                           
  4407                           ;doprnt.c: 1444: while(--width);
  4408  011E  30FF               	movlw	255
  4409  011F  0020               	movlb	0	; select bank0
  4410  0120  07C2               	addwf	printf@width,f
  4411  0121  30FF               	movlw	255
  4412  0122  3DC3               	addwfc	printf@width+1,f
  4413  0123  2916               	goto	L3
  4414  0124                     l2148:	
  4415                           
  4416                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  4417  0124  0842               	movf	printf@width,w
  4418  0125  0443               	iorwf	printf@width+1,w
  4419  0126  1903               	btfsc	3,2
  4420  0127  2935               	goto	l2154
  4421  0128                     l2150:	
  4422                           
  4423                           ;doprnt.c: 1456: (putch(' ') );
  4424  0128  3020               	movlw	32
  4425  0129  3186  2609  3180   	fcall	_putch
  4426                           
  4427                           ;doprnt.c: 1457: while(--width);
  4428  012C  30FF               	movlw	255
  4429  012D  0020               	movlb	0	; select bank0
  4430  012E  07C2               	addwf	printf@width,f
  4431  012F  30FF               	movlw	255
  4432  0130  3DC3               	addwfc	printf@width+1,f
  4433  0131  0842               	movf	printf@width,w
  4434  0132  0443               	iorwf	printf@width+1,w
  4435  0133  1D03               	btfss	3,2
  4436  0134  2928               	goto	l2150
  4437  0135                     l2154:	
  4438                           
  4439                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  4440  0135  0844               	movf	printf@c,w
  4441  0136  00B3               	movwf	??_printf
  4442  0137  01B4               	clrf	??_printf+1
  4443  0138  0833               	movf	??_printf,w
  4444  0139  00BA               	movwf	printf@prec
  4445  013A  0834               	movf	??_printf+1,w
  4446  013B  00BB               	movwf	printf@prec+1
  4447  013C                     l2162:	
  4448                           ;doprnt.c: 1500: while(prec--) {
  4449                           
  4450  013C  30FF               	movlw	255
  4451  013D  0020               	movlb	0	; select bank0
  4452  013E  07BA               	addwf	printf@prec,f
  4453  013F  30FF               	movlw	255
  4454  0140  3DBB               	addwfc	printf@prec+1,f
  4455  0141  0A3A               	incf	printf@prec,w
  4456  0142  1903               	btfsc	3,2
  4457  0143  0A3B               	incf	printf@prec+1,w
  4458  0144  1903               	btfsc	3,2
  4459  0145  282D               	goto	l2164
  4460                           
  4461                           ;doprnt.c: 1504: {;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpower
      +                          s[(unsigned int)prec]) & 0xF;
  4462  0146  083B               	movf	printf@prec+1,w
  4463  0147  0085               	movwf	5
  4464  0148  083A               	movf	printf@prec,w
  4465  0149  0084               	movwf	4
  4466  014A  3584               	lslf	4,f
  4467  014B  0D85               	rlf	5,f
  4468  014C  3584               	lslf	4,f
  4469  014D  0D85               	rlf	5,f
  4470  014E  307C               	movlw	low (_hexpowers| (0+32768))
  4471  014F  0784               	addwf	4,f
  4472  0150  3084               	movlw	high (_hexpowers| (0+32768))
  4473  0151  3D85               	addwfc	5,f
  4474  0152  3F00               	moviw [0]fsr0
  4475  0153  00A0               	movwf	___lldiv@divisor
  4476  0154  3F01               	moviw [1]fsr0
  4477  0155  00A1               	movwf	___lldiv@divisor+1
  4478  0156  3F02               	moviw [2]fsr0
  4479  0157  00A2               	movwf	___lldiv@divisor+2
  4480  0158  3F03               	moviw [3]fsr0
  4481  0159  00A3               	movwf	___lldiv@divisor+3
  4482  015A  083F               	movf	printf@val+3,w
  4483  015B  00A7               	movwf	___lldiv@dividend+3
  4484  015C  083E               	movf	printf@val+2,w
  4485  015D  00A6               	movwf	___lldiv@dividend+2
  4486  015E  083D               	movf	printf@val+1,w
  4487  015F  00A5               	movwf	___lldiv@dividend+1
  4488  0160  083C               	movf	printf@val,w
  4489  0161  00A4               	movwf	___lldiv@dividend
  4490  0162  3183  2363  3180   	fcall	___lldiv
  4491  0165  0020               	movlb	0	; select bank0
  4492  0166  0820               	movf	?___lldiv,w
  4493  0167  390F               	andlw	15
  4494  0168  00B3               	movwf	??_printf
  4495  0169  0833               	movf	??_printf,w
  4496  016A  00B9               	movwf	printf@idx
  4497                           
  4498                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  4499  016B  0839               	movf	printf@idx,w
  4500  016C  3E77               	addlw	low (STR_7| (0+32768))
  4501  016D  0084               	movwf	4
  4502  016E  3085               	movlw	high (STR_7| (0+32768))
  4503  016F  1803               	skipnc
  4504  0170  3E01               	addlw	1
  4505  0171  0085               	movwf	5
  4506  0172  0800               	movf	0,w	;code access
  4507  0173  00B3               	movwf	??_printf
  4508  0174  0833               	movf	??_printf,w
  4509  0175  00C4               	movwf	printf@c
  4510                           
  4511                           ;doprnt.c: 1534: };doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  4512  0176  0844               	movf	printf@c,w
  4513  0177  3186  2609  3180   	fcall	_putch
  4514  017A  293C               	goto	l2162
  4515  017B                     l558:	
  4516  017B  0008               	return
  4517  017C                     __end_of_printf:	
  4518                           
  4519                           	psect	text4
  4520  0609                     __ptext4:	
  4521 ;; *************** function _putch *****************
  4522 ;; Defined at:
  4523 ;;		line 146 in file "mcc_generated_files/eusart.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  txData          1    wreg     unsigned char 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  txData          1    3[COMMON] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0, pclath, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4537 ;;      Params:         0       0       0       0       0       0       0       0
  4538 ;;      Locals:         1       0       0       0       0       0       0       0
  4539 ;;      Temps:          0       0       0       0       0       0       0       0
  4540 ;;      Totals:         1       0       0       0       0       0       0       0
  4541 ;;Total ram usage:        1 bytes
  4542 ;; Hardware stack levels used:    1
  4543 ;; Hardware stack levels required when called:    5
  4544 ;; This function calls:
  4545 ;;		_EUSART_Write
  4546 ;; This function is called by:
  4547 ;;		_printf
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           
  4552                           ;psect for function _putch
  4553  0609                     _putch:	
  4554                           
  4555                           ;incstack = 0
  4556                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4557                           ;putch@txData stored from wreg
  4558  0609  00FA               	movwf	putch@txData
  4559                           
  4560                           ;eusart.c: 148: EUSART_Write(txData);
  4561  060A  087A               	movf	putch@txData,w
  4562  060B  3185  25DF         	fcall	_EUSART_Write
  4563  060D  0008               	return
  4564  060E                     __end_of_putch:	
  4565                           
  4566                           	psect	text5
  4567  05DF                     __ptext5:	
  4568 ;; *************** function _EUSART_Write *****************
  4569 ;; Defined at:
  4570 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  txData          1    wreg     unsigned char 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  txData          1    2[COMMON] unsigned char 
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  1    wreg      void 
  4577 ;; Registers used:
  4578 ;;		wreg
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4584 ;;      Params:         0       0       0       0       0       0       0       0
  4585 ;;      Locals:         1       0       0       0       0       0       0       0
  4586 ;;      Temps:          0       0       0       0       0       0       0       0
  4587 ;;      Totals:         1       0       0       0       0       0       0       0
  4588 ;;Total ram usage:        1 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; Hardware stack levels required when called:    4
  4591 ;; This function calls:
  4592 ;;		Nothing
  4593 ;; This function is called by:
  4594 ;;		_putch
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           
  4599                           ;psect for function _EUSART_Write
  4600  05DF                     _EUSART_Write:	
  4601                           
  4602                           ;incstack = 0
  4603                           ; Regs used in _EUSART_Write: [wreg]
  4604                           ;EUSART_Write@txData stored from wreg
  4605  05DF  00F9               	movwf	EUSART_Write@txData
  4606  05E0                     l197:	
  4607                           ;eusart.c: 135: {
  4608                           
  4609  05E0  0020               	movlb	0	; select bank0
  4610  05E1  1E11               	btfss	17,4	;volatile
  4611  05E2  2DE0               	goto	l197
  4612                           
  4613                           ;eusart.c: 136: };eusart.c: 138: TX1REG = txData;
  4614  05E3  0879               	movf	EUSART_Write@txData,w
  4615  05E4  0023               	movlb	3	; select bank3
  4616  05E5  009A               	movwf	26	;volatile
  4617  05E6  0008               	return
  4618  05E7                     __end_of_EUSART_Write:	
  4619                           
  4620                           	psect	text6
  4621  0588                     __ptext6:	
  4622 ;; *************** function _isdigit *****************
  4623 ;; Defined at:
  4624 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c90/common/isdigit.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  c               1    wreg     unsigned char 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  c               1    3[COMMON] unsigned char 
  4629 ;; Return value:  Size  Location     Type
  4630 ;;		None               void
  4631 ;; Registers used:
  4632 ;;		wreg, status,2, status,0
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4638 ;;      Params:         0       0       0       0       0       0       0       0
  4639 ;;      Locals:         2       0       0       0       0       0       0       0
  4640 ;;      Temps:          0       0       0       0       0       0       0       0
  4641 ;;      Totals:         2       0       0       0       0       0       0       0
  4642 ;;Total ram usage:        2 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; Hardware stack levels required when called:    4
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_printf
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           
  4653                           ;psect for function _isdigit
  4654  0588                     _isdigit:	
  4655                           
  4656                           ;incstack = 0
  4657                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4658                           ;isdigit@c stored from wreg
  4659  0588  00FA               	movwf	isdigit@c
  4660  0589  01F9               	clrf	_isdigit$1219
  4661  058A  303A               	movlw	58
  4662  058B  027A               	subwf	isdigit@c,w
  4663  058C  1803               	skipnc
  4664  058D  2D94               	goto	l1930
  4665  058E  3030               	movlw	48
  4666  058F  027A               	subwf	isdigit@c,w
  4667  0590  1C03               	skipc
  4668  0591  2D94               	goto	l1930
  4669  0592  01F9               	clrf	_isdigit$1219
  4670  0593  0AF9               	incf	_isdigit$1219,f
  4671  0594                     l1930:	
  4672  0594  0C79               	rrf	_isdigit$1219,w
  4673  0595  0008               	return
  4674  0596                     __end_of_isdigit:	
  4675                           
  4676                           	psect	text7
  4677  04BA                     __ptext7:	
  4678 ;; *************** function ___wmul *****************
  4679 ;; Defined at:
  4680 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c90/common/Umul16.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4683 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;  product         2    2[COMMON] unsigned int 
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  2    0[BANK0 ] unsigned int 
  4688 ;; Registers used:
  4689 ;;		wreg, status,2, status,0
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4695 ;;      Params:         0       4       0       0       0       0       0       0
  4696 ;;      Locals:         2       0       0       0       0       0       0       0
  4697 ;;      Temps:          0       0       0       0       0       0       0       0
  4698 ;;      Totals:         2       4       0       0       0       0       0       0
  4699 ;;Total ram usage:        6 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; Hardware stack levels required when called:    4
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_printf
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           
  4710                           ;psect for function ___wmul
  4711  04BA                     ___wmul:	
  4712                           
  4713                           ;incstack = 0
  4714                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4715  04BA  01F9               	clrf	___wmul@product
  4716  04BB  01FA               	clrf	___wmul@product+1
  4717  04BC                     l1936:	
  4718  04BC  0020               	movlb	0	; select bank0
  4719  04BD  1C20               	btfss	___wmul@multiplier,0
  4720  04BE  2CC3               	goto	l562
  4721  04BF  0822               	movf	___wmul@multiplicand,w
  4722  04C0  07F9               	addwf	___wmul@product,f
  4723  04C1  0823               	movf	___wmul@multiplicand+1,w
  4724  04C2  3DFA               	addwfc	___wmul@product+1,f
  4725  04C3                     l562:	
  4726  04C3  3001               	movlw	1
  4727  04C4                     u1265:	
  4728  04C4  35A2               	lslf	___wmul@multiplicand,f
  4729  04C5  0DA3               	rlf	___wmul@multiplicand+1,f
  4730  04C6  0B89               	decfsz	9,f
  4731  04C7  2CC4               	goto	u1265
  4732  04C8  3001               	movlw	1
  4733  04C9                     u1275:	
  4734  04C9  36A1               	lsrf	___wmul@multiplier+1,f
  4735  04CA  0CA0               	rrf	___wmul@multiplier,f
  4736  04CB  0B89               	decfsz	9,f
  4737  04CC  2CC9               	goto	u1275
  4738  04CD  0820               	movf	___wmul@multiplier,w
  4739  04CE  0421               	iorwf	___wmul@multiplier+1,w
  4740  04CF  1D03               	btfss	3,2
  4741  04D0  2CBC               	goto	l1936
  4742  04D1  087A               	movf	___wmul@product+1,w
  4743  04D2  00A1               	movwf	?___wmul+1
  4744  04D3  0879               	movf	___wmul@product,w
  4745  04D4  00A0               	movwf	?___wmul
  4746  04D5  0008               	return
  4747  04D6                     __end_of___wmul:	
  4748                           
  4749                           	psect	text8
  4750  0363                     __ptext8:	
  4751 ;; *************** function ___lldiv *****************
  4752 ;; Defined at:
  4753 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c90/common/__lldiv.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  divisor         4    0[BANK0 ] unsigned long 
  4756 ;;  dividend        4    4[BANK0 ] unsigned long 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;  quotient        4    8[BANK0 ] unsigned long 
  4759 ;;  counter         1   12[BANK0 ] unsigned char 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  4    0[BANK0 ] unsigned long 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4769 ;;      Params:         0       8       0       0       0       0       0       0
  4770 ;;      Locals:         0       5       0       0       0       0       0       0
  4771 ;;      Temps:          1       0       0       0       0       0       0       0
  4772 ;;      Totals:         1      13       0       0       0       0       0       0
  4773 ;;Total ram usage:       14 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; Hardware stack levels required when called:    4
  4776 ;; This function calls:
  4777 ;;		Nothing
  4778 ;; This function is called by:
  4779 ;;		_printf
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           
  4784                           ;psect for function ___lldiv
  4785  0363                     ___lldiv:	
  4786                           
  4787                           ;incstack = 0
  4788                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4789  0363  3000               	movlw	0
  4790  0364  0020               	movlb	0	; select bank0
  4791  0365  00AB               	movwf	___lldiv@quotient+3
  4792  0366  3000               	movlw	0
  4793  0367  00AA               	movwf	___lldiv@quotient+2
  4794  0368  3000               	movlw	0
  4795  0369  00A9               	movwf	___lldiv@quotient+1
  4796  036A  3000               	movlw	0
  4797  036B  00A8               	movwf	___lldiv@quotient
  4798  036C  0823               	movf	___lldiv@divisor+3,w
  4799  036D  0422               	iorwf	___lldiv@divisor+2,w
  4800  036E  0421               	iorwf	___lldiv@divisor+1,w
  4801  036F  0420               	iorwf	___lldiv@divisor,w
  4802  0370  1903               	skipnz
  4803  0371  2BAD               	goto	l1968
  4804  0372  01AC               	clrf	___lldiv@counter
  4805  0373  0AAC               	incf	___lldiv@counter,f
  4806  0374                     l1954:	
  4807  0374  1BA3               	btfsc	___lldiv@divisor+3,7
  4808  0375  2B82               	goto	l1956
  4809  0376  3001               	movlw	1
  4810  0377                     u1305:	
  4811  0377  35A0               	lslf	___lldiv@divisor,f
  4812  0378  0DA1               	rlf	___lldiv@divisor+1,f
  4813  0379  0DA2               	rlf	___lldiv@divisor+2,f
  4814  037A  0DA3               	rlf	___lldiv@divisor+3,f
  4815  037B  0B89               	decfsz	9,f
  4816  037C  2B77               	goto	u1305
  4817  037D  3001               	movlw	1
  4818  037E  00F9               	movwf	??___lldiv
  4819  037F  0879               	movf	??___lldiv,w
  4820  0380  07AC               	addwf	___lldiv@counter,f
  4821  0381  2B74               	goto	l1954
  4822  0382                     l1956:	
  4823  0382  3001               	movlw	1
  4824  0383                     u1325:	
  4825  0383  35A8               	lslf	___lldiv@quotient,f
  4826  0384  0DA9               	rlf	___lldiv@quotient+1,f
  4827  0385  0DAA               	rlf	___lldiv@quotient+2,f
  4828  0386  0DAB               	rlf	___lldiv@quotient+3,f
  4829  0387  0B89               	decfsz	9,f
  4830  0388  2B83               	goto	u1325
  4831  0389  0823               	movf	___lldiv@divisor+3,w
  4832  038A  0227               	subwf	___lldiv@dividend+3,w
  4833  038B  1D03               	skipz
  4834  038C  2B97               	goto	u1335
  4835  038D  0822               	movf	___lldiv@divisor+2,w
  4836  038E  0226               	subwf	___lldiv@dividend+2,w
  4837  038F  1D03               	skipz
  4838  0390  2B97               	goto	u1335
  4839  0391  0821               	movf	___lldiv@divisor+1,w
  4840  0392  0225               	subwf	___lldiv@dividend+1,w
  4841  0393  1D03               	skipz
  4842  0394  2B97               	goto	u1335
  4843  0395  0820               	movf	___lldiv@divisor,w
  4844  0396  0224               	subwf	___lldiv@dividend,w
  4845  0397                     u1335:	
  4846  0397  1C03               	skipc
  4847  0398  2BA2               	goto	l1964
  4848  0399  0820               	movf	___lldiv@divisor,w
  4849  039A  02A4               	subwf	___lldiv@dividend,f
  4850  039B  0821               	movf	___lldiv@divisor+1,w
  4851  039C  3BA5               	subwfb	___lldiv@dividend+1,f
  4852  039D  0822               	movf	___lldiv@divisor+2,w
  4853  039E  3BA6               	subwfb	___lldiv@dividend+2,f
  4854  039F  0823               	movf	___lldiv@divisor+3,w
  4855  03A0  3BA7               	subwfb	___lldiv@dividend+3,f
  4856  03A1  1428               	bsf	___lldiv@quotient,0
  4857  03A2                     l1964:	
  4858  03A2  3001               	movlw	1
  4859  03A3                     u1345:	
  4860  03A3  36A3               	lsrf	___lldiv@divisor+3,f
  4861  03A4  0CA2               	rrf	___lldiv@divisor+2,f
  4862  03A5  0CA1               	rrf	___lldiv@divisor+1,f
  4863  03A6  0CA0               	rrf	___lldiv@divisor,f
  4864  03A7  0B89               	decfsz	9,f
  4865  03A8  2BA3               	goto	u1345
  4866  03A9  3001               	movlw	1
  4867  03AA  02AC               	subwf	___lldiv@counter,f
  4868  03AB  1D03               	btfss	3,2
  4869  03AC  2B82               	goto	l1956
  4870  03AD                     l1968:	
  4871  03AD  082B               	movf	___lldiv@quotient+3,w
  4872  03AE  00A3               	movwf	?___lldiv+3
  4873  03AF  082A               	movf	___lldiv@quotient+2,w
  4874  03B0  00A2               	movwf	?___lldiv+2
  4875  03B1  0829               	movf	___lldiv@quotient+1,w
  4876  03B2  00A1               	movwf	?___lldiv+1
  4877  03B3  0828               	movf	___lldiv@quotient,w
  4878  03B4  00A0               	movwf	?___lldiv
  4879  03B5  0008               	return
  4880  03B6                     __end_of___lldiv:	
  4881                           
  4882                           	psect	text9
  4883  03B6                     __ptext9:	
  4884 ;; *************** function _initLED *****************
  4885 ;; Defined at:
  4886 ;;		line 81 in file "main.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;		None
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;		None
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  1    wreg      void 
  4893 ;; Registers used:
  4894 ;;		wreg, status,2, status,0
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4900 ;;      Params:         0       0       0       0       0       0       0       0
  4901 ;;      Locals:         0       0       0       0       0       0       0       0
  4902 ;;      Temps:          1       0       0       0       0       0       0       0
  4903 ;;      Totals:         1       0       0       0       0       0       0       0
  4904 ;;Total ram usage:        1 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; Hardware stack levels required when called:    4
  4907 ;; This function calls:
  4908 ;;		Nothing
  4909 ;; This function is called by:
  4910 ;;		_main
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           
  4915                           ;psect for function _initLED
  4916  03B6                     _initLED:	
  4917                           
  4918                           ;main.c: 84: PR2 = 255;
  4919                           
  4920                           ;incstack = 0
  4921                           ; Regs used in _initLED: [wreg+status,2+status,0]
  4922  03B6  30FF               	movlw	255
  4923  03B7  0020               	movlb	0	; select bank0
  4924  03B8  009B               	movwf	27	;volatile
  4925                           
  4926                           ;main.c: 85: T2CONbits.T2CKPS = 0b10;
  4927  03B9  081C               	movf	28,w	;volatile
  4928  03BA  39FC               	andlw	-4
  4929  03BB  3802               	iorlw	2
  4930  03BC  009C               	movwf	28	;volatile
  4931                           
  4932                           ;main.c: 86: T2CONbits.TMR2ON = 1;
  4933  03BD  151C               	bsf	28,2	;volatile
  4934                           
  4935                           ;main.c: 90: TRISC |= 0b00010000;
  4936  03BE  0021               	movlb	1	; select bank1
  4937  03BF  160E               	bsf	14,4	;volatile
  4938                           
  4939                           ;main.c: 91: RC4PPS = 0b01110;
  4940  03C0  300E               	movlw	14
  4941  03C1  003D               	movlb	29	; select bank29
  4942  03C2  00A4               	movwf	36	;volatile
  4943                           
  4944                           ;main.c: 92: CCPTMRSbits.P3TSEL = 0b00;
  4945  03C3  30CF               	movlw	-49
  4946  03C4  0025               	movlb	5	; select bank5
  4947  03C5  059E               	andwf	30,f	;volatile
  4948                           
  4949                           ;main.c: 93: PWM3DCH = 0;
  4950  03C6  002C               	movlb	12	; select bank12
  4951  03C7  0198               	clrf	24	;volatile
  4952                           
  4953                           ;main.c: 94: PWM3DCLbits.PWM3DCL = 0;
  4954  03C8  303F               	movlw	-193
  4955  03C9  0597               	andwf	23,f	;volatile
  4956                           
  4957                           ;main.c: 95: PWM3CONbits.PWM3POL = 0;
  4958  03CA  1219               	bcf	25,4	;volatile
  4959                           
  4960                           ;main.c: 96: TRISC &= 0b11101111;
  4961  03CB  30EF               	movlw	239
  4962  03CC  00F9               	movwf	??_initLED
  4963  03CD  0879               	movf	??_initLED,w
  4964  03CE  0021               	movlb	1	; select bank1
  4965  03CF  058E               	andwf	14,f	;volatile
  4966                           
  4967                           ;main.c: 97: PWM3CONbits.PWM3EN = 1;
  4968  03D0  002C               	movlb	12	; select bank12
  4969  03D1  1799               	bsf	25,7	;volatile
  4970                           
  4971                           ;main.c: 101: TRISA |= 0b00100000;
  4972  03D2  0021               	movlb	1	; select bank1
  4973  03D3  168C               	bsf	12,5	;volatile
  4974                           
  4975                           ;main.c: 102: RA5PPS = 0b01111;
  4976  03D4  300F               	movlw	15
  4977  03D5  003D               	movlb	29	; select bank29
  4978  03D6  0095               	movwf	21	;volatile
  4979                           
  4980                           ;main.c: 103: CCPTMRSbits.P4TSEL = 0b00;
  4981  03D7  303F               	movlw	-193
  4982  03D8  0025               	movlb	5	; select bank5
  4983  03D9  059E               	andwf	30,f	;volatile
  4984                           
  4985                           ;main.c: 104: PWM4DCH = 0;
  4986  03DA  002C               	movlb	12	; select bank12
  4987  03DB  019B               	clrf	27	;volatile
  4988                           
  4989                           ;main.c: 105: PWM4DCLbits.PWM4DCL = 0;
  4990  03DC  303F               	movlw	-193
  4991  03DD  059A               	andwf	26,f	;volatile
  4992                           
  4993                           ;main.c: 106: PWM4CONbits.PWM4POL = 0;
  4994  03DE  121C               	bcf	28,4	;volatile
  4995                           
  4996                           ;main.c: 107: TRISA &= 0b11011111;
  4997  03DF  30DF               	movlw	223
  4998  03E0  00F9               	movwf	??_initLED
  4999  03E1  0879               	movf	??_initLED,w
  5000  03E2  0021               	movlb	1	; select bank1
  5001  03E3  058C               	andwf	12,f	;volatile
  5002                           
  5003                           ;main.c: 108: PWM4CONbits.PWM4EN = 1;
  5004  03E4  002C               	movlb	12	; select bank12
  5005  03E5  179C               	bsf	28,7	;volatile
  5006                           
  5007                           ;main.c: 114: TRISC |= 0b00100000;
  5008  03E6  0021               	movlb	1	; select bank1
  5009  03E7  168E               	bsf	14,5	;volatile
  5010                           
  5011                           ;main.c: 115: RC5PPS = 0b01100;
  5012  03E8  300C               	movlw	12
  5013  03E9  003D               	movlb	29	; select bank29
  5014  03EA  00A5               	movwf	37	;volatile
  5015                           
  5016                           ;main.c: 116: CCP1CONbits.CCP1M = 0b1100;
  5017  03EB  0025               	movlb	5	; select bank5
  5018  03EC  0813               	movf	19,w	;volatile
  5019  03ED  39F0               	andlw	-16
  5020  03EE  380C               	iorlw	12
  5021  03EF  0093               	movwf	19	;volatile
  5022                           
  5023                           ;main.c: 117: CCPR1L = 0;
  5024  03F0  0191               	clrf	17	;volatile
  5025                           
  5026                           ;main.c: 118: CCP1CONbits.DC1B = 0;
  5027  03F1  30CF               	movlw	-49
  5028  03F2  0593               	andwf	19,f	;volatile
  5029                           
  5030                           ;main.c: 119: TRISC &= 0b11011111;
  5031  03F3  30DF               	movlw	223
  5032  03F4  00F9               	movwf	??_initLED
  5033  03F5  0879               	movf	??_initLED,w
  5034  03F6  0021               	movlb	1	; select bank1
  5035  03F7  058E               	andwf	14,f	;volatile
  5036  03F8  0008               	return
  5037  03F9                     __end_of_initLED:	
  5038                           
  5039                           	psect	text10
  5040  042A                     __ptext10:	
  5041 ;; *************** function _battery_voltage *****************
  5042 ;; Defined at:
  5043 ;;		line 56 in file "main.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;		None
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  2   14[BANK0 ] unsigned int 
  5050 ;; Registers used:
  5051 ;;		wreg, status,2, status,0, pclath, cstack
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5057 ;;      Params:         0       2       0       0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0       0
  5060 ;;      Totals:         0       2       0       0       0       0       0       0
  5061 ;;Total ram usage:        2 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:    5
  5064 ;; This function calls:
  5065 ;;		___aldiv
  5066 ;; This function is called by:
  5067 ;;		_main
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           
  5072                           ;psect for function _battery_voltage
  5073  042A                     _battery_voltage:	
  5074                           
  5075                           ;main.c: 58: FVRCON = 0b10000001;
  5076                           
  5077                           ;incstack = 0
  5078                           ; Regs used in _battery_voltage: [wreg+status,2+status,0+pclath+cstack]
  5079  042A  3081               	movlw	129
  5080  042B  0022               	movlb	2	; select bank2
  5081  042C  0097               	movwf	23	;volatile
  5082                           
  5083                           ;main.c: 59: ADCON0 = 0b01111101;
  5084  042D  307D               	movlw	125
  5085  042E  0021               	movlb	1	; select bank1
  5086  042F  009D               	movwf	29	;volatile
  5087                           
  5088                           ;main.c: 60: ADCON1 = 0b10010000;
  5089  0430  3090               	movlw	144
  5090  0431  009E               	movwf	30	;volatile
  5091  0432                     l394:	
  5092                           ;main.c: 61: while(!FVRCONbits.FVRRDY){ }
  5093                           
  5094  0432  0022               	movlb	2	; select bank2
  5095  0433  1F17               	btfss	23,6	;volatile
  5096  0434  2C32               	goto	l394
  5097                           
  5098                           ;main.c: 62: __nop();
  5099  0435  0000               	nop
  5100                           
  5101                           ;main.c: 63: __nop();
  5102  0436  0000               	nop
  5103                           
  5104                           ;main.c: 64: __nop();
  5105  0437  0000               	nop
  5106                           
  5107                           ;main.c: 65: __nop();
  5108  0438  0000               	nop
  5109                           
  5110                           ;main.c: 66: __nop();
  5111  0439  0000               	nop
  5112                           
  5113                           ;main.c: 67: ADCON0bits.GO_nDONE = 1;
  5114  043A  0021               	movlb	1	; select bank1
  5115  043B  149D               	bsf	29,1	;volatile
  5116  043C                     l397:	
  5117                           ;main.c: 68: while(ADCON0bits.GO_nDONE){ }
  5118                           
  5119  043C  189D               	btfsc	29,1	;volatile
  5120  043D  2C3C               	goto	l397
  5121                           
  5122                           ;main.c: 69: ADCON0bits.ADON = 0;
  5123  043E  101D               	bcf	29,0	;volatile
  5124                           
  5125                           ;main.c: 74: return 1047552L / ADRES;
  5126  043F  081B               	movf	27,w	;volatile
  5127  0440  0020               	movlb	0	; select bank0
  5128  0441  00A0               	movwf	___aldiv@divisor
  5129  0442  0021               	movlb	1	; select bank1
  5130  0443  081C               	movf	28,w	;volatile
  5131  0444  0020               	movlb	0	; select bank0
  5132  0445  00A1               	movwf	___aldiv@divisor+1
  5133  0446  01A2               	clrf	___aldiv@divisor+2
  5134  0447  01A3               	clrf	___aldiv@divisor+3
  5135  0448  3000               	movlw	0
  5136  0449  00A7               	movwf	___aldiv@dividend+3
  5137  044A  300F               	movlw	15
  5138  044B  00A6               	movwf	___aldiv@dividend+2
  5139  044C  30FC               	movlw	252
  5140  044D  00A5               	movwf	___aldiv@dividend+1
  5141  044E  3000               	movlw	0
  5142  044F  00A4               	movwf	___aldiv@dividend
  5143  0450  3182  2229         	fcall	___aldiv
  5144  0452  0020               	movlb	0	; select bank0
  5145  0453  0821               	movf	?___aldiv+1,w
  5146  0454  00AF               	movwf	?_battery_voltage+1
  5147  0455  0820               	movf	?___aldiv,w
  5148  0456  00AE               	movwf	?_battery_voltage
  5149  0457  0008               	return
  5150  0458                     __end_of_battery_voltage:	
  5151                           
  5152                           	psect	text11
  5153  0229                     __ptext11:	
  5154 ;; *************** function ___aldiv *****************
  5155 ;; Defined at:
  5156 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c90/common/aldiv.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;  divisor         4    0[BANK0 ] long 
  5159 ;;  dividend        4    4[BANK0 ] long 
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;  quotient        4   10[BANK0 ] long 
  5162 ;;  sign            1    9[BANK0 ] unsigned char 
  5163 ;;  counter         1    8[BANK0 ] unsigned char 
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  4    0[BANK0 ] long 
  5166 ;; Registers used:
  5167 ;;		wreg, status,2, status,0
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5173 ;;      Params:         0       8       0       0       0       0       0       0
  5174 ;;      Locals:         0       6       0       0       0       0       0       0
  5175 ;;      Temps:          1       0       0       0       0       0       0       0
  5176 ;;      Totals:         1      14       0       0       0       0       0       0
  5177 ;;Total ram usage:       15 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:    4
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_battery_voltage
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           
  5188                           ;psect for function ___aldiv
  5189  0229                     ___aldiv:	
  5190                           
  5191                           ;incstack = 0
  5192                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5193  0229  0020               	movlb	0	; select bank0
  5194  022A  01A9               	clrf	___aldiv@sign
  5195  022B  1FA3               	btfss	___aldiv@divisor+3,7
  5196  022C  2A3A               	goto	l633
  5197  022D  09A0               	comf	___aldiv@divisor,f
  5198  022E  09A1               	comf	___aldiv@divisor+1,f
  5199  022F  09A2               	comf	___aldiv@divisor+2,f
  5200  0230  09A3               	comf	___aldiv@divisor+3,f
  5201  0231  0AA0               	incf	___aldiv@divisor,f
  5202  0232  1903               	skipnz
  5203  0233  0AA1               	incf	___aldiv@divisor+1,f
  5204  0234  1903               	skipnz
  5205  0235  0AA2               	incf	___aldiv@divisor+2,f
  5206  0236  1903               	skipnz
  5207  0237  0AA3               	incf	___aldiv@divisor+3,f
  5208  0238  01A9               	clrf	___aldiv@sign
  5209  0239  0AA9               	incf	___aldiv@sign,f
  5210  023A                     l633:	
  5211  023A  1FA7               	btfss	___aldiv@dividend+3,7
  5212  023B  2A4B               	goto	l1982
  5213  023C  09A4               	comf	___aldiv@dividend,f
  5214  023D  09A5               	comf	___aldiv@dividend+1,f
  5215  023E  09A6               	comf	___aldiv@dividend+2,f
  5216  023F  09A7               	comf	___aldiv@dividend+3,f
  5217  0240  0AA4               	incf	___aldiv@dividend,f
  5218  0241  1903               	skipnz
  5219  0242  0AA5               	incf	___aldiv@dividend+1,f
  5220  0243  1903               	skipnz
  5221  0244  0AA6               	incf	___aldiv@dividend+2,f
  5222  0245  1903               	skipnz
  5223  0246  0AA7               	incf	___aldiv@dividend+3,f
  5224  0247  3001               	movlw	1
  5225  0248  00F9               	movwf	??___aldiv
  5226  0249  0879               	movf	??___aldiv,w
  5227  024A  06A9               	xorwf	___aldiv@sign,f
  5228  024B                     l1982:	
  5229  024B  3000               	movlw	0
  5230  024C  00AD               	movwf	___aldiv@quotient+3
  5231  024D  3000               	movlw	0
  5232  024E  00AC               	movwf	___aldiv@quotient+2
  5233  024F  3000               	movlw	0
  5234  0250  00AB               	movwf	___aldiv@quotient+1
  5235  0251  3000               	movlw	0
  5236  0252  00AA               	movwf	___aldiv@quotient
  5237  0253  0823               	movf	___aldiv@divisor+3,w
  5238  0254  0422               	iorwf	___aldiv@divisor+2,w
  5239  0255  0421               	iorwf	___aldiv@divisor+1,w
  5240  0256  0420               	iorwf	___aldiv@divisor,w
  5241  0257  1903               	skipnz
  5242  0258  2A94               	goto	l2004
  5243  0259  01A8               	clrf	___aldiv@counter
  5244  025A  0AA8               	incf	___aldiv@counter,f
  5245  025B                     l1990:	
  5246  025B  1BA3               	btfsc	___aldiv@divisor+3,7
  5247  025C  2A69               	goto	l1992
  5248  025D  3001               	movlw	1
  5249  025E                     u1395:	
  5250  025E  35A0               	lslf	___aldiv@divisor,f
  5251  025F  0DA1               	rlf	___aldiv@divisor+1,f
  5252  0260  0DA2               	rlf	___aldiv@divisor+2,f
  5253  0261  0DA3               	rlf	___aldiv@divisor+3,f
  5254  0262  0B89               	decfsz	9,f
  5255  0263  2A5E               	goto	u1395
  5256  0264  3001               	movlw	1
  5257  0265  00F9               	movwf	??___aldiv
  5258  0266  0879               	movf	??___aldiv,w
  5259  0267  07A8               	addwf	___aldiv@counter,f
  5260  0268  2A5B               	goto	l1990
  5261  0269                     l1992:	
  5262  0269  3001               	movlw	1
  5263  026A                     u1415:	
  5264  026A  35AA               	lslf	___aldiv@quotient,f
  5265  026B  0DAB               	rlf	___aldiv@quotient+1,f
  5266  026C  0DAC               	rlf	___aldiv@quotient+2,f
  5267  026D  0DAD               	rlf	___aldiv@quotient+3,f
  5268  026E  0B89               	decfsz	9,f
  5269  026F  2A6A               	goto	u1415
  5270  0270  0823               	movf	___aldiv@divisor+3,w
  5271  0271  0227               	subwf	___aldiv@dividend+3,w
  5272  0272  1D03               	skipz
  5273  0273  2A7E               	goto	u1425
  5274  0274  0822               	movf	___aldiv@divisor+2,w
  5275  0275  0226               	subwf	___aldiv@dividend+2,w
  5276  0276  1D03               	skipz
  5277  0277  2A7E               	goto	u1425
  5278  0278  0821               	movf	___aldiv@divisor+1,w
  5279  0279  0225               	subwf	___aldiv@dividend+1,w
  5280  027A  1D03               	skipz
  5281  027B  2A7E               	goto	u1425
  5282  027C  0820               	movf	___aldiv@divisor,w
  5283  027D  0224               	subwf	___aldiv@dividend,w
  5284  027E                     u1425:	
  5285  027E  1C03               	skipc
  5286  027F  2A89               	goto	l2000
  5287  0280  0820               	movf	___aldiv@divisor,w
  5288  0281  02A4               	subwf	___aldiv@dividend,f
  5289  0282  0821               	movf	___aldiv@divisor+1,w
  5290  0283  3BA5               	subwfb	___aldiv@dividend+1,f
  5291  0284  0822               	movf	___aldiv@divisor+2,w
  5292  0285  3BA6               	subwfb	___aldiv@dividend+2,f
  5293  0286  0823               	movf	___aldiv@divisor+3,w
  5294  0287  3BA7               	subwfb	___aldiv@dividend+3,f
  5295  0288  142A               	bsf	___aldiv@quotient,0
  5296  0289                     l2000:	
  5297  0289  3001               	movlw	1
  5298  028A                     u1435:	
  5299  028A  36A3               	lsrf	___aldiv@divisor+3,f
  5300  028B  0CA2               	rrf	___aldiv@divisor+2,f
  5301  028C  0CA1               	rrf	___aldiv@divisor+1,f
  5302  028D  0CA0               	rrf	___aldiv@divisor,f
  5303  028E  0B89               	decfsz	9,f
  5304  028F  2A8A               	goto	u1435
  5305  0290  3001               	movlw	1
  5306  0291  02A8               	subwf	___aldiv@counter,f
  5307  0292  1D03               	btfss	3,2
  5308  0293  2A69               	goto	l1992
  5309  0294                     l2004:	
  5310  0294  0829               	movf	___aldiv@sign,w
  5311  0295  1903               	btfsc	3,2
  5312  0296  2AA2               	goto	l2008
  5313  0297  09AA               	comf	___aldiv@quotient,f
  5314  0298  09AB               	comf	___aldiv@quotient+1,f
  5315  0299  09AC               	comf	___aldiv@quotient+2,f
  5316  029A  09AD               	comf	___aldiv@quotient+3,f
  5317  029B  0AAA               	incf	___aldiv@quotient,f
  5318  029C  1903               	skipnz
  5319  029D  0AAB               	incf	___aldiv@quotient+1,f
  5320  029E  1903               	skipnz
  5321  029F  0AAC               	incf	___aldiv@quotient+2,f
  5322  02A0  1903               	skipnz
  5323  02A1  0AAD               	incf	___aldiv@quotient+3,f
  5324  02A2                     l2008:	
  5325  02A2  082D               	movf	___aldiv@quotient+3,w
  5326  02A3  00A3               	movwf	?___aldiv+3
  5327  02A4  082C               	movf	___aldiv@quotient+2,w
  5328  02A5  00A2               	movwf	?___aldiv+2
  5329  02A6  082B               	movf	___aldiv@quotient+1,w
  5330  02A7  00A1               	movwf	?___aldiv+1
  5331  02A8  082A               	movf	___aldiv@quotient,w
  5332  02A9  00A0               	movwf	?___aldiv
  5333  02AA  0008               	return
  5334  02AB                     __end_of___aldiv:	
  5335                           
  5336                           	psect	text12
  5337  049C                     __ptext12:	
  5338 ;; *************** function _SYSTEM_Initialize *****************
  5339 ;; Defined at:
  5340 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;		None
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      void 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0, pclath, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5354 ;;      Params:         0       0       0       0       0       0       0       0
  5355 ;;      Locals:         0       0       0       0       0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0
  5357 ;;      Totals:         0       0       0       0       0       0       0       0
  5358 ;;Total ram usage:        0 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    6
  5361 ;; This function calls:
  5362 ;;		_DAC_Initialize
  5363 ;;		_EUSART_Initialize
  5364 ;;		_EXT_INT_Initialize
  5365 ;;		_OPA1_Initialize
  5366 ;;		_OPA2_Initialize
  5367 ;;		_OSCILLATOR_Initialize
  5368 ;;		_PIN_MANAGER_Initialize
  5369 ;;		_TMR0_Initialize
  5370 ;;		_TMR2_Initialize
  5371 ;;		_WDT_Initialize
  5372 ;; This function is called by:
  5373 ;;		_main
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           
  5378                           ;psect for function _SYSTEM_Initialize
  5379  049C                     _SYSTEM_Initialize:	
  5380                           
  5381                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  5382                           
  5383                           ;incstack = 0
  5384                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5385  049C  3183  23F9  3184   	fcall	_PIN_MANAGER_Initialize
  5386                           
  5387                           ;mcc.c: 54: OSCILLATOR_Initialize();
  5388  049F  3185  25EF  3184   	fcall	_OSCILLATOR_Initialize
  5389                           
  5390                           ;mcc.c: 55: WDT_Initialize();
  5391  04A2  3186  260E  3184   	fcall	_WDT_Initialize
  5392                           
  5393                           ;mcc.c: 56: DAC_Initialize();
  5394  04A5  3186  2603  3184   	fcall	_DAC_Initialize
  5395                           
  5396                           ;mcc.c: 57: OPA1_Initialize();
  5397  04A8  3186  2616  3184   	fcall	_OPA1_Initialize
  5398                           
  5399                           ;mcc.c: 58: OPA2_Initialize();
  5400  04AB  3186  2612  3184   	fcall	_OPA2_Initialize
  5401                           
  5402                           ;mcc.c: 59: TMR2_Initialize();
  5403  04AE  3185  25E7  3184   	fcall	_TMR2_Initialize
  5404                           
  5405                           ;mcc.c: 60: EXT_INT_Initialize();
  5406  04B1  3185  25A3  3184   	fcall	_EXT_INT_Initialize
  5407                           
  5408                           ;mcc.c: 61: TMR0_Initialize();
  5409  04B4  3185  25BA  3184   	fcall	_TMR0_Initialize
  5410                           
  5411                           ;mcc.c: 62: EUSART_Initialize();
  5412  04B7  3184  2458         	fcall	_EUSART_Initialize
  5413  04B9  0008               	return
  5414  04BA                     __end_of_SYSTEM_Initialize:	
  5415                           
  5416                           	psect	text13
  5417  060E                     __ptext13:	
  5418 ;; *************** function _WDT_Initialize *****************
  5419 ;; Defined at:
  5420 ;;		line 77 in file "mcc_generated_files/mcc.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;		None
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;		None
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      void 
  5427 ;; Registers used:
  5428 ;;		wreg
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5434 ;;      Params:         0       0       0       0       0       0       0       0
  5435 ;;      Locals:         0       0       0       0       0       0       0       0
  5436 ;;      Temps:          0       0       0       0       0       0       0       0
  5437 ;;      Totals:         0       0       0       0       0       0       0       0
  5438 ;;Total ram usage:        0 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:    4
  5441 ;; This function calls:
  5442 ;;		Nothing
  5443 ;; This function is called by:
  5444 ;;		_SYSTEM_Initialize
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           
  5449                           ;psect for function _WDT_Initialize
  5450  060E                     _WDT_Initialize:	
  5451                           
  5452                           ;mcc.c: 80: WDTCON = 0x16;
  5453                           
  5454                           ;incstack = 0
  5455                           ; Regs used in _WDT_Initialize: [wreg]
  5456  060E  3016               	movlw	22
  5457  060F  0021               	movlb	1	; select bank1
  5458  0610  0097               	movwf	23	;volatile
  5459  0611  0008               	return
  5460  0612                     __end_of_WDT_Initialize:	
  5461                           
  5462                           	psect	text14
  5463  05E7                     __ptext14:	
  5464 ;; *************** function _TMR2_Initialize *****************
  5465 ;; Defined at:
  5466 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;		None
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;		None
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  1    wreg      void 
  5473 ;; Registers used:
  5474 ;;		wreg, status,2
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5480 ;;      Params:         0       0       0       0       0       0       0       0
  5481 ;;      Locals:         0       0       0       0       0       0       0       0
  5482 ;;      Temps:          0       0       0       0       0       0       0       0
  5483 ;;      Totals:         0       0       0       0       0       0       0       0
  5484 ;;Total ram usage:        0 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; Hardware stack levels required when called:    4
  5487 ;; This function calls:
  5488 ;;		Nothing
  5489 ;; This function is called by:
  5490 ;;		_SYSTEM_Initialize
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           
  5495                           ;psect for function _TMR2_Initialize
  5496  05E7                     _TMR2_Initialize:	
  5497                           
  5498                           ;tmr2.c: 67: PR2 = 255;
  5499                           
  5500                           ;incstack = 0
  5501                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5502  05E7  30FF               	movlw	255
  5503  05E8  0020               	movlb	0	; select bank0
  5504  05E9  009B               	movwf	27	;volatile
  5505                           
  5506                           ;tmr2.c: 70: TMR2 = 0x00;
  5507  05EA  019A               	clrf	26	;volatile
  5508                           
  5509                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
  5510  05EB  1091               	bcf	17,1	;volatile
  5511                           
  5512                           ;tmr2.c: 76: T2CON = 0x06;
  5513  05EC  3006               	movlw	6
  5514  05ED  009C               	movwf	28	;volatile
  5515  05EE  0008               	return
  5516  05EF                     __end_of_TMR2_Initialize:	
  5517                           
  5518                           	psect	text15
  5519  05BA                     __ptext15:	
  5520 ;; *************** function _TMR0_Initialize *****************
  5521 ;; Defined at:
  5522 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;		None
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;		None
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      void 
  5529 ;; Registers used:
  5530 ;;		wreg, status,2
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5536 ;;      Params:         0       0       0       0       0       0       0       0
  5537 ;;      Locals:         0       0       0       0       0       0       0       0
  5538 ;;      Temps:          0       0       0       0       0       0       0       0
  5539 ;;      Totals:         0       0       0       0       0       0       0       0
  5540 ;;Total ram usage:        0 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; Hardware stack levels required when called:    4
  5543 ;; This function calls:
  5544 ;;		Nothing
  5545 ;; This function is called by:
  5546 ;;		_SYSTEM_Initialize
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           
  5551                           ;psect for function _TMR0_Initialize
  5552  05BA                     _TMR0_Initialize:	
  5553                           
  5554                           ;tmr0.c: 68: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD5 & 0x3F));
  5555                           
  5556                           ;incstack = 0
  5557                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  5558  05BA  0021               	movlb	1	; select bank1
  5559  05BB  0815               	movf	21,w	;volatile
  5560  05BC  39C0               	andlw	192
  5561  05BD  3815               	iorlw	21
  5562  05BE  0095               	movwf	21	;volatile
  5563                           
  5564                           ;tmr0.c: 71: TMR0 = 0x00;
  5565  05BF  0020               	movlb	0	; select bank0
  5566  05C0  0195               	clrf	21	;volatile
  5567                           
  5568                           ;tmr0.c: 74: timer0ReloadVal= 0;
  5569  05C1  01F0               	clrf	_timer0ReloadVal	;volatile
  5570                           
  5571                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  5572  05C2  110B               	bcf	11,2	;volatile
  5573  05C3  0008               	return
  5574  05C4                     __end_of_TMR0_Initialize:	
  5575                           
  5576                           	psect	text16
  5577  03F9                     __ptext16:	
  5578 ;; *************** function _PIN_MANAGER_Initialize *****************
  5579 ;; Defined at:
  5580 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;		None
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;		None
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  1    wreg      void 
  5587 ;; Registers used:
  5588 ;;		wreg, status,2
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5594 ;;      Params:         0       0       0       0       0       0       0       0
  5595 ;;      Locals:         0       0       0       0       0       0       0       0
  5596 ;;      Temps:          0       0       0       0       0       0       0       0
  5597 ;;      Totals:         0       0       0       0       0       0       0       0
  5598 ;;Total ram usage:        0 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; Hardware stack levels required when called:    4
  5601 ;; This function calls:
  5602 ;;		Nothing
  5603 ;; This function is called by:
  5604 ;;		_SYSTEM_Initialize
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           
  5609                           ;psect for function _PIN_MANAGER_Initialize
  5610  03F9                     _PIN_MANAGER_Initialize:	
  5611                           
  5612                           ;pin_manager.c: 60: LATA = 0x00;
  5613                           
  5614                           ;incstack = 0
  5615                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5616  03F9  0022               	movlb	2	; select bank2
  5617  03FA  018C               	clrf	12	;volatile
  5618                           
  5619                           ;pin_manager.c: 61: LATB = 0x00;
  5620  03FB  018D               	clrf	13	;volatile
  5621                           
  5622                           ;pin_manager.c: 62: LATC = 0x00;
  5623  03FC  018E               	clrf	14	;volatile
  5624                           
  5625                           ;pin_manager.c: 67: TRISA = 0x04;
  5626  03FD  3004               	movlw	4
  5627  03FE  0021               	movlb	1	; select bank1
  5628  03FF  008C               	movwf	12	;volatile
  5629                           
  5630                           ;pin_manager.c: 68: TRISB = 0x20;
  5631  0400  3020               	movlw	32
  5632  0401  008D               	movwf	13	;volatile
  5633                           
  5634                           ;pin_manager.c: 69: TRISC = 0x10;
  5635  0402  3010               	movlw	16
  5636  0403  008E               	movwf	14	;volatile
  5637                           
  5638                           ;pin_manager.c: 74: ANSELC = 0x00;
  5639  0404  0023               	movlb	3	; select bank3
  5640  0405  018E               	clrf	14	;volatile
  5641                           
  5642                           ;pin_manager.c: 75: ANSELB = 0x00;
  5643  0406  018D               	clrf	13	;volatile
  5644                           
  5645                           ;pin_manager.c: 76: ANSELA = 0x00;
  5646  0407  018C               	clrf	12	;volatile
  5647                           
  5648                           ;pin_manager.c: 81: WPUB = 0x00;
  5649  0408  0024               	movlb	4	; select bank4
  5650  0409  018D               	clrf	13	;volatile
  5651                           
  5652                           ;pin_manager.c: 82: WPUA = 0x00;
  5653  040A  018C               	clrf	12	;volatile
  5654                           
  5655                           ;pin_manager.c: 83: WPUC = 0x00;
  5656  040B  018E               	clrf	14	;volatile
  5657                           
  5658                           ;pin_manager.c: 84: OPTION_REGbits.nWPUEN = 0;
  5659  040C  0021               	movlb	1	; select bank1
  5660  040D  1395               	bcf	21,7	;volatile
  5661                           
  5662                           ;pin_manager.c: 89: ODCONA = 0x00;
  5663  040E  0025               	movlb	5	; select bank5
  5664  040F  018C               	clrf	12	;volatile
  5665                           
  5666                           ;pin_manager.c: 90: ODCONB = 0x00;
  5667  0410  018D               	clrf	13	;volatile
  5668                           
  5669                           ;pin_manager.c: 91: ODCONC = 0x00;
  5670  0411  018E               	clrf	14	;volatile
  5671                           
  5672                           ;pin_manager.c: 96: SLRCONA = 0x37;
  5673  0412  3037               	movlw	55
  5674  0413  0026               	movlb	6	; select bank6
  5675  0414  008C               	movwf	12	;volatile
  5676                           
  5677                           ;pin_manager.c: 97: SLRCONB = 0xF0;
  5678  0415  30F0               	movlw	240
  5679  0416  008D               	movwf	13	;volatile
  5680                           
  5681                           ;pin_manager.c: 98: SLRCONC = 0xFF;
  5682  0417  30FF               	movlw	255
  5683  0418  008E               	movwf	14	;volatile
  5684                           
  5685                           ;pin_manager.c: 103: INLVLA = 0x3F;
  5686  0419  303F               	movlw	63
  5687  041A  0027               	movlb	7	; select bank7
  5688  041B  008C               	movwf	12	;volatile
  5689                           
  5690                           ;pin_manager.c: 104: INLVLB = 0xF0;
  5691  041C  30F0               	movlw	240
  5692  041D  008D               	movwf	13	;volatile
  5693                           
  5694                           ;pin_manager.c: 105: INLVLC = 0xFF;
  5695  041E  30FF               	movlw	255
  5696  041F  008E               	movwf	14	;volatile
  5697                           
  5698                           ;pin_manager.c: 113: INTCONbits.IOCIE = 1;
  5699  0420  158B               	bsf	11,3	;volatile
  5700                           
  5701                           ;pin_manager.c: 116: INTPPS = 0x02;
  5702  0421  3002               	movlw	2
  5703  0422  003C               	movlb	28	; select bank28
  5704  0423  0090               	movwf	16	;volatile
  5705                           
  5706                           ;pin_manager.c: 117: RXPPS = 0x0D;
  5707  0424  300D               	movlw	13
  5708  0425  00A4               	movwf	36	;volatile
  5709                           
  5710                           ;pin_manager.c: 118: RB7PPS = 0x14;
  5711  0426  3014               	movlw	20
  5712  0427  003D               	movlb	29	; select bank29
  5713  0428  009F               	movwf	31	;volatile
  5714  0429  0008               	return
  5715  042A                     __end_of_PIN_MANAGER_Initialize:	
  5716                           
  5717                           	psect	text17
  5718  05EF                     __ptext17:	
  5719 ;; *************** function _OSCILLATOR_Initialize *****************
  5720 ;; Defined at:
  5721 ;;		line 65 in file "mcc_generated_files/mcc.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;		None
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;		None
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  1    wreg      void 
  5728 ;; Registers used:
  5729 ;;		wreg, status,2
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5735 ;;      Params:         0       0       0       0       0       0       0       0
  5736 ;;      Locals:         0       0       0       0       0       0       0       0
  5737 ;;      Temps:          0       0       0       0       0       0       0       0
  5738 ;;      Totals:         0       0       0       0       0       0       0       0
  5739 ;;Total ram usage:        0 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; Hardware stack levels required when called:    4
  5742 ;; This function calls:
  5743 ;;		Nothing
  5744 ;; This function is called by:
  5745 ;;		_SYSTEM_Initialize
  5746 ;; This function uses a non-reentrant model
  5747 ;;
  5748                           
  5749                           
  5750                           ;psect for function _OSCILLATOR_Initialize
  5751  05EF                     _OSCILLATOR_Initialize:	
  5752                           
  5753                           ;mcc.c: 68: OSCCON = 0x6A;
  5754                           
  5755                           ;incstack = 0
  5756                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5757  05EF  306A               	movlw	106
  5758  05F0  0021               	movlb	1	; select bank1
  5759  05F1  0099               	movwf	25	;volatile
  5760                           
  5761                           ;mcc.c: 70: OSCSTAT = 0x00;
  5762  05F2  019A               	clrf	26	;volatile
  5763                           
  5764                           ;mcc.c: 72: OSCTUNE = 0x00;
  5765  05F3  0198               	clrf	24	;volatile
  5766                           
  5767                           ;mcc.c: 74: BORCON = 0x00;
  5768  05F4  0022               	movlb	2	; select bank2
  5769  05F5  0196               	clrf	22	;volatile
  5770  05F6  0008               	return
  5771  05F7                     __end_of_OSCILLATOR_Initialize:	
  5772                           
  5773                           	psect	text18
  5774  0612                     __ptext18:	
  5775 ;; *************** function _OPA2_Initialize *****************
  5776 ;; Defined at:
  5777 ;;		line 58 in file "mcc_generated_files/opa2.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;		None
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;		None
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  1    wreg      void 
  5784 ;; Registers used:
  5785 ;;		wreg
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5791 ;;      Params:         0       0       0       0       0       0       0       0
  5792 ;;      Locals:         0       0       0       0       0       0       0       0
  5793 ;;      Temps:          0       0       0       0       0       0       0       0
  5794 ;;      Totals:         0       0       0       0       0       0       0       0
  5795 ;;Total ram usage:        0 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    4
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		_SYSTEM_Initialize
  5802 ;;		_main
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           
  5807                           ;psect for function _OPA2_Initialize
  5808  0612                     _OPA2_Initialize:	
  5809                           
  5810                           ;opa2.c: 61: OPA2CON = 0xD2;
  5811                           
  5812                           ;incstack = 0
  5813                           ; Regs used in _OPA2_Initialize: [wreg]
  5814  0612  30D2               	movlw	210
  5815  0613  002A               	movlb	10	; select bank10
  5816  0614  0095               	movwf	21	;volatile
  5817  0615  0008               	return
  5818  0616                     __end_of_OPA2_Initialize:	
  5819                           
  5820                           	psect	text19
  5821  0616                     __ptext19:	
  5822 ;; *************** function _OPA1_Initialize *****************
  5823 ;; Defined at:
  5824 ;;		line 58 in file "mcc_generated_files/opa1.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;		None
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      void 
  5831 ;; Registers used:
  5832 ;;		wreg
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5838 ;;      Params:         0       0       0       0       0       0       0       0
  5839 ;;      Locals:         0       0       0       0       0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0
  5841 ;;      Totals:         0       0       0       0       0       0       0       0
  5842 ;;Total ram usage:        0 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    4
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_SYSTEM_Initialize
  5849 ;;		_main
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           
  5854                           ;psect for function _OPA1_Initialize
  5855  0616                     _OPA1_Initialize:	
  5856                           
  5857                           ;opa1.c: 61: OPA1CON = 0xD2;
  5858                           
  5859                           ;incstack = 0
  5860                           ; Regs used in _OPA1_Initialize: [wreg]
  5861  0616  30D2               	movlw	210
  5862  0617  002A               	movlb	10	; select bank10
  5863  0618  0091               	movwf	17	;volatile
  5864  0619  0008               	return
  5865  061A                     __end_of_OPA1_Initialize:	
  5866                           
  5867                           	psect	text20
  5868  05A3                     __ptext20:	
  5869 ;; *************** function _EXT_INT_Initialize *****************
  5870 ;; Defined at:
  5871 ;;		line 132 in file "mcc_generated_files/ext_int.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;		None
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;		None
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  1    wreg      void 
  5878 ;; Registers used:
  5879 ;;		wreg, status,2, status,0, pclath, cstack
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5885 ;;      Params:         0       0       0       0       0       0       0       0
  5886 ;;      Locals:         0       0       0       0       0       0       0       0
  5887 ;;      Temps:          0       0       0       0       0       0       0       0
  5888 ;;      Totals:         0       0       0       0       0       0       0       0
  5889 ;;Total ram usage:        0 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:    5
  5892 ;; This function calls:
  5893 ;;		_INT_SetInterruptHandler
  5894 ;; This function is called by:
  5895 ;;		_SYSTEM_Initialize
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           
  5900                           ;psect for function _EXT_INT_Initialize
  5901  05A3                     _EXT_INT_Initialize:	
  5902                           
  5903                           ;ext_int.c: 137: (INTCONbits.INTF = 0);
  5904                           
  5905                           ;incstack = 0
  5906                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5907  05A3  108B               	bcf	11,1	;volatile
  5908                           
  5909                           ;ext_int.c: 138: (OPTION_REGbits.INTEDG = 0);
  5910  05A4  0021               	movlb	1	; select bank1
  5911  05A5  1315               	bcf	21,6	;volatile
  5912                           
  5913                           ;ext_int.c: 140: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
  5914  05A6  30AB               	movlw	low _INT_DefaultInterruptHandler
  5915  05A7  0020               	movlb	0	; select bank0
  5916  05A8  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler
  5917  05A9  3002               	movlw	high _INT_DefaultInterruptHandler
  5918  05AA  00A1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  5919  05AB  3185  25FD         	fcall	_INT_SetInterruptHandler
  5920                           
  5921                           ;ext_int.c: 141: (INTCONbits.INTE = 1);
  5922  05AD  160B               	bsf	11,4	;volatile
  5923  05AE  0008               	return
  5924  05AF                     __end_of_EXT_INT_Initialize:	
  5925                           
  5926                           	psect	text21
  5927  05FD                     __ptext21:	
  5928 ;; *************** function _INT_SetInterruptHandler *****************
  5929 ;; Defined at:
  5930 ;;		line 71 in file "mcc_generated_files/ext_int.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  5933 ;;		 -> INT_DefaultInterruptHandler(1), 
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;		None
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  1    wreg      void 
  5938 ;; Registers used:
  5939 ;;		wreg
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5945 ;;      Params:         0       2       0       0       0       0       0       0
  5946 ;;      Locals:         0       0       0       0       0       0       0       0
  5947 ;;      Temps:          0       0       0       0       0       0       0       0
  5948 ;;      Totals:         0       2       0       0       0       0       0       0
  5949 ;;Total ram usage:        2 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; Hardware stack levels required when called:    4
  5952 ;; This function calls:
  5953 ;;		Nothing
  5954 ;; This function is called by:
  5955 ;;		_EXT_INT_Initialize
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           
  5960                           ;psect for function _INT_SetInterruptHandler
  5961  05FD                     _INT_SetInterruptHandler:	
  5962                           
  5963                           ;ext_int.c: 72: INT_InterruptHandler = InterruptHandler;
  5964                           
  5965                           ;incstack = 0
  5966                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  5967  05FD  0020               	movlb	0	; select bank0
  5968  05FE  0821               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  5969  05FF  00ED               	movwf	_INT_InterruptHandler+1
  5970  0600  0820               	movf	INT_SetInterruptHandler@InterruptHandler,w
  5971  0601  00EC               	movwf	_INT_InterruptHandler
  5972  0602  0008               	return
  5973  0603                     __end_of_INT_SetInterruptHandler:	
  5974                           
  5975                           	psect	text22
  5976  0458                     __ptext22:	
  5977 ;; *************** function _EUSART_Initialize *****************
  5978 ;; Defined at:
  5979 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;		None
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;		None
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  1    wreg      void 
  5986 ;; Registers used:
  5987 ;;		wreg, status,2, status,0, pclath, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5993 ;;      Params:         0       0       0       0       0       0       0       0
  5994 ;;      Locals:         0       0       0       0       0       0       0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0       0
  5996 ;;      Totals:         0       0       0       0       0       0       0       0
  5997 ;;Total ram usage:        0 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    5
  6000 ;; This function calls:
  6001 ;;		_EUSART_SetErrorHandler
  6002 ;;		_EUSART_SetFramingErrorHandler
  6003 ;;		_EUSART_SetOverrunErrorHandler
  6004 ;; This function is called by:
  6005 ;;		_SYSTEM_Initialize
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           
  6010                           ;psect for function _EUSART_Initialize
  6011  0458                     _EUSART_Initialize:	
  6012                           
  6013                           ;eusart.c: 71: BAUD1CON = 0x08;
  6014                           
  6015                           ;incstack = 0
  6016                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6017  0458  3008               	movlw	8
  6018  0459  0023               	movlb	3	; select bank3
  6019  045A  009F               	movwf	31	;volatile
  6020                           
  6021                           ;eusart.c: 74: RC1STA = 0x90;
  6022  045B  3090               	movlw	144
  6023  045C  009D               	movwf	29	;volatile
  6024                           
  6025                           ;eusart.c: 77: TX1STA = 0x24;
  6026  045D  3024               	movlw	36
  6027  045E  009E               	movwf	30	;volatile
  6028                           
  6029                           ;eusart.c: 80: SP1BRGL = 0x08;
  6030  045F  3008               	movlw	8
  6031  0460  009B               	movwf	27	;volatile
  6032                           
  6033                           ;eusart.c: 83: SP1BRGH = 0x00;
  6034  0461  019C               	clrf	28	;volatile
  6035                           
  6036                           ;eusart.c: 86: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  6037  0462  3000               	movlw	0
  6038  0463  0020               	movlb	0	; select bank0
  6039  0464  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  6040  0465  3000               	movlw	0
  6041  0466  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  6042  0467  3185  25CD  3184   	fcall	_EUSART_SetFramingErrorHandler
  6043                           
  6044                           ;eusart.c: 87: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  6045  046A  3000               	movlw	0
  6046  046B  0020               	movlb	0	; select bank0
  6047  046C  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  6048  046D  3000               	movlw	0
  6049  046E  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  6050  046F  3185  25C4  3184   	fcall	_EUSART_SetOverrunErrorHandler
  6051                           
  6052                           ;eusart.c: 88: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  6053  0472  3000               	movlw	0
  6054  0473  0020               	movlb	0	; select bank0
  6055  0474  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  6056  0475  3000               	movlw	0
  6057  0476  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  6058  0477  3185  25D6         	fcall	_EUSART_SetErrorHandler
  6059                           
  6060                           ;eusart.c: 90: eusartRxLastError.status = 0;
  6061  0479  0020               	movlb	0	; select bank0
  6062  047A  01EB               	clrf	_eusartRxLastError	;volatile
  6063  047B  0008               	return
  6064  047C                     __end_of_EUSART_Initialize:	
  6065                           
  6066                           	psect	text23
  6067  05C4                     __ptext23:	
  6068 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6069 ;; Defined at:
  6070 ;;		line 170 in file "mcc_generated_files/eusart.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6073 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;		None
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      void 
  6078 ;; Registers used:
  6079 ;;		wreg
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6085 ;;      Params:         0       2       0       0       0       0       0       0
  6086 ;;      Locals:         0       0       0       0       0       0       0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0
  6088 ;;      Totals:         0       2       0       0       0       0       0       0
  6089 ;;Total ram usage:        2 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:    4
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		_EUSART_Initialize
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           
  6100                           ;psect for function _EUSART_SetOverrunErrorHandler
  6101  05C4                     _EUSART_SetOverrunErrorHandler:	
  6102                           
  6103                           ;eusart.c: 171: EUSART_OverrunErrorHandler = interruptHandler;
  6104                           
  6105                           ;incstack = 0
  6106                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6107  05C4  0020               	movlb	0	; select bank0
  6108  05C5  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  6109  05C6  0021               	movlb	1	; select bank1
  6110  05C7  00A3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  6111  05C8  0020               	movlb	0	; select bank0
  6112  05C9  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  6113  05CA  0021               	movlb	1	; select bank1
  6114  05CB  00A2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  6115  05CC  0008               	return
  6116  05CD                     __end_of_EUSART_SetOverrunErrorHandler:	
  6117                           
  6118                           	psect	text24
  6119  05CD                     __ptext24:	
  6120 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6121 ;; Defined at:
  6122 ;;		line 166 in file "mcc_generated_files/eusart.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6125 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;		None
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  1    wreg      void 
  6130 ;; Registers used:
  6131 ;;		wreg
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6137 ;;      Params:         0       2       0       0       0       0       0       0
  6138 ;;      Locals:         0       0       0       0       0       0       0       0
  6139 ;;      Temps:          0       0       0       0       0       0       0       0
  6140 ;;      Totals:         0       2       0       0       0       0       0       0
  6141 ;;Total ram usage:        2 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    4
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_EUSART_Initialize
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           
  6152                           ;psect for function _EUSART_SetFramingErrorHandler
  6153  05CD                     _EUSART_SetFramingErrorHandler:	
  6154                           
  6155                           ;eusart.c: 167: EUSART_FramingErrorHandler = interruptHandler;
  6156                           
  6157                           ;incstack = 0
  6158                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6159  05CD  0020               	movlb	0	; select bank0
  6160  05CE  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  6161  05CF  0021               	movlb	1	; select bank1
  6162  05D0  00A5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  6163  05D1  0020               	movlb	0	; select bank0
  6164  05D2  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  6165  05D3  0021               	movlb	1	; select bank1
  6166  05D4  00A4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  6167  05D5  0008               	return
  6168  05D6                     __end_of_EUSART_SetFramingErrorHandler:	
  6169                           
  6170                           	psect	text25
  6171  05D6                     __ptext25:	
  6172 ;; *************** function _EUSART_SetErrorHandler *****************
  6173 ;; Defined at:
  6174 ;;		line 174 in file "mcc_generated_files/eusart.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6177 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;		None
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  1    wreg      void 
  6182 ;; Registers used:
  6183 ;;		wreg
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6189 ;;      Params:         0       2       0       0       0       0       0       0
  6190 ;;      Locals:         0       0       0       0       0       0       0       0
  6191 ;;      Temps:          0       0       0       0       0       0       0       0
  6192 ;;      Totals:         0       2       0       0       0       0       0       0
  6193 ;;Total ram usage:        2 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; Hardware stack levels required when called:    4
  6196 ;; This function calls:
  6197 ;;		Nothing
  6198 ;; This function is called by:
  6199 ;;		_EUSART_Initialize
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           
  6204                           ;psect for function _EUSART_SetErrorHandler
  6205  05D6                     _EUSART_SetErrorHandler:	
  6206                           
  6207                           ;eusart.c: 175: EUSART_ErrorHandler = interruptHandler;
  6208                           
  6209                           ;incstack = 0
  6210                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6211  05D6  0020               	movlb	0	; select bank0
  6212  05D7  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  6213  05D8  0021               	movlb	1	; select bank1
  6214  05D9  00A1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  6215  05DA  0020               	movlb	0	; select bank0
  6216  05DB  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  6217  05DC  0021               	movlb	1	; select bank1
  6218  05DD  00A0               	movwf	_EUSART_ErrorHandler^(0+128)
  6219  05DE  0008               	return
  6220  05DF                     __end_of_EUSART_SetErrorHandler:	
  6221                           
  6222                           	psect	text26
  6223  0603                     __ptext26:	
  6224 ;; *************** function _DAC_Initialize *****************
  6225 ;; Defined at:
  6226 ;;		line 58 in file "mcc_generated_files/dac.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;		None
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;		None
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  1    wreg      void 
  6233 ;; Registers used:
  6234 ;;		wreg
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6240 ;;      Params:         0       0       0       0       0       0       0       0
  6241 ;;      Locals:         0       0       0       0       0       0       0       0
  6242 ;;      Temps:          0       0       0       0       0       0       0       0
  6243 ;;      Totals:         0       0       0       0       0       0       0       0
  6244 ;;Total ram usage:        0 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; Hardware stack levels required when called:    4
  6247 ;; This function calls:
  6248 ;;		Nothing
  6249 ;; This function is called by:
  6250 ;;		_SYSTEM_Initialize
  6251 ;;		_main
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           
  6256                           ;psect for function _DAC_Initialize
  6257  0603                     _DAC_Initialize:	
  6258                           
  6259                           ;dac.c: 61: DAC1CON0 = 0x80;
  6260                           
  6261                           ;incstack = 0
  6262                           ; Regs used in _DAC_Initialize: [wreg]
  6263  0603  3080               	movlw	128
  6264  0604  0022               	movlb	2	; select bank2
  6265  0605  0098               	movwf	24	;volatile
  6266                           
  6267                           ;dac.c: 63: DAC1CON1 = 0xFF;
  6268  0606  30FF               	movlw	255
  6269  0607  0099               	movwf	25	;volatile
  6270  0608  0008               	return
  6271  0609                     __end_of_DAC_Initialize:	
  6272                           
  6273                           	psect	intentry
  6274  0004                     __pintentry:	
  6275 ;; *************** function _INTERRUPT_InterruptManager *****************
  6276 ;; Defined at:
  6277 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;		None
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;		None
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  1    wreg      void 
  6284 ;; Registers used:
  6285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6291 ;;      Params:         0       0       0       0       0       0       0       0
  6292 ;;      Locals:         0       0       0       0       0       0       0       0
  6293 ;;      Temps:          0       0       0       0       0       0       0       0
  6294 ;;      Totals:         0       0       0       0       0       0       0       0
  6295 ;;Total ram usage:        0 bytes
  6296 ;; Hardware stack levels used:    1
  6297 ;; Hardware stack levels required when called:    3
  6298 ;; This function calls:
  6299 ;;		_INT_ISR
  6300 ;;		_PIN_MANAGER_IOC
  6301 ;; This function is called by:
  6302 ;;		Interrupt level 1
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306  0004                     _INTERRUPT_InterruptManager:	
  6307                           
  6308                           ;incstack = 0
  6309  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6310                           
  6311                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6312  0005  3180               	pagesel	$
  6313                           
  6314                           ;interrupt_manager.c: 55: if(INTCONbits.INTE == 1 && INTCONbits.INTF == 1)
  6315  0006  1A0B               	btfsc	11,4	;volatile
  6316  0007  1C8B               	btfss	11,1	;volatile
  6317  0008  280D               	goto	i1l126
  6318                           
  6319                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: INT_ISR();
  6320  0009  3186  261A  3180   	fcall	_INT_ISR
  6321                           
  6322                           ;interrupt_manager.c: 58: }
  6323  000C  2812               	goto	i1l130
  6324  000D                     i1l126:	
  6325                           
  6326                           ;interrupt_manager.c: 59: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  6327  000D  198B               	btfsc	11,3	;volatile
  6328  000E  1C0B               	btfss	11,0	;volatile
  6329  000F  2812               	goto	i1l130
  6330                           
  6331                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: PIN_MANAGER_IOC();
  6332  0010  3186  261E         	fcall	_PIN_MANAGER_IOC
  6333  0012                     i1l130:	
  6334                           ;interrupt_manager.c: 62: }
  6335                           
  6336  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6337  0013  0009               	retfie
  6338  0014                     __end_of_INTERRUPT_InterruptManager:	
  6339                           
  6340                           	psect	text28
  6341  061E                     __ptext28:	
  6342 ;; *************** function _PIN_MANAGER_IOC *****************
  6343 ;; Defined at:
  6344 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;		None
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;		None
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      void 
  6351 ;; Registers used:
  6352 ;;		None
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6358 ;;      Params:         0       0       0       0       0       0       0       0
  6359 ;;      Locals:         0       0       0       0       0       0       0       0
  6360 ;;      Temps:          0       0       0       0       0       0       0       0
  6361 ;;      Totals:         0       0       0       0       0       0       0       0
  6362 ;;Total ram usage:        0 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		_INTERRUPT_InterruptManager
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           
  6372                           ;psect for function _PIN_MANAGER_IOC
  6373  061E                     _PIN_MANAGER_IOC:	
  6374                           
  6375                           ;incstack = 0
  6376                           ; Regs used in _PIN_MANAGER_IOC: []
  6377  061E  0008               	return
  6378  061F                     __end_of_PIN_MANAGER_IOC:	
  6379                           
  6380                           	psect	text29
  6381  061A                     __ptext29:	
  6382 ;; *************** function _INT_ISR *****************
  6383 ;; Defined at:
  6384 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      void 
  6391 ;; Registers used:
  6392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6398 ;;      Params:         0       0       0       0       0       0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0       0
  6401 ;;      Totals:         0       0       0       0       0       0       0       0
  6402 ;;Total ram usage:        0 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:    2
  6405 ;; This function calls:
  6406 ;;		_INT_CallBack
  6407 ;; This function is called by:
  6408 ;;		_INTERRUPT_InterruptManager
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           
  6413                           ;psect for function _INT_ISR
  6414  061A                     _INT_ISR:	
  6415                           
  6416                           ;ext_int.c: 56: (INTCONbits.INTF = 0);
  6417                           
  6418                           ;incstack = 0
  6419                           ; Regs used in _INT_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6420  061A  108B               	bcf	11,1	;volatile
  6421                           
  6422                           ;ext_int.c: 59: INT_CallBack();
  6423  061B  3185  25AF         	fcall	_INT_CallBack
  6424  061D  0008               	return
  6425  061E                     __end_of_INT_ISR:	
  6426                           
  6427                           	psect	text30
  6428  05AF                     __ptext30:	
  6429 ;; *************** function _INT_CallBack *****************
  6430 ;; Defined at:
  6431 ;;		line 62 in file "mcc_generated_files/ext_int.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;		None
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;		None
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  1    wreg      void 
  6438 ;; Registers used:
  6439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6445 ;;      Params:         0       0       0       0       0       0       0       0
  6446 ;;      Locals:         0       0       0       0       0       0       0       0
  6447 ;;      Temps:          0       0       0       0       0       0       0       0
  6448 ;;      Totals:         0       0       0       0       0       0       0       0
  6449 ;;Total ram usage:        0 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:    1
  6452 ;; This function calls:
  6453 ;;		Absolute function
  6454 ;;		_INT_DefaultInterruptHandler
  6455 ;; This function is called by:
  6456 ;;		_INT_ISR
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           
  6461                           ;psect for function _INT_CallBack
  6462  05AF                     _INT_CallBack:	
  6463                           
  6464                           ;ext_int.c: 65: if(INT_InterruptHandler)
  6465                           
  6466                           ;incstack = 0
  6467                           ; Regs used in _INT_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6468  05AF  0020               	movlb	0	; select bank0
  6469  05B0  086C               	movf	_INT_InterruptHandler,w
  6470  05B1  046D               	iorwf	_INT_InterruptHandler+1,w
  6471  05B2  1903               	btfsc	3,2
  6472  05B3  0008               	return
  6473                           
  6474                           ;ext_int.c: 66: {;ext_int.c: 67: INT_InterruptHandler();
  6475  05B4  086D               	movf	_INT_InterruptHandler+1,w
  6476  05B5  008A               	movwf	10
  6477  05B6  086C               	movf	_INT_InterruptHandler,w
  6478  05B7  000A               	callw
  6479  05B8  3185               	pagesel	$
  6480  05B9  0008               	return
  6481  05BA                     __end_of_INT_CallBack:	
  6482                           
  6483                           	psect	text31
  6484  02AB                     __ptext31:	
  6485 ;; *************** function _INT_DefaultInterruptHandler *****************
  6486 ;; Defined at:
  6487 ;;		line 75 in file "mcc_generated_files/ext_int.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;		None
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  time            1    1[COMMON] unsigned char 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  1    wreg      void 
  6494 ;; Registers used:
  6495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6501 ;;      Params:         0       0       0       0       0       0       0       0
  6502 ;;      Locals:         1       0       0       0       0       0       0       0
  6503 ;;      Temps:          1       0       0       0       0       0       0       0
  6504 ;;      Totals:         2       0       0       0       0       0       0       0
  6505 ;;Total ram usage:        2 bytes
  6506 ;; Hardware stack levels used:    1
  6507 ;; This function calls:
  6508 ;;		Nothing
  6509 ;; This function is called by:
  6510 ;;		_EXT_INT_Initialize
  6511 ;;		_INT_CallBack
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           
  6516                           ;psect for function _INT_DefaultInterruptHandler
  6517  02AB                     _INT_DefaultInterruptHandler:	
  6518                           
  6519                           ;ext_int.c: 77: uint8_t time = TMR0;
  6520                           
  6521                           ;incstack = 0
  6522                           ; Regs used in _INT_DefaultInterruptHandler: [wreg-fsr1h+status,2+status,0]
  6523  02AB  0020               	movlb	0	; select bank0
  6524  02AC  0815               	movf	21,w	;volatile
  6525  02AD  00F7               	movwf	??_INT_DefaultInterruptHandler
  6526  02AE  0877               	movf	??_INT_DefaultInterruptHandler,w
  6527  02AF  00F8               	movwf	INT_DefaultInterruptHandler@time
  6528                           
  6529                           ;ext_int.c: 78: TMR0 = 0;
  6530  02B0  0195               	clrf	21	;volatile
  6531                           
  6532                           ;ext_int.c: 81: if (INTCONbits.TMR0IF){
  6533  02B1  190B               	btfsc	11,2	;volatile
  6534                           
  6535                           ;ext_int.c: 82: time = 0;
  6536  02B2  01F8               	clrf	INT_DefaultInterruptHandler@time
  6537                           
  6538                           ;ext_int.c: 83: };ext_int.c: 84: INTCONbits.TMR0IF = 0;
  6539  02B3  110B               	bcf	11,2	;volatile
  6540                           
  6541                           ;ext_int.c: 86: switch(ir_code.state){
  6542  02B4  2B02               	goto	i1l1594
  6543  02B5                     i1l1552:	
  6544                           
  6545                           ;ext_int.c: 89: if (time >= 180 && time <= 243){
  6546  02B5  30B4               	movlw	180
  6547  02B6  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6548  02B7  1C03               	skipc
  6549  02B8  2B0D               	goto	i1l255
  6550  02B9  30F4               	movlw	244
  6551  02BA  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6552  02BB  1803               	skipnc
  6553  02BC  2B0D               	goto	i1l255
  6554                           
  6555                           ;ext_int.c: 90: ir_code.n_bits = 0;
  6556  02BD  01F1               	clrf	_ir_code
  6557                           
  6558                           ;ext_int.c: 91: ir_code.state = STATE_RECEIVING;
  6559  02BE  01F2               	clrf	_ir_code+1
  6560  02BF  0AF2               	incf	_ir_code+1,f
  6561                           
  6562                           ;ext_int.c: 92: stats[0] = time;
  6563  02C0  0878               	movf	INT_DefaultInterruptHandler@time,w
  6564  02C1  00F7               	movwf	??_INT_DefaultInterruptHandler
  6565  02C2  0877               	movf	??_INT_DefaultInterruptHandler,w
  6566  02C3  00C7               	movwf	_stats
  6567  02C4  2B0D               	goto	i1l255
  6568  02C5                     i1l1562:	
  6569                           
  6570                           ;ext_int.c: 97: ir_code.code <<= 1;
  6571  02C5  3001               	movlw	1
  6572  02C6                     u67_25:	
  6573  02C6  35F3               	lslf	_ir_code+2,f
  6574  02C7  0DF4               	rlf	_ir_code+3,f
  6575  02C8  0DF5               	rlf	_ir_code+4,f
  6576  02C9  0DF6               	rlf	_ir_code+5,f
  6577  02CA  0B89               	decfsz	9,f
  6578  02CB  2AC6               	goto	u67_25
  6579                           
  6580                           ;ext_int.c: 98: if (time >= 29 && time <= 41){
  6581  02CC  301D               	movlw	29
  6582  02CD  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6583  02CE  1C03               	skipc
  6584  02CF  2AE2               	goto	i1l1574
  6585  02D0  302A               	movlw	42
  6586  02D1  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6587  02D2  1803               	skipnc
  6588  02D3  2AE2               	goto	i1l1574
  6589                           
  6590                           ;ext_int.c: 99: stats[1+ir_code.n_bits] = time;
  6591  02D4  0878               	movf	INT_DefaultInterruptHandler@time,w
  6592  02D5  00F7               	movwf	??_INT_DefaultInterruptHandler
  6593  02D6  0871               	movf	_ir_code,w
  6594  02D7  3E48               	addlw	(low ((_stats| 0+1)))& (0+255)
  6595  02D8  0086               	movwf	6
  6596  02D9  0187               	clrf	7
  6597  02DA  0877               	movf	??_INT_DefaultInterruptHandler,w
  6598  02DB  0081               	movwf	1
  6599                           
  6600                           ;ext_int.c: 100: ir_code.code |= 1;
  6601  02DC  1473               	bsf	_ir_code+2,0
  6602  02DD                     i1l1572:	
  6603                           
  6604                           ;ext_int.c: 101: ir_code.n_bits++;
  6605  02DD  3001               	movlw	1
  6606  02DE  00F7               	movwf	??_INT_DefaultInterruptHandler
  6607  02DF  0877               	movf	??_INT_DefaultInterruptHandler,w
  6608  02E0  07F1               	addwf	_ir_code,f
  6609                           
  6610                           ;ext_int.c: 102: } else if (time >= 14 && time <= 20){
  6611  02E1  2AF5               	goto	i1l1584
  6612  02E2                     i1l1574:	
  6613  02E2  300E               	movlw	14
  6614  02E3  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6615  02E4  1C03               	skipc
  6616  02E5  2AF3               	goto	i1l1582
  6617  02E6  3015               	movlw	21
  6618  02E7  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6619  02E8  1803               	skipnc
  6620  02E9  2AF3               	goto	i1l1582
  6621                           
  6622                           ;ext_int.c: 103: stats[1+ir_code.n_bits] = time;
  6623  02EA  0878               	movf	INT_DefaultInterruptHandler@time,w
  6624  02EB  00F7               	movwf	??_INT_DefaultInterruptHandler
  6625  02EC  0871               	movf	_ir_code,w
  6626  02ED  3E48               	addlw	(low ((_stats| 0+1)))& (0+255)
  6627  02EE  0086               	movwf	6
  6628  02EF  0187               	clrf	7
  6629  02F0  0877               	movf	??_INT_DefaultInterruptHandler,w
  6630  02F1  0081               	movwf	1
  6631  02F2  2ADD               	goto	i1l1572
  6632  02F3                     i1l1582:	
  6633                           
  6634                           ;ext_int.c: 107: ir_code.state = STATE_RESET;
  6635  02F3  01F2               	clrf	_ir_code+1
  6636                           
  6637                           ;ext_int.c: 108: break;
  6638  02F4  2B0D               	goto	i1l255
  6639  02F5                     i1l1584:	
  6640                           
  6641                           ;ext_int.c: 109: };ext_int.c: 110: if (32 == ir_code.n_bits){
  6642  02F5  3020               	movlw	32
  6643  02F6  0671               	xorwf	_ir_code,w
  6644  02F7  1D03               	btfss	3,2
  6645  02F8  2B0D               	goto	i1l255
  6646                           
  6647                           ;ext_int.c: 113: if (ir_code.command == ((~ir_code.command_b) & 0xff)){
  6648  02F9  0973               	comf	_ir_code+2,w
  6649  02FA  0674               	xorwf	_ir_code+3,w
  6650  02FB  1D03               	skipz
  6651  02FC  2AF3               	goto	i1l1582
  6652                           
  6653                           ;ext_int.c: 114: ir_code.state = STATE_DONE;
  6654  02FD  3002               	movlw	2
  6655  02FE  00F7               	movwf	??_INT_DefaultInterruptHandler
  6656  02FF  0877               	movf	??_INT_DefaultInterruptHandler,w
  6657  0300  00F2               	movwf	_ir_code+1
  6658                           
  6659                           ;ext_int.c: 115: } else {
  6660  0301  2B0D               	goto	i1l255
  6661  0302                     i1l1594:	
  6662  0302  0872               	movf	_ir_code+1,w
  6663                           
  6664                           ; Switch size 1, requested type "simple"
  6665                           ; Number of cases is 3, Range of values is 0 to 2
  6666                           ; switch strategies available:
  6667                           ; Name         Instructions Cycles
  6668                           ; simple_byte           10     6 (average)
  6669                           ; direct_byte           12     6 (fixed)
  6670                           ; jumptable            260     6 (fixed)
  6671                           ;	Chosen strategy is simple_byte
  6672  0303  3A00               	xorlw	0	; case 0
  6673  0304  1903               	skipnz
  6674  0305  2AB5               	goto	i1l1552
  6675  0306  3A01               	xorlw	1	; case 1
  6676  0307  1903               	skipnz
  6677  0308  2AC5               	goto	i1l1562
  6678  0309  3A03               	xorlw	3	; case 2
  6679  030A  1903               	skipnz
  6680  030B  2B0D               	goto	i1l255
  6681  030C  2AF3               	goto	i1l1582
  6682  030D                     i1l255:	
  6683                           
  6684                           ;ext_int.c: 129: INTCONbits.INTF = 0;
  6685  030D  108B               	bcf	11,1	;volatile
  6686  030E  0008               	return
  6687  030F                     __end_of_INT_DefaultInterruptHandler:	
  6688  007E                     btemp	set	126	;btemp
  6689  007E                     int$flags	set	126
  6690  007E                     wtemp0	set	126


Data Sizes:
    Strings     178
    Constant    32
    Data        0
    BSS         44
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80     39      78
    BANK1            80      0       6
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_6(CODE[27]), STR_5(CODE[27]), STR_4(CODE[27]), STR_3(CODE[27]), 
		 -> STR_2(CODE[27]), STR_1(CODE[26]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    process_remote_command@code	PTR struct . size(1) Largest target is 6
		 -> ir_code(COMMON[6]), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->_process_remote_command
    _process_remote_command->_setLEDColor
    _printf->___wmul
    _printf->_isdigit
    _printf->_putch
    _putch->_EUSART_Write
    _battery_voltage->___aldiv

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INT_CallBack->_INT_DefaultInterruptHandler

Critical Paths under _main in BANK0

    _main->_printf
    _process_remote_command->_setLEDColor
    _printf->___lldiv
    _battery_voltage->___aldiv
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6549
                                             37 BANK0      2     2      0
                     _DAC_Initialize
                    _OPA1_Initialize
                    _OPA2_Initialize
                  _SYSTEM_Initialize
                    _battery_voltage
                            _initLED
                             _printf
             _process_remote_command
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (1) _process_remote_command                               3     3      0    1356
                                              3 COMMON     2     2      0
                                              2 BANK0      1     1      0
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (1) _setLEDColor                                          3     1      2    1283
                                              2 COMMON     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _printf                                              32    26      6    2727
                                             13 BANK0     24    18      6
                            ___lldiv
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      62
                                              3 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     374
                                              2 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     479
                                              2 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _initLED                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _battery_voltage                                      2     0      2     683
                                             14 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     683
                                              2 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     500
                     _DAC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
                    _OPA1_Initialize
                    _OPA2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OPA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OPA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     125
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     375
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     200
                            _INT_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0     200
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0     200
                   Absolute function *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          2     2      0     200
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DAC_Initialize
   _OPA1_Initialize
   _OPA2_Initialize
   _SYSTEM_Initialize
     _DAC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OPA1_Initialize
     _OPA2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _battery_voltage
     ___aldiv
   _initLED
   _printf
     ___lldiv
     ___wmul
     _isdigit
     _putch
       _EUSART_Write
   _process_remote_command
     _setLEDColor
   _setLEDColor

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      60       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     27      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       6       8        7.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      60      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jul  2 21:52:36 2020

                                  __CFG_CP$OFF 0000                        __end_of_OPA1_Initialize 061A  
                          ___wmul@multiplicand 0022                                _timer0ReloadVal 0070  
                                  __CFG_LVP$ON 0000                                            l524 004D  
                                          l436 0197                                            l197 05E0  
                                          l535 0097                                            l633 023A  
                                          l537 00B0                                            l394 0432  
                                          l562 04C3                                            l397 043C  
                                          l558 017B                                            _PR2 001B  
               ?_EUSART_SetFramingErrorHandler 0020                                _TMR2_Initialize 05E7  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                         l2000 0289                                           l2004 0294  
                                         l2102 0068                                           l2008 02A2  
                                         l2112 0098                                           l2140 0114  
                                         l2150 0128                                           l2134 00FF  
                                         l2118 00BF                                           l2070 031A  
                                         l2128 00D2                                           l2072 031F  
                                         l2080 032A                                           l2162 013C  
                                         l2154 0135                                           l2138 0111  
                                         l2090 0049                                           l2074 0322  
                                         l2082 0357                                           l2066 0312  
                                         l2148 0124                                           l2164 002D  
                                         l2076 0327                                           l2068 0317  
                                         l2174 01B6                                           l2096 0052  
                                         l2098 005B                                           l1930 0594  
                                         l1936 04BC                                           l1954 0374  
                                         l1964 03A2                                           l1956 0382  
                                         l1990 025B                                           l1982 024B  
                                         l1992 0269                                           l1968 03AD  
                                         STR_1 055D                                           STR_2 04D6  
                                         STR_3 050C                                           STR_4 04F1  
                                         STR_5 0527                                           STR_6 0542  
                                         STR_7 0577                                           u1305 0377  
                                         u1325 0383                                           _LATA 010C  
                                         _LATB 010D                                __end_of_INT_ISR 061E  
                                         u1415 026A                                           u1335 0397  
                                         _LATC 010E                                           u1425 027E  
                                         u1345 03A3                                           u1265 04C4  
                                         u1435 028A                                           u1275 04C9  
                                         u1525 00F5                                           u1545 0106  
                                         u1625 01AE                                           u1395 025E  
                                         _TMR0 0015                                           _TMR2 001A  
                      __end_of_OPA2_Initialize 0616                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         _main 017C                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
          __end_of_INT_DefaultInterruptHandler 030F                    _INT_DefaultInterruptHandler 02AB  
                                         start 0014                                  __CFG_IESO$OFF 0000  
              __end_of_INT_SetInterruptHandler 0603                                  __CFG_MCLRE$ON 0000  
                      __end_of_TMR0_Initialize 05C4                                  ?_EUSART_Write 0077  
               __size_of_OSCILLATOR_Initialize 0008                  __end_of_OSCILLATOR_Initialize 05F7  
                              __end_of___aldiv 02AB                                          ?_main 0077  
                                        _ADRES 009B                                  __CFG_WDTE$OFF 0000  
                              __end_of___lldiv 03B6                                          _T2CON 001C  
                                        i1l130 0012                                          i1l126 000D  
                                        i1l255 030D                                   ?_setLEDColor 0020  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          u67_25 02C6  
                                        _RXPPS 0E24                                __end_of_initLED 03F9  
                      __end_of_PIN_MANAGER_IOC 061F                                 _WDT_Initialize 060E  
                              __end_of_isdigit 0596                                          _putch 0609  
                                        _stats 0047                                 __CFG_BOREN$OFF 0000  
                                        pclath 000A                                          status 0003  
                      ?_process_remote_command 0077                                          wtemp0 007E  
                             ??_DAC_Initialize 0079                                __initialization 0016  
                                 __end_of_main 0229                                 ??_EUSART_Write 0079  
                      __end_of_TMR2_Initialize 05EF                                 __CFG_LPBOR$OFF 0000  
                  ?_INTERRUPT_InterruptManager 0077                               ?_OPA1_Initialize 0077  
                                       ??_main 0045                       __size_of_battery_voltage 002E  
                               __CFG_PLLEN$OFF 0000                         __end_of_WDT_Initialize 0612  
                                    ??_INT_ISR 0079              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 00A2                                         _CCPR1L 0291  
                               __CFG_ZCDDIS$ON 0000                                         _ANSELA 018C  
                                       ?_putch 0077                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RA5PPS 0E95  
                                       _RC1STA 019D                                         _RC4PPS 0EA4  
                                       _RB7PPS 0E9F                                         _RC5PPS 0EA5  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         i1l1552 02B5  
                                       i1l1562 02C5                 __end_of_process_remote_command 0363  
                                       i1l1572 02DD                                         i1l1582 02F3  
                                       i1l1574 02E2                                         i1l1584 02F5  
                                       i1l1594 0302                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       _FVRCON 0117                                         _INTPPS 0E10  
                             ?_OPA2_Initialize 0077                                         _OSCCON 0099  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                                 __CFG_PWRTE$OFF 0000  
                                    ??___aldiv 0079                                         ___wmul 04BA  
                               __CFG_STVREN$ON 0000                                      ??___lldiv 0079  
                             ?_TMR0_Initialize 0077                                         _printf 0028  
                                ?_INT_CallBack 0077                                      ??_initLED 0079  
                                    ??_isdigit 0079                                ?_WDT_Initialize 0077  
             __size_of_INT_SetInterruptHandler 0006        INT_SetInterruptHandler@InterruptHandler 0020  
                             ?_PIN_MANAGER_IOC 0077                              _SYSTEM_Initialize 049C  
                      __end_of__initialization 0024                             ?_SYSTEM_Initialize 0077  
                               __pcstackCOMMON 0077                            ??_SYSTEM_Initialize 0079  
                                __end_of_putch 060E                               ?_TMR2_Initialize 0077  
                               ??_INT_CallBack 0079                    __size_of_EXT_INT_Initialize 000C  
                               _OPTION_REGbits 0095                           __size_of_setLEDColor 000D  
              ??_EUSART_SetOverrunErrorHandler 0079                              ??_battery_voltage 007A  
                    __end_of_SYSTEM_Initialize 04BA                                        ??_putch 007A  
                                   __pbssBANK0 0047                           __end_of_EUSART_Write 05E7  
                                   __pmaintext 017C                                        ?___wmul 0020  
                              __CFG_PPS1WAY$ON 0000                                     __pintentry 0004  
                                      ?_printf 002D                                        _OPA1CON 0511  
                                      _OPA2CON 0515                                        _LED_red 006A  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                                      _INT_ISR 061A                                        _OSCSTAT 009A  
                                      _OSCTUNE 0098                                        _PWM3DCH 0618  
                                      _PWM4DCH 061B                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 0079                                        ___aldiv 0229  
                                      ___lldiv 0363                                __size_of___wmul 001C  
                                      __ptext1 030F                                        __ptext2 0596  
                                      __ptext3 0028                                        __ptext4 0609  
                                      __ptext5 05DF                                        __ptext6 0588  
                                      __ptext7 04BA                                        __ptext8 0363  
                                      __ptext9 03B6                                __size_of_printf 0154  
                                      _initLED 03B6                              __end_of_hexpowers 049C  
                                      _ir_code 0071                          _OSCILLATOR_Initialize 05EF  
                                    _T2CONbits 001C                                        _isdigit 0588  
                             ___aldiv@dividend 0024                       ??_PIN_MANAGER_Initialize 0079  
                      _INT_SetInterruptHandler 05FD                     __size_of_SYSTEM_Initialize 001E  
                                      clrloop0 05F8                           end_of_initialization 0024  
        __end_of_EUSART_SetOverrunErrorHandler 05CD         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 05C4                                      _LED_green 0069  
                         __end_of_INT_CallBack 05BA                              _EUSART_Initialize 0458  
                              ___lldiv@divisor 0020                               __CFG_CLKOUTEN$ON 0000  
                              ___lldiv@counter 002C                             ?_EUSART_Initialize 0077  
                                      printf@c 0044                                        printf@f 002D  
                             ___aldiv@quotient 002A                                setLEDColor@blue 0021  
                          ??_EUSART_Initialize 0079                               ??_WDT_Initialize 0079  
                             __CFG_FOSC$INTOSC 0000                          __size_of_EUSART_Write 0008  
                     __size_of_OPA1_Initialize 0004                __size_of_EUSART_SetErrorHandler 0009  
                    __end_of_EUSART_Initialize 047C                                    _CCP1CONbits 0293  
                                  printf@width 0042                       __size_of_OPA2_Initialize 0004  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 04D6  
                              _battery_voltage 042A                                   _EUSART_Write 05DF  
                       ?_OSCILLATOR_Initialize 0077                      ??_INT_SetInterruptHandler 0079  
                      __size_of_DAC_Initialize 0006                                 __end_of_printf 017C  
                          start_initialization 0016                       __size_of_TMR0_Initialize 000A  
              __size_of_PIN_MANAGER_Initialize 0031                                    putch@txData 007A  
                     __size_of_PIN_MANAGER_IOC 0001                   ?_INT_DefaultInterruptHandler 0077  
               ?_EUSART_SetOverrunErrorHandler 0020                     _EUSART_FramingErrorHandler 00A4  
                                     ??___wmul 0079                         _EUSART_SetErrorHandler 05D6  
                                  _CCPTMRSbits 029E                     __end_of_EXT_INT_Initialize 05AF  
                                     ??_printf 0033                                  ??_setLEDColor 0079  
                                  __pbssCOMMON 0070                                      ___latbits 0001  
                     ??_process_remote_command 007A                                       ?_INT_ISR 0077  
                                __pcstackBANK0 0020                       __size_of_TMR2_Initialize 0008  
                                 _isdigit$1219 0079                          __size_of_INT_CallBack 000B  
                   __size_of_EUSART_Initialize 0024                              ??_OPA1_Initialize 0079  
                                    __pnvBANK0 006C                                      __pnvBANK1 00A0  
                       _PIN_MANAGER_Initialize 03F9                        __end_of_battery_voltage 0458  
                ??_INT_DefaultInterruptHandler 0077                                       ?___aldiv 0020  
                                     ?___lldiv 0020                                       _DAC1CON0 0118  
                                     _DAC1CON1 0119                   ??_INTERRUPT_InterruptManager 0079  
                            ??_OPA2_Initialize 0079                                   _INT_CallBack 05AF  
                                     _BAUD1CON 019F                                       ?_initLED 0077  
                                     ?_isdigit 0077                                      _hexpowers 047C  
                          __end_of_setLEDColor 05A3                                 __size_of_putch 0005  
                              ___aldiv@divisor 0020                              ??_TMR0_Initialize 0079  
                              ___aldiv@counter 0028                                 ___wmul@product 0079  
       EUSART_SetErrorHandler@interruptHandler 0020                                       _LED_blue 0068  
                                    clear_ram0 05F7                              _eusartRxLastError 006B  
          __size_of_INTERRUPT_InterruptManager 0010                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0079                                 setLEDColor@red 0079  
            _EUSART_DefaultOverrunErrorHandler 0000                              ??_PIN_MANAGER_IOC 0077  
                                   _ADCON0bits 009D                              ___wmul@multiplier 0020  
                               _DAC_Initialize 0603                                     printf@flag 0041  
                                   printf@prec 003A           __size_of_INT_DefaultInterruptHandler 0064  
              __size_of_process_remote_command 0054                               __size_of_INT_ISR 0004  
                            ??_TMR2_Initialize 0079                               ?_battery_voltage 002E  
                      ??_OSCILLATOR_Initialize 0079                            _EUSART_ErrorHandler 00A0  
                             __size_of___aldiv 0082                         __end_of_DAC_Initialize 0609  
                             __size_of___lldiv 0053                                    _setLEDColor 0596  
                             __size_of_initLED 0043                               __size_of_isdigit 000E  
                                     __ptext10 042A                                       __ptext11 0229  
                                     __ptext20 05A3                                       __ptext12 049C  
                                     __ptext21 05FD                                       __ptext13 060E  
                                     __ptext30 05AF                                       __ptext22 0458  
                                     __ptext14 05E7                                       __ptext31 02AB  
                                     __ptext23 05C4                                       __ptext15 05BA  
                                     __ptext24 05CD                                       __ptext16 03F9  
                                     __ptext25 05D6                                       __ptext17 05EF  
                                     __ptext26 0603                                       __ptext18 0612  
                                     __ptext19 0616                                       __ptext28 061E  
                                     __ptext29 061A                                  __size_of_main 00AD  
                      ?_EUSART_SetErrorHandler 0020                         _process_remote_command 030F  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 0014  
                   _INTERRUPT_InterruptManager 0004                                      printf@idx 0039  
        __end_of_EUSART_SetFramingErrorHandler 05D6         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 05CD                                ?_DAC_Initialize 0077  
                                    printf@val 003C                                     _INTCONbits 000B  
              INT_DefaultInterruptHandler@time 0078                                    _PWM3DCLbits 0617  
                              _OPA1_Initialize 0616                                    _PWM4DCLbits 061A  
                                   _FVRCONbits 0117                           _INT_InterruptHandler 006C  
                                  _PWM3CONbits 0619                                       isdigit@c 007A  
                                  _PWM4CONbits 061C                             _EXT_INT_Initialize 05A3  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                             ___lldiv@dividend 0024                        ?_PIN_MANAGER_Initialize 0077  
                   process_remote_command@code 0022                 __end_of_EUSART_SetErrorHandler 05DF  
                          ?_EXT_INT_Initialize 0077                                _OPA2_Initialize 0612  
                                     printf@ap 0040  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                     ?_INT_SetInterruptHandler 0020                                  __pstringtext1 047C  
                                __pstringtext2 04D6                                  __pstringtext3 04F1  
                                __pstringtext4 050C                                  __pstringtext5 0527  
                                __pstringtext6 0542                                  __pstringtext7 055D  
                                __pstringtext8 0577                                  __pstringtext9 0000  
                         ??_EXT_INT_Initialize 0079                                     _OPTION_REG 0095  
                             setLEDColor@green 0020                               ___lldiv@quotient 0028  
                              _TMR0_Initialize 05BA                                   ___aldiv@sign 0029  
                                   _TX1STAbits 019E                             EUSART_Write@txData 0079  
               __end_of_PIN_MANAGER_Initialize 042A                                _PIN_MANAGER_IOC 061E  
