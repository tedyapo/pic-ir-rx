

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jul 18 16:54:28 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16LF1708
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 09/04/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16LF1708 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  0111                     	;# 
   138  0112                     	;# 
   139  0113                     	;# 
   140  0114                     	;# 
   141  0115                     	;# 
   142  0116                     	;# 
   143  0117                     	;# 
   144  0118                     	;# 
   145  0119                     	;# 
   146  011C                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  018E                     	;# 
   150  0191                     	;# 
   151  0191                     	;# 
   152  0192                     	;# 
   153  0193                     	;# 
   154  0193                     	;# 
   155  0194                     	;# 
   156  0195                     	;# 
   157  0196                     	;# 
   158  0199                     	;# 
   159  0199                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019A                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019C                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019D                     	;# 
   173  019D                     	;# 
   174  019D                     	;# 
   175  019E                     	;# 
   176  019E                     	;# 
   177  019E                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  020C                     	;# 
   184  020D                     	;# 
   185  020E                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0213                     	;# 
   192  0214                     	;# 
   193  0214                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0216                     	;# 
   200  0217                     	;# 
   201  0217                     	;# 
   202  028C                     	;# 
   203  028D                     	;# 
   204  028E                     	;# 
   205  0291                     	;# 
   206  0291                     	;# 
   207  0292                     	;# 
   208  0293                     	;# 
   209  0293                     	;# 
   210  0298                     	;# 
   211  0298                     	;# 
   212  0299                     	;# 
   213  029A                     	;# 
   214  029A                     	;# 
   215  029E                     	;# 
   216  030C                     	;# 
   217  030D                     	;# 
   218  030E                     	;# 
   219  038C                     	;# 
   220  038D                     	;# 
   221  038E                     	;# 
   222  0391                     	;# 
   223  0392                     	;# 
   224  0393                     	;# 
   225  0394                     	;# 
   226  0395                     	;# 
   227  0396                     	;# 
   228  0397                     	;# 
   229  0398                     	;# 
   230  0399                     	;# 
   231  0415                     	;# 
   232  0416                     	;# 
   233  0417                     	;# 
   234  041C                     	;# 
   235  041D                     	;# 
   236  041E                     	;# 
   237  0511                     	;# 
   238  0515                     	;# 
   239  0617                     	;# 
   240  0618                     	;# 
   241  0619                     	;# 
   242  0619                     	;# 
   243  061A                     	;# 
   244  061B                     	;# 
   245  061C                     	;# 
   246  061C                     	;# 
   247  0691                     	;# 
   248  0692                     	;# 
   249  0693                     	;# 
   250  0694                     	;# 
   251  0695                     	;# 
   252  0696                     	;# 
   253  0697                     	;# 
   254  0698                     	;# 
   255  0699                     	;# 
   256  069A                     	;# 
   257  069B                     	;# 
   258  069C                     	;# 
   259  069D                     	;# 
   260  069E                     	;# 
   261  069F                     	;# 
   262  0E0F                     	;# 
   263  0E10                     	;# 
   264  0E11                     	;# 
   265  0E12                     	;# 
   266  0E13                     	;# 
   267  0E14                     	;# 
   268  0E15                     	;# 
   269  0E17                     	;# 
   270  0E20                     	;# 
   271  0E21                     	;# 
   272  0E22                     	;# 
   273  0E24                     	;# 
   274  0E25                     	;# 
   275  0E28                     	;# 
   276  0E29                     	;# 
   277  0E2A                     	;# 
   278  0E2B                     	;# 
   279  0E90                     	;# 
   280  0E91                     	;# 
   281  0E92                     	;# 
   282  0E94                     	;# 
   283  0E95                     	;# 
   284  0E9C                     	;# 
   285  0E9D                     	;# 
   286  0E9E                     	;# 
   287  0E9F                     	;# 
   288  0EA0                     	;# 
   289  0EA1                     	;# 
   290  0EA2                     	;# 
   291  0EA3                     	;# 
   292  0EA4                     	;# 
   293  0EA5                     	;# 
   294  0EA6                     	;# 
   295  0EA7                     	;# 
   296  0F0F                     	;# 
   297  0F10                     	;# 
   298  0F11                     	;# 
   299  0F12                     	;# 
   300  0F13                     	;# 
   301  0F14                     	;# 
   302  0F15                     	;# 
   303  0F16                     	;# 
   304  0F17                     	;# 
   305  0F18                     	;# 
   306  0F19                     	;# 
   307  0F1A                     	;# 
   308  0F1B                     	;# 
   309  0F1C                     	;# 
   310  0F1D                     	;# 
   311  0F1E                     	;# 
   312  0F1F                     	;# 
   313  0F20                     	;# 
   314  0F21                     	;# 
   315  0F22                     	;# 
   316  0F23                     	;# 
   317  0F24                     	;# 
   318  0F25                     	;# 
   319  0F26                     	;# 
   320  0F27                     	;# 
   321  0F28                     	;# 
   322  0F29                     	;# 
   323  0F2A                     	;# 
   324  0F2B                     	;# 
   325  0F2C                     	;# 
   326  0F2D                     	;# 
   327  0FE4                     	;# 
   328  0FE5                     	;# 
   329  0FE6                     	;# 
   330  0FE7                     	;# 
   331  0FE8                     	;# 
   332  0FE9                     	;# 
   333  0FEA                     	;# 
   334  0FEB                     	;# 
   335  0FED                     	;# 
   336  0FEE                     	;# 
   337  0FEF                     	;# 
   338  0000                     	;# 
   339  0001                     	;# 
   340  0002                     	;# 
   341  0003                     	;# 
   342  0004                     	;# 
   343  0005                     	;# 
   344  0006                     	;# 
   345  0007                     	;# 
   346  0008                     	;# 
   347  0009                     	;# 
   348  000A                     	;# 
   349  000B                     	;# 
   350  000C                     	;# 
   351  000D                     	;# 
   352  000E                     	;# 
   353  0011                     	;# 
   354  0012                     	;# 
   355  0013                     	;# 
   356  0015                     	;# 
   357  0016                     	;# 
   358  0016                     	;# 
   359  0017                     	;# 
   360  0018                     	;# 
   361  0019                     	;# 
   362  001A                     	;# 
   363  001B                     	;# 
   364  001C                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0095                     	;# 
   372  0096                     	;# 
   373  0097                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009A                     	;# 
   377  009B                     	;# 
   378  009B                     	;# 
   379  009C                     	;# 
   380  009D                     	;# 
   381  009E                     	;# 
   382  009F                     	;# 
   383  010C                     	;# 
   384  010D                     	;# 
   385  010E                     	;# 
   386  0111                     	;# 
   387  0112                     	;# 
   388  0113                     	;# 
   389  0114                     	;# 
   390  0115                     	;# 
   391  0116                     	;# 
   392  0117                     	;# 
   393  0118                     	;# 
   394  0119                     	;# 
   395  011C                     	;# 
   396  018C                     	;# 
   397  018D                     	;# 
   398  018E                     	;# 
   399  0191                     	;# 
   400  0191                     	;# 
   401  0192                     	;# 
   402  0193                     	;# 
   403  0193                     	;# 
   404  0194                     	;# 
   405  0195                     	;# 
   406  0196                     	;# 
   407  0199                     	;# 
   408  0199                     	;# 
   409  0199                     	;# 
   410  019A                     	;# 
   411  019A                     	;# 
   412  019A                     	;# 
   413  019B                     	;# 
   414  019B                     	;# 
   415  019B                     	;# 
   416  019B                     	;# 
   417  019B                     	;# 
   418  019C                     	;# 
   419  019C                     	;# 
   420  019C                     	;# 
   421  019D                     	;# 
   422  019D                     	;# 
   423  019D                     	;# 
   424  019E                     	;# 
   425  019E                     	;# 
   426  019E                     	;# 
   427  019F                     	;# 
   428  019F                     	;# 
   429  019F                     	;# 
   430  019F                     	;# 
   431  019F                     	;# 
   432  020C                     	;# 
   433  020D                     	;# 
   434  020E                     	;# 
   435  0211                     	;# 
   436  0211                     	;# 
   437  0212                     	;# 
   438  0212                     	;# 
   439  0213                     	;# 
   440  0213                     	;# 
   441  0214                     	;# 
   442  0214                     	;# 
   443  0215                     	;# 
   444  0215                     	;# 
   445  0215                     	;# 
   446  0215                     	;# 
   447  0216                     	;# 
   448  0216                     	;# 
   449  0217                     	;# 
   450  0217                     	;# 
   451  028C                     	;# 
   452  028D                     	;# 
   453  028E                     	;# 
   454  0291                     	;# 
   455  0291                     	;# 
   456  0292                     	;# 
   457  0293                     	;# 
   458  0293                     	;# 
   459  0298                     	;# 
   460  0298                     	;# 
   461  0299                     	;# 
   462  029A                     	;# 
   463  029A                     	;# 
   464  029E                     	;# 
   465  030C                     	;# 
   466  030D                     	;# 
   467  030E                     	;# 
   468  038C                     	;# 
   469  038D                     	;# 
   470  038E                     	;# 
   471  0391                     	;# 
   472  0392                     	;# 
   473  0393                     	;# 
   474  0394                     	;# 
   475  0395                     	;# 
   476  0396                     	;# 
   477  0397                     	;# 
   478  0398                     	;# 
   479  0399                     	;# 
   480  0415                     	;# 
   481  0416                     	;# 
   482  0417                     	;# 
   483  041C                     	;# 
   484  041D                     	;# 
   485  041E                     	;# 
   486  0511                     	;# 
   487  0515                     	;# 
   488  0617                     	;# 
   489  0618                     	;# 
   490  0619                     	;# 
   491  0619                     	;# 
   492  061A                     	;# 
   493  061B                     	;# 
   494  061C                     	;# 
   495  061C                     	;# 
   496  0691                     	;# 
   497  0692                     	;# 
   498  0693                     	;# 
   499  0694                     	;# 
   500  0695                     	;# 
   501  0696                     	;# 
   502  0697                     	;# 
   503  0698                     	;# 
   504  0699                     	;# 
   505  069A                     	;# 
   506  069B                     	;# 
   507  069C                     	;# 
   508  069D                     	;# 
   509  069E                     	;# 
   510  069F                     	;# 
   511  0E0F                     	;# 
   512  0E10                     	;# 
   513  0E11                     	;# 
   514  0E12                     	;# 
   515  0E13                     	;# 
   516  0E14                     	;# 
   517  0E15                     	;# 
   518  0E17                     	;# 
   519  0E20                     	;# 
   520  0E21                     	;# 
   521  0E22                     	;# 
   522  0E24                     	;# 
   523  0E25                     	;# 
   524  0E28                     	;# 
   525  0E29                     	;# 
   526  0E2A                     	;# 
   527  0E2B                     	;# 
   528  0E90                     	;# 
   529  0E91                     	;# 
   530  0E92                     	;# 
   531  0E94                     	;# 
   532  0E95                     	;# 
   533  0E9C                     	;# 
   534  0E9D                     	;# 
   535  0E9E                     	;# 
   536  0E9F                     	;# 
   537  0EA0                     	;# 
   538  0EA1                     	;# 
   539  0EA2                     	;# 
   540  0EA3                     	;# 
   541  0EA4                     	;# 
   542  0EA5                     	;# 
   543  0EA6                     	;# 
   544  0EA7                     	;# 
   545  0F0F                     	;# 
   546  0F10                     	;# 
   547  0F11                     	;# 
   548  0F12                     	;# 
   549  0F13                     	;# 
   550  0F14                     	;# 
   551  0F15                     	;# 
   552  0F16                     	;# 
   553  0F17                     	;# 
   554  0F18                     	;# 
   555  0F19                     	;# 
   556  0F1A                     	;# 
   557  0F1B                     	;# 
   558  0F1C                     	;# 
   559  0F1D                     	;# 
   560  0F1E                     	;# 
   561  0F1F                     	;# 
   562  0F20                     	;# 
   563  0F21                     	;# 
   564  0F22                     	;# 
   565  0F23                     	;# 
   566  0F24                     	;# 
   567  0F25                     	;# 
   568  0F26                     	;# 
   569  0F27                     	;# 
   570  0F28                     	;# 
   571  0F29                     	;# 
   572  0F2A                     	;# 
   573  0F2B                     	;# 
   574  0F2C                     	;# 
   575  0F2D                     	;# 
   576  0FE4                     	;# 
   577  0FE5                     	;# 
   578  0FE6                     	;# 
   579  0FE7                     	;# 
   580  0FE8                     	;# 
   581  0FE9                     	;# 
   582  0FEA                     	;# 
   583  0FEB                     	;# 
   584  0FED                     	;# 
   585  0FEE                     	;# 
   586  0FEF                     	;# 
   587  0000                     	;# 
   588  0001                     	;# 
   589  0002                     	;# 
   590  0003                     	;# 
   591  0004                     	;# 
   592  0005                     	;# 
   593  0006                     	;# 
   594  0007                     	;# 
   595  0008                     	;# 
   596  0009                     	;# 
   597  000A                     	;# 
   598  000B                     	;# 
   599  000C                     	;# 
   600  000D                     	;# 
   601  000E                     	;# 
   602  0011                     	;# 
   603  0012                     	;# 
   604  0013                     	;# 
   605  0015                     	;# 
   606  0016                     	;# 
   607  0016                     	;# 
   608  0017                     	;# 
   609  0018                     	;# 
   610  0019                     	;# 
   611  001A                     	;# 
   612  001B                     	;# 
   613  001C                     	;# 
   614  008C                     	;# 
   615  008D                     	;# 
   616  008E                     	;# 
   617  0091                     	;# 
   618  0092                     	;# 
   619  0093                     	;# 
   620  0095                     	;# 
   621  0096                     	;# 
   622  0097                     	;# 
   623  0098                     	;# 
   624  0099                     	;# 
   625  009A                     	;# 
   626  009B                     	;# 
   627  009B                     	;# 
   628  009C                     	;# 
   629  009D                     	;# 
   630  009E                     	;# 
   631  009F                     	;# 
   632  010C                     	;# 
   633  010D                     	;# 
   634  010E                     	;# 
   635  0111                     	;# 
   636  0112                     	;# 
   637  0113                     	;# 
   638  0114                     	;# 
   639  0115                     	;# 
   640  0116                     	;# 
   641  0117                     	;# 
   642  0118                     	;# 
   643  0119                     	;# 
   644  011C                     	;# 
   645  018C                     	;# 
   646  018D                     	;# 
   647  018E                     	;# 
   648  0191                     	;# 
   649  0191                     	;# 
   650  0192                     	;# 
   651  0193                     	;# 
   652  0193                     	;# 
   653  0194                     	;# 
   654  0195                     	;# 
   655  0196                     	;# 
   656  0199                     	;# 
   657  0199                     	;# 
   658  0199                     	;# 
   659  019A                     	;# 
   660  019A                     	;# 
   661  019A                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019B                     	;# 
   665  019B                     	;# 
   666  019B                     	;# 
   667  019C                     	;# 
   668  019C                     	;# 
   669  019C                     	;# 
   670  019D                     	;# 
   671  019D                     	;# 
   672  019D                     	;# 
   673  019E                     	;# 
   674  019E                     	;# 
   675  019E                     	;# 
   676  019F                     	;# 
   677  019F                     	;# 
   678  019F                     	;# 
   679  019F                     	;# 
   680  019F                     	;# 
   681  020C                     	;# 
   682  020D                     	;# 
   683  020E                     	;# 
   684  0211                     	;# 
   685  0211                     	;# 
   686  0212                     	;# 
   687  0212                     	;# 
   688  0213                     	;# 
   689  0213                     	;# 
   690  0214                     	;# 
   691  0214                     	;# 
   692  0215                     	;# 
   693  0215                     	;# 
   694  0215                     	;# 
   695  0215                     	;# 
   696  0216                     	;# 
   697  0216                     	;# 
   698  0217                     	;# 
   699  0217                     	;# 
   700  028C                     	;# 
   701  028D                     	;# 
   702  028E                     	;# 
   703  0291                     	;# 
   704  0291                     	;# 
   705  0292                     	;# 
   706  0293                     	;# 
   707  0293                     	;# 
   708  0298                     	;# 
   709  0298                     	;# 
   710  0299                     	;# 
   711  029A                     	;# 
   712  029A                     	;# 
   713  029E                     	;# 
   714  030C                     	;# 
   715  030D                     	;# 
   716  030E                     	;# 
   717  038C                     	;# 
   718  038D                     	;# 
   719  038E                     	;# 
   720  0391                     	;# 
   721  0392                     	;# 
   722  0393                     	;# 
   723  0394                     	;# 
   724  0395                     	;# 
   725  0396                     	;# 
   726  0397                     	;# 
   727  0398                     	;# 
   728  0399                     	;# 
   729  0415                     	;# 
   730  0416                     	;# 
   731  0417                     	;# 
   732  041C                     	;# 
   733  041D                     	;# 
   734  041E                     	;# 
   735  0511                     	;# 
   736  0515                     	;# 
   737  0617                     	;# 
   738  0618                     	;# 
   739  0619                     	;# 
   740  0619                     	;# 
   741  061A                     	;# 
   742  061B                     	;# 
   743  061C                     	;# 
   744  061C                     	;# 
   745  0691                     	;# 
   746  0692                     	;# 
   747  0693                     	;# 
   748  0694                     	;# 
   749  0695                     	;# 
   750  0696                     	;# 
   751  0697                     	;# 
   752  0698                     	;# 
   753  0699                     	;# 
   754  069A                     	;# 
   755  069B                     	;# 
   756  069C                     	;# 
   757  069D                     	;# 
   758  069E                     	;# 
   759  069F                     	;# 
   760  0E0F                     	;# 
   761  0E10                     	;# 
   762  0E11                     	;# 
   763  0E12                     	;# 
   764  0E13                     	;# 
   765  0E14                     	;# 
   766  0E15                     	;# 
   767  0E17                     	;# 
   768  0E20                     	;# 
   769  0E21                     	;# 
   770  0E22                     	;# 
   771  0E24                     	;# 
   772  0E25                     	;# 
   773  0E28                     	;# 
   774  0E29                     	;# 
   775  0E2A                     	;# 
   776  0E2B                     	;# 
   777  0E90                     	;# 
   778  0E91                     	;# 
   779  0E92                     	;# 
   780  0E94                     	;# 
   781  0E95                     	;# 
   782  0E9C                     	;# 
   783  0E9D                     	;# 
   784  0E9E                     	;# 
   785  0E9F                     	;# 
   786  0EA0                     	;# 
   787  0EA1                     	;# 
   788  0EA2                     	;# 
   789  0EA3                     	;# 
   790  0EA4                     	;# 
   791  0EA5                     	;# 
   792  0EA6                     	;# 
   793  0EA7                     	;# 
   794  0F0F                     	;# 
   795  0F10                     	;# 
   796  0F11                     	;# 
   797  0F12                     	;# 
   798  0F13                     	;# 
   799  0F14                     	;# 
   800  0F15                     	;# 
   801  0F16                     	;# 
   802  0F17                     	;# 
   803  0F18                     	;# 
   804  0F19                     	;# 
   805  0F1A                     	;# 
   806  0F1B                     	;# 
   807  0F1C                     	;# 
   808  0F1D                     	;# 
   809  0F1E                     	;# 
   810  0F1F                     	;# 
   811  0F20                     	;# 
   812  0F21                     	;# 
   813  0F22                     	;# 
   814  0F23                     	;# 
   815  0F24                     	;# 
   816  0F25                     	;# 
   817  0F26                     	;# 
   818  0F27                     	;# 
   819  0F28                     	;# 
   820  0F29                     	;# 
   821  0F2A                     	;# 
   822  0F2B                     	;# 
   823  0F2C                     	;# 
   824  0F2D                     	;# 
   825  0FE4                     	;# 
   826  0FE5                     	;# 
   827  0FE6                     	;# 
   828  0FE7                     	;# 
   829  0FE8                     	;# 
   830  0FE9                     	;# 
   831  0FEA                     	;# 
   832  0FEB                     	;# 
   833  0FED                     	;# 
   834  0FEE                     	;# 
   835  0FEF                     	;# 
   836  0000                     	;# 
   837  0001                     	;# 
   838  0002                     	;# 
   839  0003                     	;# 
   840  0004                     	;# 
   841  0005                     	;# 
   842  0006                     	;# 
   843  0007                     	;# 
   844  0008                     	;# 
   845  0009                     	;# 
   846  000A                     	;# 
   847  000B                     	;# 
   848  000C                     	;# 
   849  000D                     	;# 
   850  000E                     	;# 
   851  0011                     	;# 
   852  0012                     	;# 
   853  0013                     	;# 
   854  0015                     	;# 
   855  0016                     	;# 
   856  0016                     	;# 
   857  0017                     	;# 
   858  0018                     	;# 
   859  0019                     	;# 
   860  001A                     	;# 
   861  001B                     	;# 
   862  001C                     	;# 
   863  008C                     	;# 
   864  008D                     	;# 
   865  008E                     	;# 
   866  0091                     	;# 
   867  0092                     	;# 
   868  0093                     	;# 
   869  0095                     	;# 
   870  0096                     	;# 
   871  0097                     	;# 
   872  0098                     	;# 
   873  0099                     	;# 
   874  009A                     	;# 
   875  009B                     	;# 
   876  009B                     	;# 
   877  009C                     	;# 
   878  009D                     	;# 
   879  009E                     	;# 
   880  009F                     	;# 
   881  010C                     	;# 
   882  010D                     	;# 
   883  010E                     	;# 
   884  0111                     	;# 
   885  0112                     	;# 
   886  0113                     	;# 
   887  0114                     	;# 
   888  0115                     	;# 
   889  0116                     	;# 
   890  0117                     	;# 
   891  0118                     	;# 
   892  0119                     	;# 
   893  011C                     	;# 
   894  018C                     	;# 
   895  018D                     	;# 
   896  018E                     	;# 
   897  0191                     	;# 
   898  0191                     	;# 
   899  0192                     	;# 
   900  0193                     	;# 
   901  0193                     	;# 
   902  0194                     	;# 
   903  0195                     	;# 
   904  0196                     	;# 
   905  0199                     	;# 
   906  0199                     	;# 
   907  0199                     	;# 
   908  019A                     	;# 
   909  019A                     	;# 
   910  019A                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019B                     	;# 
   914  019B                     	;# 
   915  019B                     	;# 
   916  019C                     	;# 
   917  019C                     	;# 
   918  019C                     	;# 
   919  019D                     	;# 
   920  019D                     	;# 
   921  019D                     	;# 
   922  019E                     	;# 
   923  019E                     	;# 
   924  019E                     	;# 
   925  019F                     	;# 
   926  019F                     	;# 
   927  019F                     	;# 
   928  019F                     	;# 
   929  019F                     	;# 
   930  020C                     	;# 
   931  020D                     	;# 
   932  020E                     	;# 
   933  0211                     	;# 
   934  0211                     	;# 
   935  0212                     	;# 
   936  0212                     	;# 
   937  0213                     	;# 
   938  0213                     	;# 
   939  0214                     	;# 
   940  0214                     	;# 
   941  0215                     	;# 
   942  0215                     	;# 
   943  0215                     	;# 
   944  0215                     	;# 
   945  0216                     	;# 
   946  0216                     	;# 
   947  0217                     	;# 
   948  0217                     	;# 
   949  028C                     	;# 
   950  028D                     	;# 
   951  028E                     	;# 
   952  0291                     	;# 
   953  0291                     	;# 
   954  0292                     	;# 
   955  0293                     	;# 
   956  0293                     	;# 
   957  0298                     	;# 
   958  0298                     	;# 
   959  0299                     	;# 
   960  029A                     	;# 
   961  029A                     	;# 
   962  029E                     	;# 
   963  030C                     	;# 
   964  030D                     	;# 
   965  030E                     	;# 
   966  038C                     	;# 
   967  038D                     	;# 
   968  038E                     	;# 
   969  0391                     	;# 
   970  0392                     	;# 
   971  0393                     	;# 
   972  0394                     	;# 
   973  0395                     	;# 
   974  0396                     	;# 
   975  0397                     	;# 
   976  0398                     	;# 
   977  0399                     	;# 
   978  0415                     	;# 
   979  0416                     	;# 
   980  0417                     	;# 
   981  041C                     	;# 
   982  041D                     	;# 
   983  041E                     	;# 
   984  0511                     	;# 
   985  0515                     	;# 
   986  0617                     	;# 
   987  0618                     	;# 
   988  0619                     	;# 
   989  0619                     	;# 
   990  061A                     	;# 
   991  061B                     	;# 
   992  061C                     	;# 
   993  061C                     	;# 
   994  0691                     	;# 
   995  0692                     	;# 
   996  0693                     	;# 
   997  0694                     	;# 
   998  0695                     	;# 
   999  0696                     	;# 
  1000  0697                     	;# 
  1001  0698                     	;# 
  1002  0699                     	;# 
  1003  069A                     	;# 
  1004  069B                     	;# 
  1005  069C                     	;# 
  1006  069D                     	;# 
  1007  069E                     	;# 
  1008  069F                     	;# 
  1009  0E0F                     	;# 
  1010  0E10                     	;# 
  1011  0E11                     	;# 
  1012  0E12                     	;# 
  1013  0E13                     	;# 
  1014  0E14                     	;# 
  1015  0E15                     	;# 
  1016  0E17                     	;# 
  1017  0E20                     	;# 
  1018  0E21                     	;# 
  1019  0E22                     	;# 
  1020  0E24                     	;# 
  1021  0E25                     	;# 
  1022  0E28                     	;# 
  1023  0E29                     	;# 
  1024  0E2A                     	;# 
  1025  0E2B                     	;# 
  1026  0E90                     	;# 
  1027  0E91                     	;# 
  1028  0E92                     	;# 
  1029  0E94                     	;# 
  1030  0E95                     	;# 
  1031  0E9C                     	;# 
  1032  0E9D                     	;# 
  1033  0E9E                     	;# 
  1034  0E9F                     	;# 
  1035  0EA0                     	;# 
  1036  0EA1                     	;# 
  1037  0EA2                     	;# 
  1038  0EA3                     	;# 
  1039  0EA4                     	;# 
  1040  0EA5                     	;# 
  1041  0EA6                     	;# 
  1042  0EA7                     	;# 
  1043  0F0F                     	;# 
  1044  0F10                     	;# 
  1045  0F11                     	;# 
  1046  0F12                     	;# 
  1047  0F13                     	;# 
  1048  0F14                     	;# 
  1049  0F15                     	;# 
  1050  0F16                     	;# 
  1051  0F17                     	;# 
  1052  0F18                     	;# 
  1053  0F19                     	;# 
  1054  0F1A                     	;# 
  1055  0F1B                     	;# 
  1056  0F1C                     	;# 
  1057  0F1D                     	;# 
  1058  0F1E                     	;# 
  1059  0F1F                     	;# 
  1060  0F20                     	;# 
  1061  0F21                     	;# 
  1062  0F22                     	;# 
  1063  0F23                     	;# 
  1064  0F24                     	;# 
  1065  0F25                     	;# 
  1066  0F26                     	;# 
  1067  0F27                     	;# 
  1068  0F28                     	;# 
  1069  0F29                     	;# 
  1070  0F2A                     	;# 
  1071  0F2B                     	;# 
  1072  0F2C                     	;# 
  1073  0F2D                     	;# 
  1074  0FE4                     	;# 
  1075  0FE5                     	;# 
  1076  0FE6                     	;# 
  1077  0FE7                     	;# 
  1078  0FE8                     	;# 
  1079  0FE9                     	;# 
  1080  0FEA                     	;# 
  1081  0FEB                     	;# 
  1082  0FED                     	;# 
  1083  0FEE                     	;# 
  1084  0FEF                     	;# 
  1085  0000                     	;# 
  1086  0001                     	;# 
  1087  0002                     	;# 
  1088  0003                     	;# 
  1089  0004                     	;# 
  1090  0005                     	;# 
  1091  0006                     	;# 
  1092  0007                     	;# 
  1093  0008                     	;# 
  1094  0009                     	;# 
  1095  000A                     	;# 
  1096  000B                     	;# 
  1097  000C                     	;# 
  1098  000D                     	;# 
  1099  000E                     	;# 
  1100  0011                     	;# 
  1101  0012                     	;# 
  1102  0013                     	;# 
  1103  0015                     	;# 
  1104  0016                     	;# 
  1105  0016                     	;# 
  1106  0017                     	;# 
  1107  0018                     	;# 
  1108  0019                     	;# 
  1109  001A                     	;# 
  1110  001B                     	;# 
  1111  001C                     	;# 
  1112  008C                     	;# 
  1113  008D                     	;# 
  1114  008E                     	;# 
  1115  0091                     	;# 
  1116  0092                     	;# 
  1117  0093                     	;# 
  1118  0095                     	;# 
  1119  0096                     	;# 
  1120  0097                     	;# 
  1121  0098                     	;# 
  1122  0099                     	;# 
  1123  009A                     	;# 
  1124  009B                     	;# 
  1125  009B                     	;# 
  1126  009C                     	;# 
  1127  009D                     	;# 
  1128  009E                     	;# 
  1129  009F                     	;# 
  1130  010C                     	;# 
  1131  010D                     	;# 
  1132  010E                     	;# 
  1133  0111                     	;# 
  1134  0112                     	;# 
  1135  0113                     	;# 
  1136  0114                     	;# 
  1137  0115                     	;# 
  1138  0116                     	;# 
  1139  0117                     	;# 
  1140  0118                     	;# 
  1141  0119                     	;# 
  1142  011C                     	;# 
  1143  018C                     	;# 
  1144  018D                     	;# 
  1145  018E                     	;# 
  1146  0191                     	;# 
  1147  0191                     	;# 
  1148  0192                     	;# 
  1149  0193                     	;# 
  1150  0193                     	;# 
  1151  0194                     	;# 
  1152  0195                     	;# 
  1153  0196                     	;# 
  1154  0199                     	;# 
  1155  0199                     	;# 
  1156  0199                     	;# 
  1157  019A                     	;# 
  1158  019A                     	;# 
  1159  019A                     	;# 
  1160  019B                     	;# 
  1161  019B                     	;# 
  1162  019B                     	;# 
  1163  019B                     	;# 
  1164  019B                     	;# 
  1165  019C                     	;# 
  1166  019C                     	;# 
  1167  019C                     	;# 
  1168  019D                     	;# 
  1169  019D                     	;# 
  1170  019D                     	;# 
  1171  019E                     	;# 
  1172  019E                     	;# 
  1173  019E                     	;# 
  1174  019F                     	;# 
  1175  019F                     	;# 
  1176  019F                     	;# 
  1177  019F                     	;# 
  1178  019F                     	;# 
  1179  020C                     	;# 
  1180  020D                     	;# 
  1181  020E                     	;# 
  1182  0211                     	;# 
  1183  0211                     	;# 
  1184  0212                     	;# 
  1185  0212                     	;# 
  1186  0213                     	;# 
  1187  0213                     	;# 
  1188  0214                     	;# 
  1189  0214                     	;# 
  1190  0215                     	;# 
  1191  0215                     	;# 
  1192  0215                     	;# 
  1193  0215                     	;# 
  1194  0216                     	;# 
  1195  0216                     	;# 
  1196  0217                     	;# 
  1197  0217                     	;# 
  1198  028C                     	;# 
  1199  028D                     	;# 
  1200  028E                     	;# 
  1201  0291                     	;# 
  1202  0291                     	;# 
  1203  0292                     	;# 
  1204  0293                     	;# 
  1205  0293                     	;# 
  1206  0298                     	;# 
  1207  0298                     	;# 
  1208  0299                     	;# 
  1209  029A                     	;# 
  1210  029A                     	;# 
  1211  029E                     	;# 
  1212  030C                     	;# 
  1213  030D                     	;# 
  1214  030E                     	;# 
  1215  038C                     	;# 
  1216  038D                     	;# 
  1217  038E                     	;# 
  1218  0391                     	;# 
  1219  0392                     	;# 
  1220  0393                     	;# 
  1221  0394                     	;# 
  1222  0395                     	;# 
  1223  0396                     	;# 
  1224  0397                     	;# 
  1225  0398                     	;# 
  1226  0399                     	;# 
  1227  0415                     	;# 
  1228  0416                     	;# 
  1229  0417                     	;# 
  1230  041C                     	;# 
  1231  041D                     	;# 
  1232  041E                     	;# 
  1233  0511                     	;# 
  1234  0515                     	;# 
  1235  0617                     	;# 
  1236  0618                     	;# 
  1237  0619                     	;# 
  1238  0619                     	;# 
  1239  061A                     	;# 
  1240  061B                     	;# 
  1241  061C                     	;# 
  1242  061C                     	;# 
  1243  0691                     	;# 
  1244  0692                     	;# 
  1245  0693                     	;# 
  1246  0694                     	;# 
  1247  0695                     	;# 
  1248  0696                     	;# 
  1249  0697                     	;# 
  1250  0698                     	;# 
  1251  0699                     	;# 
  1252  069A                     	;# 
  1253  069B                     	;# 
  1254  069C                     	;# 
  1255  069D                     	;# 
  1256  069E                     	;# 
  1257  069F                     	;# 
  1258  0E0F                     	;# 
  1259  0E10                     	;# 
  1260  0E11                     	;# 
  1261  0E12                     	;# 
  1262  0E13                     	;# 
  1263  0E14                     	;# 
  1264  0E15                     	;# 
  1265  0E17                     	;# 
  1266  0E20                     	;# 
  1267  0E21                     	;# 
  1268  0E22                     	;# 
  1269  0E24                     	;# 
  1270  0E25                     	;# 
  1271  0E28                     	;# 
  1272  0E29                     	;# 
  1273  0E2A                     	;# 
  1274  0E2B                     	;# 
  1275  0E90                     	;# 
  1276  0E91                     	;# 
  1277  0E92                     	;# 
  1278  0E94                     	;# 
  1279  0E95                     	;# 
  1280  0E9C                     	;# 
  1281  0E9D                     	;# 
  1282  0E9E                     	;# 
  1283  0E9F                     	;# 
  1284  0EA0                     	;# 
  1285  0EA1                     	;# 
  1286  0EA2                     	;# 
  1287  0EA3                     	;# 
  1288  0EA4                     	;# 
  1289  0EA5                     	;# 
  1290  0EA6                     	;# 
  1291  0EA7                     	;# 
  1292  0F0F                     	;# 
  1293  0F10                     	;# 
  1294  0F11                     	;# 
  1295  0F12                     	;# 
  1296  0F13                     	;# 
  1297  0F14                     	;# 
  1298  0F15                     	;# 
  1299  0F16                     	;# 
  1300  0F17                     	;# 
  1301  0F18                     	;# 
  1302  0F19                     	;# 
  1303  0F1A                     	;# 
  1304  0F1B                     	;# 
  1305  0F1C                     	;# 
  1306  0F1D                     	;# 
  1307  0F1E                     	;# 
  1308  0F1F                     	;# 
  1309  0F20                     	;# 
  1310  0F21                     	;# 
  1311  0F22                     	;# 
  1312  0F23                     	;# 
  1313  0F24                     	;# 
  1314  0F25                     	;# 
  1315  0F26                     	;# 
  1316  0F27                     	;# 
  1317  0F28                     	;# 
  1318  0F29                     	;# 
  1319  0F2A                     	;# 
  1320  0F2B                     	;# 
  1321  0F2C                     	;# 
  1322  0F2D                     	;# 
  1323  0FE4                     	;# 
  1324  0FE5                     	;# 
  1325  0FE6                     	;# 
  1326  0FE7                     	;# 
  1327  0FE8                     	;# 
  1328  0FE9                     	;# 
  1329  0FEA                     	;# 
  1330  0FEB                     	;# 
  1331  0FED                     	;# 
  1332  0FEE                     	;# 
  1333  0FEF                     	;# 
  1334  0000                     	;# 
  1335  0001                     	;# 
  1336  0002                     	;# 
  1337  0003                     	;# 
  1338  0004                     	;# 
  1339  0005                     	;# 
  1340  0006                     	;# 
  1341  0007                     	;# 
  1342  0008                     	;# 
  1343  0009                     	;# 
  1344  000A                     	;# 
  1345  000B                     	;# 
  1346  000C                     	;# 
  1347  000D                     	;# 
  1348  000E                     	;# 
  1349  0011                     	;# 
  1350  0012                     	;# 
  1351  0013                     	;# 
  1352  0015                     	;# 
  1353  0016                     	;# 
  1354  0016                     	;# 
  1355  0017                     	;# 
  1356  0018                     	;# 
  1357  0019                     	;# 
  1358  001A                     	;# 
  1359  001B                     	;# 
  1360  001C                     	;# 
  1361  008C                     	;# 
  1362  008D                     	;# 
  1363  008E                     	;# 
  1364  0091                     	;# 
  1365  0092                     	;# 
  1366  0093                     	;# 
  1367  0095                     	;# 
  1368  0096                     	;# 
  1369  0097                     	;# 
  1370  0098                     	;# 
  1371  0099                     	;# 
  1372  009A                     	;# 
  1373  009B                     	;# 
  1374  009B                     	;# 
  1375  009C                     	;# 
  1376  009D                     	;# 
  1377  009E                     	;# 
  1378  009F                     	;# 
  1379  010C                     	;# 
  1380  010D                     	;# 
  1381  010E                     	;# 
  1382  0111                     	;# 
  1383  0112                     	;# 
  1384  0113                     	;# 
  1385  0114                     	;# 
  1386  0115                     	;# 
  1387  0116                     	;# 
  1388  0117                     	;# 
  1389  0118                     	;# 
  1390  0119                     	;# 
  1391  011C                     	;# 
  1392  018C                     	;# 
  1393  018D                     	;# 
  1394  018E                     	;# 
  1395  0191                     	;# 
  1396  0191                     	;# 
  1397  0192                     	;# 
  1398  0193                     	;# 
  1399  0193                     	;# 
  1400  0194                     	;# 
  1401  0195                     	;# 
  1402  0196                     	;# 
  1403  0199                     	;# 
  1404  0199                     	;# 
  1405  0199                     	;# 
  1406  019A                     	;# 
  1407  019A                     	;# 
  1408  019A                     	;# 
  1409  019B                     	;# 
  1410  019B                     	;# 
  1411  019B                     	;# 
  1412  019B                     	;# 
  1413  019B                     	;# 
  1414  019C                     	;# 
  1415  019C                     	;# 
  1416  019C                     	;# 
  1417  019D                     	;# 
  1418  019D                     	;# 
  1419  019D                     	;# 
  1420  019E                     	;# 
  1421  019E                     	;# 
  1422  019E                     	;# 
  1423  019F                     	;# 
  1424  019F                     	;# 
  1425  019F                     	;# 
  1426  019F                     	;# 
  1427  019F                     	;# 
  1428  020C                     	;# 
  1429  020D                     	;# 
  1430  020E                     	;# 
  1431  0211                     	;# 
  1432  0211                     	;# 
  1433  0212                     	;# 
  1434  0212                     	;# 
  1435  0213                     	;# 
  1436  0213                     	;# 
  1437  0214                     	;# 
  1438  0214                     	;# 
  1439  0215                     	;# 
  1440  0215                     	;# 
  1441  0215                     	;# 
  1442  0215                     	;# 
  1443  0216                     	;# 
  1444  0216                     	;# 
  1445  0217                     	;# 
  1446  0217                     	;# 
  1447  028C                     	;# 
  1448  028D                     	;# 
  1449  028E                     	;# 
  1450  0291                     	;# 
  1451  0291                     	;# 
  1452  0292                     	;# 
  1453  0293                     	;# 
  1454  0293                     	;# 
  1455  0298                     	;# 
  1456  0298                     	;# 
  1457  0299                     	;# 
  1458  029A                     	;# 
  1459  029A                     	;# 
  1460  029E                     	;# 
  1461  030C                     	;# 
  1462  030D                     	;# 
  1463  030E                     	;# 
  1464  038C                     	;# 
  1465  038D                     	;# 
  1466  038E                     	;# 
  1467  0391                     	;# 
  1468  0392                     	;# 
  1469  0393                     	;# 
  1470  0394                     	;# 
  1471  0395                     	;# 
  1472  0396                     	;# 
  1473  0397                     	;# 
  1474  0398                     	;# 
  1475  0399                     	;# 
  1476  0415                     	;# 
  1477  0416                     	;# 
  1478  0417                     	;# 
  1479  041C                     	;# 
  1480  041D                     	;# 
  1481  041E                     	;# 
  1482  0511                     	;# 
  1483  0515                     	;# 
  1484  0617                     	;# 
  1485  0618                     	;# 
  1486  0619                     	;# 
  1487  0619                     	;# 
  1488  061A                     	;# 
  1489  061B                     	;# 
  1490  061C                     	;# 
  1491  061C                     	;# 
  1492  0691                     	;# 
  1493  0692                     	;# 
  1494  0693                     	;# 
  1495  0694                     	;# 
  1496  0695                     	;# 
  1497  0696                     	;# 
  1498  0697                     	;# 
  1499  0698                     	;# 
  1500  0699                     	;# 
  1501  069A                     	;# 
  1502  069B                     	;# 
  1503  069C                     	;# 
  1504  069D                     	;# 
  1505  069E                     	;# 
  1506  069F                     	;# 
  1507  0E0F                     	;# 
  1508  0E10                     	;# 
  1509  0E11                     	;# 
  1510  0E12                     	;# 
  1511  0E13                     	;# 
  1512  0E14                     	;# 
  1513  0E15                     	;# 
  1514  0E17                     	;# 
  1515  0E20                     	;# 
  1516  0E21                     	;# 
  1517  0E22                     	;# 
  1518  0E24                     	;# 
  1519  0E25                     	;# 
  1520  0E28                     	;# 
  1521  0E29                     	;# 
  1522  0E2A                     	;# 
  1523  0E2B                     	;# 
  1524  0E90                     	;# 
  1525  0E91                     	;# 
  1526  0E92                     	;# 
  1527  0E94                     	;# 
  1528  0E95                     	;# 
  1529  0E9C                     	;# 
  1530  0E9D                     	;# 
  1531  0E9E                     	;# 
  1532  0E9F                     	;# 
  1533  0EA0                     	;# 
  1534  0EA1                     	;# 
  1535  0EA2                     	;# 
  1536  0EA3                     	;# 
  1537  0EA4                     	;# 
  1538  0EA5                     	;# 
  1539  0EA6                     	;# 
  1540  0EA7                     	;# 
  1541  0F0F                     	;# 
  1542  0F10                     	;# 
  1543  0F11                     	;# 
  1544  0F12                     	;# 
  1545  0F13                     	;# 
  1546  0F14                     	;# 
  1547  0F15                     	;# 
  1548  0F16                     	;# 
  1549  0F17                     	;# 
  1550  0F18                     	;# 
  1551  0F19                     	;# 
  1552  0F1A                     	;# 
  1553  0F1B                     	;# 
  1554  0F1C                     	;# 
  1555  0F1D                     	;# 
  1556  0F1E                     	;# 
  1557  0F1F                     	;# 
  1558  0F20                     	;# 
  1559  0F21                     	;# 
  1560  0F22                     	;# 
  1561  0F23                     	;# 
  1562  0F24                     	;# 
  1563  0F25                     	;# 
  1564  0F26                     	;# 
  1565  0F27                     	;# 
  1566  0F28                     	;# 
  1567  0F29                     	;# 
  1568  0F2A                     	;# 
  1569  0F2B                     	;# 
  1570  0F2C                     	;# 
  1571  0F2D                     	;# 
  1572  0FE4                     	;# 
  1573  0FE5                     	;# 
  1574  0FE6                     	;# 
  1575  0FE7                     	;# 
  1576  0FE8                     	;# 
  1577  0FE9                     	;# 
  1578  0FEA                     	;# 
  1579  0FEB                     	;# 
  1580  0FED                     	;# 
  1581  0FEE                     	;# 
  1582  0FEF                     	;# 
  1583  0000                     	;# 
  1584  0001                     	;# 
  1585  0002                     	;# 
  1586  0003                     	;# 
  1587  0004                     	;# 
  1588  0005                     	;# 
  1589  0006                     	;# 
  1590  0007                     	;# 
  1591  0008                     	;# 
  1592  0009                     	;# 
  1593  000A                     	;# 
  1594  000B                     	;# 
  1595  000C                     	;# 
  1596  000D                     	;# 
  1597  000E                     	;# 
  1598  0011                     	;# 
  1599  0012                     	;# 
  1600  0013                     	;# 
  1601  0015                     	;# 
  1602  0016                     	;# 
  1603  0016                     	;# 
  1604  0017                     	;# 
  1605  0018                     	;# 
  1606  0019                     	;# 
  1607  001A                     	;# 
  1608  001B                     	;# 
  1609  001C                     	;# 
  1610  008C                     	;# 
  1611  008D                     	;# 
  1612  008E                     	;# 
  1613  0091                     	;# 
  1614  0092                     	;# 
  1615  0093                     	;# 
  1616  0095                     	;# 
  1617  0096                     	;# 
  1618  0097                     	;# 
  1619  0098                     	;# 
  1620  0099                     	;# 
  1621  009A                     	;# 
  1622  009B                     	;# 
  1623  009B                     	;# 
  1624  009C                     	;# 
  1625  009D                     	;# 
  1626  009E                     	;# 
  1627  009F                     	;# 
  1628  010C                     	;# 
  1629  010D                     	;# 
  1630  010E                     	;# 
  1631  0111                     	;# 
  1632  0112                     	;# 
  1633  0113                     	;# 
  1634  0114                     	;# 
  1635  0115                     	;# 
  1636  0116                     	;# 
  1637  0117                     	;# 
  1638  0118                     	;# 
  1639  0119                     	;# 
  1640  011C                     	;# 
  1641  018C                     	;# 
  1642  018D                     	;# 
  1643  018E                     	;# 
  1644  0191                     	;# 
  1645  0191                     	;# 
  1646  0192                     	;# 
  1647  0193                     	;# 
  1648  0193                     	;# 
  1649  0194                     	;# 
  1650  0195                     	;# 
  1651  0196                     	;# 
  1652  0199                     	;# 
  1653  0199                     	;# 
  1654  0199                     	;# 
  1655  019A                     	;# 
  1656  019A                     	;# 
  1657  019A                     	;# 
  1658  019B                     	;# 
  1659  019B                     	;# 
  1660  019B                     	;# 
  1661  019B                     	;# 
  1662  019B                     	;# 
  1663  019C                     	;# 
  1664  019C                     	;# 
  1665  019C                     	;# 
  1666  019D                     	;# 
  1667  019D                     	;# 
  1668  019D                     	;# 
  1669  019E                     	;# 
  1670  019E                     	;# 
  1671  019E                     	;# 
  1672  019F                     	;# 
  1673  019F                     	;# 
  1674  019F                     	;# 
  1675  019F                     	;# 
  1676  019F                     	;# 
  1677  020C                     	;# 
  1678  020D                     	;# 
  1679  020E                     	;# 
  1680  0211                     	;# 
  1681  0211                     	;# 
  1682  0212                     	;# 
  1683  0212                     	;# 
  1684  0213                     	;# 
  1685  0213                     	;# 
  1686  0214                     	;# 
  1687  0214                     	;# 
  1688  0215                     	;# 
  1689  0215                     	;# 
  1690  0215                     	;# 
  1691  0215                     	;# 
  1692  0216                     	;# 
  1693  0216                     	;# 
  1694  0217                     	;# 
  1695  0217                     	;# 
  1696  028C                     	;# 
  1697  028D                     	;# 
  1698  028E                     	;# 
  1699  0291                     	;# 
  1700  0291                     	;# 
  1701  0292                     	;# 
  1702  0293                     	;# 
  1703  0293                     	;# 
  1704  0298                     	;# 
  1705  0298                     	;# 
  1706  0299                     	;# 
  1707  029A                     	;# 
  1708  029A                     	;# 
  1709  029E                     	;# 
  1710  030C                     	;# 
  1711  030D                     	;# 
  1712  030E                     	;# 
  1713  038C                     	;# 
  1714  038D                     	;# 
  1715  038E                     	;# 
  1716  0391                     	;# 
  1717  0392                     	;# 
  1718  0393                     	;# 
  1719  0394                     	;# 
  1720  0395                     	;# 
  1721  0396                     	;# 
  1722  0397                     	;# 
  1723  0398                     	;# 
  1724  0399                     	;# 
  1725  0415                     	;# 
  1726  0416                     	;# 
  1727  0417                     	;# 
  1728  041C                     	;# 
  1729  041D                     	;# 
  1730  041E                     	;# 
  1731  0511                     	;# 
  1732  0515                     	;# 
  1733  0617                     	;# 
  1734  0618                     	;# 
  1735  0619                     	;# 
  1736  0619                     	;# 
  1737  061A                     	;# 
  1738  061B                     	;# 
  1739  061C                     	;# 
  1740  061C                     	;# 
  1741  0691                     	;# 
  1742  0692                     	;# 
  1743  0693                     	;# 
  1744  0694                     	;# 
  1745  0695                     	;# 
  1746  0696                     	;# 
  1747  0697                     	;# 
  1748  0698                     	;# 
  1749  0699                     	;# 
  1750  069A                     	;# 
  1751  069B                     	;# 
  1752  069C                     	;# 
  1753  069D                     	;# 
  1754  069E                     	;# 
  1755  069F                     	;# 
  1756  0E0F                     	;# 
  1757  0E10                     	;# 
  1758  0E11                     	;# 
  1759  0E12                     	;# 
  1760  0E13                     	;# 
  1761  0E14                     	;# 
  1762  0E15                     	;# 
  1763  0E17                     	;# 
  1764  0E20                     	;# 
  1765  0E21                     	;# 
  1766  0E22                     	;# 
  1767  0E24                     	;# 
  1768  0E25                     	;# 
  1769  0E28                     	;# 
  1770  0E29                     	;# 
  1771  0E2A                     	;# 
  1772  0E2B                     	;# 
  1773  0E90                     	;# 
  1774  0E91                     	;# 
  1775  0E92                     	;# 
  1776  0E94                     	;# 
  1777  0E95                     	;# 
  1778  0E9C                     	;# 
  1779  0E9D                     	;# 
  1780  0E9E                     	;# 
  1781  0E9F                     	;# 
  1782  0EA0                     	;# 
  1783  0EA1                     	;# 
  1784  0EA2                     	;# 
  1785  0EA3                     	;# 
  1786  0EA4                     	;# 
  1787  0EA5                     	;# 
  1788  0EA6                     	;# 
  1789  0EA7                     	;# 
  1790  0F0F                     	;# 
  1791  0F10                     	;# 
  1792  0F11                     	;# 
  1793  0F12                     	;# 
  1794  0F13                     	;# 
  1795  0F14                     	;# 
  1796  0F15                     	;# 
  1797  0F16                     	;# 
  1798  0F17                     	;# 
  1799  0F18                     	;# 
  1800  0F19                     	;# 
  1801  0F1A                     	;# 
  1802  0F1B                     	;# 
  1803  0F1C                     	;# 
  1804  0F1D                     	;# 
  1805  0F1E                     	;# 
  1806  0F1F                     	;# 
  1807  0F20                     	;# 
  1808  0F21                     	;# 
  1809  0F22                     	;# 
  1810  0F23                     	;# 
  1811  0F24                     	;# 
  1812  0F25                     	;# 
  1813  0F26                     	;# 
  1814  0F27                     	;# 
  1815  0F28                     	;# 
  1816  0F29                     	;# 
  1817  0F2A                     	;# 
  1818  0F2B                     	;# 
  1819  0F2C                     	;# 
  1820  0F2D                     	;# 
  1821  0FE4                     	;# 
  1822  0FE5                     	;# 
  1823  0FE6                     	;# 
  1824  0FE7                     	;# 
  1825  0FE8                     	;# 
  1826  0FE9                     	;# 
  1827  0FEA                     	;# 
  1828  0FEB                     	;# 
  1829  0FED                     	;# 
  1830  0FEE                     	;# 
  1831  0FEF                     	;# 
  1832  0000                     	;# 
  1833  0001                     	;# 
  1834  0002                     	;# 
  1835  0003                     	;# 
  1836  0004                     	;# 
  1837  0005                     	;# 
  1838  0006                     	;# 
  1839  0007                     	;# 
  1840  0008                     	;# 
  1841  0009                     	;# 
  1842  000A                     	;# 
  1843  000B                     	;# 
  1844  000C                     	;# 
  1845  000D                     	;# 
  1846  000E                     	;# 
  1847  0011                     	;# 
  1848  0012                     	;# 
  1849  0013                     	;# 
  1850  0015                     	;# 
  1851  0016                     	;# 
  1852  0016                     	;# 
  1853  0017                     	;# 
  1854  0018                     	;# 
  1855  0019                     	;# 
  1856  001A                     	;# 
  1857  001B                     	;# 
  1858  001C                     	;# 
  1859  008C                     	;# 
  1860  008D                     	;# 
  1861  008E                     	;# 
  1862  0091                     	;# 
  1863  0092                     	;# 
  1864  0093                     	;# 
  1865  0095                     	;# 
  1866  0096                     	;# 
  1867  0097                     	;# 
  1868  0098                     	;# 
  1869  0099                     	;# 
  1870  009A                     	;# 
  1871  009B                     	;# 
  1872  009B                     	;# 
  1873  009C                     	;# 
  1874  009D                     	;# 
  1875  009E                     	;# 
  1876  009F                     	;# 
  1877  010C                     	;# 
  1878  010D                     	;# 
  1879  010E                     	;# 
  1880  0111                     	;# 
  1881  0112                     	;# 
  1882  0113                     	;# 
  1883  0114                     	;# 
  1884  0115                     	;# 
  1885  0116                     	;# 
  1886  0117                     	;# 
  1887  0118                     	;# 
  1888  0119                     	;# 
  1889  011C                     	;# 
  1890  018C                     	;# 
  1891  018D                     	;# 
  1892  018E                     	;# 
  1893  0191                     	;# 
  1894  0191                     	;# 
  1895  0192                     	;# 
  1896  0193                     	;# 
  1897  0193                     	;# 
  1898  0194                     	;# 
  1899  0195                     	;# 
  1900  0196                     	;# 
  1901  0199                     	;# 
  1902  0199                     	;# 
  1903  0199                     	;# 
  1904  019A                     	;# 
  1905  019A                     	;# 
  1906  019A                     	;# 
  1907  019B                     	;# 
  1908  019B                     	;# 
  1909  019B                     	;# 
  1910  019B                     	;# 
  1911  019B                     	;# 
  1912  019C                     	;# 
  1913  019C                     	;# 
  1914  019C                     	;# 
  1915  019D                     	;# 
  1916  019D                     	;# 
  1917  019D                     	;# 
  1918  019E                     	;# 
  1919  019E                     	;# 
  1920  019E                     	;# 
  1921  019F                     	;# 
  1922  019F                     	;# 
  1923  019F                     	;# 
  1924  019F                     	;# 
  1925  019F                     	;# 
  1926  020C                     	;# 
  1927  020D                     	;# 
  1928  020E                     	;# 
  1929  0211                     	;# 
  1930  0211                     	;# 
  1931  0212                     	;# 
  1932  0212                     	;# 
  1933  0213                     	;# 
  1934  0213                     	;# 
  1935  0214                     	;# 
  1936  0214                     	;# 
  1937  0215                     	;# 
  1938  0215                     	;# 
  1939  0215                     	;# 
  1940  0215                     	;# 
  1941  0216                     	;# 
  1942  0216                     	;# 
  1943  0217                     	;# 
  1944  0217                     	;# 
  1945  028C                     	;# 
  1946  028D                     	;# 
  1947  028E                     	;# 
  1948  0291                     	;# 
  1949  0291                     	;# 
  1950  0292                     	;# 
  1951  0293                     	;# 
  1952  0293                     	;# 
  1953  0298                     	;# 
  1954  0298                     	;# 
  1955  0299                     	;# 
  1956  029A                     	;# 
  1957  029A                     	;# 
  1958  029E                     	;# 
  1959  030C                     	;# 
  1960  030D                     	;# 
  1961  030E                     	;# 
  1962  038C                     	;# 
  1963  038D                     	;# 
  1964  038E                     	;# 
  1965  0391                     	;# 
  1966  0392                     	;# 
  1967  0393                     	;# 
  1968  0394                     	;# 
  1969  0395                     	;# 
  1970  0396                     	;# 
  1971  0397                     	;# 
  1972  0398                     	;# 
  1973  0399                     	;# 
  1974  0415                     	;# 
  1975  0416                     	;# 
  1976  0417                     	;# 
  1977  041C                     	;# 
  1978  041D                     	;# 
  1979  041E                     	;# 
  1980  0511                     	;# 
  1981  0515                     	;# 
  1982  0617                     	;# 
  1983  0618                     	;# 
  1984  0619                     	;# 
  1985  0619                     	;# 
  1986  061A                     	;# 
  1987  061B                     	;# 
  1988  061C                     	;# 
  1989  061C                     	;# 
  1990  0691                     	;# 
  1991  0692                     	;# 
  1992  0693                     	;# 
  1993  0694                     	;# 
  1994  0695                     	;# 
  1995  0696                     	;# 
  1996  0697                     	;# 
  1997  0698                     	;# 
  1998  0699                     	;# 
  1999  069A                     	;# 
  2000  069B                     	;# 
  2001  069C                     	;# 
  2002  069D                     	;# 
  2003  069E                     	;# 
  2004  069F                     	;# 
  2005  0E0F                     	;# 
  2006  0E10                     	;# 
  2007  0E11                     	;# 
  2008  0E12                     	;# 
  2009  0E13                     	;# 
  2010  0E14                     	;# 
  2011  0E15                     	;# 
  2012  0E17                     	;# 
  2013  0E20                     	;# 
  2014  0E21                     	;# 
  2015  0E22                     	;# 
  2016  0E24                     	;# 
  2017  0E25                     	;# 
  2018  0E28                     	;# 
  2019  0E29                     	;# 
  2020  0E2A                     	;# 
  2021  0E2B                     	;# 
  2022  0E90                     	;# 
  2023  0E91                     	;# 
  2024  0E92                     	;# 
  2025  0E94                     	;# 
  2026  0E95                     	;# 
  2027  0E9C                     	;# 
  2028  0E9D                     	;# 
  2029  0E9E                     	;# 
  2030  0E9F                     	;# 
  2031  0EA0                     	;# 
  2032  0EA1                     	;# 
  2033  0EA2                     	;# 
  2034  0EA3                     	;# 
  2035  0EA4                     	;# 
  2036  0EA5                     	;# 
  2037  0EA6                     	;# 
  2038  0EA7                     	;# 
  2039  0F0F                     	;# 
  2040  0F10                     	;# 
  2041  0F11                     	;# 
  2042  0F12                     	;# 
  2043  0F13                     	;# 
  2044  0F14                     	;# 
  2045  0F15                     	;# 
  2046  0F16                     	;# 
  2047  0F17                     	;# 
  2048  0F18                     	;# 
  2049  0F19                     	;# 
  2050  0F1A                     	;# 
  2051  0F1B                     	;# 
  2052  0F1C                     	;# 
  2053  0F1D                     	;# 
  2054  0F1E                     	;# 
  2055  0F1F                     	;# 
  2056  0F20                     	;# 
  2057  0F21                     	;# 
  2058  0F22                     	;# 
  2059  0F23                     	;# 
  2060  0F24                     	;# 
  2061  0F25                     	;# 
  2062  0F26                     	;# 
  2063  0F27                     	;# 
  2064  0F28                     	;# 
  2065  0F29                     	;# 
  2066  0F2A                     	;# 
  2067  0F2B                     	;# 
  2068  0F2C                     	;# 
  2069  0F2D                     	;# 
  2070  0FE4                     	;# 
  2071  0FE5                     	;# 
  2072  0FE6                     	;# 
  2073  0FE7                     	;# 
  2074  0FE8                     	;# 
  2075  0FE9                     	;# 
  2076  0FEA                     	;# 
  2077  0FEB                     	;# 
  2078  0FED                     	;# 
  2079  0FEE                     	;# 
  2080  0FEF                     	;# 
  2081  0000                     	;# 
  2082  0001                     	;# 
  2083  0002                     	;# 
  2084  0003                     	;# 
  2085  0004                     	;# 
  2086  0005                     	;# 
  2087  0006                     	;# 
  2088  0007                     	;# 
  2089  0008                     	;# 
  2090  0009                     	;# 
  2091  000A                     	;# 
  2092  000B                     	;# 
  2093  000C                     	;# 
  2094  000D                     	;# 
  2095  000E                     	;# 
  2096  0011                     	;# 
  2097  0012                     	;# 
  2098  0013                     	;# 
  2099  0015                     	;# 
  2100  0016                     	;# 
  2101  0016                     	;# 
  2102  0017                     	;# 
  2103  0018                     	;# 
  2104  0019                     	;# 
  2105  001A                     	;# 
  2106  001B                     	;# 
  2107  001C                     	;# 
  2108  008C                     	;# 
  2109  008D                     	;# 
  2110  008E                     	;# 
  2111  0091                     	;# 
  2112  0092                     	;# 
  2113  0093                     	;# 
  2114  0095                     	;# 
  2115  0096                     	;# 
  2116  0097                     	;# 
  2117  0098                     	;# 
  2118  0099                     	;# 
  2119  009A                     	;# 
  2120  009B                     	;# 
  2121  009B                     	;# 
  2122  009C                     	;# 
  2123  009D                     	;# 
  2124  009E                     	;# 
  2125  009F                     	;# 
  2126  010C                     	;# 
  2127  010D                     	;# 
  2128  010E                     	;# 
  2129  0111                     	;# 
  2130  0112                     	;# 
  2131  0113                     	;# 
  2132  0114                     	;# 
  2133  0115                     	;# 
  2134  0116                     	;# 
  2135  0117                     	;# 
  2136  0118                     	;# 
  2137  0119                     	;# 
  2138  011C                     	;# 
  2139  018C                     	;# 
  2140  018D                     	;# 
  2141  018E                     	;# 
  2142  0191                     	;# 
  2143  0191                     	;# 
  2144  0192                     	;# 
  2145  0193                     	;# 
  2146  0193                     	;# 
  2147  0194                     	;# 
  2148  0195                     	;# 
  2149  0196                     	;# 
  2150  0199                     	;# 
  2151  0199                     	;# 
  2152  0199                     	;# 
  2153  019A                     	;# 
  2154  019A                     	;# 
  2155  019A                     	;# 
  2156  019B                     	;# 
  2157  019B                     	;# 
  2158  019B                     	;# 
  2159  019B                     	;# 
  2160  019B                     	;# 
  2161  019C                     	;# 
  2162  019C                     	;# 
  2163  019C                     	;# 
  2164  019D                     	;# 
  2165  019D                     	;# 
  2166  019D                     	;# 
  2167  019E                     	;# 
  2168  019E                     	;# 
  2169  019E                     	;# 
  2170  019F                     	;# 
  2171  019F                     	;# 
  2172  019F                     	;# 
  2173  019F                     	;# 
  2174  019F                     	;# 
  2175  020C                     	;# 
  2176  020D                     	;# 
  2177  020E                     	;# 
  2178  0211                     	;# 
  2179  0211                     	;# 
  2180  0212                     	;# 
  2181  0212                     	;# 
  2182  0213                     	;# 
  2183  0213                     	;# 
  2184  0214                     	;# 
  2185  0214                     	;# 
  2186  0215                     	;# 
  2187  0215                     	;# 
  2188  0215                     	;# 
  2189  0215                     	;# 
  2190  0216                     	;# 
  2191  0216                     	;# 
  2192  0217                     	;# 
  2193  0217                     	;# 
  2194  028C                     	;# 
  2195  028D                     	;# 
  2196  028E                     	;# 
  2197  0291                     	;# 
  2198  0291                     	;# 
  2199  0292                     	;# 
  2200  0293                     	;# 
  2201  0293                     	;# 
  2202  0298                     	;# 
  2203  0298                     	;# 
  2204  0299                     	;# 
  2205  029A                     	;# 
  2206  029A                     	;# 
  2207  029E                     	;# 
  2208  030C                     	;# 
  2209  030D                     	;# 
  2210  030E                     	;# 
  2211  038C                     	;# 
  2212  038D                     	;# 
  2213  038E                     	;# 
  2214  0391                     	;# 
  2215  0392                     	;# 
  2216  0393                     	;# 
  2217  0394                     	;# 
  2218  0395                     	;# 
  2219  0396                     	;# 
  2220  0397                     	;# 
  2221  0398                     	;# 
  2222  0399                     	;# 
  2223  0415                     	;# 
  2224  0416                     	;# 
  2225  0417                     	;# 
  2226  041C                     	;# 
  2227  041D                     	;# 
  2228  041E                     	;# 
  2229  0511                     	;# 
  2230  0515                     	;# 
  2231  0617                     	;# 
  2232  0618                     	;# 
  2233  0619                     	;# 
  2234  0619                     	;# 
  2235  061A                     	;# 
  2236  061B                     	;# 
  2237  061C                     	;# 
  2238  061C                     	;# 
  2239  0691                     	;# 
  2240  0692                     	;# 
  2241  0693                     	;# 
  2242  0694                     	;# 
  2243  0695                     	;# 
  2244  0696                     	;# 
  2245  0697                     	;# 
  2246  0698                     	;# 
  2247  0699                     	;# 
  2248  069A                     	;# 
  2249  069B                     	;# 
  2250  069C                     	;# 
  2251  069D                     	;# 
  2252  069E                     	;# 
  2253  069F                     	;# 
  2254  0E0F                     	;# 
  2255  0E10                     	;# 
  2256  0E11                     	;# 
  2257  0E12                     	;# 
  2258  0E13                     	;# 
  2259  0E14                     	;# 
  2260  0E15                     	;# 
  2261  0E17                     	;# 
  2262  0E20                     	;# 
  2263  0E21                     	;# 
  2264  0E22                     	;# 
  2265  0E24                     	;# 
  2266  0E25                     	;# 
  2267  0E28                     	;# 
  2268  0E29                     	;# 
  2269  0E2A                     	;# 
  2270  0E2B                     	;# 
  2271  0E90                     	;# 
  2272  0E91                     	;# 
  2273  0E92                     	;# 
  2274  0E94                     	;# 
  2275  0E95                     	;# 
  2276  0E9C                     	;# 
  2277  0E9D                     	;# 
  2278  0E9E                     	;# 
  2279  0E9F                     	;# 
  2280  0EA0                     	;# 
  2281  0EA1                     	;# 
  2282  0EA2                     	;# 
  2283  0EA3                     	;# 
  2284  0EA4                     	;# 
  2285  0EA5                     	;# 
  2286  0EA6                     	;# 
  2287  0EA7                     	;# 
  2288  0F0F                     	;# 
  2289  0F10                     	;# 
  2290  0F11                     	;# 
  2291  0F12                     	;# 
  2292  0F13                     	;# 
  2293  0F14                     	;# 
  2294  0F15                     	;# 
  2295  0F16                     	;# 
  2296  0F17                     	;# 
  2297  0F18                     	;# 
  2298  0F19                     	;# 
  2299  0F1A                     	;# 
  2300  0F1B                     	;# 
  2301  0F1C                     	;# 
  2302  0F1D                     	;# 
  2303  0F1E                     	;# 
  2304  0F1F                     	;# 
  2305  0F20                     	;# 
  2306  0F21                     	;# 
  2307  0F22                     	;# 
  2308  0F23                     	;# 
  2309  0F24                     	;# 
  2310  0F25                     	;# 
  2311  0F26                     	;# 
  2312  0F27                     	;# 
  2313  0F28                     	;# 
  2314  0F29                     	;# 
  2315  0F2A                     	;# 
  2316  0F2B                     	;# 
  2317  0F2C                     	;# 
  2318  0F2D                     	;# 
  2319  0FE4                     	;# 
  2320  0FE5                     	;# 
  2321  0FE6                     	;# 
  2322  0FE7                     	;# 
  2323  0FE8                     	;# 
  2324  0FE9                     	;# 
  2325  0FEA                     	;# 
  2326  0FEB                     	;# 
  2327  0FED                     	;# 
  2328  0FEE                     	;# 
  2329  0FEF                     	;# 
  2330  0000                     	;# 
  2331  0001                     	;# 
  2332  0002                     	;# 
  2333  0003                     	;# 
  2334  0004                     	;# 
  2335  0005                     	;# 
  2336  0006                     	;# 
  2337  0007                     	;# 
  2338  0008                     	;# 
  2339  0009                     	;# 
  2340  000A                     	;# 
  2341  000B                     	;# 
  2342  000C                     	;# 
  2343  000D                     	;# 
  2344  000E                     	;# 
  2345  0011                     	;# 
  2346  0012                     	;# 
  2347  0013                     	;# 
  2348  0015                     	;# 
  2349  0016                     	;# 
  2350  0016                     	;# 
  2351  0017                     	;# 
  2352  0018                     	;# 
  2353  0019                     	;# 
  2354  001A                     	;# 
  2355  001B                     	;# 
  2356  001C                     	;# 
  2357  008C                     	;# 
  2358  008D                     	;# 
  2359  008E                     	;# 
  2360  0091                     	;# 
  2361  0092                     	;# 
  2362  0093                     	;# 
  2363  0095                     	;# 
  2364  0096                     	;# 
  2365  0097                     	;# 
  2366  0098                     	;# 
  2367  0099                     	;# 
  2368  009A                     	;# 
  2369  009B                     	;# 
  2370  009B                     	;# 
  2371  009C                     	;# 
  2372  009D                     	;# 
  2373  009E                     	;# 
  2374  009F                     	;# 
  2375  010C                     	;# 
  2376  010D                     	;# 
  2377  010E                     	;# 
  2378  0111                     	;# 
  2379  0112                     	;# 
  2380  0113                     	;# 
  2381  0114                     	;# 
  2382  0115                     	;# 
  2383  0116                     	;# 
  2384  0117                     	;# 
  2385  0118                     	;# 
  2386  0119                     	;# 
  2387  011C                     	;# 
  2388  018C                     	;# 
  2389  018D                     	;# 
  2390  018E                     	;# 
  2391  0191                     	;# 
  2392  0191                     	;# 
  2393  0192                     	;# 
  2394  0193                     	;# 
  2395  0193                     	;# 
  2396  0194                     	;# 
  2397  0195                     	;# 
  2398  0196                     	;# 
  2399  0199                     	;# 
  2400  0199                     	;# 
  2401  0199                     	;# 
  2402  019A                     	;# 
  2403  019A                     	;# 
  2404  019A                     	;# 
  2405  019B                     	;# 
  2406  019B                     	;# 
  2407  019B                     	;# 
  2408  019B                     	;# 
  2409  019B                     	;# 
  2410  019C                     	;# 
  2411  019C                     	;# 
  2412  019C                     	;# 
  2413  019D                     	;# 
  2414  019D                     	;# 
  2415  019D                     	;# 
  2416  019E                     	;# 
  2417  019E                     	;# 
  2418  019E                     	;# 
  2419  019F                     	;# 
  2420  019F                     	;# 
  2421  019F                     	;# 
  2422  019F                     	;# 
  2423  019F                     	;# 
  2424  020C                     	;# 
  2425  020D                     	;# 
  2426  020E                     	;# 
  2427  0211                     	;# 
  2428  0211                     	;# 
  2429  0212                     	;# 
  2430  0212                     	;# 
  2431  0213                     	;# 
  2432  0213                     	;# 
  2433  0214                     	;# 
  2434  0214                     	;# 
  2435  0215                     	;# 
  2436  0215                     	;# 
  2437  0215                     	;# 
  2438  0215                     	;# 
  2439  0216                     	;# 
  2440  0216                     	;# 
  2441  0217                     	;# 
  2442  0217                     	;# 
  2443  028C                     	;# 
  2444  028D                     	;# 
  2445  028E                     	;# 
  2446  0291                     	;# 
  2447  0291                     	;# 
  2448  0292                     	;# 
  2449  0293                     	;# 
  2450  0293                     	;# 
  2451  0298                     	;# 
  2452  0298                     	;# 
  2453  0299                     	;# 
  2454  029A                     	;# 
  2455  029A                     	;# 
  2456  029E                     	;# 
  2457  030C                     	;# 
  2458  030D                     	;# 
  2459  030E                     	;# 
  2460  038C                     	;# 
  2461  038D                     	;# 
  2462  038E                     	;# 
  2463  0391                     	;# 
  2464  0392                     	;# 
  2465  0393                     	;# 
  2466  0394                     	;# 
  2467  0395                     	;# 
  2468  0396                     	;# 
  2469  0397                     	;# 
  2470  0398                     	;# 
  2471  0399                     	;# 
  2472  0415                     	;# 
  2473  0416                     	;# 
  2474  0417                     	;# 
  2475  041C                     	;# 
  2476  041D                     	;# 
  2477  041E                     	;# 
  2478  0511                     	;# 
  2479  0515                     	;# 
  2480  0617                     	;# 
  2481  0618                     	;# 
  2482  0619                     	;# 
  2483  0619                     	;# 
  2484  061A                     	;# 
  2485  061B                     	;# 
  2486  061C                     	;# 
  2487  061C                     	;# 
  2488  0691                     	;# 
  2489  0692                     	;# 
  2490  0693                     	;# 
  2491  0694                     	;# 
  2492  0695                     	;# 
  2493  0696                     	;# 
  2494  0697                     	;# 
  2495  0698                     	;# 
  2496  0699                     	;# 
  2497  069A                     	;# 
  2498  069B                     	;# 
  2499  069C                     	;# 
  2500  069D                     	;# 
  2501  069E                     	;# 
  2502  069F                     	;# 
  2503  0E0F                     	;# 
  2504  0E10                     	;# 
  2505  0E11                     	;# 
  2506  0E12                     	;# 
  2507  0E13                     	;# 
  2508  0E14                     	;# 
  2509  0E15                     	;# 
  2510  0E17                     	;# 
  2511  0E20                     	;# 
  2512  0E21                     	;# 
  2513  0E22                     	;# 
  2514  0E24                     	;# 
  2515  0E25                     	;# 
  2516  0E28                     	;# 
  2517  0E29                     	;# 
  2518  0E2A                     	;# 
  2519  0E2B                     	;# 
  2520  0E90                     	;# 
  2521  0E91                     	;# 
  2522  0E92                     	;# 
  2523  0E94                     	;# 
  2524  0E95                     	;# 
  2525  0E9C                     	;# 
  2526  0E9D                     	;# 
  2527  0E9E                     	;# 
  2528  0E9F                     	;# 
  2529  0EA0                     	;# 
  2530  0EA1                     	;# 
  2531  0EA2                     	;# 
  2532  0EA3                     	;# 
  2533  0EA4                     	;# 
  2534  0EA5                     	;# 
  2535  0EA6                     	;# 
  2536  0EA7                     	;# 
  2537  0F0F                     	;# 
  2538  0F10                     	;# 
  2539  0F11                     	;# 
  2540  0F12                     	;# 
  2541  0F13                     	;# 
  2542  0F14                     	;# 
  2543  0F15                     	;# 
  2544  0F16                     	;# 
  2545  0F17                     	;# 
  2546  0F18                     	;# 
  2547  0F19                     	;# 
  2548  0F1A                     	;# 
  2549  0F1B                     	;# 
  2550  0F1C                     	;# 
  2551  0F1D                     	;# 
  2552  0F1E                     	;# 
  2553  0F1F                     	;# 
  2554  0F20                     	;# 
  2555  0F21                     	;# 
  2556  0F22                     	;# 
  2557  0F23                     	;# 
  2558  0F24                     	;# 
  2559  0F25                     	;# 
  2560  0F26                     	;# 
  2561  0F27                     	;# 
  2562  0F28                     	;# 
  2563  0F29                     	;# 
  2564  0F2A                     	;# 
  2565  0F2B                     	;# 
  2566  0F2C                     	;# 
  2567  0F2D                     	;# 
  2568  0FE4                     	;# 
  2569  0FE5                     	;# 
  2570  0FE6                     	;# 
  2571  0FE7                     	;# 
  2572  0FE8                     	;# 
  2573  0FE9                     	;# 
  2574  0FEA                     	;# 
  2575  0FEB                     	;# 
  2576  0FED                     	;# 
  2577  0FEE                     	;# 
  2578  0FEF                     	;# 
  2579  0000                     	;# 
  2580  0001                     	;# 
  2581  0002                     	;# 
  2582  0003                     	;# 
  2583  0004                     	;# 
  2584  0005                     	;# 
  2585  0006                     	;# 
  2586  0007                     	;# 
  2587  0008                     	;# 
  2588  0009                     	;# 
  2589  000A                     	;# 
  2590  000B                     	;# 
  2591  000C                     	;# 
  2592  000D                     	;# 
  2593  000E                     	;# 
  2594  0011                     	;# 
  2595  0012                     	;# 
  2596  0013                     	;# 
  2597  0015                     	;# 
  2598  0016                     	;# 
  2599  0016                     	;# 
  2600  0017                     	;# 
  2601  0018                     	;# 
  2602  0019                     	;# 
  2603  001A                     	;# 
  2604  001B                     	;# 
  2605  001C                     	;# 
  2606  008C                     	;# 
  2607  008D                     	;# 
  2608  008E                     	;# 
  2609  0091                     	;# 
  2610  0092                     	;# 
  2611  0093                     	;# 
  2612  0095                     	;# 
  2613  0096                     	;# 
  2614  0097                     	;# 
  2615  0098                     	;# 
  2616  0099                     	;# 
  2617  009A                     	;# 
  2618  009B                     	;# 
  2619  009B                     	;# 
  2620  009C                     	;# 
  2621  009D                     	;# 
  2622  009E                     	;# 
  2623  009F                     	;# 
  2624  010C                     	;# 
  2625  010D                     	;# 
  2626  010E                     	;# 
  2627  0111                     	;# 
  2628  0112                     	;# 
  2629  0113                     	;# 
  2630  0114                     	;# 
  2631  0115                     	;# 
  2632  0116                     	;# 
  2633  0117                     	;# 
  2634  0118                     	;# 
  2635  0119                     	;# 
  2636  011C                     	;# 
  2637  018C                     	;# 
  2638  018D                     	;# 
  2639  018E                     	;# 
  2640  0191                     	;# 
  2641  0191                     	;# 
  2642  0192                     	;# 
  2643  0193                     	;# 
  2644  0193                     	;# 
  2645  0194                     	;# 
  2646  0195                     	;# 
  2647  0196                     	;# 
  2648  0199                     	;# 
  2649  0199                     	;# 
  2650  0199                     	;# 
  2651  019A                     	;# 
  2652  019A                     	;# 
  2653  019A                     	;# 
  2654  019B                     	;# 
  2655  019B                     	;# 
  2656  019B                     	;# 
  2657  019B                     	;# 
  2658  019B                     	;# 
  2659  019C                     	;# 
  2660  019C                     	;# 
  2661  019C                     	;# 
  2662  019D                     	;# 
  2663  019D                     	;# 
  2664  019D                     	;# 
  2665  019E                     	;# 
  2666  019E                     	;# 
  2667  019E                     	;# 
  2668  019F                     	;# 
  2669  019F                     	;# 
  2670  019F                     	;# 
  2671  019F                     	;# 
  2672  019F                     	;# 
  2673  020C                     	;# 
  2674  020D                     	;# 
  2675  020E                     	;# 
  2676  0211                     	;# 
  2677  0211                     	;# 
  2678  0212                     	;# 
  2679  0212                     	;# 
  2680  0213                     	;# 
  2681  0213                     	;# 
  2682  0214                     	;# 
  2683  0214                     	;# 
  2684  0215                     	;# 
  2685  0215                     	;# 
  2686  0215                     	;# 
  2687  0215                     	;# 
  2688  0216                     	;# 
  2689  0216                     	;# 
  2690  0217                     	;# 
  2691  0217                     	;# 
  2692  028C                     	;# 
  2693  028D                     	;# 
  2694  028E                     	;# 
  2695  0291                     	;# 
  2696  0291                     	;# 
  2697  0292                     	;# 
  2698  0293                     	;# 
  2699  0293                     	;# 
  2700  0298                     	;# 
  2701  0298                     	;# 
  2702  0299                     	;# 
  2703  029A                     	;# 
  2704  029A                     	;# 
  2705  029E                     	;# 
  2706  030C                     	;# 
  2707  030D                     	;# 
  2708  030E                     	;# 
  2709  038C                     	;# 
  2710  038D                     	;# 
  2711  038E                     	;# 
  2712  0391                     	;# 
  2713  0392                     	;# 
  2714  0393                     	;# 
  2715  0394                     	;# 
  2716  0395                     	;# 
  2717  0396                     	;# 
  2718  0397                     	;# 
  2719  0398                     	;# 
  2720  0399                     	;# 
  2721  0415                     	;# 
  2722  0416                     	;# 
  2723  0417                     	;# 
  2724  041C                     	;# 
  2725  041D                     	;# 
  2726  041E                     	;# 
  2727  0511                     	;# 
  2728  0515                     	;# 
  2729  0617                     	;# 
  2730  0618                     	;# 
  2731  0619                     	;# 
  2732  0619                     	;# 
  2733  061A                     	;# 
  2734  061B                     	;# 
  2735  061C                     	;# 
  2736  061C                     	;# 
  2737  0691                     	;# 
  2738  0692                     	;# 
  2739  0693                     	;# 
  2740  0694                     	;# 
  2741  0695                     	;# 
  2742  0696                     	;# 
  2743  0697                     	;# 
  2744  0698                     	;# 
  2745  0699                     	;# 
  2746  069A                     	;# 
  2747  069B                     	;# 
  2748  069C                     	;# 
  2749  069D                     	;# 
  2750  069E                     	;# 
  2751  069F                     	;# 
  2752  0E0F                     	;# 
  2753  0E10                     	;# 
  2754  0E11                     	;# 
  2755  0E12                     	;# 
  2756  0E13                     	;# 
  2757  0E14                     	;# 
  2758  0E15                     	;# 
  2759  0E17                     	;# 
  2760  0E20                     	;# 
  2761  0E21                     	;# 
  2762  0E22                     	;# 
  2763  0E24                     	;# 
  2764  0E25                     	;# 
  2765  0E28                     	;# 
  2766  0E29                     	;# 
  2767  0E2A                     	;# 
  2768  0E2B                     	;# 
  2769  0E90                     	;# 
  2770  0E91                     	;# 
  2771  0E92                     	;# 
  2772  0E94                     	;# 
  2773  0E95                     	;# 
  2774  0E9C                     	;# 
  2775  0E9D                     	;# 
  2776  0E9E                     	;# 
  2777  0E9F                     	;# 
  2778  0EA0                     	;# 
  2779  0EA1                     	;# 
  2780  0EA2                     	;# 
  2781  0EA3                     	;# 
  2782  0EA4                     	;# 
  2783  0EA5                     	;# 
  2784  0EA6                     	;# 
  2785  0EA7                     	;# 
  2786  0F0F                     	;# 
  2787  0F10                     	;# 
  2788  0F11                     	;# 
  2789  0F12                     	;# 
  2790  0F13                     	;# 
  2791  0F14                     	;# 
  2792  0F15                     	;# 
  2793  0F16                     	;# 
  2794  0F17                     	;# 
  2795  0F18                     	;# 
  2796  0F19                     	;# 
  2797  0F1A                     	;# 
  2798  0F1B                     	;# 
  2799  0F1C                     	;# 
  2800  0F1D                     	;# 
  2801  0F1E                     	;# 
  2802  0F1F                     	;# 
  2803  0F20                     	;# 
  2804  0F21                     	;# 
  2805  0F22                     	;# 
  2806  0F23                     	;# 
  2807  0F24                     	;# 
  2808  0F25                     	;# 
  2809  0F26                     	;# 
  2810  0F27                     	;# 
  2811  0F28                     	;# 
  2812  0F29                     	;# 
  2813  0F2A                     	;# 
  2814  0F2B                     	;# 
  2815  0F2C                     	;# 
  2816  0F2D                     	;# 
  2817  0FE4                     	;# 
  2818  0FE5                     	;# 
  2819  0FE6                     	;# 
  2820  0FE7                     	;# 
  2821  0FE8                     	;# 
  2822  0FE9                     	;# 
  2823  0FEA                     	;# 
  2824  0FEB                     	;# 
  2825  0FED                     	;# 
  2826  0FEE                     	;# 
  2827  0FEF                     	;# 
  2828                           
  2829 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2830  0000                     
  2831 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2832  0000                     
  2833 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2834  0000                     
  2835                           	psect	stringtext1
  2836  0529                     __pstringtext1:
  2837  0529                     _dpowers:
  2838  0529  3401               	retlw	1
  2839  052A  3400               	retlw	0
  2840  052B  340A               	retlw	10
  2841  052C  3400               	retlw	0
  2842  052D  3464               	retlw	100
  2843  052E  3400               	retlw	0
  2844  052F  34E8               	retlw	232
  2845  0530  3403               	retlw	3
  2846  0531  3410               	retlw	16
  2847  0532  3427               	retlw	39
  2848  0533                     __end_of_dpowers:
  2849                           
  2850                           	psect	nvBANK0
  2851  004D                     __pnvBANK0:
  2852  004D                     _INT_InterruptHandler:
  2853  004D                     	ds	2
  2854  004F                     _EUSART_ErrorHandler:
  2855  004F                     	ds	2
  2856  0051                     _EUSART_OverrunErrorHandler:
  2857  0051                     	ds	2
  2858  0053                     _EUSART_FramingErrorHandler:
  2859  0053                     	ds	2
  2860  001C                     _T2CONbits	set	28
  2861  001C                     _T2CON	set	28
  2862  001A                     _TMR2	set	26
  2863  001B                     _PR2	set	27
  2864  0015                     _TMR0	set	21
  2865  0011                     _PIR1bits	set	17
  2866  000B                     _INTCONbits	set	11
  2867  009D                     _ADCON0bits	set	157
  2868  009E                     _ADCON1	set	158
  2869  009D                     _ADCON0	set	157
  2870  0095                     _OPTION_REG	set	149
  2871  0095                     _OPTION_REGbits	set	149
  2872  008E                     _TRISC	set	142
  2873  008D                     _TRISB	set	141
  2874  008C                     _TRISA	set	140
  2875  0097                     _WDTCON	set	151
  2876  0098                     _OSCTUNE	set	152
  2877  009A                     _OSCSTAT	set	154
  2878  0099                     _OSCCON	set	153
  2879  009B                     _ADRES	set	155
  2880  0117                     _FVRCONbits	set	279
  2881  0117                     _FVRCON	set	279
  2882  010E                     _LATC	set	270
  2883  010D                     _LATB	set	269
  2884  010C                     _LATA	set	268
  2885  0116                     _BORCON	set	278
  2886  0119                     _DAC1CON1	set	281
  2887  0118                     _DAC1CON0	set	280
  2888  019A                     _TX1REG	set	410
  2889  0199                     _RC1REG	set	409
  2890  019D                     _RC1STAbits	set	413
  2891  019E                     _TX1STAbits	set	414
  2892  019C                     _SP1BRGH	set	412
  2893  019B                     _SP1BRGL	set	411
  2894  019E                     _TX1STA	set	414
  2895  019D                     _RC1STA	set	413
  2896  019F                     _BAUD1CON	set	415
  2897  018C                     _ANSELA	set	396
  2898  018D                     _ANSELB	set	397
  2899  018E                     _ANSELC	set	398
  2900  020E                     _WPUC	set	526
  2901  020C                     _WPUA	set	524
  2902  020D                     _WPUB	set	525
  2903  0291                     _CCPR1L	set	657
  2904  0293                     _CCP1CONbits	set	659
  2905  029E                     _CCPTMRSbits	set	670
  2906  028E                     _ODCONC	set	654
  2907  028D                     _ODCONB	set	653
  2908  028C                     _ODCONA	set	652
  2909  030E                     _SLRCONC	set	782
  2910  030D                     _SLRCONB	set	781
  2911  030C                     _SLRCONA	set	780
  2912  038E                     _INLVLC	set	910
  2913  038D                     _INLVLB	set	909
  2914  038C                     _INLVLA	set	908
  2915  0515                     _OPA2CON	set	1301
  2916  0511                     _OPA1CON	set	1297
  2917  061C                     _PWM4CONbits	set	1564
  2918  061A                     _PWM4DCLbits	set	1562
  2919  061B                     _PWM4DCH	set	1563
  2920  0619                     _PWM3CONbits	set	1561
  2921  0617                     _PWM3DCLbits	set	1559
  2922  0618                     _PWM3DCH	set	1560
  2923  0E24                     _RXPPS	set	3620
  2924  0E10                     _INTPPS	set	3600
  2925  0EA5                     _RC5PPS	set	3749
  2926  0E95                     _RA5PPS	set	3733
  2927  0EA4                     _RC4PPS	set	3748
  2928  0E9F                     _RB7PPS	set	3743
  2929                           
  2930                           	psect	stringtext2
  2931  04E1                     __pstringtext2:
  2932  04E1                     STR_1:
  2933  04E1  340A               	retlw	10
  2934  04E2  3420               	retlw	32	;' '
  2935  04E3  3446               	retlw	70	;'F'
  2936  04E4  3472               	retlw	114	;'r'
  2937  04E5  3465               	retlw	101	;'e'
  2938  04E6  3471               	retlw	113	;'q'
  2939  04E7  3475               	retlw	117	;'u'
  2940  04E8  3465               	retlw	101	;'e'
  2941  04E9  346E               	retlw	110	;'n'
  2942  04EA  3463               	retlw	99	;'c'
  2943  04EB  3479               	retlw	121	;'y'
  2944  04EC  3420               	retlw	32	;' '
  2945  04ED  3473               	retlw	115	;'s'
  2946  04EE  3465               	retlw	101	;'e'
  2947  04EF  346C               	retlw	108	;'l'
  2948  04F0  3465               	retlw	101	;'e'
  2949  04F1  3463               	retlw	99	;'c'
  2950  04F2  3474               	retlw	116	;'t'
  2951  04F3  3465               	retlw	101	;'e'
  2952  04F4  3464               	retlw	100	;'d'
  2953  04F5  3400               	retlw	0
  2954                           
  2955                           	psect	stringtext3
  2956  04F6                     __pstringtext3:
  2957  04F6                     STR_4:
  2958  04F6  340A               	retlw	10
  2959  04F7  3420               	retlw	32	;' '
  2960  04F8  3472               	retlw	114	;'r'
  2961  04F9  3465               	retlw	101	;'e'
  2962  04FA  3473               	retlw	115	;'s'
  2963  04FB  3465               	retlw	101	;'e'
  2964  04FC  3474               	retlw	116	;'t'
  2965  04FD  3420               	retlw	32	;' '
  2966  04FE  3473               	retlw	115	;'s'
  2967  04FF  3465               	retlw	101	;'e'
  2968  0500  346C               	retlw	108	;'l'
  2969  0501  3465               	retlw	101	;'e'
  2970  0502  3463               	retlw	99	;'c'
  2971  0503  3474               	retlw	116	;'t'
  2972  0504  3400               	retlw	0
  2973                           
  2974                           	psect	stringtext4
  2975  057E                     __pstringtext4:
  2976  057E                     STR_2:
  2977  057E  3425               	retlw	37	;'%'
  2978  057F  3464               	retlw	100	;'d'
  2979  0580  340A               	retlw	10
  2980  0581  3400               	retlw	0
  2981                           
  2982                           	psect	stringtext5
  2983  0000                     __pstringtext5:
  2984  057E                     
  2985                           	psect	cinit
  2986  0016                     start_initialization:	
  2987                           ; #config settings
  2988                           
  2989  0016                     __initialization:
  2990                           
  2991                           ; Clear objects allocated to COMMON
  2992  0016  01F0               	clrf	__pbssCOMMON& (0+127)
  2993  0017  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2994  0018  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2995  0019  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2996  001A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2997  001B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2998  001C  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  2999                           
  3000                           ; Clear objects allocated to BANK0
  3001  001D  303F               	movlw	low __pbssBANK0
  3002  001E  0084               	movwf	4
  3003  001F  3000               	movlw	high __pbssBANK0
  3004  0020  0085               	movwf	5
  3005  0021  300E               	movlw	14
  3006  0022  3185  2555  3180   	fcall	clear_ram0
  3007                           
  3008                           ; Clear objects allocated to BANK1
  3009  0025  30A0               	movlw	low __pbssBANK1
  3010  0026  0084               	movwf	4
  3011  0027  3000               	movlw	high __pbssBANK1
  3012  0028  0085               	movwf	5
  3013  0029  3021               	movlw	33
  3014  002A  3185  2555         	fcall	clear_ram0
  3015  002C                     end_of_initialization:	
  3016                           ;End of C runtime variable initialization code
  3017                           
  3018  002C                     __end_of__initialization:
  3019  002C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3020  002D  0020               	movlb	0
  3021  002E  3183  2BC1         	ljmp	_main	;jump to C main() function
  3022                           
  3023                           	psect	bssCOMMON
  3024  0070                     __pbssCOMMON:
  3025  0070                     _timer0ReloadVal:
  3026  0070                     	ds	1
  3027  0071                     _ir_code:
  3028  0071                     	ds	6
  3029                           
  3030                           	psect	bssBANK0
  3031  003F                     __pbssBANK0:
  3032  003F                     _Vdd_mv:
  3033  003F                     	ds	2
  3034  0041                     _microamps:
  3035  0041                     	ds	2
  3036  0043                     _current:
  3037  0043                     	ds	1
  3038  0044                     _duty:
  3039  0044                     	ds	1
  3040  0045                     _frequency:
  3041  0045                     	ds	1
  3042  0046                     _flag:
  3043  0046                     	ds	1
  3044  0047                     _LED_blue:
  3045  0047                     	ds	1
  3046  0048                     _LED_green:
  3047  0048                     	ds	1
  3048  0049                     _LED_red:
  3049  0049                     	ds	1
  3050  004A                     _eusartRxLastError:
  3051  004A                     	ds	1
  3052  004B                     _Vdac_mv:
  3053  004B                     	ds	2
  3054                           
  3055                           	psect	bssBANK1
  3056  00A0                     __pbssBANK1:
  3057  00A0                     _stats:
  3058  00A0                     	ds	33
  3059                           
  3060                           	psect	clrtext
  3061  0555                     clear_ram0:	
  3062                           ;	Called with FSR0 containing the base address, and
  3063                           ;	WREG with the size to clear
  3064                           
  3065  0555  0064               	clrwdt	;clear the watchdog before getting into this loop
  3066  0556                     clrloop0:
  3067  0556  0180               	clrf	0	;clear RAM location pointed to by FSR
  3068  0557  3101               	addfsr 0,1
  3069  0558  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3070  0559  2D56               	goto	clrloop0	;have we reached the end yet?
  3071  055A  3400               	retlw	0	;all done for this memory range, return
  3072                           
  3073                           	psect	cstackCOMMON
  3074  0077                     __pcstackCOMMON:
  3075  0077                     ?_PIN_MANAGER_Initialize:
  3076  0077                     ?_OSCILLATOR_Initialize:	
  3077                           ; 1 bytes @ 0x0
  3078                           
  3079  0077                     ?_WDT_Initialize:	
  3080                           ; 1 bytes @ 0x0
  3081                           
  3082  0077                     ?_OPA1_Initialize:	
  3083                           ; 1 bytes @ 0x0
  3084                           
  3085  0077                     ?_OPA2_Initialize:	
  3086                           ; 1 bytes @ 0x0
  3087                           
  3088  0077                     ?_TMR2_Initialize:	
  3089                           ; 1 bytes @ 0x0
  3090                           
  3091  0077                     ?_EXT_INT_Initialize:	
  3092                           ; 1 bytes @ 0x0
  3093                           
  3094  0077                     ?_TMR0_Initialize:	
  3095                           ; 1 bytes @ 0x0
  3096                           
  3097  0077                     ?_EUSART_Initialize:	
  3098                           ; 1 bytes @ 0x0
  3099                           
  3100  0077                     ?_INT_ISR:	
  3101                           ; 1 bytes @ 0x0
  3102                           
  3103  0077                     ?_INT_CallBack:	
  3104                           ; 1 bytes @ 0x0
  3105                           
  3106  0077                     ?_DAC_Initialize:	
  3107                           ; 1 bytes @ 0x0
  3108                           
  3109  0077                     ?_SYSTEM_Initialize:	
  3110                           ; 1 bytes @ 0x0
  3111                           
  3112  0077                     ?_PIN_MANAGER_IOC:	
  3113                           ; 1 bytes @ 0x0
  3114                           
  3115  0077                     ??_PIN_MANAGER_IOC:	
  3116                           ; 1 bytes @ 0x0
  3117                           
  3118  0077                     ?_INTERRUPT_InterruptManager:	
  3119                           ; 1 bytes @ 0x0
  3120                           
  3121  0077                     ?_EUSART_Write:	
  3122                           ; 1 bytes @ 0x0
  3123                           
  3124  0077                     ?_putch:	
  3125                           ; 1 bytes @ 0x0
  3126                           
  3127  0077                     ?_INT_DefaultInterruptHandler:	
  3128                           ; 1 bytes @ 0x0
  3129                           
  3130  0077                     ??_INT_DefaultInterruptHandler:	
  3131                           ; 1 bytes @ 0x0
  3132                           
  3133  0077                     ?_initLED:	
  3134                           ; 1 bytes @ 0x0
  3135                           
  3136  0077                     ?_lowBattery:	
  3137                           ; 1 bytes @ 0x0
  3138                           
  3139  0077                     ?_startUp:	
  3140                           ; 1 bytes @ 0x0
  3141                           
  3142  0077                     ?_selectSomething:	
  3143                           ; 1 bytes @ 0x0
  3144                           
  3145  0077                     ?_selectFrequency:	
  3146                           ; 1 bytes @ 0x0
  3147                           
  3148  0077                     ?_process_remote_command:	
  3149                           ; 1 bytes @ 0x0
  3150                           
  3151  0077                     ?_main:	
  3152                           ; 1 bytes @ 0x0
  3153                           
  3154                           
  3155                           ; 1 bytes @ 0x0
  3156  0077                     	ds	1
  3157  0078                     INT_DefaultInterruptHandler@time:
  3158                           
  3159                           ; 1 bytes @ 0x1
  3160  0078                     	ds	1
  3161  0079                     ??_PIN_MANAGER_Initialize:
  3162  0079                     ??_OSCILLATOR_Initialize:	
  3163                           ; 1 bytes @ 0x2
  3164                           
  3165  0079                     ??_WDT_Initialize:	
  3166                           ; 1 bytes @ 0x2
  3167                           
  3168  0079                     ??_OPA1_Initialize:	
  3169                           ; 1 bytes @ 0x2
  3170                           
  3171  0079                     ??_OPA2_Initialize:	
  3172                           ; 1 bytes @ 0x2
  3173                           
  3174  0079                     ??_TMR2_Initialize:	
  3175                           ; 1 bytes @ 0x2
  3176                           
  3177  0079                     ??_EXT_INT_Initialize:	
  3178                           ; 1 bytes @ 0x2
  3179                           
  3180  0079                     ??_TMR0_Initialize:	
  3181                           ; 1 bytes @ 0x2
  3182                           
  3183  0079                     ??_EUSART_Initialize:	
  3184                           ; 1 bytes @ 0x2
  3185                           
  3186  0079                     ??_INT_ISR:	
  3187                           ; 1 bytes @ 0x2
  3188                           
  3189  0079                     ??_EUSART_SetFramingErrorHandler:	
  3190                           ; 1 bytes @ 0x2
  3191                           
  3192  0079                     ??_EUSART_SetOverrunErrorHandler:	
  3193                           ; 1 bytes @ 0x2
  3194                           
  3195  0079                     ??_EUSART_SetErrorHandler:	
  3196                           ; 1 bytes @ 0x2
  3197                           
  3198  0079                     ??_INT_CallBack:	
  3199                           ; 1 bytes @ 0x2
  3200                           
  3201  0079                     ??_DAC_Initialize:	
  3202                           ; 1 bytes @ 0x2
  3203                           
  3204  0079                     ??_SYSTEM_Initialize:	
  3205                           ; 1 bytes @ 0x2
  3206                           
  3207  0079                     ??_INTERRUPT_InterruptManager:	
  3208                           ; 1 bytes @ 0x2
  3209                           
  3210  0079                     ??_EUSART_Write:	
  3211                           ; 1 bytes @ 0x2
  3212                           
  3213  0079                     ??_INT_SetInterruptHandler:	
  3214                           ; 1 bytes @ 0x2
  3215                           
  3216  0079                     ??_initLED:	
  3217                           ; 1 bytes @ 0x2
  3218                           
  3219  0079                     ??_setLEDColor:	
  3220                           ; 1 bytes @ 0x2
  3221                           
  3222  0079                     ??___aldiv:	
  3223                           ; 1 bytes @ 0x2
  3224                           
  3225  0079                     ??___lwdiv:	
  3226                           ; 1 bytes @ 0x2
  3227                           
  3228  0079                     EUSART_Write@txData:	
  3229                           ; 1 bytes @ 0x2
  3230                           
  3231  0079                     setLEDColor@red:	
  3232                           ; 1 bytes @ 0x2
  3233                           
  3234                           
  3235                           ; 1 bytes @ 0x2
  3236  0079                     	ds	1
  3237  007A                     ??_putch:
  3238  007A                     ??_battery_voltage:	
  3239                           ; 1 bytes @ 0x3
  3240                           
  3241  007A                     ??_lowBattery:	
  3242                           ; 1 bytes @ 0x3
  3243                           
  3244  007A                     ??_startUp:	
  3245                           ; 1 bytes @ 0x3
  3246                           
  3247  007A                     ??_selectSomething:	
  3248                           ; 1 bytes @ 0x3
  3249                           
  3250  007A                     ??___lwmod:	
  3251                           ; 1 bytes @ 0x3
  3252                           
  3253  007A                     putch@txData:	
  3254                           ; 1 bytes @ 0x3
  3255                           
  3256                           
  3257                           ; 1 bytes @ 0x3
  3258  007A                     	ds	1
  3259  007B                     ___lwmod@counter:
  3260                           
  3261                           ; 1 bytes @ 0x4
  3262  007B                     	ds	1
  3263                           
  3264                           	psect	cstackBANK0
  3265  0020                     __pcstackBANK0:
  3266  0020                     ?_EUSART_SetFramingErrorHandler:
  3267  0020                     ?_EUSART_SetOverrunErrorHandler:	
  3268                           ; 1 bytes @ 0x0
  3269                           
  3270  0020                     ?_EUSART_SetErrorHandler:	
  3271                           ; 1 bytes @ 0x0
  3272                           
  3273  0020                     ?_INT_SetInterruptHandler:	
  3274                           ; 1 bytes @ 0x0
  3275                           
  3276  0020                     ?_setLEDColor:	
  3277                           ; 1 bytes @ 0x0
  3278                           
  3279  0020                     ?___lwdiv:	
  3280                           ; 1 bytes @ 0x0
  3281                           
  3282  0020                     ?___aldiv:	
  3283                           ; 2 bytes @ 0x0
  3284                           
  3285  0020                     setLEDColor@green:	
  3286                           ; 4 bytes @ 0x0
  3287                           
  3288  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3289                           ; 1 bytes @ 0x0
  3290                           
  3291  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3292                           ; 2 bytes @ 0x0
  3293                           
  3294  0020                     EUSART_SetErrorHandler@interruptHandler:	
  3295                           ; 2 bytes @ 0x0
  3296                           
  3297  0020                     INT_SetInterruptHandler@InterruptHandler:	
  3298                           ; 2 bytes @ 0x0
  3299                           
  3300  0020                     ___lwdiv@divisor:	
  3301                           ; 2 bytes @ 0x0
  3302                           
  3303  0020                     ___aldiv@divisor:	
  3304                           ; 2 bytes @ 0x0
  3305                           
  3306                           
  3307                           ; 4 bytes @ 0x0
  3308  0020                     	ds	1
  3309  0021                     setLEDColor@blue:
  3310                           
  3311                           ; 1 bytes @ 0x1
  3312  0021                     	ds	1
  3313  0022                     startUp@i:
  3314  0022                     ___lwdiv@dividend:	
  3315                           ; 2 bytes @ 0x2
  3316                           
  3317                           
  3318                           ; 2 bytes @ 0x2
  3319  0022                     	ds	2
  3320  0024                     ___lwdiv@counter:
  3321  0024                     ___aldiv@dividend:	
  3322                           ; 1 bytes @ 0x4
  3323                           
  3324                           
  3325                           ; 4 bytes @ 0x4
  3326  0024                     	ds	1
  3327  0025                     ___lwdiv@quotient:
  3328                           
  3329                           ; 2 bytes @ 0x5
  3330  0025                     	ds	2
  3331  0027                     ?___lwmod:
  3332  0027                     ___lwmod@divisor:	
  3333                           ; 2 bytes @ 0x7
  3334                           
  3335                           
  3336                           ; 2 bytes @ 0x7
  3337  0027                     	ds	1
  3338  0028                     ___aldiv@counter:
  3339                           
  3340                           ; 1 bytes @ 0x8
  3341  0028                     	ds	1
  3342  0029                     ___aldiv@sign:
  3343  0029                     ___lwmod@dividend:	
  3344                           ; 1 bytes @ 0x9
  3345                           
  3346                           
  3347                           ; 2 bytes @ 0x9
  3348  0029                     	ds	1
  3349  002A                     ___aldiv@quotient:
  3350                           
  3351                           ; 4 bytes @ 0xA
  3352  002A                     	ds	1
  3353  002B                     ?_printf:
  3354  002B                     printf@f:	
  3355                           ; 2 bytes @ 0xB
  3356                           
  3357                           
  3358                           ; 2 bytes @ 0xB
  3359  002B                     	ds	3
  3360  002E                     ?_battery_voltage:
  3361                           
  3362                           ; 2 bytes @ 0xE
  3363  002E                     	ds	1
  3364  002F                     ??_printf:
  3365                           
  3366                           ; 1 bytes @ 0xF
  3367  002F                     	ds	4
  3368  0033                     printf@ap:
  3369                           
  3370                           ; 1 bytes @ 0x13
  3371  0033                     	ds	1
  3372  0034                     printf@flag:
  3373                           
  3374                           ; 1 bytes @ 0x14
  3375  0034                     	ds	1
  3376  0035                     printf@prec:
  3377                           
  3378                           ; 1 bytes @ 0x15
  3379  0035                     	ds	1
  3380  0036                     printf@val:
  3381                           
  3382                           ; 2 bytes @ 0x16
  3383  0036                     	ds	2
  3384  0038                     printf@c:
  3385                           
  3386                           ; 1 bytes @ 0x18
  3387  0038                     	ds	1
  3388  0039                     ??_selectFrequency:
  3389                           
  3390                           ; 1 bytes @ 0x19
  3391  0039                     	ds	2
  3392  003B                     ??_process_remote_command:
  3393                           
  3394                           ; 1 bytes @ 0x1B
  3395  003B                     	ds	2
  3396  003D                     process_remote_command@code:
  3397                           
  3398                           ; 1 bytes @ 0x1D
  3399  003D                     	ds	1
  3400  003E                     ??_main:
  3401                           
  3402                           ; 1 bytes @ 0x1E
  3403  003E                     	ds	1
  3404                           
  3405                           	psect	maintext
  3406  03C1                     __pmaintext:	
  3407 ;;
  3408 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3409 ;;
  3410 ;; *************** function _main *****************
  3411 ;; Defined at:
  3412 ;;		line 310 in file "main.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : B1F/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3426 ;;      Params:         0       0       0       0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0       0
  3428 ;;      Temps:          0       1       0       0       0       0       0       0
  3429 ;;      Totals:         0       1       0       0       0       0       0       0
  3430 ;;Total ram usage:        1 bytes
  3431 ;; Hardware stack levels required when called:    9
  3432 ;; This function calls:
  3433 ;;		_DAC_Initialize
  3434 ;;		_OPA1_Initialize
  3435 ;;		_OPA2_Initialize
  3436 ;;		_SYSTEM_Initialize
  3437 ;;		_battery_voltage
  3438 ;;		_initLED
  3439 ;;		_lowBattery
  3440 ;;		_process_remote_command
  3441 ;;		_startUp
  3442 ;; This function is called by:
  3443 ;;		Startup code after reset
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           
  3448                           ;psect for function _main
  3449  03C1                     _main:
  3450                           
  3451                           ;main.c: 313: SYSTEM_Initialize();
  3452                           
  3453                           ;incstack = 0
  3454                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3455  03C1  3184  24C3  3183   	fcall	_SYSTEM_Initialize
  3456                           
  3457                           ;main.c: 314: DAC_Initialize();
  3458  03C4  3185  2573  3183   	fcall	_DAC_Initialize
  3459                           
  3460                           ;main.c: 315: OPA1_Initialize();
  3461  03C7  3185  258A  3183   	fcall	_OPA1_Initialize
  3462                           
  3463                           ;main.c: 316: OPA2_Initialize();
  3464  03CA  3185  2586  3183   	fcall	_OPA2_Initialize
  3465                           
  3466                           ;main.c: 317: initLED();
  3467  03CD  3182  22E2  3183   	fcall	_initLED
  3468                           
  3469                           ;main.c: 318: (INTCONbits.GIE = 1);
  3470  03D0  178B               	bsf	11,7	;volatile
  3471                           
  3472                           ;main.c: 319: (INTCONbits.PEIE = 1);
  3473  03D1  170B               	bsf	11,6	;volatile
  3474                           
  3475                           ;main.c: 320: startUp();
  3476  03D2  3183  2326  3183   	fcall	_startUp
  3477  03D5                     l483:	
  3478                           ;main.c: 331: while(1){
  3479                           
  3480                           
  3481                           ;main.c: 333: if ((int)battery_voltage() < 2500)
  3482  03D5  3183  23F1  3183   	fcall	_battery_voltage
  3483  03D8  0020               	movlb	0	; select bank0
  3484  03D9  082F               	movf	?_battery_voltage+1,w
  3485  03DA  3A80               	xorlw	128
  3486  03DB  00BE               	movwf	??_main
  3487  03DC  3089               	movlw	137
  3488  03DD  023E               	subwf	??_main,w
  3489  03DE  1D03               	skipz
  3490  03DF  2BE2               	goto	u1865
  3491  03E0  30C4               	movlw	196
  3492  03E1  022E               	subwf	?_battery_voltage,w
  3493  03E2                     u1865:
  3494  03E2  1803               	skipnc
  3495  03E3  2BE7               	goto	l2451
  3496                           
  3497                           ;main.c: 334: {;main.c: 335: lowBattery();
  3498  03E4  3184  244C  3183   	fcall	_lowBattery
  3499  03E7                     l2451:
  3500                           
  3501                           ;main.c: 337: };main.c: 343: if (STATE_DONE == ir_code.state){
  3502  03E7  3002               	movlw	2
  3503  03E8  0672               	xorwf	_ir_code+1,w
  3504  03E9  1D03               	btfss	3,2
  3505  03EA  2BD5               	goto	l483
  3506                           
  3507                           ;main.c: 361: process_remote_command(&ir_code);
  3508  03EB  3071               	movlw	(low (_ir_code| 0))& (0+255)
  3509  03EC  3180  2030  3183   	fcall	_process_remote_command
  3510                           
  3511                           ;main.c: 364: ir_code.state = STATE_RESET;
  3512  03EF  01F2               	clrf	_ir_code+1
  3513  03F0  2BD5               	goto	l483
  3514  03F1                     __end_of_main:
  3515                           
  3516                           	psect	text1
  3517  0326                     __ptext1:	
  3518 ;; *************** function _startUp *****************
  3519 ;; Defined at:
  3520 ;;		line 162 in file "main.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  i               2    2[BANK0 ] int 
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      void 
  3527 ;; Registers used:
  3528 ;;		wreg, status,2, status,0, pclath, cstack
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3534 ;;      Params:         0       0       0       0       0       0       0       0
  3535 ;;      Locals:         0       2       0       0       0       0       0       0
  3536 ;;      Temps:          1       0       0       0       0       0       0       0
  3537 ;;      Totals:         1       2       0       0       0       0       0       0
  3538 ;;Total ram usage:        3 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    5
  3541 ;; This function calls:
  3542 ;;		_setLEDColor
  3543 ;; This function is called by:
  3544 ;;		_main
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           
  3549                           ;psect for function _startUp
  3550  0326                     _startUp:
  3551                           
  3552                           ;main.c: 163: for (int i = 0; i < 5; i++){
  3553                           
  3554                           ;incstack = 0
  3555                           ; Regs used in _startUp: [wreg+status,2+status,0+pclath+cstack]
  3556  0326  0020               	movlb	0	; select bank0
  3557  0327  01A2               	clrf	startUp@i
  3558  0328  01A3               	clrf	startUp@i+1
  3559  0329                     l2361:
  3560                           
  3561                           ;main.c: 164: setLEDColor(255, 0, 255);
  3562  0329  0020               	movlb	0	; select bank0
  3563  032A  01A0               	clrf	setLEDColor@green
  3564  032B  30FF               	movlw	255
  3565  032C  00FA               	movwf	??_startUp
  3566  032D  087A               	movf	??_startUp,w
  3567  032E  00A1               	movwf	setLEDColor@blue
  3568  032F  30FF               	movlw	255
  3569  0330  3185  2505  3183   	fcall	_setLEDColor
  3570                           
  3571                           ;main.c: 165: _delay((unsigned long)((100)*(4000000/4000.0)));
  3572  0333  3082               	movlw	130
  3573  0334  00FA               	movwf	??_startUp
  3574  0335  30DE               	movlw	222
  3575  0336                     u1887:
  3576  0336  0B89               	decfsz	9,f
  3577  0337  2B36               	goto	u1887
  3578  0338  0BFA               	decfsz	??_startUp,f
  3579  0339  2B36               	goto	u1887
  3580                           
  3581                           ;main.c: 166: setLEDColor(0, 0, 0);
  3582  033A  0020               	movlb	0	; select bank0
  3583  033B  01A0               	clrf	setLEDColor@green
  3584  033C  01A1               	clrf	setLEDColor@blue
  3585  033D  3000               	movlw	0
  3586  033E  3185  2505  3183   	fcall	_setLEDColor
  3587                           
  3588                           ;main.c: 167: _delay((unsigned long)((100)*(4000000/4000.0)));
  3589  0341  3082               	movlw	130
  3590  0342  00FA               	movwf	??_startUp
  3591  0343  30DE               	movlw	222
  3592  0344                     u1897:
  3593  0344  0B89               	decfsz	9,f
  3594  0345  2B44               	goto	u1897
  3595  0346  0BFA               	decfsz	??_startUp,f
  3596  0347  2B44               	goto	u1897
  3597  0348  3001               	movlw	1
  3598  0349  0020               	movlb	0	; select bank0
  3599  034A  07A2               	addwf	startUp@i,f
  3600  034B  3000               	movlw	0
  3601  034C  3DA3               	addwfc	startUp@i+1,f
  3602  034D  0823               	movf	startUp@i+1,w
  3603  034E  3A80               	xorlw	128
  3604  034F  00FA               	movwf	??_startUp
  3605  0350  3080               	movlw	128
  3606  0351  027A               	subwf	??_startUp,w
  3607  0352  1D03               	skipz
  3608  0353  2B56               	goto	u1785
  3609  0354  3005               	movlw	5
  3610  0355  0222               	subwf	startUp@i,w
  3611  0356                     u1785:
  3612  0356  1C03               	skipc
  3613  0357  2B29               	goto	l2361
  3614                           
  3615                           ;main.c: 168: };main.c: 169: duty = 0;
  3616  0358  0020               	movlb	0	; select bank0
  3617  0359  01C4               	clrf	_duty
  3618  035A  0008               	return
  3619  035B                     __end_of_startUp:
  3620                           
  3621                           	psect	text2
  3622  0030                     __ptext2:	
  3623 ;; *************** function _process_remote_command *****************
  3624 ;; Defined at:
  3625 ;;		line 219 in file "main.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  code            1    wreg     PTR struct .
  3628 ;;		 -> ir_code(6), 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  code            1   29[BANK0 ] PTR struct .
  3631 ;;		 -> ir_code(6), 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      void 
  3634 ;; Registers used:
  3635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3641 ;;      Params:         0       0       0       0       0       0       0       0
  3642 ;;      Locals:         0       1       0       0       0       0       0       0
  3643 ;;      Temps:          0       2       0       0       0       0       0       0
  3644 ;;      Totals:         0       3       0       0       0       0       0       0
  3645 ;;Total ram usage:        3 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:    8
  3648 ;; This function calls:
  3649 ;;		_printf
  3650 ;;		_selectFrequency
  3651 ;;		_selectSomething
  3652 ;;		_setLEDColor
  3653 ;; This function is called by:
  3654 ;;		_main
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           
  3659                           ;psect for function _process_remote_command
  3660  0030                     _process_remote_command:
  3661                           
  3662                           ;incstack = 0
  3663                           ; Regs used in _process_remote_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3664                           ;process_remote_command@code stored from wreg
  3665  0030  0020               	movlb	0	; select bank0
  3666  0031  00BD               	movwf	process_remote_command@code
  3667                           
  3668                           ;main.c: 220: setLEDColor(0, 0, 0);
  3669  0032  01A0               	clrf	setLEDColor@green
  3670  0033  01A1               	clrf	setLEDColor@blue
  3671  0034  3000               	movlw	0
  3672  0035  3185  2505  3180   	fcall	_setLEDColor
  3673                           
  3674                           ;main.c: 222: switch(code->command){
  3675  0038  28B0               	goto	l2433
  3676  0039                     l2371:
  3677                           
  3678                           ;main.c: 224: setLEDColor(0, 0, 0);
  3679  0039  01A0               	clrf	setLEDColor@green
  3680  003A  01A1               	clrf	setLEDColor@blue
  3681  003B  3000               	movlw	0
  3682  003C  3185  2505  3180   	fcall	_setLEDColor
  3683                           
  3684                           ;main.c: 225: if (flag == 1){
  3685  003F  0020               	movlb	0	; select bank0
  3686  0040  0346               	decf	_flag,w
  3687  0041  1D03               	btfss	3,2
  3688  0042  2864               	goto	l2385
  3689                           
  3690                           ;main.c: 226: if (duty >= 0 && duty <=150){
  3691  0043  3097               	movlw	151
  3692  0044  0244               	subwf	_duty,w
  3693  0045  1803               	skipnc
  3694  0046  284D               	goto	l2379
  3695                           
  3696                           ;main.c: 227: duty = duty + 30;
  3697  0047  0844               	movf	_duty,w
  3698  0048  3E1E               	addlw	30
  3699  0049  00BB               	movwf	??_process_remote_command
  3700  004A  083B               	movf	??_process_remote_command,w
  3701  004B  00C4               	movwf	_duty
  3702                           
  3703                           ;main.c: 228: }
  3704  004C  2854               	goto	l2383
  3705  004D                     l2379:
  3706                           
  3707                           ;main.c: 229: else {;main.c: 230: duty = 150;
  3708  004D  3096               	movlw	150
  3709  004E  00BB               	movwf	??_process_remote_command
  3710  004F  083B               	movf	??_process_remote_command,w
  3711  0050  00C4               	movwf	_duty
  3712                           
  3713                           ;main.c: 231: selectSomething();
  3714  0051  3182  2299  3180   	fcall	_selectSomething
  3715  0054                     l2383:
  3716                           
  3717                           ;main.c: 232: };main.c: 235: printf("%d\n", (duty));
  3718  0054  307E               	movlw	low (STR_2| (0+32768))
  3719  0055  0020               	movlb	0	; select bank0
  3720  0056  00AB               	movwf	printf@f
  3721  0057  3085               	movlw	high (STR_2| (0+32768))
  3722  0058  00AC               	movwf	printf@f+1
  3723  0059  0844               	movf	_duty,w
  3724  005A  00BB               	movwf	??_process_remote_command
  3725  005B  01BC               	clrf	??_process_remote_command+1
  3726  005C  083B               	movf	??_process_remote_command,w
  3727  005D  00AD               	movwf	?_printf+2
  3728  005E  083C               	movf	??_process_remote_command+1,w
  3729  005F  00AE               	movwf	?_printf+3
  3730  0060  3180  20FF  3180   	fcall	_printf
  3731                           
  3732                           ;main.c: 236: }
  3733  0063  28DE               	goto	l2435
  3734  0064                     l2385:
  3735                           
  3736                           ;main.c: 237: else if (flag == 2){
  3737  0064  3002               	movlw	2
  3738  0065  0646               	xorwf	_flag,w
  3739  0066  1903               	btfsc	3,2
  3740  0067  28DE               	goto	l2435
  3741  0068                     l2389:
  3742                           
  3743                           ;main.c: 240: else{;main.c: 241: selectSomething();
  3744  0068  3182  2299  3180   	fcall	_selectSomething
  3745  006B  28DE               	goto	l2435
  3746  006C                     l2391:
  3747                           
  3748                           ;main.c: 245: if (flag == 1){
  3749  006C  0346               	decf	_flag,w
  3750  006D  1D03               	btfss	3,2
  3751  006E  2864               	goto	l2385
  3752                           
  3753                           ;main.c: 246: if (duty >= 0 && duty <=150){
  3754  006F  3097               	movlw	151
  3755  0070  0244               	subwf	_duty,w
  3756  0071  1803               	skipnc
  3757  0072  2887               	goto	l2399
  3758                           
  3759                           ;main.c: 247: duty = duty - 30;
  3760  0073  0844               	movf	_duty,w
  3761  0074  3EE2               	addlw	226
  3762  0075  00BB               	movwf	??_process_remote_command
  3763  0076  083B               	movf	??_process_remote_command,w
  3764  0077  00C4               	movwf	_duty
  3765                           
  3766                           ;main.c: 248: printf("%d\n", (duty));
  3767  0078  307E               	movlw	low (STR_2| (0+32768))
  3768  0079  00AB               	movwf	printf@f
  3769  007A  3085               	movlw	high (STR_2| (0+32768))
  3770  007B  00AC               	movwf	printf@f+1
  3771  007C  0844               	movf	_duty,w
  3772  007D  00BB               	movwf	??_process_remote_command
  3773  007E  01BC               	clrf	??_process_remote_command+1
  3774  007F  083B               	movf	??_process_remote_command,w
  3775  0080  00AD               	movwf	?_printf+2
  3776  0081  083C               	movf	??_process_remote_command+1,w
  3777  0082  00AE               	movwf	?_printf+3
  3778  0083  3180  20FF  3180   	fcall	_printf
  3779                           
  3780                           ;main.c: 249: }
  3781  0086  28DE               	goto	l2435
  3782  0087                     l2399:
  3783                           
  3784                           ;main.c: 250: else{;main.c: 251: duty = 150;
  3785  0087  3096               	movlw	150
  3786  0088  00BB               	movwf	??_process_remote_command
  3787  0089  083B               	movf	??_process_remote_command,w
  3788  008A  00C4               	movwf	_duty
  3789  008B  2868               	goto	l2389
  3790  008C                     l2409:	
  3791                           ;main.c: 257: else if (flag == 2){
  3792                           
  3793                           
  3794                           ;main.c: 265: selectFrequency();
  3795  008C  3184  2477  3180   	fcall	_selectFrequency
  3796                           
  3797                           ;main.c: 266: break;
  3798  008F  28DE               	goto	l2435
  3799  0090                     l2411:
  3800                           
  3801                           ;main.c: 268: LED_red = 0;
  3802  0090  01C9               	clrf	_LED_red
  3803                           
  3804                           ;main.c: 269: LED_green = 130;
  3805  0091  3082               	movlw	130
  3806  0092  00BB               	movwf	??_process_remote_command
  3807  0093  083B               	movf	??_process_remote_command,w
  3808  0094  00C8               	movwf	_LED_green
  3809                           
  3810                           ;main.c: 270: LED_blue = 255;
  3811  0095  30FF               	movlw	255
  3812  0096  00BB               	movwf	??_process_remote_command
  3813  0097  083B               	movf	??_process_remote_command,w
  3814  0098  00C7               	movwf	_LED_blue
  3815                           
  3816                           ;main.c: 271: flag = 2;
  3817  0099  3002               	movlw	2
  3818  009A  00BB               	movwf	??_process_remote_command
  3819  009B  083B               	movf	??_process_remote_command,w
  3820  009C  00C6               	movwf	_flag
  3821                           
  3822                           ;main.c: 272: break;
  3823  009D  28DE               	goto	l2435
  3824  009E                     l2419:
  3825                           
  3826                           ;main.c: 274: LED_red = 0;
  3827  009E  01C9               	clrf	_LED_red
  3828                           
  3829                           ;main.c: 275: LED_green = 255;
  3830  009F  30FF               	movlw	255
  3831  00A0  00BB               	movwf	??_process_remote_command
  3832  00A1  083B               	movf	??_process_remote_command,w
  3833  00A2  00C8               	movwf	_LED_green
  3834                           
  3835                           ;main.c: 276: LED_blue = 0;
  3836  00A3  01C7               	clrf	_LED_blue
  3837                           
  3838                           ;main.c: 277: printf("\n reset select");
  3839  00A4  30F6               	movlw	low (STR_4| (0+32768))
  3840  00A5  00AB               	movwf	printf@f
  3841  00A6  3084               	movlw	high (STR_4| (0+32768))
  3842  00A7  00AC               	movwf	printf@f+1
  3843  00A8  3180  20FF  3180   	fcall	_printf
  3844                           
  3845                           ;main.c: 278: flag = 0;
  3846  00AB  0020               	movlb	0	; select bank0
  3847  00AC  01C6               	clrf	_flag
  3848                           
  3849                           ;main.c: 279: break;
  3850  00AD  28DE               	goto	l2435
  3851  00AE                     l2429:
  3852                           
  3853                           ;main.c: 281: duty = 0;
  3854  00AE  01C4               	clrf	_duty
  3855                           
  3856                           ;main.c: 282: break;
  3857  00AF  28DE               	goto	l2435
  3858  00B0                     l2433:
  3859  00B0  0020               	movlb	0	; select bank0
  3860  00B1  083D               	movf	process_remote_command@code,w
  3861  00B2  3E03               	addlw	3
  3862  00B3  0086               	movwf	6
  3863  00B4  0187               	clrf	7
  3864  00B5  0801               	movf	1,w
  3865                           
  3866                           ; Switch size 1, requested type "simple"
  3867                           ; Number of cases is 13, Range of values is 8 to 176
  3868                           ; switch strategies available:
  3869                           ; Name         Instructions Cycles
  3870                           ; simple_byte           40    21 (average)
  3871                           ; jumptable            263     9 (fixed)
  3872                           ;	Chosen strategy is simple_byte
  3873  00B6  3A08               	xorlw	8	; case 8
  3874  00B7  1903               	skipnz
  3875  00B8  289E               	goto	l2419
  3876  00B9  3A18               	xorlw	24	; case 16
  3877  00BA  1903               	skipnz
  3878  00BB  2890               	goto	l2411
  3879  00BC  3A08               	xorlw	8	; case 24
  3880  00BD  1903               	skipnz
  3881  00BE  28DE               	goto	l2435
  3882  00BF  3A30               	xorlw	48	; case 40
  3883  00C0  1903               	skipnz
  3884  00C1  28DE               	goto	l2435
  3885  00C2  3A60               	xorlw	96	; case 72
  3886  00C3  1903               	skipnz
  3887  00C4  28DE               	goto	l2435
  3888  00C5  3A18               	xorlw	24	; case 80
  3889  00C6  1903               	skipnz
  3890  00C7  288C               	goto	l2409
  3891  00C8  3A08               	xorlw	8	; case 88
  3892  00C9  1903               	skipnz
  3893  00CA  28DE               	goto	l2435
  3894  00CB  3A30               	xorlw	48	; case 104
  3895  00CC  1903               	skipnz
  3896  00CD  28DE               	goto	l2435
  3897  00CE  3AE0               	xorlw	224	; case 136
  3898  00CF  1903               	skipnz
  3899  00D0  28AE               	goto	l2429
  3900  00D1  3A10               	xorlw	16	; case 152
  3901  00D2  1903               	skipnz
  3902  00D3  28DE               	goto	l2435
  3903  00D4  3A38               	xorlw	56	; case 160
  3904  00D5  1903               	skipnz
  3905  00D6  2839               	goto	l2371
  3906  00D7  3A08               	xorlw	8	; case 168
  3907  00D8  1903               	skipnz
  3908  00D9  28DE               	goto	l2435
  3909  00DA  3A18               	xorlw	24	; case 176
  3910  00DB  1903               	skipnz
  3911  00DC  286C               	goto	l2391
  3912  00DD  28DE               	goto	l2435
  3913  00DE                     l2435:
  3914                           
  3915                           ;main.c: 301: setLEDColor(LED_red, LED_green, LED_blue);
  3916  00DE  0020               	movlb	0	; select bank0
  3917  00DF  0848               	movf	_LED_green,w
  3918  00E0  00BB               	movwf	??_process_remote_command
  3919  00E1  083B               	movf	??_process_remote_command,w
  3920  00E2  00A0               	movwf	setLEDColor@green
  3921  00E3  0847               	movf	_LED_blue,w
  3922  00E4  00BC               	movwf	??_process_remote_command+1
  3923  00E5  083C               	movf	??_process_remote_command+1,w
  3924  00E6  00A1               	movwf	setLEDColor@blue
  3925  00E7  0849               	movf	_LED_red,w
  3926  00E8  3185  2505  3180   	fcall	_setLEDColor
  3927                           
  3928                           ;main.c: 302: _delay((unsigned long)((1000)*(4000000/4000.0)));
  3929  00EB  3006               	movlw	6
  3930  00EC  0020               	movlb	0	; select bank0
  3931  00ED  00BC               	movwf	??_process_remote_command+1
  3932  00EE  3013               	movlw	19
  3933  00EF  00BB               	movwf	??_process_remote_command
  3934  00F0  30AD               	movlw	173
  3935  00F1                     u1907:
  3936  00F1  0B89               	decfsz	9,f
  3937  00F2  28F1               	goto	u1907
  3938  00F3  0BBB               	decfsz	??_process_remote_command,f
  3939  00F4  28F1               	goto	u1907
  3940  00F5  0BBC               	decfsz	??_process_remote_command+1,f
  3941  00F6  28F1               	goto	u1907
  3942  00F7  3200               	nop2
  3943                           
  3944                           ;main.c: 303: setLEDColor(0, 0, 0);
  3945  00F8  0020               	movlb	0	; select bank0
  3946  00F9  01A0               	clrf	setLEDColor@green
  3947  00FA  01A1               	clrf	setLEDColor@blue
  3948  00FB  3000               	movlw	0
  3949  00FC  3185  2505         	fcall	_setLEDColor
  3950  00FE  0008               	return
  3951  00FF                     __end_of_process_remote_command:
  3952                           
  3953                           	psect	text3
  3954  0299                     __ptext3:	
  3955 ;; *************** function _selectSomething *****************
  3956 ;; Defined at:
  3957 ;;		line 172 in file "main.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0, pclath, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3971 ;;      Params:         0       0       0       0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0       0
  3973 ;;      Temps:          2       0       0       0       0       0       0       0
  3974 ;;      Totals:         2       0       0       0       0       0       0       0
  3975 ;;Total ram usage:        2 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    5
  3978 ;; This function calls:
  3979 ;;		_setLEDColor
  3980 ;; This function is called by:
  3981 ;;		_process_remote_command
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           
  3986                           ;psect for function _selectSomething
  3987  0299                     _selectSomething:
  3988                           
  3989                           ;main.c: 174: setLEDColor(255, 0, 0);
  3990                           
  3991                           ;incstack = 0
  3992                           ; Regs used in _selectSomething: [wreg+status,2+status,0+pclath+cstack]
  3993  0299  0020               	movlb	0	; select bank0
  3994  029A  01A0               	clrf	setLEDColor@green
  3995  029B  01A1               	clrf	setLEDColor@blue
  3996  029C  30FF               	movlw	255
  3997  029D  3185  2505  3182   	fcall	_setLEDColor
  3998                           
  3999                           ;main.c: 175: _delay((unsigned long)((500)*(4000000/4000.0)));
  4000  02A0  3003               	movlw	3
  4001  02A1  00FB               	movwf	??_selectSomething+1
  4002  02A2  308A               	movlw	138
  4003  02A3  00FA               	movwf	??_selectSomething
  4004  02A4  3056               	movlw	86
  4005  02A5                     u1917:
  4006  02A5  0B89               	decfsz	9,f
  4007  02A6  2AA5               	goto	u1917
  4008  02A7  0BFA               	decfsz	??_selectSomething,f
  4009  02A8  2AA5               	goto	u1917
  4010  02A9  0BFB               	decfsz	??_selectSomething+1,f
  4011  02AA  2AA5               	goto	u1917
  4012                           
  4013                           ;main.c: 176: setLEDColor(0, 0, 0);
  4014  02AB  0020               	movlb	0	; select bank0
  4015  02AC  01A0               	clrf	setLEDColor@green
  4016  02AD  01A1               	clrf	setLEDColor@blue
  4017  02AE  3000               	movlw	0
  4018  02AF  3185  2505  3182   	fcall	_setLEDColor
  4019                           
  4020                           ;main.c: 177: _delay((unsigned long)((500)*(4000000/4000.0)));
  4021  02B2  3003               	movlw	3
  4022  02B3  00FB               	movwf	??_selectSomething+1
  4023  02B4  308A               	movlw	138
  4024  02B5  00FA               	movwf	??_selectSomething
  4025  02B6  3056               	movlw	86
  4026  02B7                     u1927:
  4027  02B7  0B89               	decfsz	9,f
  4028  02B8  2AB7               	goto	u1927
  4029  02B9  0BFA               	decfsz	??_selectSomething,f
  4030  02BA  2AB7               	goto	u1927
  4031  02BB  0BFB               	decfsz	??_selectSomething+1,f
  4032  02BC  2AB7               	goto	u1927
  4033                           
  4034                           ;main.c: 178: setLEDColor(255, 0, 0);
  4035  02BD  0020               	movlb	0	; select bank0
  4036  02BE  01A0               	clrf	setLEDColor@green
  4037  02BF  01A1               	clrf	setLEDColor@blue
  4038  02C0  30FF               	movlw	255
  4039  02C1  3185  2505  3182   	fcall	_setLEDColor
  4040                           
  4041                           ;main.c: 179: _delay((unsigned long)((500)*(4000000/4000.0)));
  4042  02C4  3003               	movlw	3
  4043  02C5  00FB               	movwf	??_selectSomething+1
  4044  02C6  308A               	movlw	138
  4045  02C7  00FA               	movwf	??_selectSomething
  4046  02C8  3056               	movlw	86
  4047  02C9                     u1937:
  4048  02C9  0B89               	decfsz	9,f
  4049  02CA  2AC9               	goto	u1937
  4050  02CB  0BFA               	decfsz	??_selectSomething,f
  4051  02CC  2AC9               	goto	u1937
  4052  02CD  0BFB               	decfsz	??_selectSomething+1,f
  4053  02CE  2AC9               	goto	u1937
  4054                           
  4055                           ;main.c: 180: setLEDColor(0, 0, 0);
  4056  02CF  0020               	movlb	0	; select bank0
  4057  02D0  01A0               	clrf	setLEDColor@green
  4058  02D1  01A1               	clrf	setLEDColor@blue
  4059  02D2  3000               	movlw	0
  4060  02D3  3185  2505  3182   	fcall	_setLEDColor
  4061                           
  4062                           ;main.c: 181: _delay((unsigned long)((500)*(4000000/4000.0)));
  4063  02D6  3003               	movlw	3
  4064  02D7  00FB               	movwf	??_selectSomething+1
  4065  02D8  308A               	movlw	138
  4066  02D9  00FA               	movwf	??_selectSomething
  4067  02DA  3056               	movlw	86
  4068  02DB                     u1947:
  4069  02DB  0B89               	decfsz	9,f
  4070  02DC  2ADB               	goto	u1947
  4071  02DD  0BFA               	decfsz	??_selectSomething,f
  4072  02DE  2ADB               	goto	u1947
  4073  02DF  0BFB               	decfsz	??_selectSomething+1,f
  4074  02E0  2ADB               	goto	u1947
  4075  02E1  0008               	return
  4076  02E2                     __end_of_selectSomething:
  4077                           
  4078                           	psect	text4
  4079  0477                     __ptext4:	
  4080 ;; *************** function _selectFrequency *****************
  4081 ;; Defined at:
  4082 ;;		line 184 in file "main.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4096 ;;      Params:         0       0       0       0       0       0       0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0       0
  4098 ;;      Temps:          0       2       0       0       0       0       0       0
  4099 ;;      Totals:         0       2       0       0       0       0       0       0
  4100 ;;Total ram usage:        2 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    7
  4103 ;; This function calls:
  4104 ;;		_printf
  4105 ;;		_setLEDColor
  4106 ;; This function is called by:
  4107 ;;		_process_remote_command
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           
  4112                           ;psect for function _selectFrequency
  4113  0477                     _selectFrequency:
  4114                           
  4115                           ;main.c: 185: flag = 1;
  4116                           
  4117                           ;incstack = 0
  4118                           ; Regs used in _selectFrequency: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4119  0477  0020               	movlb	0	; select bank0
  4120  0478  01C6               	clrf	_flag
  4121  0479  0AC6               	incf	_flag,f
  4122                           
  4123                           ;main.c: 186: setLEDColor(255, 0, 255);
  4124  047A  01A0               	clrf	setLEDColor@green
  4125  047B  30FF               	movlw	255
  4126  047C  00B9               	movwf	??_selectFrequency
  4127  047D  0839               	movf	??_selectFrequency,w
  4128  047E  00A1               	movwf	setLEDColor@blue
  4129  047F  30FF               	movlw	255
  4130  0480  3185  2505  3184   	fcall	_setLEDColor
  4131                           
  4132                           ;main.c: 187: _delay((unsigned long)((1000)*(4000000/4000.0)));
  4133  0483  3006               	movlw	6
  4134  0484  0020               	movlb	0	; select bank0
  4135  0485  00BA               	movwf	??_selectFrequency+1
  4136  0486  3013               	movlw	19
  4137  0487  00B9               	movwf	??_selectFrequency
  4138  0488  30AD               	movlw	173
  4139  0489                     u1957:
  4140  0489  0B89               	decfsz	9,f
  4141  048A  2C89               	goto	u1957
  4142  048B  0BB9               	decfsz	??_selectFrequency,f
  4143  048C  2C89               	goto	u1957
  4144  048D  0BBA               	decfsz	??_selectFrequency+1,f
  4145  048E  2C89               	goto	u1957
  4146  048F  3200               	nop2
  4147                           
  4148                           ;main.c: 188: setLEDColor(0, 0, 0);
  4149  0490  0020               	movlb	0	; select bank0
  4150  0491  01A0               	clrf	setLEDColor@green
  4151  0492  01A1               	clrf	setLEDColor@blue
  4152  0493  3000               	movlw	0
  4153  0494  3185  2505  3184   	fcall	_setLEDColor
  4154                           
  4155                           ;main.c: 189: printf("\n Frequency selected");
  4156  0497  30E1               	movlw	low (STR_1| (0+32768))
  4157  0498  0020               	movlb	0	; select bank0
  4158  0499  00AB               	movwf	printf@f
  4159  049A  3084               	movlw	high (STR_1| (0+32768))
  4160  049B  00AC               	movwf	printf@f+1
  4161  049C  3180  20FF         	fcall	_printf
  4162  049E  0008               	return
  4163  049F                     __end_of_selectFrequency:
  4164                           
  4165                           	psect	text5
  4166  00FF                     __ptext5:	
  4167 ;; *************** function _printf *****************
  4168 ;; Defined at:
  4169 ;;		line 477 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/doprnt.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  f               2   11[BANK0 ] PTR const unsigned char 
  4172 ;;		 -> STR_4(15), STR_3(4), STR_2(4), STR_1(21), 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  tmpval          4    0        struct .
  4175 ;;  val             2   22[BANK0 ] unsigned int 
  4176 ;;  cp              2    0        PTR const unsigned char 
  4177 ;;  len             2    0        unsigned int 
  4178 ;;  c               1   24[BANK0 ] unsigned char 
  4179 ;;  prec            1   21[BANK0 ] char 
  4180 ;;  flag            1   20[BANK0 ] unsigned char 
  4181 ;;  ap              1   19[BANK0 ] PTR void [1]
  4182 ;;		 -> ?_printf(2), 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  2   11[BANK0 ] int 
  4185 ;; Registers used:
  4186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4192 ;;      Params:         0       4       0       0       0       0       0       0
  4193 ;;      Locals:         0       6       0       0       0       0       0       0
  4194 ;;      Temps:          0       4       0       0       0       0       0       0
  4195 ;;      Totals:         0      14       0       0       0       0       0       0
  4196 ;;Total ram usage:       14 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:    6
  4199 ;; This function calls:
  4200 ;;		___lwdiv
  4201 ;;		___lwmod
  4202 ;;		_putch
  4203 ;; This function is called by:
  4204 ;;		_selectFrequency
  4205 ;;		_process_remote_command
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           
  4210                           ;psect for function _printf
  4211  00FF                     _printf:
  4212                           
  4213                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  4214                           
  4215                           ;incstack = 0
  4216                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4217  00FF  302D               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4218  0100  0020               	movlb	0	; select bank0
  4219  0101  00AF               	movwf	??_printf
  4220  0102  082F               	movf	??_printf,w
  4221  0103  00B3               	movwf	printf@ap
  4222  0104                     l2237:	
  4223                           ;doprnt.c: 553: while((c = *f++)) {
  4224                           
  4225  0104  0020               	movlb	0	; select bank0
  4226  0105  082C               	movf	printf@f+1,w
  4227  0106  00B0               	movwf	??_printf+1
  4228  0107  082B               	movf	printf@f,w
  4229  0108  00AF               	movwf	??_printf
  4230  0109  0AAB               	incf	printf@f,f
  4231  010A  1903               	skipnz
  4232  010B  0AAC               	incf	printf@f+1,f
  4233  010C  082F               	movf	??_printf,w
  4234  010D  0084               	movwf	4
  4235  010E  0830               	movf	??_printf+1,w
  4236  010F  0085               	movwf	5
  4237  0110  0800               	movf	0,w	;code access
  4238  0111  00B1               	movwf	??_printf+2
  4239  0112  0831               	movf	??_printf+2,w
  4240  0113  00B8               	movwf	printf@c
  4241  0114  0838               	movf	printf@c,w
  4242  0115  1903               	btfsc	3,2
  4243  0116  0008               	return
  4244                           
  4245                           ;doprnt.c: 555: if(c != '%')
  4246  0117  3025               	movlw	37
  4247  0118  0638               	xorwf	printf@c,w
  4248  0119  1903               	btfsc	3,2
  4249  011A  2920               	goto	l2197
  4250                           
  4251                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  4252  011B  0838               	movf	printf@c,w
  4253  011C  3185  2579  3180   	fcall	_putch
  4254                           
  4255                           ;doprnt.c: 559: continue;
  4256  011F  2904               	goto	l2237
  4257  0120                     l2197:
  4258                           
  4259                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  4260  0120  01B4               	clrf	printf@flag
  4261                           
  4262                           ;doprnt.c: 661: switch(c = *f++) {
  4263  0121  082C               	movf	printf@f+1,w
  4264  0122  00B0               	movwf	??_printf+1
  4265  0123  082B               	movf	printf@f,w
  4266  0124  00AF               	movwf	??_printf
  4267  0125  0AAB               	incf	printf@f,f
  4268  0126  1903               	skipnz
  4269  0127  0AAC               	incf	printf@f+1,f
  4270  0128  082F               	movf	??_printf,w
  4271  0129  0084               	movwf	4
  4272  012A  0830               	movf	??_printf+1,w
  4273  012B  0085               	movwf	5
  4274  012C  0800               	movf	0,w	;code access
  4275  012D  00B8               	movwf	printf@c
  4276                           
  4277                           ; Switch size 1, requested type "simple"
  4278                           ; Number of cases is 3, Range of values is 0 to 105
  4279                           ; switch strategies available:
  4280                           ; Name         Instructions Cycles
  4281                           ; simple_byte           10     6 (average)
  4282                           ; direct_byte          218     6 (fixed)
  4283                           ; jumptable            260     6 (fixed)
  4284                           ;	Chosen strategy is simple_byte
  4285  012E  3A00               	xorlw	0	; case 0
  4286  012F  1903               	skipnz
  4287  0130  29B1               	goto	l582
  4288  0131  3A64               	xorlw	100	; case 100
  4289  0132  1903               	skipnz
  4290  0133  2938               	goto	l2203
  4291  0134  3A0D               	xorlw	13	; case 105
  4292  0135  1903               	skipnz
  4293  0136  2938               	goto	l2203
  4294  0137  2904               	goto	l2237
  4295  0138                     l2203:
  4296                           
  4297                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  4298  0138  0833               	movf	printf@ap,w
  4299  0139  0086               	movwf	6
  4300  013A  0187               	clrf	7
  4301  013B  3F40               	moviw [0]fsr1
  4302  013C  00B6               	movwf	printf@val
  4303  013D  3F41               	moviw [1]fsr1
  4304  013E  00B7               	movwf	printf@val+1
  4305  013F  3002               	movlw	2
  4306  0140  00AF               	movwf	??_printf
  4307  0141  082F               	movf	??_printf,w
  4308  0142  07B3               	addwf	printf@ap,f
  4309                           
  4310                           ;doprnt.c: 1287: if((int)val < 0) {
  4311  0143  1FB7               	btfss	printf@val+1,7
  4312  0144  294E               	goto	l2213
  4313                           
  4314                           ;doprnt.c: 1288: flag |= 0x03;
  4315  0145  3003               	movlw	3
  4316  0146  00AF               	movwf	??_printf
  4317  0147  082F               	movf	??_printf,w
  4318  0148  04B4               	iorwf	printf@flag,f
  4319                           
  4320                           ;doprnt.c: 1289: val = -val;
  4321  0149  09B6               	comf	printf@val,f
  4322  014A  09B7               	comf	printf@val+1,f
  4323  014B  0AB6               	incf	printf@val,f
  4324  014C  1903               	skipnz
  4325  014D  0AB7               	incf	printf@val+1,f
  4326  014E                     l2213:
  4327                           
  4328                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  4329  014E  01B8               	clrf	printf@c
  4330  014F  0AB8               	incf	printf@c,f
  4331  0150                     l2219:
  4332                           
  4333                           ;doprnt.c: 1332: if(val < dpowers[c])
  4334  0150  0838               	movf	printf@c,w
  4335  0151  00AF               	movwf	??_printf
  4336  0152  01B0               	clrf	??_printf+1
  4337  0153  35AF               	lslf	??_printf,f
  4338  0154  0DB0               	rlf	??_printf+1,f
  4339  0155  3029               	movlw	low (_dpowers| (0+32768))
  4340  0156  072F               	addwf	??_printf,w
  4341  0157  0084               	movwf	4
  4342  0158  3085               	movlw	high (_dpowers| (0+32768))
  4343  0159  3D30               	addwfc	??_printf+1,w
  4344  015A  0085               	movwf	5
  4345  015B  3F00               	moviw [0]fsr0
  4346  015C  00B1               	movwf	??_printf+2
  4347  015D  3F01               	moviw [1]fsr0
  4348  015E  00B2               	movwf	??_printf+3
  4349  015F  0832               	movf	??_printf+3,w
  4350  0160  0237               	subwf	printf@val+1,w
  4351  0161  1D03               	skipz
  4352  0162  2965               	goto	u1615
  4353  0163  0831               	movf	??_printf+2,w
  4354  0164  0236               	subwf	printf@val,w
  4355  0165                     u1615:
  4356  0165  1C03               	btfss	3,0
  4357  0166  296F               	goto	l2225
  4358  0167  3001               	movlw	1
  4359  0168  00AF               	movwf	??_printf
  4360  0169  082F               	movf	??_printf,w
  4361  016A  07B8               	addwf	printf@c,f
  4362  016B  3005               	movlw	5
  4363  016C  0638               	xorwf	printf@c,w
  4364  016D  1D03               	btfss	3,2
  4365  016E  2950               	goto	l2219
  4366  016F                     l2225:
  4367                           
  4368                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  4369  016F  0834               	movf	printf@flag,w
  4370  0170  3903               	andlw	3
  4371  0171  1903               	btfsc	3,2
  4372  0172  2977               	goto	l2229
  4373                           
  4374                           ;doprnt.c: 1465: (putch('-') );
  4375  0173  302D               	movlw	45
  4376  0174  3185  2579  3180   	fcall	_putch
  4377  0177                     l2229:
  4378                           
  4379                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  4380  0177  0020               	movlb	0	; select bank0
  4381  0178  0838               	movf	printf@c,w
  4382  0179  00AF               	movwf	??_printf
  4383  017A  082F               	movf	??_printf,w
  4384  017B  00B5               	movwf	printf@prec
  4385  017C                     l2235:	
  4386                           ;doprnt.c: 1500: while(prec--) {
  4387                           
  4388  017C  30FF               	movlw	255
  4389  017D  0020               	movlb	0	; select bank0
  4390  017E  00AF               	movwf	??_printf
  4391  017F  082F               	movf	??_printf,w
  4392  0180  07B5               	addwf	printf@prec,f
  4393  0181  0A35               	incf	printf@prec,w
  4394  0182  1903               	btfsc	3,2
  4395  0183  2904               	goto	l2237
  4396                           
  4397                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  4398  0184  300A               	movlw	10
  4399  0185  00A7               	movwf	___lwmod@divisor
  4400  0186  3000               	movlw	0
  4401  0187  00A8               	movwf	___lwmod@divisor+1
  4402  0188  0835               	movf	printf@prec,w
  4403  0189  00AF               	movwf	??_printf
  4404  018A  01B0               	clrf	??_printf+1
  4405  018B  35AF               	lslf	??_printf,f
  4406  018C  0DB0               	rlf	??_printf+1,f
  4407  018D  3029               	movlw	low (_dpowers| (0+32768))
  4408  018E  072F               	addwf	??_printf,w
  4409  018F  0084               	movwf	4
  4410  0190  3085               	movlw	high (_dpowers| (0+32768))
  4411  0191  3D30               	addwfc	??_printf+1,w
  4412  0192  0085               	movwf	5
  4413  0193  3F00               	moviw [0]fsr0
  4414  0194  00A0               	movwf	___lwdiv@divisor
  4415  0195  3F01               	moviw [1]fsr0
  4416  0196  00A1               	movwf	___lwdiv@divisor+1
  4417  0197  0837               	movf	printf@val+1,w
  4418  0198  00A3               	movwf	___lwdiv@dividend+1
  4419  0199  0836               	movf	printf@val,w
  4420  019A  00A2               	movwf	___lwdiv@dividend
  4421  019B  3183  235B  3180   	fcall	___lwdiv
  4422  019E  0020               	movlb	0	; select bank0
  4423  019F  0821               	movf	?___lwdiv+1,w
  4424  01A0  00AA               	movwf	___lwmod@dividend+1
  4425  01A1  0820               	movf	?___lwdiv,w
  4426  01A2  00A9               	movwf	___lwmod@dividend
  4427  01A3  3184  241F  3180   	fcall	___lwmod
  4428  01A6  0020               	movlb	0	; select bank0
  4429  01A7  0827               	movf	?___lwmod,w
  4430  01A8  3E30               	addlw	48
  4431  01A9  00B1               	movwf	??_printf+2
  4432  01AA  0831               	movf	??_printf+2,w
  4433  01AB  00B8               	movwf	printf@c
  4434                           
  4435                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  4436  01AC  0838               	movf	printf@c,w
  4437  01AD  3185  2579  3180   	fcall	_putch
  4438  01B0  297C               	goto	l2235
  4439  01B1                     l582:
  4440  01B1  0008               	return
  4441  01B2                     __end_of_printf:
  4442                           
  4443                           	psect	text6
  4444  0579                     __ptext6:	
  4445 ;; *************** function _putch *****************
  4446 ;; Defined at:
  4447 ;;		line 146 in file "mcc_generated_files/eusart.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  txData          1    wreg     unsigned char 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  txData          1    3[COMMON] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2, status,0, pclath, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4461 ;;      Params:         0       0       0       0       0       0       0       0
  4462 ;;      Locals:         1       0       0       0       0       0       0       0
  4463 ;;      Temps:          0       0       0       0       0       0       0       0
  4464 ;;      Totals:         1       0       0       0       0       0       0       0
  4465 ;;Total ram usage:        1 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    5
  4468 ;; This function calls:
  4469 ;;		_EUSART_Write
  4470 ;; This function is called by:
  4471 ;;		_printf
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           
  4476                           ;psect for function _putch
  4477  0579                     _putch:
  4478                           
  4479                           ;incstack = 0
  4480                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4481                           ;putch@txData stored from wreg
  4482  0579  00FA               	movwf	putch@txData
  4483                           
  4484                           ;eusart.c: 148: EUSART_Write(txData);
  4485  057A  087A               	movf	putch@txData,w
  4486  057B  3185  253D         	fcall	_EUSART_Write
  4487  057D  0008               	return
  4488  057E                     __end_of_putch:
  4489                           
  4490                           	psect	text7
  4491  053D                     __ptext7:	
  4492 ;; *************** function _EUSART_Write *****************
  4493 ;; Defined at:
  4494 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  txData          1    wreg     unsigned char 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  txData          1    2[COMMON] unsigned char 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      void 
  4501 ;; Registers used:
  4502 ;;		wreg
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4508 ;;      Params:         0       0       0       0       0       0       0       0
  4509 ;;      Locals:         1       0       0       0       0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0       0       0       0
  4511 ;;      Totals:         1       0       0       0       0       0       0       0
  4512 ;;Total ram usage:        1 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; Hardware stack levels required when called:    4
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_putch
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           
  4523                           ;psect for function _EUSART_Write
  4524  053D                     _EUSART_Write:
  4525                           
  4526                           ;incstack = 0
  4527                           ; Regs used in _EUSART_Write: [wreg]
  4528                           ;EUSART_Write@txData stored from wreg
  4529  053D  00F9               	movwf	EUSART_Write@txData
  4530  053E                     l197:	
  4531                           ;eusart.c: 135: {
  4532                           
  4533  053E  0020               	movlb	0	; select bank0
  4534  053F  1E11               	btfss	17,4	;volatile
  4535  0540  2D3E               	goto	l197
  4536                           
  4537                           ;eusart.c: 136: };eusart.c: 138: TX1REG = txData;
  4538  0541  0879               	movf	EUSART_Write@txData,w
  4539  0542  0023               	movlb	3	; select bank3
  4540  0543  009A               	movwf	26	;volatile
  4541  0544  0008               	return
  4542  0545                     __end_of_EUSART_Write:
  4543                           
  4544                           	psect	text8
  4545  041F                     __ptext8:	
  4546 ;; *************** function ___lwmod *****************
  4547 ;; Defined at:
  4548 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/lwmod.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  divisor         2    7[BANK0 ] unsigned int 
  4551 ;;  dividend        2    9[BANK0 ] unsigned int 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  counter         1    4[COMMON] unsigned char 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  2    7[BANK0 ] unsigned int 
  4556 ;; Registers used:
  4557 ;;		wreg, status,2, status,0
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4563 ;;      Params:         0       4       0       0       0       0       0       0
  4564 ;;      Locals:         1       0       0       0       0       0       0       0
  4565 ;;      Temps:          1       0       0       0       0       0       0       0
  4566 ;;      Totals:         2       4       0       0       0       0       0       0
  4567 ;;Total ram usage:        6 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    4
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		_printf
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           
  4578                           ;psect for function ___lwmod
  4579  041F                     ___lwmod:
  4580                           
  4581                           ;incstack = 0
  4582                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4583  041F  0020               	movlb	0	; select bank0
  4584  0420  0827               	movf	___lwmod@divisor,w
  4585  0421  0428               	iorwf	___lwmod@divisor+1,w
  4586  0422  1903               	btfsc	3,2
  4587  0423  2C47               	goto	l2181
  4588  0424  01FB               	clrf	___lwmod@counter
  4589  0425  0AFB               	incf	___lwmod@counter,f
  4590  0426                     l2171:
  4591  0426  1BA8               	btfsc	___lwmod@divisor+1,7
  4592  0427  2C32               	goto	l2173
  4593  0428  3001               	movlw	1
  4594  0429                     u1545:
  4595  0429  35A7               	lslf	___lwmod@divisor,f
  4596  042A  0DA8               	rlf	___lwmod@divisor+1,f
  4597  042B  0B89               	decfsz	9,f
  4598  042C  2C29               	goto	u1545
  4599  042D  3001               	movlw	1
  4600  042E  00FA               	movwf	??___lwmod
  4601  042F  087A               	movf	??___lwmod,w
  4602  0430  07FB               	addwf	___lwmod@counter,f
  4603  0431  2C26               	goto	l2171
  4604  0432                     l2173:
  4605  0432  0828               	movf	___lwmod@divisor+1,w
  4606  0433  022A               	subwf	___lwmod@dividend+1,w
  4607  0434  1D03               	skipz
  4608  0435  2C38               	goto	u1565
  4609  0436  0827               	movf	___lwmod@divisor,w
  4610  0437  0229               	subwf	___lwmod@dividend,w
  4611  0438                     u1565:
  4612  0438  1C03               	skipc
  4613  0439  2C3E               	goto	l2177
  4614  043A  0827               	movf	___lwmod@divisor,w
  4615  043B  02A9               	subwf	___lwmod@dividend,f
  4616  043C  0828               	movf	___lwmod@divisor+1,w
  4617  043D  3BAA               	subwfb	___lwmod@dividend+1,f
  4618  043E                     l2177:
  4619  043E  3001               	movlw	1
  4620  043F                     u1575:
  4621  043F  36A8               	lsrf	___lwmod@divisor+1,f
  4622  0440  0CA7               	rrf	___lwmod@divisor,f
  4623  0441  0B89               	decfsz	9,f
  4624  0442  2C3F               	goto	u1575
  4625  0443  3001               	movlw	1
  4626  0444  02FB               	subwf	___lwmod@counter,f
  4627  0445  1D03               	btfss	3,2
  4628  0446  2C32               	goto	l2173
  4629  0447                     l2181:
  4630  0447  082A               	movf	___lwmod@dividend+1,w
  4631  0448  00A8               	movwf	?___lwmod+1
  4632  0449  0829               	movf	___lwmod@dividend,w
  4633  044A  00A7               	movwf	?___lwmod
  4634  044B  0008               	return
  4635  044C                     __end_of___lwmod:
  4636                           
  4637                           	psect	text9
  4638  035B                     __ptext9:	
  4639 ;; *************** function ___lwdiv *****************
  4640 ;; Defined at:
  4641 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/lwdiv.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  divisor         2    0[BANK0 ] unsigned int 
  4644 ;;  dividend        2    2[BANK0 ] unsigned int 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  quotient        2    5[BANK0 ] unsigned int 
  4647 ;;  counter         1    4[BANK0 ] unsigned char 
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  2    0[BANK0 ] unsigned int 
  4650 ;; Registers used:
  4651 ;;		wreg, status,2, status,0
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4657 ;;      Params:         0       4       0       0       0       0       0       0
  4658 ;;      Locals:         0       3       0       0       0       0       0       0
  4659 ;;      Temps:          1       0       0       0       0       0       0       0
  4660 ;;      Totals:         1       7       0       0       0       0       0       0
  4661 ;;Total ram usage:        8 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:    4
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		_printf
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           
  4672                           ;psect for function ___lwdiv
  4673  035B                     ___lwdiv:
  4674                           
  4675                           ;incstack = 0
  4676                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4677  035B  0020               	movlb	0	; select bank0
  4678  035C  01A5               	clrf	___lwdiv@quotient
  4679  035D  01A6               	clrf	___lwdiv@quotient+1
  4680  035E  0820               	movf	___lwdiv@divisor,w
  4681  035F  0421               	iorwf	___lwdiv@divisor+1,w
  4682  0360  1903               	btfsc	3,2
  4683  0361  2B8B               	goto	l2159
  4684  0362  01A4               	clrf	___lwdiv@counter
  4685  0363  0AA4               	incf	___lwdiv@counter,f
  4686  0364                     l2147:
  4687  0364  1BA1               	btfsc	___lwdiv@divisor+1,7
  4688  0365  2B70               	goto	l2149
  4689  0366  3001               	movlw	1
  4690  0367                     u1475:
  4691  0367  35A0               	lslf	___lwdiv@divisor,f
  4692  0368  0DA1               	rlf	___lwdiv@divisor+1,f
  4693  0369  0B89               	decfsz	9,f
  4694  036A  2B67               	goto	u1475
  4695  036B  3001               	movlw	1
  4696  036C  00F9               	movwf	??___lwdiv
  4697  036D  0879               	movf	??___lwdiv,w
  4698  036E  07A4               	addwf	___lwdiv@counter,f
  4699  036F  2B64               	goto	l2147
  4700  0370                     l2149:
  4701  0370  3001               	movlw	1
  4702  0371                     u1495:
  4703  0371  35A5               	lslf	___lwdiv@quotient,f
  4704  0372  0DA6               	rlf	___lwdiv@quotient+1,f
  4705  0373  0B89               	decfsz	9,f
  4706  0374  2B71               	goto	u1495
  4707  0375  0821               	movf	___lwdiv@divisor+1,w
  4708  0376  0223               	subwf	___lwdiv@dividend+1,w
  4709  0377  1D03               	skipz
  4710  0378  2B7B               	goto	u1505
  4711  0379  0820               	movf	___lwdiv@divisor,w
  4712  037A  0222               	subwf	___lwdiv@dividend,w
  4713  037B                     u1505:
  4714  037B  1C03               	skipc
  4715  037C  2B82               	goto	l2155
  4716  037D  0820               	movf	___lwdiv@divisor,w
  4717  037E  02A2               	subwf	___lwdiv@dividend,f
  4718  037F  0821               	movf	___lwdiv@divisor+1,w
  4719  0380  3BA3               	subwfb	___lwdiv@dividend+1,f
  4720  0381  1425               	bsf	___lwdiv@quotient,0
  4721  0382                     l2155:
  4722  0382  3001               	movlw	1
  4723  0383                     u1515:
  4724  0383  36A1               	lsrf	___lwdiv@divisor+1,f
  4725  0384  0CA0               	rrf	___lwdiv@divisor,f
  4726  0385  0B89               	decfsz	9,f
  4727  0386  2B83               	goto	u1515
  4728  0387  3001               	movlw	1
  4729  0388  02A4               	subwf	___lwdiv@counter,f
  4730  0389  1D03               	btfss	3,2
  4731  038A  2B70               	goto	l2149
  4732  038B                     l2159:
  4733  038B  0826               	movf	___lwdiv@quotient+1,w
  4734  038C  00A1               	movwf	?___lwdiv+1
  4735  038D  0825               	movf	___lwdiv@quotient,w
  4736  038E  00A0               	movwf	?___lwdiv
  4737  038F  0008               	return
  4738  0390                     __end_of___lwdiv:
  4739                           
  4740                           	psect	text10
  4741  044C                     __ptext10:	
  4742 ;; *************** function _lowBattery *****************
  4743 ;; Defined at:
  4744 ;;		line 155 in file "main.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;		None
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  1    wreg      void 
  4751 ;; Registers used:
  4752 ;;		wreg, status,2, status,0, pclath, cstack
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4758 ;;      Params:         0       0       0       0       0       0       0       0
  4759 ;;      Locals:         0       0       0       0       0       0       0       0
  4760 ;;      Temps:          2       0       0       0       0       0       0       0
  4761 ;;      Totals:         2       0       0       0       0       0       0       0
  4762 ;;Total ram usage:        2 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    5
  4765 ;; This function calls:
  4766 ;;		_setLEDColor
  4767 ;; This function is called by:
  4768 ;;		_main
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           
  4773                           ;psect for function _lowBattery
  4774  044C                     _lowBattery:
  4775                           
  4776                           ;main.c: 156: setLEDColor(0, 255, 255);
  4777                           
  4778                           ;incstack = 0
  4779                           ; Regs used in _lowBattery: [wreg+status,2+status,0+pclath+cstack]
  4780  044C  30FF               	movlw	255
  4781  044D  00FA               	movwf	??_lowBattery
  4782  044E  087A               	movf	??_lowBattery,w
  4783  044F  0020               	movlb	0	; select bank0
  4784  0450  00A0               	movwf	setLEDColor@green
  4785  0451  30FF               	movlw	255
  4786  0452  00FB               	movwf	??_lowBattery+1
  4787  0453  087B               	movf	??_lowBattery+1,w
  4788  0454  00A1               	movwf	setLEDColor@blue
  4789  0455  3000               	movlw	0
  4790  0456  3185  2505  3184   	fcall	_setLEDColor
  4791                           
  4792                           ;main.c: 157: _delay((unsigned long)((250)*(4000000/4000.0)));
  4793  0459  3002               	movlw	2
  4794  045A  00FB               	movwf	??_lowBattery+1
  4795  045B  3045               	movlw	69
  4796  045C  00FA               	movwf	??_lowBattery
  4797  045D  30AA               	movlw	170
  4798  045E                     u1967:
  4799  045E  0B89               	decfsz	9,f
  4800  045F  2C5E               	goto	u1967
  4801  0460  0BFA               	decfsz	??_lowBattery,f
  4802  0461  2C5E               	goto	u1967
  4803  0462  0BFB               	decfsz	??_lowBattery+1,f
  4804  0463  2C5E               	goto	u1967
  4805                           
  4806                           ;main.c: 158: setLEDColor(0, 0, 0);
  4807  0464  0020               	movlb	0	; select bank0
  4808  0465  01A0               	clrf	setLEDColor@green
  4809  0466  01A1               	clrf	setLEDColor@blue
  4810  0467  3000               	movlw	0
  4811  0468  3185  2505  3184   	fcall	_setLEDColor
  4812                           
  4813                           ;main.c: 159: _delay((unsigned long)((500)*(4000000/4000.0)));
  4814  046B  3003               	movlw	3
  4815  046C  00FB               	movwf	??_lowBattery+1
  4816  046D  308A               	movlw	138
  4817  046E  00FA               	movwf	??_lowBattery
  4818  046F  3056               	movlw	86
  4819  0470                     u1977:
  4820  0470  0B89               	decfsz	9,f
  4821  0471  2C70               	goto	u1977
  4822  0472  0BFA               	decfsz	??_lowBattery,f
  4823  0473  2C70               	goto	u1977
  4824  0474  0BFB               	decfsz	??_lowBattery+1,f
  4825  0475  2C70               	goto	u1977
  4826  0476  0008               	return
  4827  0477                     __end_of_lowBattery:
  4828                           
  4829                           	psect	text11
  4830  0505                     __ptext11:	
  4831 ;; *************** function _setLEDColor *****************
  4832 ;; Defined at:
  4833 ;;		line 140 in file "main.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;  red             1    wreg     unsigned char 
  4836 ;;  green           1    0[BANK0 ] unsigned char 
  4837 ;;  blue            1    1[BANK0 ] unsigned char 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  red             1    2[COMMON] unsigned char 
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      void 
  4842 ;; Registers used:
  4843 ;;		wreg, status,2
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4849 ;;      Params:         0       2       0       0       0       0       0       0
  4850 ;;      Locals:         1       0       0       0       0       0       0       0
  4851 ;;      Temps:          0       0       0       0       0       0       0       0
  4852 ;;      Totals:         1       2       0       0       0       0       0       0
  4853 ;;Total ram usage:        3 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:    4
  4856 ;; This function calls:
  4857 ;;		Nothing
  4858 ;; This function is called by:
  4859 ;;		_lowBattery
  4860 ;;		_startUp
  4861 ;;		_selectSomething
  4862 ;;		_selectFrequency
  4863 ;;		_process_remote_command
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           
  4868                           ;psect for function _setLEDColor
  4869  0505                     _setLEDColor:
  4870                           
  4871                           ;incstack = 0
  4872                           ; Regs used in _setLEDColor: [wreg+status,2]
  4873                           ;setLEDColor@red stored from wreg
  4874  0505  00F9               	movwf	setLEDColor@red
  4875                           
  4876                           ;main.c: 146: CCPR1L = 255 - blue;
  4877  0506  0020               	movlb	0	; select bank0
  4878  0507  0921               	comf	setLEDColor@blue,w
  4879  0508  0025               	movlb	5	; select bank5
  4880  0509  0091               	movwf	17	;volatile
  4881                           
  4882                           ;main.c: 148: PWM3DCH = red;
  4883  050A  0879               	movf	setLEDColor@red,w
  4884  050B  002C               	movlb	12	; select bank12
  4885  050C  0098               	movwf	24	;volatile
  4886                           
  4887                           ;main.c: 150: PWM4DCH = green;
  4888  050D  0020               	movlb	0	; select bank0
  4889  050E  0820               	movf	setLEDColor@green,w
  4890  050F  002C               	movlb	12	; select bank12
  4891  0510  009B               	movwf	27	;volatile
  4892  0511  0008               	return
  4893  0512                     __end_of_setLEDColor:
  4894                           
  4895                           	psect	text12
  4896  02E2                     __ptext12:	
  4897 ;; *************** function _initLED *****************
  4898 ;; Defined at:
  4899 ;;		line 99 in file "main.c"
  4900 ;; Parameters:    Size  Location     Type
  4901 ;;		None
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;		None
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      void 
  4906 ;; Registers used:
  4907 ;;		wreg, status,2, status,0
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4913 ;;      Params:         0       0       0       0       0       0       0       0
  4914 ;;      Locals:         0       0       0       0       0       0       0       0
  4915 ;;      Temps:          1       0       0       0       0       0       0       0
  4916 ;;      Totals:         1       0       0       0       0       0       0       0
  4917 ;;Total ram usage:        1 bytes
  4918 ;; Hardware stack levels used:    1
  4919 ;; Hardware stack levels required when called:    4
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_main
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           
  4928                           ;psect for function _initLED
  4929  02E2                     _initLED:
  4930                           
  4931                           ;main.c: 102: PR2 = 255;
  4932                           
  4933                           ;incstack = 0
  4934                           ; Regs used in _initLED: [wreg+status,2+status,0]
  4935  02E2  30FF               	movlw	255
  4936  02E3  0020               	movlb	0	; select bank0
  4937  02E4  009B               	movwf	27	;volatile
  4938                           
  4939                           ;main.c: 103: T2CONbits.T2CKPS = 0b10;
  4940  02E5  081C               	movf	28,w	;volatile
  4941  02E6  39FC               	andlw	-4
  4942  02E7  3802               	iorlw	2
  4943  02E8  009C               	movwf	28	;volatile
  4944                           
  4945                           ;main.c: 104: T2CONbits.TMR2ON = 1;
  4946  02E9  151C               	bsf	28,2	;volatile
  4947                           
  4948                           ;main.c: 108: TRISC |= 0b00010000;
  4949  02EA  0021               	movlb	1	; select bank1
  4950  02EB  160E               	bsf	14,4	;volatile
  4951                           
  4952                           ;main.c: 109: RC4PPS = 0b01110;
  4953  02EC  300E               	movlw	14
  4954  02ED  003D               	movlb	29	; select bank29
  4955  02EE  00A4               	movwf	36	;volatile
  4956                           
  4957                           ;main.c: 110: CCPTMRSbits.P3TSEL = 0b00;
  4958  02EF  30CF               	movlw	-49
  4959  02F0  0025               	movlb	5	; select bank5
  4960  02F1  059E               	andwf	30,f	;volatile
  4961                           
  4962                           ;main.c: 111: PWM3DCH = 0;
  4963  02F2  002C               	movlb	12	; select bank12
  4964  02F3  0198               	clrf	24	;volatile
  4965                           
  4966                           ;main.c: 112: PWM3DCLbits.PWM3DCL = 0;
  4967  02F4  303F               	movlw	-193
  4968  02F5  0597               	andwf	23,f	;volatile
  4969                           
  4970                           ;main.c: 113: PWM3CONbits.PWM3POL = 1;
  4971  02F6  1619               	bsf	25,4	;volatile
  4972                           
  4973                           ;main.c: 114: TRISC &= 0b11101111;
  4974  02F7  30EF               	movlw	239
  4975  02F8  00F9               	movwf	??_initLED
  4976  02F9  0879               	movf	??_initLED,w
  4977  02FA  0021               	movlb	1	; select bank1
  4978  02FB  058E               	andwf	14,f	;volatile
  4979                           
  4980                           ;main.c: 115: PWM3CONbits.PWM3EN = 1;
  4981  02FC  002C               	movlb	12	; select bank12
  4982  02FD  1799               	bsf	25,7	;volatile
  4983                           
  4984                           ;main.c: 119: TRISA |= 0b00100000;
  4985  02FE  0021               	movlb	1	; select bank1
  4986  02FF  168C               	bsf	12,5	;volatile
  4987                           
  4988                           ;main.c: 120: RA5PPS = 0b01111;
  4989  0300  300F               	movlw	15
  4990  0301  003D               	movlb	29	; select bank29
  4991  0302  0095               	movwf	21	;volatile
  4992                           
  4993                           ;main.c: 121: CCPTMRSbits.P4TSEL = 0b00;
  4994  0303  303F               	movlw	-193
  4995  0304  0025               	movlb	5	; select bank5
  4996  0305  059E               	andwf	30,f	;volatile
  4997                           
  4998                           ;main.c: 122: PWM4DCH = 0;
  4999  0306  002C               	movlb	12	; select bank12
  5000  0307  019B               	clrf	27	;volatile
  5001                           
  5002                           ;main.c: 123: PWM4DCLbits.PWM4DCL = 0;
  5003  0308  303F               	movlw	-193
  5004  0309  059A               	andwf	26,f	;volatile
  5005                           
  5006                           ;main.c: 124: PWM4CONbits.PWM4POL = 1;
  5007  030A  161C               	bsf	28,4	;volatile
  5008                           
  5009                           ;main.c: 125: TRISA &= 0b11011111;
  5010  030B  30DF               	movlw	223
  5011  030C  00F9               	movwf	??_initLED
  5012  030D  0879               	movf	??_initLED,w
  5013  030E  0021               	movlb	1	; select bank1
  5014  030F  058C               	andwf	12,f	;volatile
  5015                           
  5016                           ;main.c: 126: PWM4CONbits.PWM4EN = 1;
  5017  0310  002C               	movlb	12	; select bank12
  5018  0311  179C               	bsf	28,7	;volatile
  5019                           
  5020                           ;main.c: 132: TRISC |= 0b00100000;
  5021  0312  0021               	movlb	1	; select bank1
  5022  0313  168E               	bsf	14,5	;volatile
  5023                           
  5024                           ;main.c: 133: RC5PPS = 0b01100;
  5025  0314  300C               	movlw	12
  5026  0315  003D               	movlb	29	; select bank29
  5027  0316  00A5               	movwf	37	;volatile
  5028                           
  5029                           ;main.c: 134: CCP1CONbits.CCP1M = 0b1100;
  5030  0317  0025               	movlb	5	; select bank5
  5031  0318  0813               	movf	19,w	;volatile
  5032  0319  39F0               	andlw	-16
  5033  031A  380C               	iorlw	12
  5034  031B  0093               	movwf	19	;volatile
  5035                           
  5036                           ;main.c: 135: CCPR1L = 255;
  5037  031C  30FF               	movlw	255
  5038  031D  0091               	movwf	17	;volatile
  5039                           
  5040                           ;main.c: 136: CCP1CONbits.DC1B = 0x3;
  5041  031E  3030               	movlw	48
  5042  031F  0493               	iorwf	19,f	;volatile
  5043                           
  5044                           ;main.c: 137: TRISC &= 0b11011111;
  5045  0320  30DF               	movlw	223
  5046  0321  00F9               	movwf	??_initLED
  5047  0322  0879               	movf	??_initLED,w
  5048  0323  0021               	movlb	1	; select bank1
  5049  0324  058E               	andwf	14,f	;volatile
  5050  0325  0008               	return
  5051  0326                     __end_of_initLED:
  5052                           
  5053                           	psect	text13
  5054  03F1                     __ptext13:	
  5055 ;; *************** function _battery_voltage *****************
  5056 ;; Defined at:
  5057 ;;		line 74 in file "main.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;		None
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;		None
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  2   14[BANK0 ] unsigned int 
  5064 ;; Registers used:
  5065 ;;		wreg, status,2, status,0, pclath, cstack
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5071 ;;      Params:         0       2       0       0       0       0       0       0
  5072 ;;      Locals:         0       0       0       0       0       0       0       0
  5073 ;;      Temps:          0       0       0       0       0       0       0       0
  5074 ;;      Totals:         0       2       0       0       0       0       0       0
  5075 ;;Total ram usage:        2 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; Hardware stack levels required when called:    5
  5078 ;; This function calls:
  5079 ;;		___aldiv
  5080 ;; This function is called by:
  5081 ;;		_main
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           
  5086                           ;psect for function _battery_voltage
  5087  03F1                     _battery_voltage:
  5088                           
  5089                           ;main.c: 76: FVRCON = 0b10000001;
  5090                           
  5091                           ;incstack = 0
  5092                           ; Regs used in _battery_voltage: [wreg+status,2+status,0+pclath+cstack]
  5093  03F1  3081               	movlw	129
  5094  03F2  0022               	movlb	2	; select bank2
  5095  03F3  0097               	movwf	23	;volatile
  5096                           
  5097                           ;main.c: 77: ADCON0 = 0b01111101;
  5098  03F4  307D               	movlw	125
  5099  03F5  0021               	movlb	1	; select bank1
  5100  03F6  009D               	movwf	29	;volatile
  5101                           
  5102                           ;main.c: 78: ADCON1 = 0b10010000;
  5103  03F7  3090               	movlw	144
  5104  03F8  009E               	movwf	30	;volatile
  5105  03F9                     l418:	
  5106                           ;main.c: 79: while(!FVRCONbits.FVRRDY){ }
  5107                           
  5108  03F9  0022               	movlb	2	; select bank2
  5109  03FA  1F17               	btfss	23,6	;volatile
  5110  03FB  2BF9               	goto	l418
  5111                           
  5112                           ;main.c: 80: __nop();
  5113  03FC  0000               	nop
  5114                           
  5115                           ;main.c: 81: __nop();
  5116  03FD  0000               	nop
  5117                           
  5118                           ;main.c: 82: __nop();
  5119  03FE  0000               	nop
  5120                           
  5121                           ;main.c: 83: __nop();
  5122  03FF  0000               	nop
  5123                           
  5124                           ;main.c: 84: __nop();
  5125  0400  0000               	nop
  5126                           
  5127                           ;main.c: 85: ADCON0bits.GO_nDONE = 1;
  5128  0401  0021               	movlb	1	; select bank1
  5129  0402  149D               	bsf	29,1	;volatile
  5130  0403                     l421:	
  5131                           ;main.c: 86: while(ADCON0bits.GO_nDONE){ }
  5132                           
  5133  0403  189D               	btfsc	29,1	;volatile
  5134  0404  2C03               	goto	l421
  5135                           
  5136                           ;main.c: 87: ADCON0bits.ADON = 0;
  5137  0405  101D               	bcf	29,0	;volatile
  5138                           
  5139                           ;main.c: 92: return 1047552L / ADRES;
  5140  0406  081B               	movf	27,w	;volatile
  5141  0407  0020               	movlb	0	; select bank0
  5142  0408  00A0               	movwf	___aldiv@divisor
  5143  0409  0021               	movlb	1	; select bank1
  5144  040A  081C               	movf	28,w	;volatile
  5145  040B  0020               	movlb	0	; select bank0
  5146  040C  00A1               	movwf	___aldiv@divisor+1
  5147  040D  01A2               	clrf	___aldiv@divisor+2
  5148  040E  01A3               	clrf	___aldiv@divisor+3
  5149  040F  3000               	movlw	0
  5150  0410  00A7               	movwf	___aldiv@dividend+3
  5151  0411  300F               	movlw	15
  5152  0412  00A6               	movwf	___aldiv@dividend+2
  5153  0413  30FC               	movlw	252
  5154  0414  00A5               	movwf	___aldiv@dividend+1
  5155  0415  3000               	movlw	0
  5156  0416  00A4               	movwf	___aldiv@dividend
  5157  0417  3181  21B2         	fcall	___aldiv
  5158  0419  0020               	movlb	0	; select bank0
  5159  041A  0821               	movf	?___aldiv+1,w
  5160  041B  00AF               	movwf	?_battery_voltage+1
  5161  041C  0820               	movf	?___aldiv,w
  5162  041D  00AE               	movwf	?_battery_voltage
  5163  041E  0008               	return
  5164  041F                     __end_of_battery_voltage:
  5165                           
  5166                           	psect	text14
  5167  01B2                     __ptext14:	
  5168 ;; *************** function ___aldiv *****************
  5169 ;; Defined at:
  5170 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/aldiv.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  divisor         4    0[BANK0 ] long 
  5173 ;;  dividend        4    4[BANK0 ] long 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  quotient        4   10[BANK0 ] long 
  5176 ;;  sign            1    9[BANK0 ] unsigned char 
  5177 ;;  counter         1    8[BANK0 ] unsigned char 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  4    0[BANK0 ] long 
  5180 ;; Registers used:
  5181 ;;		wreg, status,2, status,0
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5187 ;;      Params:         0       8       0       0       0       0       0       0
  5188 ;;      Locals:         0       6       0       0       0       0       0       0
  5189 ;;      Temps:          1       0       0       0       0       0       0       0
  5190 ;;      Totals:         1      14       0       0       0       0       0       0
  5191 ;;Total ram usage:       15 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:    4
  5194 ;; This function calls:
  5195 ;;		Nothing
  5196 ;; This function is called by:
  5197 ;;		_battery_voltage
  5198 ;;		_setCurrent
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           
  5203                           ;psect for function ___aldiv
  5204  01B2                     ___aldiv:
  5205                           
  5206                           ;incstack = 0
  5207                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5208  01B2  0020               	movlb	0	; select bank0
  5209  01B3  01A9               	clrf	___aldiv@sign
  5210  01B4  1FA3               	btfss	___aldiv@divisor+3,7
  5211  01B5  29C3               	goto	l657
  5212  01B6  09A0               	comf	___aldiv@divisor,f
  5213  01B7  09A1               	comf	___aldiv@divisor+1,f
  5214  01B8  09A2               	comf	___aldiv@divisor+2,f
  5215  01B9  09A3               	comf	___aldiv@divisor+3,f
  5216  01BA  0AA0               	incf	___aldiv@divisor,f
  5217  01BB  1903               	skipnz
  5218  01BC  0AA1               	incf	___aldiv@divisor+1,f
  5219  01BD  1903               	skipnz
  5220  01BE  0AA2               	incf	___aldiv@divisor+2,f
  5221  01BF  1903               	skipnz
  5222  01C0  0AA3               	incf	___aldiv@divisor+3,f
  5223  01C1  01A9               	clrf	___aldiv@sign
  5224  01C2  0AA9               	incf	___aldiv@sign,f
  5225  01C3                     l657:
  5226  01C3  1FA7               	btfss	___aldiv@dividend+3,7
  5227  01C4  29D4               	goto	l2271
  5228  01C5  09A4               	comf	___aldiv@dividend,f
  5229  01C6  09A5               	comf	___aldiv@dividend+1,f
  5230  01C7  09A6               	comf	___aldiv@dividend+2,f
  5231  01C8  09A7               	comf	___aldiv@dividend+3,f
  5232  01C9  0AA4               	incf	___aldiv@dividend,f
  5233  01CA  1903               	skipnz
  5234  01CB  0AA5               	incf	___aldiv@dividend+1,f
  5235  01CC  1903               	skipnz
  5236  01CD  0AA6               	incf	___aldiv@dividend+2,f
  5237  01CE  1903               	skipnz
  5238  01CF  0AA7               	incf	___aldiv@dividend+3,f
  5239  01D0  3001               	movlw	1
  5240  01D1  00F9               	movwf	??___aldiv
  5241  01D2  0879               	movf	??___aldiv,w
  5242  01D3  06A9               	xorwf	___aldiv@sign,f
  5243  01D4                     l2271:
  5244  01D4  3000               	movlw	0
  5245  01D5  00AD               	movwf	___aldiv@quotient+3
  5246  01D6  3000               	movlw	0
  5247  01D7  00AC               	movwf	___aldiv@quotient+2
  5248  01D8  3000               	movlw	0
  5249  01D9  00AB               	movwf	___aldiv@quotient+1
  5250  01DA  3000               	movlw	0
  5251  01DB  00AA               	movwf	___aldiv@quotient
  5252  01DC  0823               	movf	___aldiv@divisor+3,w
  5253  01DD  0422               	iorwf	___aldiv@divisor+2,w
  5254  01DE  0421               	iorwf	___aldiv@divisor+1,w
  5255  01DF  0420               	iorwf	___aldiv@divisor,w
  5256  01E0  1903               	skipnz
  5257  01E1  2A1D               	goto	l2293
  5258  01E2  01A8               	clrf	___aldiv@counter
  5259  01E3  0AA8               	incf	___aldiv@counter,f
  5260  01E4                     l2279:
  5261  01E4  1BA3               	btfsc	___aldiv@divisor+3,7
  5262  01E5  29F2               	goto	l2281
  5263  01E6  3001               	movlw	1
  5264  01E7                     u1695:
  5265  01E7  35A0               	lslf	___aldiv@divisor,f
  5266  01E8  0DA1               	rlf	___aldiv@divisor+1,f
  5267  01E9  0DA2               	rlf	___aldiv@divisor+2,f
  5268  01EA  0DA3               	rlf	___aldiv@divisor+3,f
  5269  01EB  0B89               	decfsz	9,f
  5270  01EC  29E7               	goto	u1695
  5271  01ED  3001               	movlw	1
  5272  01EE  00F9               	movwf	??___aldiv
  5273  01EF  0879               	movf	??___aldiv,w
  5274  01F0  07A8               	addwf	___aldiv@counter,f
  5275  01F1  29E4               	goto	l2279
  5276  01F2                     l2281:
  5277  01F2  3001               	movlw	1
  5278  01F3                     u1715:
  5279  01F3  35AA               	lslf	___aldiv@quotient,f
  5280  01F4  0DAB               	rlf	___aldiv@quotient+1,f
  5281  01F5  0DAC               	rlf	___aldiv@quotient+2,f
  5282  01F6  0DAD               	rlf	___aldiv@quotient+3,f
  5283  01F7  0B89               	decfsz	9,f
  5284  01F8  29F3               	goto	u1715
  5285  01F9  0823               	movf	___aldiv@divisor+3,w
  5286  01FA  0227               	subwf	___aldiv@dividend+3,w
  5287  01FB  1D03               	skipz
  5288  01FC  2A07               	goto	u1725
  5289  01FD  0822               	movf	___aldiv@divisor+2,w
  5290  01FE  0226               	subwf	___aldiv@dividend+2,w
  5291  01FF  1D03               	skipz
  5292  0200  2A07               	goto	u1725
  5293  0201  0821               	movf	___aldiv@divisor+1,w
  5294  0202  0225               	subwf	___aldiv@dividend+1,w
  5295  0203  1D03               	skipz
  5296  0204  2A07               	goto	u1725
  5297  0205  0820               	movf	___aldiv@divisor,w
  5298  0206  0224               	subwf	___aldiv@dividend,w
  5299  0207                     u1725:
  5300  0207  1C03               	skipc
  5301  0208  2A12               	goto	l2289
  5302  0209  0820               	movf	___aldiv@divisor,w
  5303  020A  02A4               	subwf	___aldiv@dividend,f
  5304  020B  0821               	movf	___aldiv@divisor+1,w
  5305  020C  3BA5               	subwfb	___aldiv@dividend+1,f
  5306  020D  0822               	movf	___aldiv@divisor+2,w
  5307  020E  3BA6               	subwfb	___aldiv@dividend+2,f
  5308  020F  0823               	movf	___aldiv@divisor+3,w
  5309  0210  3BA7               	subwfb	___aldiv@dividend+3,f
  5310  0211  142A               	bsf	___aldiv@quotient,0
  5311  0212                     l2289:
  5312  0212  3001               	movlw	1
  5313  0213                     u1735:
  5314  0213  36A3               	lsrf	___aldiv@divisor+3,f
  5315  0214  0CA2               	rrf	___aldiv@divisor+2,f
  5316  0215  0CA1               	rrf	___aldiv@divisor+1,f
  5317  0216  0CA0               	rrf	___aldiv@divisor,f
  5318  0217  0B89               	decfsz	9,f
  5319  0218  2A13               	goto	u1735
  5320  0219  3001               	movlw	1
  5321  021A  02A8               	subwf	___aldiv@counter,f
  5322  021B  1D03               	btfss	3,2
  5323  021C  29F2               	goto	l2281
  5324  021D                     l2293:
  5325  021D  0829               	movf	___aldiv@sign,w
  5326  021E  1903               	btfsc	3,2
  5327  021F  2A2B               	goto	l2297
  5328  0220  09AA               	comf	___aldiv@quotient,f
  5329  0221  09AB               	comf	___aldiv@quotient+1,f
  5330  0222  09AC               	comf	___aldiv@quotient+2,f
  5331  0223  09AD               	comf	___aldiv@quotient+3,f
  5332  0224  0AAA               	incf	___aldiv@quotient,f
  5333  0225  1903               	skipnz
  5334  0226  0AAB               	incf	___aldiv@quotient+1,f
  5335  0227  1903               	skipnz
  5336  0228  0AAC               	incf	___aldiv@quotient+2,f
  5337  0229  1903               	skipnz
  5338  022A  0AAD               	incf	___aldiv@quotient+3,f
  5339  022B                     l2297:
  5340  022B  082D               	movf	___aldiv@quotient+3,w
  5341  022C  00A3               	movwf	?___aldiv+3
  5342  022D  082C               	movf	___aldiv@quotient+2,w
  5343  022E  00A2               	movwf	?___aldiv+2
  5344  022F  082B               	movf	___aldiv@quotient+1,w
  5345  0230  00A1               	movwf	?___aldiv+1
  5346  0231  082A               	movf	___aldiv@quotient,w
  5347  0232  00A0               	movwf	?___aldiv
  5348  0233  0008               	return
  5349  0234                     __end_of___aldiv:
  5350                           
  5351                           	psect	text15
  5352  04C3                     __ptext15:	
  5353 ;; *************** function _SYSTEM_Initialize *****************
  5354 ;; Defined at:
  5355 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;		None
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;		None
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  1    wreg      void 
  5362 ;; Registers used:
  5363 ;;		wreg, status,2, status,0, pclath, cstack
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5369 ;;      Params:         0       0       0       0       0       0       0       0
  5370 ;;      Locals:         0       0       0       0       0       0       0       0
  5371 ;;      Temps:          0       0       0       0       0       0       0       0
  5372 ;;      Totals:         0       0       0       0       0       0       0       0
  5373 ;;Total ram usage:        0 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; Hardware stack levels required when called:    6
  5376 ;; This function calls:
  5377 ;;		_DAC_Initialize
  5378 ;;		_EUSART_Initialize
  5379 ;;		_EXT_INT_Initialize
  5380 ;;		_OPA1_Initialize
  5381 ;;		_OPA2_Initialize
  5382 ;;		_OSCILLATOR_Initialize
  5383 ;;		_PIN_MANAGER_Initialize
  5384 ;;		_TMR0_Initialize
  5385 ;;		_TMR2_Initialize
  5386 ;;		_WDT_Initialize
  5387 ;; This function is called by:
  5388 ;;		_main
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           
  5393                           ;psect for function _SYSTEM_Initialize
  5394  04C3                     _SYSTEM_Initialize:
  5395                           
  5396                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  5397                           
  5398                           ;incstack = 0
  5399                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5400  04C3  3183  2390  3184   	fcall	_PIN_MANAGER_Initialize
  5401                           
  5402                           ;mcc.c: 54: OSCILLATOR_Initialize();
  5403  04C6  3185  254D  3184   	fcall	_OSCILLATOR_Initialize
  5404                           
  5405                           ;mcc.c: 55: WDT_Initialize();
  5406  04C9  3185  2582  3184   	fcall	_WDT_Initialize
  5407                           
  5408                           ;mcc.c: 56: DAC_Initialize();
  5409  04CC  3185  2573  3184   	fcall	_DAC_Initialize
  5410                           
  5411                           ;mcc.c: 57: OPA1_Initialize();
  5412  04CF  3185  258A  3184   	fcall	_OPA1_Initialize
  5413                           
  5414                           ;mcc.c: 58: OPA2_Initialize();
  5415  04D2  3185  2586  3184   	fcall	_OPA2_Initialize
  5416                           
  5417                           ;mcc.c: 59: TMR2_Initialize();
  5418  04D5  3185  2545  3184   	fcall	_TMR2_Initialize
  5419                           
  5420                           ;mcc.c: 60: EXT_INT_Initialize();
  5421  04D8  3185  2512  3184   	fcall	_EXT_INT_Initialize
  5422                           
  5423                           ;mcc.c: 61: TMR0_Initialize();
  5424  04DB  3185  2533  3184   	fcall	_TMR0_Initialize
  5425                           
  5426                           ;mcc.c: 62: EUSART_Initialize();
  5427  04DE  3184  249F         	fcall	_EUSART_Initialize
  5428  04E0  0008               	return
  5429  04E1                     __end_of_SYSTEM_Initialize:
  5430                           
  5431                           	psect	text16
  5432  0582                     __ptext16:	
  5433 ;; *************** function _WDT_Initialize *****************
  5434 ;; Defined at:
  5435 ;;		line 77 in file "mcc_generated_files/mcc.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;		None
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;		None
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  1    wreg      void 
  5442 ;; Registers used:
  5443 ;;		wreg
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5449 ;;      Params:         0       0       0       0       0       0       0       0
  5450 ;;      Locals:         0       0       0       0       0       0       0       0
  5451 ;;      Temps:          0       0       0       0       0       0       0       0
  5452 ;;      Totals:         0       0       0       0       0       0       0       0
  5453 ;;Total ram usage:        0 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:    4
  5456 ;; This function calls:
  5457 ;;		Nothing
  5458 ;; This function is called by:
  5459 ;;		_SYSTEM_Initialize
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           
  5464                           ;psect for function _WDT_Initialize
  5465  0582                     _WDT_Initialize:
  5466                           
  5467                           ;mcc.c: 80: WDTCON = 0x16;
  5468                           
  5469                           ;incstack = 0
  5470                           ; Regs used in _WDT_Initialize: [wreg]
  5471  0582  3016               	movlw	22
  5472  0583  0021               	movlb	1	; select bank1
  5473  0584  0097               	movwf	23	;volatile
  5474  0585  0008               	return
  5475  0586                     __end_of_WDT_Initialize:
  5476                           
  5477                           	psect	text17
  5478  0545                     __ptext17:	
  5479 ;; *************** function _TMR2_Initialize *****************
  5480 ;; Defined at:
  5481 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;		None
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;		None
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      void 
  5488 ;; Registers used:
  5489 ;;		wreg, status,2
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5495 ;;      Params:         0       0       0       0       0       0       0       0
  5496 ;;      Locals:         0       0       0       0       0       0       0       0
  5497 ;;      Temps:          0       0       0       0       0       0       0       0
  5498 ;;      Totals:         0       0       0       0       0       0       0       0
  5499 ;;Total ram usage:        0 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:    4
  5502 ;; This function calls:
  5503 ;;		Nothing
  5504 ;; This function is called by:
  5505 ;;		_SYSTEM_Initialize
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           
  5510                           ;psect for function _TMR2_Initialize
  5511  0545                     _TMR2_Initialize:
  5512                           
  5513                           ;tmr2.c: 67: PR2 = 255;
  5514                           
  5515                           ;incstack = 0
  5516                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5517  0545  30FF               	movlw	255
  5518  0546  0020               	movlb	0	; select bank0
  5519  0547  009B               	movwf	27	;volatile
  5520                           
  5521                           ;tmr2.c: 70: TMR2 = 0x00;
  5522  0548  019A               	clrf	26	;volatile
  5523                           
  5524                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
  5525  0549  1091               	bcf	17,1	;volatile
  5526                           
  5527                           ;tmr2.c: 76: T2CON = 0x06;
  5528  054A  3006               	movlw	6
  5529  054B  009C               	movwf	28	;volatile
  5530  054C  0008               	return
  5531  054D                     __end_of_TMR2_Initialize:
  5532                           
  5533                           	psect	text18
  5534  0533                     __ptext18:	
  5535 ;; *************** function _TMR0_Initialize *****************
  5536 ;; Defined at:
  5537 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;		None
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;		None
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      void 
  5544 ;; Registers used:
  5545 ;;		wreg, status,2
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5551 ;;      Params:         0       0       0       0       0       0       0       0
  5552 ;;      Locals:         0       0       0       0       0       0       0       0
  5553 ;;      Temps:          0       0       0       0       0       0       0       0
  5554 ;;      Totals:         0       0       0       0       0       0       0       0
  5555 ;;Total ram usage:        0 bytes
  5556 ;; Hardware stack levels used:    1
  5557 ;; Hardware stack levels required when called:    4
  5558 ;; This function calls:
  5559 ;;		Nothing
  5560 ;; This function is called by:
  5561 ;;		_SYSTEM_Initialize
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           
  5566                           ;psect for function _TMR0_Initialize
  5567  0533                     _TMR0_Initialize:
  5568                           
  5569                           ;tmr0.c: 68: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD5 & 0x3F));
  5570                           
  5571                           ;incstack = 0
  5572                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  5573  0533  0021               	movlb	1	; select bank1
  5574  0534  0815               	movf	21,w	;volatile
  5575  0535  39C0               	andlw	192
  5576  0536  3815               	iorlw	21
  5577  0537  0095               	movwf	21	;volatile
  5578                           
  5579                           ;tmr0.c: 71: TMR0 = 0x00;
  5580  0538  0020               	movlb	0	; select bank0
  5581  0539  0195               	clrf	21	;volatile
  5582                           
  5583                           ;tmr0.c: 74: timer0ReloadVal= 0;
  5584  053A  01F0               	clrf	_timer0ReloadVal	;volatile
  5585                           
  5586                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  5587  053B  110B               	bcf	11,2	;volatile
  5588  053C  0008               	return
  5589  053D                     __end_of_TMR0_Initialize:
  5590                           
  5591                           	psect	text19
  5592  0390                     __ptext19:	
  5593 ;; *************** function _PIN_MANAGER_Initialize *****************
  5594 ;; Defined at:
  5595 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;		None
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      void 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5609 ;;      Params:         0       0       0       0       0       0       0       0
  5610 ;;      Locals:         0       0       0       0       0       0       0       0
  5611 ;;      Temps:          0       0       0       0       0       0       0       0
  5612 ;;      Totals:         0       0       0       0       0       0       0       0
  5613 ;;Total ram usage:        0 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:    4
  5616 ;; This function calls:
  5617 ;;		Nothing
  5618 ;; This function is called by:
  5619 ;;		_SYSTEM_Initialize
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           
  5624                           ;psect for function _PIN_MANAGER_Initialize
  5625  0390                     _PIN_MANAGER_Initialize:
  5626                           
  5627                           ;pin_manager.c: 60: LATA = 0x00;
  5628                           
  5629                           ;incstack = 0
  5630                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5631  0390  0022               	movlb	2	; select bank2
  5632  0391  018C               	clrf	12	;volatile
  5633                           
  5634                           ;pin_manager.c: 61: LATB = 0x00;
  5635  0392  018D               	clrf	13	;volatile
  5636                           
  5637                           ;pin_manager.c: 62: LATC = 0x00;
  5638  0393  018E               	clrf	14	;volatile
  5639                           
  5640                           ;pin_manager.c: 67: TRISA = 0x04;
  5641  0394  3004               	movlw	4
  5642  0395  0021               	movlb	1	; select bank1
  5643  0396  008C               	movwf	12	;volatile
  5644                           
  5645                           ;pin_manager.c: 68: TRISB = 0x20;
  5646  0397  3020               	movlw	32
  5647  0398  008D               	movwf	13	;volatile
  5648                           
  5649                           ;pin_manager.c: 69: TRISC = 0x10;
  5650  0399  3010               	movlw	16
  5651  039A  008E               	movwf	14	;volatile
  5652                           
  5653                           ;pin_manager.c: 74: ANSELC = 0x00;
  5654  039B  0023               	movlb	3	; select bank3
  5655  039C  018E               	clrf	14	;volatile
  5656                           
  5657                           ;pin_manager.c: 75: ANSELB = 0x00;
  5658  039D  018D               	clrf	13	;volatile
  5659                           
  5660                           ;pin_manager.c: 76: ANSELA = 0x00;
  5661  039E  018C               	clrf	12	;volatile
  5662                           
  5663                           ;pin_manager.c: 81: WPUB = 0x00;
  5664  039F  0024               	movlb	4	; select bank4
  5665  03A0  018D               	clrf	13	;volatile
  5666                           
  5667                           ;pin_manager.c: 82: WPUA = 0x00;
  5668  03A1  018C               	clrf	12	;volatile
  5669                           
  5670                           ;pin_manager.c: 83: WPUC = 0x00;
  5671  03A2  018E               	clrf	14	;volatile
  5672                           
  5673                           ;pin_manager.c: 84: OPTION_REGbits.nWPUEN = 0;
  5674  03A3  0021               	movlb	1	; select bank1
  5675  03A4  1395               	bcf	21,7	;volatile
  5676                           
  5677                           ;pin_manager.c: 89: ODCONA = 0x00;
  5678  03A5  0025               	movlb	5	; select bank5
  5679  03A6  018C               	clrf	12	;volatile
  5680                           
  5681                           ;pin_manager.c: 90: ODCONB = 0x00;
  5682  03A7  018D               	clrf	13	;volatile
  5683                           
  5684                           ;pin_manager.c: 91: ODCONC = 0x00;
  5685  03A8  018E               	clrf	14	;volatile
  5686                           
  5687                           ;pin_manager.c: 96: SLRCONA = 0x37;
  5688  03A9  3037               	movlw	55
  5689  03AA  0026               	movlb	6	; select bank6
  5690  03AB  008C               	movwf	12	;volatile
  5691                           
  5692                           ;pin_manager.c: 97: SLRCONB = 0xF0;
  5693  03AC  30F0               	movlw	240
  5694  03AD  008D               	movwf	13	;volatile
  5695                           
  5696                           ;pin_manager.c: 98: SLRCONC = 0xFF;
  5697  03AE  30FF               	movlw	255
  5698  03AF  008E               	movwf	14	;volatile
  5699                           
  5700                           ;pin_manager.c: 103: INLVLA = 0x3F;
  5701  03B0  303F               	movlw	63
  5702  03B1  0027               	movlb	7	; select bank7
  5703  03B2  008C               	movwf	12	;volatile
  5704                           
  5705                           ;pin_manager.c: 104: INLVLB = 0xF0;
  5706  03B3  30F0               	movlw	240
  5707  03B4  008D               	movwf	13	;volatile
  5708                           
  5709                           ;pin_manager.c: 105: INLVLC = 0xFF;
  5710  03B5  30FF               	movlw	255
  5711  03B6  008E               	movwf	14	;volatile
  5712                           
  5713                           ;pin_manager.c: 113: INTCONbits.IOCIE = 1;
  5714  03B7  158B               	bsf	11,3	;volatile
  5715                           
  5716                           ;pin_manager.c: 116: INTPPS = 0x02;
  5717  03B8  3002               	movlw	2
  5718  03B9  003C               	movlb	28	; select bank28
  5719  03BA  0090               	movwf	16	;volatile
  5720                           
  5721                           ;pin_manager.c: 117: RXPPS = 0x0D;
  5722  03BB  300D               	movlw	13
  5723  03BC  00A4               	movwf	36	;volatile
  5724                           
  5725                           ;pin_manager.c: 118: RB7PPS = 0x14;
  5726  03BD  3014               	movlw	20
  5727  03BE  003D               	movlb	29	; select bank29
  5728  03BF  009F               	movwf	31	;volatile
  5729  03C0  0008               	return
  5730  03C1                     __end_of_PIN_MANAGER_Initialize:
  5731                           
  5732                           	psect	text20
  5733  054D                     __ptext20:	
  5734 ;; *************** function _OSCILLATOR_Initialize *****************
  5735 ;; Defined at:
  5736 ;;		line 65 in file "mcc_generated_files/mcc.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;		None
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;		None
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  1    wreg      void 
  5743 ;; Registers used:
  5744 ;;		wreg, status,2
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5750 ;;      Params:         0       0       0       0       0       0       0       0
  5751 ;;      Locals:         0       0       0       0       0       0       0       0
  5752 ;;      Temps:          0       0       0       0       0       0       0       0
  5753 ;;      Totals:         0       0       0       0       0       0       0       0
  5754 ;;Total ram usage:        0 bytes
  5755 ;; Hardware stack levels used:    1
  5756 ;; Hardware stack levels required when called:    4
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_SYSTEM_Initialize
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           
  5765                           ;psect for function _OSCILLATOR_Initialize
  5766  054D                     _OSCILLATOR_Initialize:
  5767                           
  5768                           ;mcc.c: 68: OSCCON = 0x6A;
  5769                           
  5770                           ;incstack = 0
  5771                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5772  054D  306A               	movlw	106
  5773  054E  0021               	movlb	1	; select bank1
  5774  054F  0099               	movwf	25	;volatile
  5775                           
  5776                           ;mcc.c: 70: OSCSTAT = 0x00;
  5777  0550  019A               	clrf	26	;volatile
  5778                           
  5779                           ;mcc.c: 72: OSCTUNE = 0x00;
  5780  0551  0198               	clrf	24	;volatile
  5781                           
  5782                           ;mcc.c: 74: BORCON = 0x00;
  5783  0552  0022               	movlb	2	; select bank2
  5784  0553  0196               	clrf	22	;volatile
  5785  0554  0008               	return
  5786  0555                     __end_of_OSCILLATOR_Initialize:
  5787                           
  5788                           	psect	text21
  5789  0586                     __ptext21:	
  5790 ;; *************** function _OPA2_Initialize *****************
  5791 ;; Defined at:
  5792 ;;		line 58 in file "mcc_generated_files/opa2.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;		None
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;		None
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  1    wreg      void 
  5799 ;; Registers used:
  5800 ;;		wreg
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5806 ;;      Params:         0       0       0       0       0       0       0       0
  5807 ;;      Locals:         0       0       0       0       0       0       0       0
  5808 ;;      Temps:          0       0       0       0       0       0       0       0
  5809 ;;      Totals:         0       0       0       0       0       0       0       0
  5810 ;;Total ram usage:        0 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; Hardware stack levels required when called:    4
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_SYSTEM_Initialize
  5817 ;;		_main
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           
  5822                           ;psect for function _OPA2_Initialize
  5823  0586                     _OPA2_Initialize:
  5824                           
  5825                           ;opa2.c: 61: OPA2CON = 0xD2;
  5826                           
  5827                           ;incstack = 0
  5828                           ; Regs used in _OPA2_Initialize: [wreg]
  5829  0586  30D2               	movlw	210
  5830  0587  002A               	movlb	10	; select bank10
  5831  0588  0095               	movwf	21	;volatile
  5832  0589  0008               	return
  5833  058A                     __end_of_OPA2_Initialize:
  5834                           
  5835                           	psect	text22
  5836  058A                     __ptext22:	
  5837 ;; *************** function _OPA1_Initialize *****************
  5838 ;; Defined at:
  5839 ;;		line 58 in file "mcc_generated_files/opa1.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;		None
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;		None
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  1    wreg      void 
  5846 ;; Registers used:
  5847 ;;		wreg
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5853 ;;      Params:         0       0       0       0       0       0       0       0
  5854 ;;      Locals:         0       0       0       0       0       0       0       0
  5855 ;;      Temps:          0       0       0       0       0       0       0       0
  5856 ;;      Totals:         0       0       0       0       0       0       0       0
  5857 ;;Total ram usage:        0 bytes
  5858 ;; Hardware stack levels used:    1
  5859 ;; Hardware stack levels required when called:    4
  5860 ;; This function calls:
  5861 ;;		Nothing
  5862 ;; This function is called by:
  5863 ;;		_SYSTEM_Initialize
  5864 ;;		_main
  5865 ;; This function uses a non-reentrant model
  5866 ;;
  5867                           
  5868                           
  5869                           ;psect for function _OPA1_Initialize
  5870  058A                     _OPA1_Initialize:
  5871                           
  5872                           ;opa1.c: 61: OPA1CON = 0xD2;
  5873                           
  5874                           ;incstack = 0
  5875                           ; Regs used in _OPA1_Initialize: [wreg]
  5876  058A  30D2               	movlw	210
  5877  058B  002A               	movlb	10	; select bank10
  5878  058C  0091               	movwf	17	;volatile
  5879  058D  0008               	return
  5880  058E                     __end_of_OPA1_Initialize:
  5881                           
  5882                           	psect	text23
  5883  0512                     __ptext23:	
  5884 ;; *************** function _EXT_INT_Initialize *****************
  5885 ;; Defined at:
  5886 ;;		line 132 in file "mcc_generated_files/ext_int.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;		None
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;		None
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  1    wreg      void 
  5893 ;; Registers used:
  5894 ;;		wreg, status,2, status,0, pclath, cstack
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5900 ;;      Params:         0       0       0       0       0       0       0       0
  5901 ;;      Locals:         0       0       0       0       0       0       0       0
  5902 ;;      Temps:          0       0       0       0       0       0       0       0
  5903 ;;      Totals:         0       0       0       0       0       0       0       0
  5904 ;;Total ram usage:        0 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:    5
  5907 ;; This function calls:
  5908 ;;		_INT_SetInterruptHandler
  5909 ;; This function is called by:
  5910 ;;		_SYSTEM_Initialize
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914                           
  5915                           ;psect for function _EXT_INT_Initialize
  5916  0512                     _EXT_INT_Initialize:
  5917                           
  5918                           ;ext_int.c: 137: (INTCONbits.INTF = 0);
  5919                           
  5920                           ;incstack = 0
  5921                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5922  0512  108B               	bcf	11,1	;volatile
  5923                           
  5924                           ;ext_int.c: 138: (OPTION_REGbits.INTEDG = 0);
  5925  0513  0021               	movlb	1	; select bank1
  5926  0514  1315               	bcf	21,6	;volatile
  5927                           
  5928                           ;ext_int.c: 140: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
  5929  0515  3034               	movlw	low _INT_DefaultInterruptHandler
  5930  0516  0020               	movlb	0	; select bank0
  5931  0517  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler
  5932  0518  3002               	movlw	high _INT_DefaultInterruptHandler
  5933  0519  00A1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  5934  051A  3185  255B         	fcall	_INT_SetInterruptHandler
  5935                           
  5936                           ;ext_int.c: 141: (INTCONbits.INTE = 1);
  5937  051C  160B               	bsf	11,4	;volatile
  5938  051D  0008               	return
  5939  051E                     __end_of_EXT_INT_Initialize:
  5940                           
  5941                           	psect	text24
  5942  055B                     __ptext24:	
  5943 ;; *************** function _INT_SetInterruptHandler *****************
  5944 ;; Defined at:
  5945 ;;		line 71 in file "mcc_generated_files/ext_int.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  5948 ;;		 -> INT_DefaultInterruptHandler(1), 
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;		None
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  1    wreg      void 
  5953 ;; Registers used:
  5954 ;;		wreg
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5960 ;;      Params:         0       2       0       0       0       0       0       0
  5961 ;;      Locals:         0       0       0       0       0       0       0       0
  5962 ;;      Temps:          0       0       0       0       0       0       0       0
  5963 ;;      Totals:         0       2       0       0       0       0       0       0
  5964 ;;Total ram usage:        2 bytes
  5965 ;; Hardware stack levels used:    1
  5966 ;; Hardware stack levels required when called:    4
  5967 ;; This function calls:
  5968 ;;		Nothing
  5969 ;; This function is called by:
  5970 ;;		_EXT_INT_Initialize
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           
  5975                           ;psect for function _INT_SetInterruptHandler
  5976  055B                     _INT_SetInterruptHandler:
  5977                           
  5978                           ;ext_int.c: 72: INT_InterruptHandler = InterruptHandler;
  5979                           
  5980                           ;incstack = 0
  5981                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  5982  055B  0020               	movlb	0	; select bank0
  5983  055C  0821               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  5984  055D  00CE               	movwf	_INT_InterruptHandler+1
  5985  055E  0820               	movf	INT_SetInterruptHandler@InterruptHandler,w
  5986  055F  00CD               	movwf	_INT_InterruptHandler
  5987  0560  0008               	return
  5988  0561                     __end_of_INT_SetInterruptHandler:
  5989                           
  5990                           	psect	text25
  5991  049F                     __ptext25:	
  5992 ;; *************** function _EUSART_Initialize *****************
  5993 ;; Defined at:
  5994 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;		None
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;		None
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      void 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2, status,0, pclath, cstack
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6008 ;;      Params:         0       0       0       0       0       0       0       0
  6009 ;;      Locals:         0       0       0       0       0       0       0       0
  6010 ;;      Temps:          0       0       0       0       0       0       0       0
  6011 ;;      Totals:         0       0       0       0       0       0       0       0
  6012 ;;Total ram usage:        0 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; Hardware stack levels required when called:    5
  6015 ;; This function calls:
  6016 ;;		_EUSART_SetErrorHandler
  6017 ;;		_EUSART_SetFramingErrorHandler
  6018 ;;		_EUSART_SetOverrunErrorHandler
  6019 ;; This function is called by:
  6020 ;;		_SYSTEM_Initialize
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           
  6025                           ;psect for function _EUSART_Initialize
  6026  049F                     _EUSART_Initialize:
  6027                           
  6028                           ;eusart.c: 71: BAUD1CON = 0x08;
  6029                           
  6030                           ;incstack = 0
  6031                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6032  049F  3008               	movlw	8
  6033  04A0  0023               	movlb	3	; select bank3
  6034  04A1  009F               	movwf	31	;volatile
  6035                           
  6036                           ;eusart.c: 74: RC1STA = 0x90;
  6037  04A2  3090               	movlw	144
  6038  04A3  009D               	movwf	29	;volatile
  6039                           
  6040                           ;eusart.c: 77: TX1STA = 0x24;
  6041  04A4  3024               	movlw	36
  6042  04A5  009E               	movwf	30	;volatile
  6043                           
  6044                           ;eusart.c: 80: SP1BRGL = 0x08;
  6045  04A6  3008               	movlw	8
  6046  04A7  009B               	movwf	27	;volatile
  6047                           
  6048                           ;eusart.c: 83: SP1BRGH = 0x00;
  6049  04A8  019C               	clrf	28	;volatile
  6050                           
  6051                           ;eusart.c: 86: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  6052  04A9  3000               	movlw	0
  6053  04AA  0020               	movlb	0	; select bank0
  6054  04AB  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  6055  04AC  3000               	movlw	0
  6056  04AD  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  6057  04AE  3185  2567  3184   	fcall	_EUSART_SetFramingErrorHandler
  6058                           
  6059                           ;eusart.c: 87: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  6060  04B1  3000               	movlw	0
  6061  04B2  0020               	movlb	0	; select bank0
  6062  04B3  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  6063  04B4  3000               	movlw	0
  6064  04B5  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  6065  04B6  3185  2561  3184   	fcall	_EUSART_SetOverrunErrorHandler
  6066                           
  6067                           ;eusart.c: 88: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  6068  04B9  3000               	movlw	0
  6069  04BA  0020               	movlb	0	; select bank0
  6070  04BB  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  6071  04BC  3000               	movlw	0
  6072  04BD  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  6073  04BE  3185  256D         	fcall	_EUSART_SetErrorHandler
  6074                           
  6075                           ;eusart.c: 90: eusartRxLastError.status = 0;
  6076  04C0  0020               	movlb	0	; select bank0
  6077  04C1  01CA               	clrf	_eusartRxLastError	;volatile
  6078  04C2  0008               	return
  6079  04C3                     __end_of_EUSART_Initialize:
  6080                           
  6081                           	psect	text26
  6082  0561                     __ptext26:	
  6083 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6084 ;; Defined at:
  6085 ;;		line 170 in file "mcc_generated_files/eusart.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6088 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;		None
  6091 ;; Return value:  Size  Location     Type
  6092 ;;                  1    wreg      void 
  6093 ;; Registers used:
  6094 ;;		wreg
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6100 ;;      Params:         0       2       0       0       0       0       0       0
  6101 ;;      Locals:         0       0       0       0       0       0       0       0
  6102 ;;      Temps:          0       0       0       0       0       0       0       0
  6103 ;;      Totals:         0       2       0       0       0       0       0       0
  6104 ;;Total ram usage:        2 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; Hardware stack levels required when called:    4
  6107 ;; This function calls:
  6108 ;;		Nothing
  6109 ;; This function is called by:
  6110 ;;		_EUSART_Initialize
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           
  6115                           ;psect for function _EUSART_SetOverrunErrorHandler
  6116  0561                     _EUSART_SetOverrunErrorHandler:
  6117                           
  6118                           ;eusart.c: 171: EUSART_OverrunErrorHandler = interruptHandler;
  6119                           
  6120                           ;incstack = 0
  6121                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6122  0561  0020               	movlb	0	; select bank0
  6123  0562  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  6124  0563  00D2               	movwf	_EUSART_OverrunErrorHandler+1
  6125  0564  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  6126  0565  00D1               	movwf	_EUSART_OverrunErrorHandler
  6127  0566  0008               	return
  6128  0567                     __end_of_EUSART_SetOverrunErrorHandler:
  6129                           
  6130                           	psect	text27
  6131  0567                     __ptext27:	
  6132 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6133 ;; Defined at:
  6134 ;;		line 166 in file "mcc_generated_files/eusart.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6137 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;		None
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  1    wreg      void 
  6142 ;; Registers used:
  6143 ;;		wreg
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6149 ;;      Params:         0       2       0       0       0       0       0       0
  6150 ;;      Locals:         0       0       0       0       0       0       0       0
  6151 ;;      Temps:          0       0       0       0       0       0       0       0
  6152 ;;      Totals:         0       2       0       0       0       0       0       0
  6153 ;;Total ram usage:        2 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; Hardware stack levels required when called:    4
  6156 ;; This function calls:
  6157 ;;		Nothing
  6158 ;; This function is called by:
  6159 ;;		_EUSART_Initialize
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           
  6164                           ;psect for function _EUSART_SetFramingErrorHandler
  6165  0567                     _EUSART_SetFramingErrorHandler:
  6166                           
  6167                           ;eusart.c: 167: EUSART_FramingErrorHandler = interruptHandler;
  6168                           
  6169                           ;incstack = 0
  6170                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6171  0567  0020               	movlb	0	; select bank0
  6172  0568  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  6173  0569  00D4               	movwf	_EUSART_FramingErrorHandler+1
  6174  056A  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  6175  056B  00D3               	movwf	_EUSART_FramingErrorHandler
  6176  056C  0008               	return
  6177  056D                     __end_of_EUSART_SetFramingErrorHandler:
  6178                           
  6179                           	psect	text28
  6180  056D                     __ptext28:	
  6181 ;; *************** function _EUSART_SetErrorHandler *****************
  6182 ;; Defined at:
  6183 ;;		line 174 in file "mcc_generated_files/eusart.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6186 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;		None
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  1    wreg      void 
  6191 ;; Registers used:
  6192 ;;		wreg
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6198 ;;      Params:         0       2       0       0       0       0       0       0
  6199 ;;      Locals:         0       0       0       0       0       0       0       0
  6200 ;;      Temps:          0       0       0       0       0       0       0       0
  6201 ;;      Totals:         0       2       0       0       0       0       0       0
  6202 ;;Total ram usage:        2 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; Hardware stack levels required when called:    4
  6205 ;; This function calls:
  6206 ;;		Nothing
  6207 ;; This function is called by:
  6208 ;;		_EUSART_Initialize
  6209 ;; This function uses a non-reentrant model
  6210 ;;
  6211                           
  6212                           
  6213                           ;psect for function _EUSART_SetErrorHandler
  6214  056D                     _EUSART_SetErrorHandler:
  6215                           
  6216                           ;eusart.c: 175: EUSART_ErrorHandler = interruptHandler;
  6217                           
  6218                           ;incstack = 0
  6219                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6220  056D  0020               	movlb	0	; select bank0
  6221  056E  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  6222  056F  00D0               	movwf	_EUSART_ErrorHandler+1
  6223  0570  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  6224  0571  00CF               	movwf	_EUSART_ErrorHandler
  6225  0572  0008               	return
  6226  0573                     __end_of_EUSART_SetErrorHandler:
  6227                           
  6228                           	psect	text29
  6229  0573                     __ptext29:	
  6230 ;; *************** function _DAC_Initialize *****************
  6231 ;; Defined at:
  6232 ;;		line 58 in file "mcc_generated_files/dac.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;		None
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;		None
  6237 ;; Return value:  Size  Location     Type
  6238 ;;                  1    wreg      void 
  6239 ;; Registers used:
  6240 ;;		wreg
  6241 ;; Tracked objects:
  6242 ;;		On entry : 0/0
  6243 ;;		On exit  : 0/0
  6244 ;;		Unchanged: 0/0
  6245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6246 ;;      Params:         0       0       0       0       0       0       0       0
  6247 ;;      Locals:         0       0       0       0       0       0       0       0
  6248 ;;      Temps:          0       0       0       0       0       0       0       0
  6249 ;;      Totals:         0       0       0       0       0       0       0       0
  6250 ;;Total ram usage:        0 bytes
  6251 ;; Hardware stack levels used:    1
  6252 ;; Hardware stack levels required when called:    4
  6253 ;; This function calls:
  6254 ;;		Nothing
  6255 ;; This function is called by:
  6256 ;;		_SYSTEM_Initialize
  6257 ;;		_main
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           
  6262                           ;psect for function _DAC_Initialize
  6263  0573                     _DAC_Initialize:
  6264                           
  6265                           ;dac.c: 61: DAC1CON0 = 0x80;
  6266                           
  6267                           ;incstack = 0
  6268                           ; Regs used in _DAC_Initialize: [wreg]
  6269  0573  3080               	movlw	128
  6270  0574  0022               	movlb	2	; select bank2
  6271  0575  0098               	movwf	24	;volatile
  6272                           
  6273                           ;dac.c: 63: DAC1CON1 = 0xFF;
  6274  0576  30FF               	movlw	255
  6275  0577  0099               	movwf	25	;volatile
  6276  0578  0008               	return
  6277  0579                     __end_of_DAC_Initialize:
  6278                           
  6279                           	psect	intentry
  6280  0004                     __pintentry:	
  6281 ;; *************** function _INTERRUPT_InterruptManager *****************
  6282 ;; Defined at:
  6283 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;		None
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;		None
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  1    wreg      void 
  6290 ;; Registers used:
  6291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6297 ;;      Params:         0       0       0       0       0       0       0       0
  6298 ;;      Locals:         0       0       0       0       0       0       0       0
  6299 ;;      Temps:          0       0       0       0       0       0       0       0
  6300 ;;      Totals:         0       0       0       0       0       0       0       0
  6301 ;;Total ram usage:        0 bytes
  6302 ;; Hardware stack levels used:    1
  6303 ;; Hardware stack levels required when called:    3
  6304 ;; This function calls:
  6305 ;;		_INT_ISR
  6306 ;;		_PIN_MANAGER_IOC
  6307 ;; This function is called by:
  6308 ;;		Interrupt level 1
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312  0004                     _INTERRUPT_InterruptManager:
  6313                           
  6314                           ;incstack = 0
  6315  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6316                           
  6317                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6318  0005  3180               	pagesel	$
  6319                           
  6320                           ;interrupt_manager.c: 55: if(INTCONbits.INTE == 1 && INTCONbits.INTF == 1)
  6321  0006  1A0B               	btfsc	11,4	;volatile
  6322  0007  1C8B               	btfss	11,1	;volatile
  6323  0008  280D               	goto	i1l126
  6324                           
  6325                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: INT_ISR();
  6326  0009  3185  258E  3180   	fcall	_INT_ISR
  6327                           
  6328                           ;interrupt_manager.c: 58: }
  6329  000C  2812               	goto	i1l130
  6330  000D                     i1l126:
  6331                           
  6332                           ;interrupt_manager.c: 59: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  6333  000D  198B               	btfsc	11,3	;volatile
  6334  000E  1C0B               	btfss	11,0	;volatile
  6335  000F  2812               	goto	i1l130
  6336                           
  6337                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: PIN_MANAGER_IOC();
  6338  0010  3185  2592         	fcall	_PIN_MANAGER_IOC
  6339  0012                     i1l130:	
  6340                           ;interrupt_manager.c: 62: }
  6341                           
  6342  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6343  0013  0009               	retfie
  6344  0014                     __end_of_INTERRUPT_InterruptManager:
  6345                           
  6346                           	psect	text31
  6347  0592                     __ptext31:	
  6348 ;; *************** function _PIN_MANAGER_IOC *****************
  6349 ;; Defined at:
  6350 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;		None
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;		None
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  1    wreg      void 
  6357 ;; Registers used:
  6358 ;;		None
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6364 ;;      Params:         0       0       0       0       0       0       0       0
  6365 ;;      Locals:         0       0       0       0       0       0       0       0
  6366 ;;      Temps:          0       0       0       0       0       0       0       0
  6367 ;;      Totals:         0       0       0       0       0       0       0       0
  6368 ;;Total ram usage:        0 bytes
  6369 ;; Hardware stack levels used:    1
  6370 ;; This function calls:
  6371 ;;		Nothing
  6372 ;; This function is called by:
  6373 ;;		_INTERRUPT_InterruptManager
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           
  6378                           ;psect for function _PIN_MANAGER_IOC
  6379  0592                     _PIN_MANAGER_IOC:
  6380                           
  6381                           ;incstack = 0
  6382                           ; Regs used in _PIN_MANAGER_IOC: []
  6383  0592  0008               	return
  6384  0593                     __end_of_PIN_MANAGER_IOC:
  6385                           
  6386                           	psect	text32
  6387  058E                     __ptext32:	
  6388 ;; *************** function _INT_ISR *****************
  6389 ;; Defined at:
  6390 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;		None
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;		None
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  1    wreg      void 
  6397 ;; Registers used:
  6398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6404 ;;      Params:         0       0       0       0       0       0       0       0
  6405 ;;      Locals:         0       0       0       0       0       0       0       0
  6406 ;;      Temps:          0       0       0       0       0       0       0       0
  6407 ;;      Totals:         0       0       0       0       0       0       0       0
  6408 ;;Total ram usage:        0 bytes
  6409 ;; Hardware stack levels used:    1
  6410 ;; Hardware stack levels required when called:    2
  6411 ;; This function calls:
  6412 ;;		_INT_CallBack
  6413 ;; This function is called by:
  6414 ;;		_INTERRUPT_InterruptManager
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           
  6419                           ;psect for function _INT_ISR
  6420  058E                     _INT_ISR:
  6421                           
  6422                           ;ext_int.c: 56: (INTCONbits.INTF = 0);
  6423                           
  6424                           ;incstack = 0
  6425                           ; Regs used in _INT_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6426  058E  108B               	bcf	11,1	;volatile
  6427                           
  6428                           ;ext_int.c: 59: INT_CallBack();
  6429  058F  3185  251E         	fcall	_INT_CallBack
  6430  0591  0008               	return
  6431  0592                     __end_of_INT_ISR:
  6432                           
  6433                           	psect	text33
  6434  051E                     __ptext33:	
  6435 ;; *************** function _INT_CallBack *****************
  6436 ;; Defined at:
  6437 ;;		line 62 in file "mcc_generated_files/ext_int.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;		None
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;		None
  6442 ;; Return value:  Size  Location     Type
  6443 ;;                  1    wreg      void 
  6444 ;; Registers used:
  6445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6451 ;;      Params:         0       0       0       0       0       0       0       0
  6452 ;;      Locals:         0       0       0       0       0       0       0       0
  6453 ;;      Temps:          0       0       0       0       0       0       0       0
  6454 ;;      Totals:         0       0       0       0       0       0       0       0
  6455 ;;Total ram usage:        0 bytes
  6456 ;; Hardware stack levels used:    1
  6457 ;; Hardware stack levels required when called:    1
  6458 ;; This function calls:
  6459 ;;		Absolute function
  6460 ;;		_INT_DefaultInterruptHandler
  6461 ;; This function is called by:
  6462 ;;		_INT_ISR
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465                           
  6466                           
  6467                           ;psect for function _INT_CallBack
  6468  051E                     _INT_CallBack:
  6469                           
  6470                           ;ext_int.c: 65: if(INT_InterruptHandler)
  6471                           
  6472                           ;incstack = 0
  6473                           ; Regs used in _INT_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6474  051E  0020               	movlb	0	; select bank0
  6475  051F  084D               	movf	_INT_InterruptHandler,w
  6476  0520  044E               	iorwf	_INT_InterruptHandler+1,w
  6477  0521  1903               	btfsc	3,2
  6478  0522  0008               	return
  6479                           
  6480                           ;ext_int.c: 66: {;ext_int.c: 67: INT_InterruptHandler();
  6481  0523  084E               	movf	_INT_InterruptHandler+1,w
  6482  0524  008A               	movwf	10
  6483  0525  084D               	movf	_INT_InterruptHandler,w
  6484  0526  000A               	callw
  6485  0527  3185               	pagesel	$
  6486  0528  0008               	return
  6487  0529                     __end_of_INT_CallBack:
  6488                           
  6489                           	psect	text34
  6490  0234                     __ptext34:	
  6491 ;; *************** function _INT_DefaultInterruptHandler *****************
  6492 ;; Defined at:
  6493 ;;		line 75 in file "mcc_generated_files/ext_int.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;		None
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  time            1    1[COMMON] unsigned char 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1    wreg      void 
  6500 ;; Registers used:
  6501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6507 ;;      Params:         0       0       0       0       0       0       0       0
  6508 ;;      Locals:         1       0       0       0       0       0       0       0
  6509 ;;      Temps:          1       0       0       0       0       0       0       0
  6510 ;;      Totals:         2       0       0       0       0       0       0       0
  6511 ;;Total ram usage:        2 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; This function calls:
  6514 ;;		Nothing
  6515 ;; This function is called by:
  6516 ;;		_EXT_INT_Initialize
  6517 ;;		_INT_CallBack
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           
  6522                           ;psect for function _INT_DefaultInterruptHandler
  6523  0234                     _INT_DefaultInterruptHandler:
  6524                           
  6525                           ;ext_int.c: 77: uint8_t time = TMR0;
  6526                           
  6527                           ;incstack = 0
  6528                           ; Regs used in _INT_DefaultInterruptHandler: [wreg-fsr1h+status,2+status,0]
  6529  0234  0020               	movlb	0	; select bank0
  6530  0235  0815               	movf	21,w	;volatile
  6531  0236  00F7               	movwf	??_INT_DefaultInterruptHandler
  6532  0237  0877               	movf	??_INT_DefaultInterruptHandler,w
  6533  0238  00F8               	movwf	INT_DefaultInterruptHandler@time
  6534                           
  6535                           ;ext_int.c: 78: TMR0 = 0;
  6536  0239  0195               	clrf	21	;volatile
  6537                           
  6538                           ;ext_int.c: 81: if (INTCONbits.TMR0IF){
  6539  023A  190B               	btfsc	11,2	;volatile
  6540                           
  6541                           ;ext_int.c: 82: time = 0;
  6542  023B  01F8               	clrf	INT_DefaultInterruptHandler@time
  6543                           
  6544                           ;ext_int.c: 83: };ext_int.c: 84: INTCONbits.TMR0IF = 0;
  6545  023C  110B               	bcf	11,2	;volatile
  6546                           
  6547                           ;ext_int.c: 86: switch(ir_code.state){
  6548  023D  2A8C               	goto	i1l1721
  6549  023E                     i1l1679:
  6550                           
  6551                           ;ext_int.c: 89: if (time >= 180 && time <= 243){
  6552  023E  30B4               	movlw	180
  6553  023F  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6554  0240  1C03               	skipc
  6555  0241  2A97               	goto	i1l255
  6556  0242  30F4               	movlw	244
  6557  0243  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6558  0244  1803               	skipnc
  6559  0245  2A97               	goto	i1l255
  6560                           
  6561                           ;ext_int.c: 90: ir_code.n_bits = 0;
  6562  0246  01F1               	clrf	_ir_code
  6563                           
  6564                           ;ext_int.c: 91: ir_code.state = STATE_RECEIVING;
  6565  0247  01F2               	clrf	_ir_code+1
  6566  0248  0AF2               	incf	_ir_code+1,f
  6567                           
  6568                           ;ext_int.c: 92: stats[0] = time;
  6569  0249  0878               	movf	INT_DefaultInterruptHandler@time,w
  6570  024A  00F7               	movwf	??_INT_DefaultInterruptHandler
  6571  024B  0877               	movf	??_INT_DefaultInterruptHandler,w
  6572  024C  0021               	movlb	1	; select bank1
  6573  024D  00A0               	movwf	_stats^(0+128)
  6574  024E  2A97               	goto	i1l255
  6575  024F                     i1l1689:
  6576                           
  6577                           ;ext_int.c: 97: ir_code.code <<= 1;
  6578  024F  3001               	movlw	1
  6579  0250                     u81_25:
  6580  0250  35F3               	lslf	_ir_code+2,f
  6581  0251  0DF4               	rlf	_ir_code+3,f
  6582  0252  0DF5               	rlf	_ir_code+4,f
  6583  0253  0DF6               	rlf	_ir_code+5,f
  6584  0254  0B89               	decfsz	9,f
  6585  0255  2A50               	goto	u81_25
  6586                           
  6587                           ;ext_int.c: 98: if (time >= 29 && time <= 41){
  6588  0256  301D               	movlw	29
  6589  0257  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6590  0258  1C03               	skipc
  6591  0259  2A6C               	goto	i1l1701
  6592  025A  302A               	movlw	42
  6593  025B  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6594  025C  1803               	skipnc
  6595  025D  2A6C               	goto	i1l1701
  6596                           
  6597                           ;ext_int.c: 99: stats[1+ir_code.n_bits] = time;
  6598  025E  0878               	movf	INT_DefaultInterruptHandler@time,w
  6599  025F  00F7               	movwf	??_INT_DefaultInterruptHandler
  6600  0260  0871               	movf	_ir_code,w
  6601  0261  3EA1               	addlw	(low ((_stats| 0+1)))& (0+255)
  6602  0262  0086               	movwf	6
  6603  0263  0187               	clrf	7
  6604  0264  0877               	movf	??_INT_DefaultInterruptHandler,w
  6605  0265  0081               	movwf	1
  6606                           
  6607                           ;ext_int.c: 100: ir_code.code |= 1;
  6608  0266  1473               	bsf	_ir_code+2,0
  6609  0267                     i1l1699:
  6610                           
  6611                           ;ext_int.c: 101: ir_code.n_bits++;
  6612  0267  3001               	movlw	1
  6613  0268  00F7               	movwf	??_INT_DefaultInterruptHandler
  6614  0269  0877               	movf	??_INT_DefaultInterruptHandler,w
  6615  026A  07F1               	addwf	_ir_code,f
  6616                           
  6617                           ;ext_int.c: 102: } else if (time >= 14 && time <= 20){
  6618  026B  2A7F               	goto	i1l1711
  6619  026C                     i1l1701:
  6620  026C  300E               	movlw	14
  6621  026D  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6622  026E  1C03               	skipc
  6623  026F  2A7D               	goto	i1l1709
  6624  0270  3015               	movlw	21
  6625  0271  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6626  0272  1803               	skipnc
  6627  0273  2A7D               	goto	i1l1709
  6628                           
  6629                           ;ext_int.c: 103: stats[1+ir_code.n_bits] = time;
  6630  0274  0878               	movf	INT_DefaultInterruptHandler@time,w
  6631  0275  00F7               	movwf	??_INT_DefaultInterruptHandler
  6632  0276  0871               	movf	_ir_code,w
  6633  0277  3EA1               	addlw	(low ((_stats| 0+1)))& (0+255)
  6634  0278  0086               	movwf	6
  6635  0279  0187               	clrf	7
  6636  027A  0877               	movf	??_INT_DefaultInterruptHandler,w
  6637  027B  0081               	movwf	1
  6638  027C  2A67               	goto	i1l1699
  6639  027D                     i1l1709:
  6640                           
  6641                           ;ext_int.c: 107: ir_code.state = STATE_RESET;
  6642  027D  01F2               	clrf	_ir_code+1
  6643                           
  6644                           ;ext_int.c: 108: break;
  6645  027E  2A97               	goto	i1l255
  6646  027F                     i1l1711:
  6647                           
  6648                           ;ext_int.c: 109: };ext_int.c: 110: if (32 == ir_code.n_bits){
  6649  027F  3020               	movlw	32
  6650  0280  0671               	xorwf	_ir_code,w
  6651  0281  1D03               	btfss	3,2
  6652  0282  2A97               	goto	i1l255
  6653                           
  6654                           ;ext_int.c: 113: if (ir_code.command == ((~ir_code.command_b) & 0xff)){
  6655  0283  0973               	comf	_ir_code+2,w
  6656  0284  0674               	xorwf	_ir_code+3,w
  6657  0285  1D03               	skipz
  6658  0286  2A7D               	goto	i1l1709
  6659                           
  6660                           ;ext_int.c: 114: ir_code.state = STATE_DONE;
  6661  0287  3002               	movlw	2
  6662  0288  00F7               	movwf	??_INT_DefaultInterruptHandler
  6663  0289  0877               	movf	??_INT_DefaultInterruptHandler,w
  6664  028A  00F2               	movwf	_ir_code+1
  6665                           
  6666                           ;ext_int.c: 115: } else {
  6667  028B  2A97               	goto	i1l255
  6668  028C                     i1l1721:
  6669  028C  0872               	movf	_ir_code+1,w
  6670                           
  6671                           ; Switch size 1, requested type "simple"
  6672                           ; Number of cases is 3, Range of values is 0 to 2
  6673                           ; switch strategies available:
  6674                           ; Name         Instructions Cycles
  6675                           ; simple_byte           10     6 (average)
  6676                           ; direct_byte           12     6 (fixed)
  6677                           ; jumptable            260     6 (fixed)
  6678                           ;	Chosen strategy is simple_byte
  6679  028D  3A00               	xorlw	0	; case 0
  6680  028E  1903               	skipnz
  6681  028F  2A3E               	goto	i1l1679
  6682  0290  3A01               	xorlw	1	; case 1
  6683  0291  1903               	skipnz
  6684  0292  2A4F               	goto	i1l1689
  6685  0293  3A03               	xorlw	3	; case 2
  6686  0294  1903               	skipnz
  6687  0295  2A97               	goto	i1l255
  6688  0296  2A7D               	goto	i1l1709
  6689  0297                     i1l255:
  6690                           
  6691                           ;ext_int.c: 129: INTCONbits.INTF = 0;
  6692  0297  108B               	bcf	11,1	;volatile
  6693  0298  0008               	return
  6694  0299                     __end_of_INT_DefaultInterruptHandler:
  6695  007E                     btemp	set	126	;btemp
  6696  007E                     int$flags	set	126
  6697  007E                     wtemp0	set	126
  6698                           
  6699                           	psect	config
  6700                           
  6701                           ;Config register CONFIG1 @ 0x8007
  6702                           ;	Oscillator Selection Bits
  6703                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6704                           ;	Watchdog Timer Enable
  6705                           ;	WDTE = OFF, WDT disabled
  6706                           ;	Power-up Timer Enable
  6707                           ;	PWRTE = OFF, PWRT disabled
  6708                           ;	MCLR Pin Function Select
  6709                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6710                           ;	Flash Program Memory Code Protection
  6711                           ;	CP = OFF, Program memory code protection is disabled
  6712                           ;	Brown-out Reset Enable
  6713                           ;	BOREN = OFF, Brown-out Reset disabled
  6714                           ;	Clock Out Enable
  6715                           ;	CLKOUTEN = ON, CLKOUT function is enabled on the CLKOUT pin
  6716                           ;	Internal/External Switchover Mode
  6717                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  6718                           ;	Fail-Safe Clock Monitor Enable
  6719                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6720  8007                     	org	32775
  6721  8007  21E4               	dw	8676
  6722                           
  6723                           ;Config register CONFIG2 @ 0x8008
  6724                           ;	Flash Memory Self-Write Protection
  6725                           ;	WRT = OFF, Write protection off
  6726                           ;	Peripheral Pin Select one-way control
  6727                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  6728                           ;	Zero-cross detect disable
  6729                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR
  6730                           ;	Phase Lock Loop enable
  6731                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  6732                           ;	Stack Overflow/Underflow Reset Enable
  6733                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6734                           ;	Brown-out Reset Voltage Selection
  6735                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6736                           ;	Low-Power Brown Out Reset
  6737                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6738                           ;	Low-Voltage Programming Enable
  6739                           ;	LVP = ON, Low-voltage programming enabled
  6740  8008                     	org	32776
  6741  8008  3EFF               	dw	16127

Data Sizes:
    Strings     40
    Constant    10
    Data        0
    BSS         54
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80     31      53
    BANK1            80      0      33
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[15]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    process_remote_command@code	PTR struct . size(1) Largest target is 6
		 -> ir_code(COMMON[6]), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->_lowBattery
    _startUp->_setLEDColor
    _process_remote_command->_selectSomething
    _selectSomething->_setLEDColor
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _lowBattery->_setLEDColor
    _battery_voltage->___aldiv

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INT_CallBack->_INT_DefaultInterruptHandler

Critical Paths under _main in BANK0

    _main->_process_remote_command
    _startUp->_setLEDColor
    _process_remote_command->_selectFrequency
    _selectSomething->_setLEDColor
    _selectFrequency->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _lowBattery->_setLEDColor
    _battery_voltage->___aldiv
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   22787
                                             30 BANK0      1     1      0
                     _DAC_Initialize
                    _OPA1_Initialize
                    _OPA2_Initialize
                  _SYSTEM_Initialize
                    _battery_voltage
                            _initLED
                         _lowBattery
             _process_remote_command
                            _startUp
 ---------------------------------------------------------------------------------
 (1) _startUp                                              3     3      0    3493
                                              3 COMMON     1     1      0
                                              2 BANK0      2     2      0
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (1) _process_remote_command                               3     3      0   14448
                                             27 BANK0      3     3      0
                             _printf
                    _selectFrequency
                    _selectSomething
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (2) _selectSomething                                      2     2      0    3425
                                              3 COMMON     2     2      0
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (2) _selectFrequency                                      2     2      0    5475
                                             25 BANK0      2     2      0
                             _printf
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (3) _printf                                              22    18      4    2050
                                             11 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      62
                                              3 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART_Write                                         1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     470
                                              3 COMMON     2     2      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     479
                                              2 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _lowBattery                                           2     2      0    3425
                                              3 COMMON     2     2      0
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (2) _setLEDColor                                          3     1      2    3425
                                              2 COMMON     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initLED                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _battery_voltage                                      2     0      2     921
                                             14 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     921
                                              2 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     500
                     _DAC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
                    _OPA1_Initialize
                    _OPA2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OPA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OPA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     125
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     375
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     200
                            _INT_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT_ISR                                              0     0      0     200
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT_CallBack                                         0     0      0     200
                   Absolute function *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _INT_DefaultInterruptHandler                          2     2      0     200
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DAC_Initialize
   _OPA1_Initialize
   _OPA2_Initialize
   _SYSTEM_Initialize
     _DAC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OPA1_Initialize
     _OPA2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _battery_voltage
     ___aldiv
   _initLED
   _lowBattery
     _setLEDColor
   _process_remote_command
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART_Write
     _selectFrequency
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
           _EUSART_Write
       _setLEDColor
     _selectSomething
       _setLEDColor
     _setLEDColor
   _startUp
     _setLEDColor

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      62       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1F      35       6       66.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      21       8       41.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      62      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jul 18 16:54:28 2020

                      __end_of_OPA1_Initialize 058E                                _timer0ReloadVal 0070  
                                          l421 0403                                            l418 03F9  
                                          l197 053E                                            l483 03D5  
                                          l582 01B1                                            l657 01C3  
                                          _PR2 001B                 ?_EUSART_SetFramingErrorHandler 0020  
                              _TMR2_Initialize 0545                                            wreg 0009  
                     __size_of_selectFrequency 0028                                           l2203 0138  
                                         l2213 014E                                           l2225 016F  
                                         l2155 0382                                           l2147 0364  
                                         l2171 0426                                           l2235 017C  
                                         l2219 0150                                           l2411 0090  
                                         l2149 0370                                           l2173 0432  
                                         l2181 0447                                           l2229 0177  
                                         l2237 0104                                           l2271 01D4  
                                         l2159 038B                                           l2281 01F2  
                                         l2177 043E                                           l2409 008C  
                                         l2433 00B0                                           l2361 0329  
                                         l2419 009E                                           l2435 00DE  
                                         l2371 0039                                           l2451 03E7  
                                         l2293 021D                                           l2197 0120  
                                         l2429 00AE                                           l2279 01E4  
                                         l2391 006C                                           l2383 0054  
                                         l2297 022B                                           l2289 0212  
                                         l2385 0064                                           l2379 004D  
                                         l2389 0068                                           l2399 0087  
                                         STR_1 04E1                                           STR_2 057E  
                                         STR_3 057E                                           STR_4 04F6  
                                         _LATA 010C                                           _LATB 010D  
                              __end_of_INT_ISR 0592                                           _LATC 010E  
                                         u1505 037B                                           u1515 0383  
                                         u1615 0165                                           u1545 0429  
                                         u1715 01F3                                           u1475 0367  
                                         u1725 0207                                           u1565 0438  
                                         u1735 0213                                           u1495 0371  
                                         u1575 043F                                           u1907 00F1  
                                         u1917 02A5                                           u1695 01E7  
                                         u1927 02B7                                           u1937 02C9  
                                         u1785 0356                                           u1865 03E2  
                                         u1947 02DB                                           u1957 0489  
                                         u1967 045E                                           u1887 0336  
                                         u1977 0470                                           u1897 0344  
                                         _TMR0 0015                                           _TMR2 001A  
                      __end_of_OPA2_Initialize 058A                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                         _flag 0046                                           _main 03C1  
                                         _duty 0044                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
          __end_of_INT_DefaultInterruptHandler 0299                    _INT_DefaultInterruptHandler 0234  
                                         start 0014                __end_of_INT_SetInterruptHandler 0561  
                      __end_of_TMR0_Initialize 053D                                  ?_EUSART_Write 0077  
               __size_of_OSCILLATOR_Initialize 0008                  __end_of_OSCILLATOR_Initialize 0555  
                              __end_of___aldiv 0234                                          ?_main 0077  
                                        _ADRES 009B                                          _T2CON 001C  
                              __end_of___lwdiv 0390                                          i1l130 0012  
                                        i1l126 000D                                          i1l255 0297  
                              __end_of___lwmod 044C                                   ?_setLEDColor 0020  
                     __size_of_selectSomething 0049                                          _TRISA 008C  
                                        _TRISB 008D                                          u81_25 0250  
                                        _TRISC 008E                                          _RXPPS 0E24  
                              __end_of_initLED 0326                        __end_of_PIN_MANAGER_IOC 0593  
                              __end_of_dpowers 0533                                 _WDT_Initialize 0582  
                                        _putch 0579                                          _stats 00A0  
                                        pclath 000A                                __end_of_startUp 035B  
                                        status 0003                        ?_process_remote_command 0077  
                                        wtemp0 007E                               ??_DAC_Initialize 0079  
                              __initialization 0016                                   __end_of_main 03F1  
                               ??_EUSART_Write 0079                        __end_of_TMR2_Initialize 054D  
                  ?_INTERRUPT_InterruptManager 0077                               ?_OPA1_Initialize 0077  
                                       ??_main 003E                       __size_of_battery_voltage 002E  
                       __end_of_WDT_Initialize 0586                                      ??_INT_ISR 0079  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0051  
                                       _CCPR1L 0291                                         _ANSELA 018C  
                                       ?_putch 0077                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RA5PPS 0E95  
                                       _RC1STA 019D                                         _RC4PPS 0EA4  
                                       _RB7PPS 0E9F                                         _RC5PPS 0EA5  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         i1l1701 026C  
                                       i1l1711 027F                                         i1l1721 028C  
               __end_of_process_remote_command 00FF                                         i1l1709 027D  
                                       i1l1679 023E                                         i1l1689 024F  
                                       i1l1699 0267                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       _FVRCON 0117                                         _INTPPS 0E10  
                             ?_OPA2_Initialize 0077                                         _OSCCON 0099  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                              ??_selectFrequency 0039  
                                       _Vdd_mv 003F                                      ??___aldiv 0079  
                                    ??___lwdiv 0079                                      ??___lwmod 007A  
                             ?_TMR0_Initialize 0077                                         _printf 00FF  
                                ?_INT_CallBack 0077                                      ??_initLED 0079  
                              ?_WDT_Initialize 0077               __size_of_INT_SetInterruptHandler 0006  
                                    ??_startUp 007A        INT_SetInterruptHandler@InterruptHandler 0020  
                             ?_PIN_MANAGER_IOC 0077                              ??_selectSomething 007A  
                            _SYSTEM_Initialize 04C3                        __end_of__initialization 002C  
                           ?_SYSTEM_Initialize 0077                                 __pcstackCOMMON 0077  
                          ??_SYSTEM_Initialize 0079                                  __end_of_putch 057E  
                             ?_TMR2_Initialize 0077                                 ??_INT_CallBack 0079  
                  __size_of_EXT_INT_Initialize 000C                                 _OPTION_REGbits 0095  
                         __size_of_setLEDColor 000D                ??_EUSART_SetOverrunErrorHandler 0079  
                            ??_battery_voltage 007A                      __end_of_SYSTEM_Initialize 04E1  
                                      ??_putch 007A                                     __pbssBANK0 003F  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 0545  
                                   __pmaintext 03C1                                     __pintentry 0004  
                                      ?_printf 002B                                        _OPA1CON 0511  
                                      _OPA2CON 0515                                        _LED_red 0049  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                                      _INT_ISR 058E                                        _OSCSTAT 009A  
                                      _OSCTUNE 0098                                        _PWM3DCH 0618  
                                      _PWM4DCH 061B                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 0079                                        _Vdac_mv 004B  
                                      ___aldiv 01B2                                        ___lwdiv 035B  
                                      ___lwmod 041F                                        __ptext1 0326  
                                      __ptext2 0030                                        __ptext3 0299  
                                      __ptext4 0477                                        __ptext5 00FF  
                                      __ptext6 0579                                        __ptext7 053D  
                                      __ptext8 041F                                        __ptext9 035B  
                              __size_of_printf 00B3                                        _initLED 02E2  
                                      _ir_code 0071                                     _lowBattery 044C  
                                      _dpowers 0529                          _OSCILLATOR_Initialize 054D  
                                    _T2CONbits 001C                                        _current 0043  
                             ___aldiv@dividend 0024                       ??_PIN_MANAGER_Initialize 0079  
                      _INT_SetInterruptHandler 055B                                _selectFrequency 0477  
                                      _startUp 0326                     __size_of_SYSTEM_Initialize 001E  
                                      clrloop0 0556                           end_of_initialization 002C  
        __end_of_EUSART_SetOverrunErrorHandler 0567         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 0561                                      _LED_green 0048  
                         __end_of_INT_CallBack 0529                              _EUSART_Initialize 049F  
                           ?_EUSART_Initialize 0077                                        printf@c 0038  
                                      printf@f 002B                               ___aldiv@quotient 002A  
                              setLEDColor@blue 0021                            ??_EUSART_Initialize 0079  
                             ??_WDT_Initialize 0079                                _selectSomething 0299  
                        __size_of_EUSART_Write 0008                       __size_of_OPA1_Initialize 0004  
              __size_of_EUSART_SetErrorHandler 0006                      __end_of_EUSART_Initialize 04C3  
                                  _CCP1CONbits 0293                       __size_of_OPA2_Initialize 0004  
                   _EUSART_DefaultErrorHandler 0000                                _battery_voltage 03F1  
                                 _EUSART_Write 053D                         ?_OSCILLATOR_Initialize 0077  
                      __end_of_selectFrequency 049F                      ??_INT_SetInterruptHandler 0079  
                      __size_of_DAC_Initialize 0006                                    ?_lowBattery 0077  
                               __end_of_printf 01B2                            start_initialization 0016  
                     __size_of_TMR0_Initialize 000A                __size_of_PIN_MANAGER_Initialize 0031  
                                  putch@txData 007A                       __size_of_PIN_MANAGER_IOC 0001  
                 ?_INT_DefaultInterruptHandler 0077                 ?_EUSART_SetOverrunErrorHandler 0020  
                   _EUSART_FramingErrorHandler 0053                        __end_of_selectSomething 02E2  
                       _EUSART_SetErrorHandler 056D                                    _CCPTMRSbits 029E  
                   __end_of_EXT_INT_Initialize 051E                                       ??_printf 002F  
                                ??_setLEDColor 0079                                    __pbssCOMMON 0070  
                                    ___latbits 0001                       ??_process_remote_command 003B  
                                     ?_INT_ISR 0077                                  __pcstackBANK0 0020  
                     __size_of_TMR2_Initialize 0008                          __size_of_INT_CallBack 000B  
                   __size_of_EUSART_Initialize 0024                              ??_OPA1_Initialize 0079  
                                    __pnvBANK0 004D                            __size_of_lowBattery 002B  
                             ___lwdiv@dividend 0022                         _PIN_MANAGER_Initialize 0390  
                      __end_of_battery_voltage 041F                  ??_INT_DefaultInterruptHandler 0077  
                                     ?___aldiv 0020                                       ?___lwdiv 0020  
                                     ?___lwmod 0027                                       _DAC1CON0 0118  
                                     _DAC1CON1 0119                   ??_INTERRUPT_InterruptManager 0079  
                            ??_OPA2_Initialize 0079                               ?_selectFrequency 0077  
                                 _INT_CallBack 051E                                       _BAUD1CON 019F  
                                     ?_initLED 0077                                      _frequency 0045  
                             ___lwdiv@quotient 0025                                       ?_startUp 0077  
                          __end_of_setLEDColor 0512                                      _microamps 0041  
                               __size_of_putch 0005                                ___aldiv@divisor 0020  
                            ??_TMR0_Initialize 0079                                ___aldiv@counter 0028  
       EUSART_SetErrorHandler@interruptHandler 0020                                       _LED_blue 0047  
                                    clear_ram0 0555                              _eusartRxLastError 004A  
          __size_of_INTERRUPT_InterruptManager 0010                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0079                               ?_selectSomething 0077  
                               setLEDColor@red 0079              _EUSART_DefaultOverrunErrorHandler 0000  
                            ??_PIN_MANAGER_IOC 0077                                     _ADCON0bits 009D  
                               _DAC_Initialize 0573                                     printf@flag 0034  
                                   printf@prec 0035           __size_of_INT_DefaultInterruptHandler 0065  
              __size_of_process_remote_command 00CF                               __size_of_INT_ISR 0004  
                            ??_TMR2_Initialize 0079                               ?_battery_voltage 002E  
                      ??_OSCILLATOR_Initialize 0079                            _EUSART_ErrorHandler 004F  
                             __size_of___aldiv 0082                         __end_of_DAC_Initialize 0579  
                             __size_of___lwdiv 0035                               __size_of___lwmod 002D  
                                 ??_lowBattery 007A                                    _setLEDColor 0505  
                             __size_of_initLED 0044                                ___lwdiv@divisor 0020  
                              ___lwdiv@counter 0024                                       __ptext10 044C  
                                     __ptext11 0505                                       __ptext20 054D  
                                     __ptext12 02E2                                       __ptext21 0586  
                                     __ptext13 03F1                                       __ptext22 058A  
                                     __ptext14 01B2                                       __ptext31 0592  
                                     __ptext23 0512                                       __ptext15 04C3  
                                     __ptext32 058E                                       __ptext24 055B  
                                     __ptext16 0582                                       __ptext33 051E  
                                     __ptext25 049F                                       __ptext17 0545  
                                     __ptext34 0234                                       __ptext26 0561  
                                     __ptext18 0533                                       __ptext27 0567  
                                     __ptext19 0390                                       __ptext28 056D  
                                     __ptext29 0573                               __size_of_startUp 0035  
                                __size_of_main 0030                        ?_EUSART_SetErrorHandler 0020  
                       _process_remote_command 0030                                     _RC1STAbits 019D  
                           __end_of_lowBattery 0477  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 0014  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 056D  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 0567  
                              ?_DAC_Initialize 0077                                      printf@val 0036  
                                   _INTCONbits 000B                INT_DefaultInterruptHandler@time 0078  
                                  _PWM3DCLbits 0617                                _OPA1_Initialize 058A  
                                  _PWM4DCLbits 061A                                     _FVRCONbits 0117  
                         _INT_InterruptHandler 004D                                    _PWM3CONbits 0619  
                                  _PWM4CONbits 061C                             _EXT_INT_Initialize 0512  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                             ___lwmod@dividend 0029                        ?_PIN_MANAGER_Initialize 0077  
                   process_remote_command@code 003D                 __end_of_EUSART_SetErrorHandler 0573  
                          ?_EXT_INT_Initialize 0077                                _OPA2_Initialize 0586  
                                     printf@ap 0033  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                     ?_INT_SetInterruptHandler 0020                                       startUp@i 0022  
                                __pstringtext1 0529                                  __pstringtext2 04E1  
                                __pstringtext3 04F6                                  __pstringtext4 057E  
                                __pstringtext5 0000                           ??_EXT_INT_Initialize 0079  
                                   _OPTION_REG 0095                               setLEDColor@green 0020  
                              ___lwmod@divisor 0027                                _TMR0_Initialize 0533  
                              ___lwmod@counter 007B                                   ___aldiv@sign 0029  
                                   _TX1STAbits 019E                             EUSART_Write@txData 0079  
               __end_of_PIN_MANAGER_Initialize 03C1                                _PIN_MANAGER_IOC 0592  
