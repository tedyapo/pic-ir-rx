

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jul  4 17:37:21 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16LF1708
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.10
    55                           ; Generated 31/07/2019 GMT
    56                           ; 
    57                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16LF1708 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0118                     	;# 
   144  0119                     	;# 
   145  011C                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  018E                     	;# 
   149  0191                     	;# 
   150  0191                     	;# 
   151  0192                     	;# 
   152  0193                     	;# 
   153  0193                     	;# 
   154  0194                     	;# 
   155  0195                     	;# 
   156  0196                     	;# 
   157  0199                     	;# 
   158  0199                     	;# 
   159  0199                     	;# 
   160  019A                     	;# 
   161  019A                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019C                     	;# 
   169  019C                     	;# 
   170  019C                     	;# 
   171  019D                     	;# 
   172  019D                     	;# 
   173  019D                     	;# 
   174  019E                     	;# 
   175  019E                     	;# 
   176  019E                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  020C                     	;# 
   183  020D                     	;# 
   184  020E                     	;# 
   185  0211                     	;# 
   186  0211                     	;# 
   187  0212                     	;# 
   188  0212                     	;# 
   189  0213                     	;# 
   190  0213                     	;# 
   191  0214                     	;# 
   192  0214                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0216                     	;# 
   198  0216                     	;# 
   199  0217                     	;# 
   200  0217                     	;# 
   201  028C                     	;# 
   202  028D                     	;# 
   203  028E                     	;# 
   204  0291                     	;# 
   205  0291                     	;# 
   206  0292                     	;# 
   207  0293                     	;# 
   208  0293                     	;# 
   209  0298                     	;# 
   210  0298                     	;# 
   211  0299                     	;# 
   212  029A                     	;# 
   213  029A                     	;# 
   214  029E                     	;# 
   215  030C                     	;# 
   216  030D                     	;# 
   217  030E                     	;# 
   218  038C                     	;# 
   219  038D                     	;# 
   220  038E                     	;# 
   221  0391                     	;# 
   222  0392                     	;# 
   223  0393                     	;# 
   224  0394                     	;# 
   225  0395                     	;# 
   226  0396                     	;# 
   227  0397                     	;# 
   228  0398                     	;# 
   229  0399                     	;# 
   230  0415                     	;# 
   231  0416                     	;# 
   232  0417                     	;# 
   233  041C                     	;# 
   234  041D                     	;# 
   235  041E                     	;# 
   236  0511                     	;# 
   237  0515                     	;# 
   238  0617                     	;# 
   239  0618                     	;# 
   240  0619                     	;# 
   241  0619                     	;# 
   242  061A                     	;# 
   243  061B                     	;# 
   244  061C                     	;# 
   245  061C                     	;# 
   246  0691                     	;# 
   247  0692                     	;# 
   248  0693                     	;# 
   249  0694                     	;# 
   250  0695                     	;# 
   251  0696                     	;# 
   252  0697                     	;# 
   253  0698                     	;# 
   254  0699                     	;# 
   255  069A                     	;# 
   256  069B                     	;# 
   257  069C                     	;# 
   258  069D                     	;# 
   259  069E                     	;# 
   260  069F                     	;# 
   261  0E0F                     	;# 
   262  0E10                     	;# 
   263  0E11                     	;# 
   264  0E12                     	;# 
   265  0E13                     	;# 
   266  0E14                     	;# 
   267  0E15                     	;# 
   268  0E17                     	;# 
   269  0E20                     	;# 
   270  0E21                     	;# 
   271  0E22                     	;# 
   272  0E24                     	;# 
   273  0E25                     	;# 
   274  0E28                     	;# 
   275  0E29                     	;# 
   276  0E2A                     	;# 
   277  0E2B                     	;# 
   278  0E90                     	;# 
   279  0E91                     	;# 
   280  0E92                     	;# 
   281  0E94                     	;# 
   282  0E95                     	;# 
   283  0E9C                     	;# 
   284  0E9D                     	;# 
   285  0E9E                     	;# 
   286  0E9F                     	;# 
   287  0EA0                     	;# 
   288  0EA1                     	;# 
   289  0EA2                     	;# 
   290  0EA3                     	;# 
   291  0EA4                     	;# 
   292  0EA5                     	;# 
   293  0EA6                     	;# 
   294  0EA7                     	;# 
   295  0F0F                     	;# 
   296  0F10                     	;# 
   297  0F11                     	;# 
   298  0F12                     	;# 
   299  0F13                     	;# 
   300  0F14                     	;# 
   301  0F15                     	;# 
   302  0F16                     	;# 
   303  0F17                     	;# 
   304  0F18                     	;# 
   305  0F19                     	;# 
   306  0F1A                     	;# 
   307  0F1B                     	;# 
   308  0F1C                     	;# 
   309  0F1D                     	;# 
   310  0F1E                     	;# 
   311  0F1F                     	;# 
   312  0F20                     	;# 
   313  0F21                     	;# 
   314  0F22                     	;# 
   315  0F23                     	;# 
   316  0F24                     	;# 
   317  0F25                     	;# 
   318  0F26                     	;# 
   319  0F27                     	;# 
   320  0F28                     	;# 
   321  0F29                     	;# 
   322  0F2A                     	;# 
   323  0F2B                     	;# 
   324  0F2C                     	;# 
   325  0F2D                     	;# 
   326  0FE4                     	;# 
   327  0FE5                     	;# 
   328  0FE6                     	;# 
   329  0FE7                     	;# 
   330  0FE8                     	;# 
   331  0FE9                     	;# 
   332  0FEA                     	;# 
   333  0FEB                     	;# 
   334  0FED                     	;# 
   335  0FEE                     	;# 
   336  0FEF                     	;# 
   337  0000                     	;# 
   338  0001                     	;# 
   339  0002                     	;# 
   340  0003                     	;# 
   341  0004                     	;# 
   342  0005                     	;# 
   343  0006                     	;# 
   344  0007                     	;# 
   345  0008                     	;# 
   346  0009                     	;# 
   347  000A                     	;# 
   348  000B                     	;# 
   349  000C                     	;# 
   350  000D                     	;# 
   351  000E                     	;# 
   352  0011                     	;# 
   353  0012                     	;# 
   354  0013                     	;# 
   355  0015                     	;# 
   356  0016                     	;# 
   357  0016                     	;# 
   358  0017                     	;# 
   359  0018                     	;# 
   360  0019                     	;# 
   361  001A                     	;# 
   362  001B                     	;# 
   363  001C                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  0091                     	;# 
   368  0092                     	;# 
   369  0093                     	;# 
   370  0095                     	;# 
   371  0096                     	;# 
   372  0097                     	;# 
   373  0098                     	;# 
   374  0099                     	;# 
   375  009A                     	;# 
   376  009B                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  009F                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  010E                     	;# 
   385  0111                     	;# 
   386  0112                     	;# 
   387  0113                     	;# 
   388  0114                     	;# 
   389  0115                     	;# 
   390  0116                     	;# 
   391  0117                     	;# 
   392  0118                     	;# 
   393  0119                     	;# 
   394  011C                     	;# 
   395  018C                     	;# 
   396  018D                     	;# 
   397  018E                     	;# 
   398  0191                     	;# 
   399  0191                     	;# 
   400  0192                     	;# 
   401  0193                     	;# 
   402  0193                     	;# 
   403  0194                     	;# 
   404  0195                     	;# 
   405  0196                     	;# 
   406  0199                     	;# 
   407  0199                     	;# 
   408  0199                     	;# 
   409  019A                     	;# 
   410  019A                     	;# 
   411  019A                     	;# 
   412  019B                     	;# 
   413  019B                     	;# 
   414  019B                     	;# 
   415  019B                     	;# 
   416  019B                     	;# 
   417  019C                     	;# 
   418  019C                     	;# 
   419  019C                     	;# 
   420  019D                     	;# 
   421  019D                     	;# 
   422  019D                     	;# 
   423  019E                     	;# 
   424  019E                     	;# 
   425  019E                     	;# 
   426  019F                     	;# 
   427  019F                     	;# 
   428  019F                     	;# 
   429  019F                     	;# 
   430  019F                     	;# 
   431  020C                     	;# 
   432  020D                     	;# 
   433  020E                     	;# 
   434  0211                     	;# 
   435  0211                     	;# 
   436  0212                     	;# 
   437  0212                     	;# 
   438  0213                     	;# 
   439  0213                     	;# 
   440  0214                     	;# 
   441  0214                     	;# 
   442  0215                     	;# 
   443  0215                     	;# 
   444  0215                     	;# 
   445  0215                     	;# 
   446  0216                     	;# 
   447  0216                     	;# 
   448  0217                     	;# 
   449  0217                     	;# 
   450  028C                     	;# 
   451  028D                     	;# 
   452  028E                     	;# 
   453  0291                     	;# 
   454  0291                     	;# 
   455  0292                     	;# 
   456  0293                     	;# 
   457  0293                     	;# 
   458  0298                     	;# 
   459  0298                     	;# 
   460  0299                     	;# 
   461  029A                     	;# 
   462  029A                     	;# 
   463  029E                     	;# 
   464  030C                     	;# 
   465  030D                     	;# 
   466  030E                     	;# 
   467  038C                     	;# 
   468  038D                     	;# 
   469  038E                     	;# 
   470  0391                     	;# 
   471  0392                     	;# 
   472  0393                     	;# 
   473  0394                     	;# 
   474  0395                     	;# 
   475  0396                     	;# 
   476  0397                     	;# 
   477  0398                     	;# 
   478  0399                     	;# 
   479  0415                     	;# 
   480  0416                     	;# 
   481  0417                     	;# 
   482  041C                     	;# 
   483  041D                     	;# 
   484  041E                     	;# 
   485  0511                     	;# 
   486  0515                     	;# 
   487  0617                     	;# 
   488  0618                     	;# 
   489  0619                     	;# 
   490  0619                     	;# 
   491  061A                     	;# 
   492  061B                     	;# 
   493  061C                     	;# 
   494  061C                     	;# 
   495  0691                     	;# 
   496  0692                     	;# 
   497  0693                     	;# 
   498  0694                     	;# 
   499  0695                     	;# 
   500  0696                     	;# 
   501  0697                     	;# 
   502  0698                     	;# 
   503  0699                     	;# 
   504  069A                     	;# 
   505  069B                     	;# 
   506  069C                     	;# 
   507  069D                     	;# 
   508  069E                     	;# 
   509  069F                     	;# 
   510  0E0F                     	;# 
   511  0E10                     	;# 
   512  0E11                     	;# 
   513  0E12                     	;# 
   514  0E13                     	;# 
   515  0E14                     	;# 
   516  0E15                     	;# 
   517  0E17                     	;# 
   518  0E20                     	;# 
   519  0E21                     	;# 
   520  0E22                     	;# 
   521  0E24                     	;# 
   522  0E25                     	;# 
   523  0E28                     	;# 
   524  0E29                     	;# 
   525  0E2A                     	;# 
   526  0E2B                     	;# 
   527  0E90                     	;# 
   528  0E91                     	;# 
   529  0E92                     	;# 
   530  0E94                     	;# 
   531  0E95                     	;# 
   532  0E9C                     	;# 
   533  0E9D                     	;# 
   534  0E9E                     	;# 
   535  0E9F                     	;# 
   536  0EA0                     	;# 
   537  0EA1                     	;# 
   538  0EA2                     	;# 
   539  0EA3                     	;# 
   540  0EA4                     	;# 
   541  0EA5                     	;# 
   542  0EA6                     	;# 
   543  0EA7                     	;# 
   544  0F0F                     	;# 
   545  0F10                     	;# 
   546  0F11                     	;# 
   547  0F12                     	;# 
   548  0F13                     	;# 
   549  0F14                     	;# 
   550  0F15                     	;# 
   551  0F16                     	;# 
   552  0F17                     	;# 
   553  0F18                     	;# 
   554  0F19                     	;# 
   555  0F1A                     	;# 
   556  0F1B                     	;# 
   557  0F1C                     	;# 
   558  0F1D                     	;# 
   559  0F1E                     	;# 
   560  0F1F                     	;# 
   561  0F20                     	;# 
   562  0F21                     	;# 
   563  0F22                     	;# 
   564  0F23                     	;# 
   565  0F24                     	;# 
   566  0F25                     	;# 
   567  0F26                     	;# 
   568  0F27                     	;# 
   569  0F28                     	;# 
   570  0F29                     	;# 
   571  0F2A                     	;# 
   572  0F2B                     	;# 
   573  0F2C                     	;# 
   574  0F2D                     	;# 
   575  0FE4                     	;# 
   576  0FE5                     	;# 
   577  0FE6                     	;# 
   578  0FE7                     	;# 
   579  0FE8                     	;# 
   580  0FE9                     	;# 
   581  0FEA                     	;# 
   582  0FEB                     	;# 
   583  0FED                     	;# 
   584  0FEE                     	;# 
   585  0FEF                     	;# 
   586  0000                     	;# 
   587  0001                     	;# 
   588  0002                     	;# 
   589  0003                     	;# 
   590  0004                     	;# 
   591  0005                     	;# 
   592  0006                     	;# 
   593  0007                     	;# 
   594  0008                     	;# 
   595  0009                     	;# 
   596  000A                     	;# 
   597  000B                     	;# 
   598  000C                     	;# 
   599  000D                     	;# 
   600  000E                     	;# 
   601  0011                     	;# 
   602  0012                     	;# 
   603  0013                     	;# 
   604  0015                     	;# 
   605  0016                     	;# 
   606  0016                     	;# 
   607  0017                     	;# 
   608  0018                     	;# 
   609  0019                     	;# 
   610  001A                     	;# 
   611  001B                     	;# 
   612  001C                     	;# 
   613  008C                     	;# 
   614  008D                     	;# 
   615  008E                     	;# 
   616  0091                     	;# 
   617  0092                     	;# 
   618  0093                     	;# 
   619  0095                     	;# 
   620  0096                     	;# 
   621  0097                     	;# 
   622  0098                     	;# 
   623  0099                     	;# 
   624  009A                     	;# 
   625  009B                     	;# 
   626  009B                     	;# 
   627  009C                     	;# 
   628  009D                     	;# 
   629  009E                     	;# 
   630  009F                     	;# 
   631  010C                     	;# 
   632  010D                     	;# 
   633  010E                     	;# 
   634  0111                     	;# 
   635  0112                     	;# 
   636  0113                     	;# 
   637  0114                     	;# 
   638  0115                     	;# 
   639  0116                     	;# 
   640  0117                     	;# 
   641  0118                     	;# 
   642  0119                     	;# 
   643  011C                     	;# 
   644  018C                     	;# 
   645  018D                     	;# 
   646  018E                     	;# 
   647  0191                     	;# 
   648  0191                     	;# 
   649  0192                     	;# 
   650  0193                     	;# 
   651  0193                     	;# 
   652  0194                     	;# 
   653  0195                     	;# 
   654  0196                     	;# 
   655  0199                     	;# 
   656  0199                     	;# 
   657  0199                     	;# 
   658  019A                     	;# 
   659  019A                     	;# 
   660  019A                     	;# 
   661  019B                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019B                     	;# 
   665  019B                     	;# 
   666  019C                     	;# 
   667  019C                     	;# 
   668  019C                     	;# 
   669  019D                     	;# 
   670  019D                     	;# 
   671  019D                     	;# 
   672  019E                     	;# 
   673  019E                     	;# 
   674  019E                     	;# 
   675  019F                     	;# 
   676  019F                     	;# 
   677  019F                     	;# 
   678  019F                     	;# 
   679  019F                     	;# 
   680  020C                     	;# 
   681  020D                     	;# 
   682  020E                     	;# 
   683  0211                     	;# 
   684  0211                     	;# 
   685  0212                     	;# 
   686  0212                     	;# 
   687  0213                     	;# 
   688  0213                     	;# 
   689  0214                     	;# 
   690  0214                     	;# 
   691  0215                     	;# 
   692  0215                     	;# 
   693  0215                     	;# 
   694  0215                     	;# 
   695  0216                     	;# 
   696  0216                     	;# 
   697  0217                     	;# 
   698  0217                     	;# 
   699  028C                     	;# 
   700  028D                     	;# 
   701  028E                     	;# 
   702  0291                     	;# 
   703  0291                     	;# 
   704  0292                     	;# 
   705  0293                     	;# 
   706  0293                     	;# 
   707  0298                     	;# 
   708  0298                     	;# 
   709  0299                     	;# 
   710  029A                     	;# 
   711  029A                     	;# 
   712  029E                     	;# 
   713  030C                     	;# 
   714  030D                     	;# 
   715  030E                     	;# 
   716  038C                     	;# 
   717  038D                     	;# 
   718  038E                     	;# 
   719  0391                     	;# 
   720  0392                     	;# 
   721  0393                     	;# 
   722  0394                     	;# 
   723  0395                     	;# 
   724  0396                     	;# 
   725  0397                     	;# 
   726  0398                     	;# 
   727  0399                     	;# 
   728  0415                     	;# 
   729  0416                     	;# 
   730  0417                     	;# 
   731  041C                     	;# 
   732  041D                     	;# 
   733  041E                     	;# 
   734  0511                     	;# 
   735  0515                     	;# 
   736  0617                     	;# 
   737  0618                     	;# 
   738  0619                     	;# 
   739  0619                     	;# 
   740  061A                     	;# 
   741  061B                     	;# 
   742  061C                     	;# 
   743  061C                     	;# 
   744  0691                     	;# 
   745  0692                     	;# 
   746  0693                     	;# 
   747  0694                     	;# 
   748  0695                     	;# 
   749  0696                     	;# 
   750  0697                     	;# 
   751  0698                     	;# 
   752  0699                     	;# 
   753  069A                     	;# 
   754  069B                     	;# 
   755  069C                     	;# 
   756  069D                     	;# 
   757  069E                     	;# 
   758  069F                     	;# 
   759  0E0F                     	;# 
   760  0E10                     	;# 
   761  0E11                     	;# 
   762  0E12                     	;# 
   763  0E13                     	;# 
   764  0E14                     	;# 
   765  0E15                     	;# 
   766  0E17                     	;# 
   767  0E20                     	;# 
   768  0E21                     	;# 
   769  0E22                     	;# 
   770  0E24                     	;# 
   771  0E25                     	;# 
   772  0E28                     	;# 
   773  0E29                     	;# 
   774  0E2A                     	;# 
   775  0E2B                     	;# 
   776  0E90                     	;# 
   777  0E91                     	;# 
   778  0E92                     	;# 
   779  0E94                     	;# 
   780  0E95                     	;# 
   781  0E9C                     	;# 
   782  0E9D                     	;# 
   783  0E9E                     	;# 
   784  0E9F                     	;# 
   785  0EA0                     	;# 
   786  0EA1                     	;# 
   787  0EA2                     	;# 
   788  0EA3                     	;# 
   789  0EA4                     	;# 
   790  0EA5                     	;# 
   791  0EA6                     	;# 
   792  0EA7                     	;# 
   793  0F0F                     	;# 
   794  0F10                     	;# 
   795  0F11                     	;# 
   796  0F12                     	;# 
   797  0F13                     	;# 
   798  0F14                     	;# 
   799  0F15                     	;# 
   800  0F16                     	;# 
   801  0F17                     	;# 
   802  0F18                     	;# 
   803  0F19                     	;# 
   804  0F1A                     	;# 
   805  0F1B                     	;# 
   806  0F1C                     	;# 
   807  0F1D                     	;# 
   808  0F1E                     	;# 
   809  0F1F                     	;# 
   810  0F20                     	;# 
   811  0F21                     	;# 
   812  0F22                     	;# 
   813  0F23                     	;# 
   814  0F24                     	;# 
   815  0F25                     	;# 
   816  0F26                     	;# 
   817  0F27                     	;# 
   818  0F28                     	;# 
   819  0F29                     	;# 
   820  0F2A                     	;# 
   821  0F2B                     	;# 
   822  0F2C                     	;# 
   823  0F2D                     	;# 
   824  0FE4                     	;# 
   825  0FE5                     	;# 
   826  0FE6                     	;# 
   827  0FE7                     	;# 
   828  0FE8                     	;# 
   829  0FE9                     	;# 
   830  0FEA                     	;# 
   831  0FEB                     	;# 
   832  0FED                     	;# 
   833  0FEE                     	;# 
   834  0FEF                     	;# 
   835  0000                     	;# 
   836  0001                     	;# 
   837  0002                     	;# 
   838  0003                     	;# 
   839  0004                     	;# 
   840  0005                     	;# 
   841  0006                     	;# 
   842  0007                     	;# 
   843  0008                     	;# 
   844  0009                     	;# 
   845  000A                     	;# 
   846  000B                     	;# 
   847  000C                     	;# 
   848  000D                     	;# 
   849  000E                     	;# 
   850  0011                     	;# 
   851  0012                     	;# 
   852  0013                     	;# 
   853  0015                     	;# 
   854  0016                     	;# 
   855  0016                     	;# 
   856  0017                     	;# 
   857  0018                     	;# 
   858  0019                     	;# 
   859  001A                     	;# 
   860  001B                     	;# 
   861  001C                     	;# 
   862  008C                     	;# 
   863  008D                     	;# 
   864  008E                     	;# 
   865  0091                     	;# 
   866  0092                     	;# 
   867  0093                     	;# 
   868  0095                     	;# 
   869  0096                     	;# 
   870  0097                     	;# 
   871  0098                     	;# 
   872  0099                     	;# 
   873  009A                     	;# 
   874  009B                     	;# 
   875  009B                     	;# 
   876  009C                     	;# 
   877  009D                     	;# 
   878  009E                     	;# 
   879  009F                     	;# 
   880  010C                     	;# 
   881  010D                     	;# 
   882  010E                     	;# 
   883  0111                     	;# 
   884  0112                     	;# 
   885  0113                     	;# 
   886  0114                     	;# 
   887  0115                     	;# 
   888  0116                     	;# 
   889  0117                     	;# 
   890  0118                     	;# 
   891  0119                     	;# 
   892  011C                     	;# 
   893  018C                     	;# 
   894  018D                     	;# 
   895  018E                     	;# 
   896  0191                     	;# 
   897  0191                     	;# 
   898  0192                     	;# 
   899  0193                     	;# 
   900  0193                     	;# 
   901  0194                     	;# 
   902  0195                     	;# 
   903  0196                     	;# 
   904  0199                     	;# 
   905  0199                     	;# 
   906  0199                     	;# 
   907  019A                     	;# 
   908  019A                     	;# 
   909  019A                     	;# 
   910  019B                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019B                     	;# 
   914  019B                     	;# 
   915  019C                     	;# 
   916  019C                     	;# 
   917  019C                     	;# 
   918  019D                     	;# 
   919  019D                     	;# 
   920  019D                     	;# 
   921  019E                     	;# 
   922  019E                     	;# 
   923  019E                     	;# 
   924  019F                     	;# 
   925  019F                     	;# 
   926  019F                     	;# 
   927  019F                     	;# 
   928  019F                     	;# 
   929  020C                     	;# 
   930  020D                     	;# 
   931  020E                     	;# 
   932  0211                     	;# 
   933  0211                     	;# 
   934  0212                     	;# 
   935  0212                     	;# 
   936  0213                     	;# 
   937  0213                     	;# 
   938  0214                     	;# 
   939  0214                     	;# 
   940  0215                     	;# 
   941  0215                     	;# 
   942  0215                     	;# 
   943  0215                     	;# 
   944  0216                     	;# 
   945  0216                     	;# 
   946  0217                     	;# 
   947  0217                     	;# 
   948  028C                     	;# 
   949  028D                     	;# 
   950  028E                     	;# 
   951  0291                     	;# 
   952  0291                     	;# 
   953  0292                     	;# 
   954  0293                     	;# 
   955  0293                     	;# 
   956  0298                     	;# 
   957  0298                     	;# 
   958  0299                     	;# 
   959  029A                     	;# 
   960  029A                     	;# 
   961  029E                     	;# 
   962  030C                     	;# 
   963  030D                     	;# 
   964  030E                     	;# 
   965  038C                     	;# 
   966  038D                     	;# 
   967  038E                     	;# 
   968  0391                     	;# 
   969  0392                     	;# 
   970  0393                     	;# 
   971  0394                     	;# 
   972  0395                     	;# 
   973  0396                     	;# 
   974  0397                     	;# 
   975  0398                     	;# 
   976  0399                     	;# 
   977  0415                     	;# 
   978  0416                     	;# 
   979  0417                     	;# 
   980  041C                     	;# 
   981  041D                     	;# 
   982  041E                     	;# 
   983  0511                     	;# 
   984  0515                     	;# 
   985  0617                     	;# 
   986  0618                     	;# 
   987  0619                     	;# 
   988  0619                     	;# 
   989  061A                     	;# 
   990  061B                     	;# 
   991  061C                     	;# 
   992  061C                     	;# 
   993  0691                     	;# 
   994  0692                     	;# 
   995  0693                     	;# 
   996  0694                     	;# 
   997  0695                     	;# 
   998  0696                     	;# 
   999  0697                     	;# 
  1000  0698                     	;# 
  1001  0699                     	;# 
  1002  069A                     	;# 
  1003  069B                     	;# 
  1004  069C                     	;# 
  1005  069D                     	;# 
  1006  069E                     	;# 
  1007  069F                     	;# 
  1008  0E0F                     	;# 
  1009  0E10                     	;# 
  1010  0E11                     	;# 
  1011  0E12                     	;# 
  1012  0E13                     	;# 
  1013  0E14                     	;# 
  1014  0E15                     	;# 
  1015  0E17                     	;# 
  1016  0E20                     	;# 
  1017  0E21                     	;# 
  1018  0E22                     	;# 
  1019  0E24                     	;# 
  1020  0E25                     	;# 
  1021  0E28                     	;# 
  1022  0E29                     	;# 
  1023  0E2A                     	;# 
  1024  0E2B                     	;# 
  1025  0E90                     	;# 
  1026  0E91                     	;# 
  1027  0E92                     	;# 
  1028  0E94                     	;# 
  1029  0E95                     	;# 
  1030  0E9C                     	;# 
  1031  0E9D                     	;# 
  1032  0E9E                     	;# 
  1033  0E9F                     	;# 
  1034  0EA0                     	;# 
  1035  0EA1                     	;# 
  1036  0EA2                     	;# 
  1037  0EA3                     	;# 
  1038  0EA4                     	;# 
  1039  0EA5                     	;# 
  1040  0EA6                     	;# 
  1041  0EA7                     	;# 
  1042  0F0F                     	;# 
  1043  0F10                     	;# 
  1044  0F11                     	;# 
  1045  0F12                     	;# 
  1046  0F13                     	;# 
  1047  0F14                     	;# 
  1048  0F15                     	;# 
  1049  0F16                     	;# 
  1050  0F17                     	;# 
  1051  0F18                     	;# 
  1052  0F19                     	;# 
  1053  0F1A                     	;# 
  1054  0F1B                     	;# 
  1055  0F1C                     	;# 
  1056  0F1D                     	;# 
  1057  0F1E                     	;# 
  1058  0F1F                     	;# 
  1059  0F20                     	;# 
  1060  0F21                     	;# 
  1061  0F22                     	;# 
  1062  0F23                     	;# 
  1063  0F24                     	;# 
  1064  0F25                     	;# 
  1065  0F26                     	;# 
  1066  0F27                     	;# 
  1067  0F28                     	;# 
  1068  0F29                     	;# 
  1069  0F2A                     	;# 
  1070  0F2B                     	;# 
  1071  0F2C                     	;# 
  1072  0F2D                     	;# 
  1073  0FE4                     	;# 
  1074  0FE5                     	;# 
  1075  0FE6                     	;# 
  1076  0FE7                     	;# 
  1077  0FE8                     	;# 
  1078  0FE9                     	;# 
  1079  0FEA                     	;# 
  1080  0FEB                     	;# 
  1081  0FED                     	;# 
  1082  0FEE                     	;# 
  1083  0FEF                     	;# 
  1084  0000                     	;# 
  1085  0001                     	;# 
  1086  0002                     	;# 
  1087  0003                     	;# 
  1088  0004                     	;# 
  1089  0005                     	;# 
  1090  0006                     	;# 
  1091  0007                     	;# 
  1092  0008                     	;# 
  1093  0009                     	;# 
  1094  000A                     	;# 
  1095  000B                     	;# 
  1096  000C                     	;# 
  1097  000D                     	;# 
  1098  000E                     	;# 
  1099  0011                     	;# 
  1100  0012                     	;# 
  1101  0013                     	;# 
  1102  0015                     	;# 
  1103  0016                     	;# 
  1104  0016                     	;# 
  1105  0017                     	;# 
  1106  0018                     	;# 
  1107  0019                     	;# 
  1108  001A                     	;# 
  1109  001B                     	;# 
  1110  001C                     	;# 
  1111  008C                     	;# 
  1112  008D                     	;# 
  1113  008E                     	;# 
  1114  0091                     	;# 
  1115  0092                     	;# 
  1116  0093                     	;# 
  1117  0095                     	;# 
  1118  0096                     	;# 
  1119  0097                     	;# 
  1120  0098                     	;# 
  1121  0099                     	;# 
  1122  009A                     	;# 
  1123  009B                     	;# 
  1124  009B                     	;# 
  1125  009C                     	;# 
  1126  009D                     	;# 
  1127  009E                     	;# 
  1128  009F                     	;# 
  1129  010C                     	;# 
  1130  010D                     	;# 
  1131  010E                     	;# 
  1132  0111                     	;# 
  1133  0112                     	;# 
  1134  0113                     	;# 
  1135  0114                     	;# 
  1136  0115                     	;# 
  1137  0116                     	;# 
  1138  0117                     	;# 
  1139  0118                     	;# 
  1140  0119                     	;# 
  1141  011C                     	;# 
  1142  018C                     	;# 
  1143  018D                     	;# 
  1144  018E                     	;# 
  1145  0191                     	;# 
  1146  0191                     	;# 
  1147  0192                     	;# 
  1148  0193                     	;# 
  1149  0193                     	;# 
  1150  0194                     	;# 
  1151  0195                     	;# 
  1152  0196                     	;# 
  1153  0199                     	;# 
  1154  0199                     	;# 
  1155  0199                     	;# 
  1156  019A                     	;# 
  1157  019A                     	;# 
  1158  019A                     	;# 
  1159  019B                     	;# 
  1160  019B                     	;# 
  1161  019B                     	;# 
  1162  019B                     	;# 
  1163  019B                     	;# 
  1164  019C                     	;# 
  1165  019C                     	;# 
  1166  019C                     	;# 
  1167  019D                     	;# 
  1168  019D                     	;# 
  1169  019D                     	;# 
  1170  019E                     	;# 
  1171  019E                     	;# 
  1172  019E                     	;# 
  1173  019F                     	;# 
  1174  019F                     	;# 
  1175  019F                     	;# 
  1176  019F                     	;# 
  1177  019F                     	;# 
  1178  020C                     	;# 
  1179  020D                     	;# 
  1180  020E                     	;# 
  1181  0211                     	;# 
  1182  0211                     	;# 
  1183  0212                     	;# 
  1184  0212                     	;# 
  1185  0213                     	;# 
  1186  0213                     	;# 
  1187  0214                     	;# 
  1188  0214                     	;# 
  1189  0215                     	;# 
  1190  0215                     	;# 
  1191  0215                     	;# 
  1192  0215                     	;# 
  1193  0216                     	;# 
  1194  0216                     	;# 
  1195  0217                     	;# 
  1196  0217                     	;# 
  1197  028C                     	;# 
  1198  028D                     	;# 
  1199  028E                     	;# 
  1200  0291                     	;# 
  1201  0291                     	;# 
  1202  0292                     	;# 
  1203  0293                     	;# 
  1204  0293                     	;# 
  1205  0298                     	;# 
  1206  0298                     	;# 
  1207  0299                     	;# 
  1208  029A                     	;# 
  1209  029A                     	;# 
  1210  029E                     	;# 
  1211  030C                     	;# 
  1212  030D                     	;# 
  1213  030E                     	;# 
  1214  038C                     	;# 
  1215  038D                     	;# 
  1216  038E                     	;# 
  1217  0391                     	;# 
  1218  0392                     	;# 
  1219  0393                     	;# 
  1220  0394                     	;# 
  1221  0395                     	;# 
  1222  0396                     	;# 
  1223  0397                     	;# 
  1224  0398                     	;# 
  1225  0399                     	;# 
  1226  0415                     	;# 
  1227  0416                     	;# 
  1228  0417                     	;# 
  1229  041C                     	;# 
  1230  041D                     	;# 
  1231  041E                     	;# 
  1232  0511                     	;# 
  1233  0515                     	;# 
  1234  0617                     	;# 
  1235  0618                     	;# 
  1236  0619                     	;# 
  1237  0619                     	;# 
  1238  061A                     	;# 
  1239  061B                     	;# 
  1240  061C                     	;# 
  1241  061C                     	;# 
  1242  0691                     	;# 
  1243  0692                     	;# 
  1244  0693                     	;# 
  1245  0694                     	;# 
  1246  0695                     	;# 
  1247  0696                     	;# 
  1248  0697                     	;# 
  1249  0698                     	;# 
  1250  0699                     	;# 
  1251  069A                     	;# 
  1252  069B                     	;# 
  1253  069C                     	;# 
  1254  069D                     	;# 
  1255  069E                     	;# 
  1256  069F                     	;# 
  1257  0E0F                     	;# 
  1258  0E10                     	;# 
  1259  0E11                     	;# 
  1260  0E12                     	;# 
  1261  0E13                     	;# 
  1262  0E14                     	;# 
  1263  0E15                     	;# 
  1264  0E17                     	;# 
  1265  0E20                     	;# 
  1266  0E21                     	;# 
  1267  0E22                     	;# 
  1268  0E24                     	;# 
  1269  0E25                     	;# 
  1270  0E28                     	;# 
  1271  0E29                     	;# 
  1272  0E2A                     	;# 
  1273  0E2B                     	;# 
  1274  0E90                     	;# 
  1275  0E91                     	;# 
  1276  0E92                     	;# 
  1277  0E94                     	;# 
  1278  0E95                     	;# 
  1279  0E9C                     	;# 
  1280  0E9D                     	;# 
  1281  0E9E                     	;# 
  1282  0E9F                     	;# 
  1283  0EA0                     	;# 
  1284  0EA1                     	;# 
  1285  0EA2                     	;# 
  1286  0EA3                     	;# 
  1287  0EA4                     	;# 
  1288  0EA5                     	;# 
  1289  0EA6                     	;# 
  1290  0EA7                     	;# 
  1291  0F0F                     	;# 
  1292  0F10                     	;# 
  1293  0F11                     	;# 
  1294  0F12                     	;# 
  1295  0F13                     	;# 
  1296  0F14                     	;# 
  1297  0F15                     	;# 
  1298  0F16                     	;# 
  1299  0F17                     	;# 
  1300  0F18                     	;# 
  1301  0F19                     	;# 
  1302  0F1A                     	;# 
  1303  0F1B                     	;# 
  1304  0F1C                     	;# 
  1305  0F1D                     	;# 
  1306  0F1E                     	;# 
  1307  0F1F                     	;# 
  1308  0F20                     	;# 
  1309  0F21                     	;# 
  1310  0F22                     	;# 
  1311  0F23                     	;# 
  1312  0F24                     	;# 
  1313  0F25                     	;# 
  1314  0F26                     	;# 
  1315  0F27                     	;# 
  1316  0F28                     	;# 
  1317  0F29                     	;# 
  1318  0F2A                     	;# 
  1319  0F2B                     	;# 
  1320  0F2C                     	;# 
  1321  0F2D                     	;# 
  1322  0FE4                     	;# 
  1323  0FE5                     	;# 
  1324  0FE6                     	;# 
  1325  0FE7                     	;# 
  1326  0FE8                     	;# 
  1327  0FE9                     	;# 
  1328  0FEA                     	;# 
  1329  0FEB                     	;# 
  1330  0FED                     	;# 
  1331  0FEE                     	;# 
  1332  0FEF                     	;# 
  1333  0000                     	;# 
  1334  0001                     	;# 
  1335  0002                     	;# 
  1336  0003                     	;# 
  1337  0004                     	;# 
  1338  0005                     	;# 
  1339  0006                     	;# 
  1340  0007                     	;# 
  1341  0008                     	;# 
  1342  0009                     	;# 
  1343  000A                     	;# 
  1344  000B                     	;# 
  1345  000C                     	;# 
  1346  000D                     	;# 
  1347  000E                     	;# 
  1348  0011                     	;# 
  1349  0012                     	;# 
  1350  0013                     	;# 
  1351  0015                     	;# 
  1352  0016                     	;# 
  1353  0016                     	;# 
  1354  0017                     	;# 
  1355  0018                     	;# 
  1356  0019                     	;# 
  1357  001A                     	;# 
  1358  001B                     	;# 
  1359  001C                     	;# 
  1360  008C                     	;# 
  1361  008D                     	;# 
  1362  008E                     	;# 
  1363  0091                     	;# 
  1364  0092                     	;# 
  1365  0093                     	;# 
  1366  0095                     	;# 
  1367  0096                     	;# 
  1368  0097                     	;# 
  1369  0098                     	;# 
  1370  0099                     	;# 
  1371  009A                     	;# 
  1372  009B                     	;# 
  1373  009B                     	;# 
  1374  009C                     	;# 
  1375  009D                     	;# 
  1376  009E                     	;# 
  1377  009F                     	;# 
  1378  010C                     	;# 
  1379  010D                     	;# 
  1380  010E                     	;# 
  1381  0111                     	;# 
  1382  0112                     	;# 
  1383  0113                     	;# 
  1384  0114                     	;# 
  1385  0115                     	;# 
  1386  0116                     	;# 
  1387  0117                     	;# 
  1388  0118                     	;# 
  1389  0119                     	;# 
  1390  011C                     	;# 
  1391  018C                     	;# 
  1392  018D                     	;# 
  1393  018E                     	;# 
  1394  0191                     	;# 
  1395  0191                     	;# 
  1396  0192                     	;# 
  1397  0193                     	;# 
  1398  0193                     	;# 
  1399  0194                     	;# 
  1400  0195                     	;# 
  1401  0196                     	;# 
  1402  0199                     	;# 
  1403  0199                     	;# 
  1404  0199                     	;# 
  1405  019A                     	;# 
  1406  019A                     	;# 
  1407  019A                     	;# 
  1408  019B                     	;# 
  1409  019B                     	;# 
  1410  019B                     	;# 
  1411  019B                     	;# 
  1412  019B                     	;# 
  1413  019C                     	;# 
  1414  019C                     	;# 
  1415  019C                     	;# 
  1416  019D                     	;# 
  1417  019D                     	;# 
  1418  019D                     	;# 
  1419  019E                     	;# 
  1420  019E                     	;# 
  1421  019E                     	;# 
  1422  019F                     	;# 
  1423  019F                     	;# 
  1424  019F                     	;# 
  1425  019F                     	;# 
  1426  019F                     	;# 
  1427  020C                     	;# 
  1428  020D                     	;# 
  1429  020E                     	;# 
  1430  0211                     	;# 
  1431  0211                     	;# 
  1432  0212                     	;# 
  1433  0212                     	;# 
  1434  0213                     	;# 
  1435  0213                     	;# 
  1436  0214                     	;# 
  1437  0214                     	;# 
  1438  0215                     	;# 
  1439  0215                     	;# 
  1440  0215                     	;# 
  1441  0215                     	;# 
  1442  0216                     	;# 
  1443  0216                     	;# 
  1444  0217                     	;# 
  1445  0217                     	;# 
  1446  028C                     	;# 
  1447  028D                     	;# 
  1448  028E                     	;# 
  1449  0291                     	;# 
  1450  0291                     	;# 
  1451  0292                     	;# 
  1452  0293                     	;# 
  1453  0293                     	;# 
  1454  0298                     	;# 
  1455  0298                     	;# 
  1456  0299                     	;# 
  1457  029A                     	;# 
  1458  029A                     	;# 
  1459  029E                     	;# 
  1460  030C                     	;# 
  1461  030D                     	;# 
  1462  030E                     	;# 
  1463  038C                     	;# 
  1464  038D                     	;# 
  1465  038E                     	;# 
  1466  0391                     	;# 
  1467  0392                     	;# 
  1468  0393                     	;# 
  1469  0394                     	;# 
  1470  0395                     	;# 
  1471  0396                     	;# 
  1472  0397                     	;# 
  1473  0398                     	;# 
  1474  0399                     	;# 
  1475  0415                     	;# 
  1476  0416                     	;# 
  1477  0417                     	;# 
  1478  041C                     	;# 
  1479  041D                     	;# 
  1480  041E                     	;# 
  1481  0511                     	;# 
  1482  0515                     	;# 
  1483  0617                     	;# 
  1484  0618                     	;# 
  1485  0619                     	;# 
  1486  0619                     	;# 
  1487  061A                     	;# 
  1488  061B                     	;# 
  1489  061C                     	;# 
  1490  061C                     	;# 
  1491  0691                     	;# 
  1492  0692                     	;# 
  1493  0693                     	;# 
  1494  0694                     	;# 
  1495  0695                     	;# 
  1496  0696                     	;# 
  1497  0697                     	;# 
  1498  0698                     	;# 
  1499  0699                     	;# 
  1500  069A                     	;# 
  1501  069B                     	;# 
  1502  069C                     	;# 
  1503  069D                     	;# 
  1504  069E                     	;# 
  1505  069F                     	;# 
  1506  0E0F                     	;# 
  1507  0E10                     	;# 
  1508  0E11                     	;# 
  1509  0E12                     	;# 
  1510  0E13                     	;# 
  1511  0E14                     	;# 
  1512  0E15                     	;# 
  1513  0E17                     	;# 
  1514  0E20                     	;# 
  1515  0E21                     	;# 
  1516  0E22                     	;# 
  1517  0E24                     	;# 
  1518  0E25                     	;# 
  1519  0E28                     	;# 
  1520  0E29                     	;# 
  1521  0E2A                     	;# 
  1522  0E2B                     	;# 
  1523  0E90                     	;# 
  1524  0E91                     	;# 
  1525  0E92                     	;# 
  1526  0E94                     	;# 
  1527  0E95                     	;# 
  1528  0E9C                     	;# 
  1529  0E9D                     	;# 
  1530  0E9E                     	;# 
  1531  0E9F                     	;# 
  1532  0EA0                     	;# 
  1533  0EA1                     	;# 
  1534  0EA2                     	;# 
  1535  0EA3                     	;# 
  1536  0EA4                     	;# 
  1537  0EA5                     	;# 
  1538  0EA6                     	;# 
  1539  0EA7                     	;# 
  1540  0F0F                     	;# 
  1541  0F10                     	;# 
  1542  0F11                     	;# 
  1543  0F12                     	;# 
  1544  0F13                     	;# 
  1545  0F14                     	;# 
  1546  0F15                     	;# 
  1547  0F16                     	;# 
  1548  0F17                     	;# 
  1549  0F18                     	;# 
  1550  0F19                     	;# 
  1551  0F1A                     	;# 
  1552  0F1B                     	;# 
  1553  0F1C                     	;# 
  1554  0F1D                     	;# 
  1555  0F1E                     	;# 
  1556  0F1F                     	;# 
  1557  0F20                     	;# 
  1558  0F21                     	;# 
  1559  0F22                     	;# 
  1560  0F23                     	;# 
  1561  0F24                     	;# 
  1562  0F25                     	;# 
  1563  0F26                     	;# 
  1564  0F27                     	;# 
  1565  0F28                     	;# 
  1566  0F29                     	;# 
  1567  0F2A                     	;# 
  1568  0F2B                     	;# 
  1569  0F2C                     	;# 
  1570  0F2D                     	;# 
  1571  0FE4                     	;# 
  1572  0FE5                     	;# 
  1573  0FE6                     	;# 
  1574  0FE7                     	;# 
  1575  0FE8                     	;# 
  1576  0FE9                     	;# 
  1577  0FEA                     	;# 
  1578  0FEB                     	;# 
  1579  0FED                     	;# 
  1580  0FEE                     	;# 
  1581  0FEF                     	;# 
  1582  0000                     	;# 
  1583  0001                     	;# 
  1584  0002                     	;# 
  1585  0003                     	;# 
  1586  0004                     	;# 
  1587  0005                     	;# 
  1588  0006                     	;# 
  1589  0007                     	;# 
  1590  0008                     	;# 
  1591  0009                     	;# 
  1592  000A                     	;# 
  1593  000B                     	;# 
  1594  000C                     	;# 
  1595  000D                     	;# 
  1596  000E                     	;# 
  1597  0011                     	;# 
  1598  0012                     	;# 
  1599  0013                     	;# 
  1600  0015                     	;# 
  1601  0016                     	;# 
  1602  0016                     	;# 
  1603  0017                     	;# 
  1604  0018                     	;# 
  1605  0019                     	;# 
  1606  001A                     	;# 
  1607  001B                     	;# 
  1608  001C                     	;# 
  1609  008C                     	;# 
  1610  008D                     	;# 
  1611  008E                     	;# 
  1612  0091                     	;# 
  1613  0092                     	;# 
  1614  0093                     	;# 
  1615  0095                     	;# 
  1616  0096                     	;# 
  1617  0097                     	;# 
  1618  0098                     	;# 
  1619  0099                     	;# 
  1620  009A                     	;# 
  1621  009B                     	;# 
  1622  009B                     	;# 
  1623  009C                     	;# 
  1624  009D                     	;# 
  1625  009E                     	;# 
  1626  009F                     	;# 
  1627  010C                     	;# 
  1628  010D                     	;# 
  1629  010E                     	;# 
  1630  0111                     	;# 
  1631  0112                     	;# 
  1632  0113                     	;# 
  1633  0114                     	;# 
  1634  0115                     	;# 
  1635  0116                     	;# 
  1636  0117                     	;# 
  1637  0118                     	;# 
  1638  0119                     	;# 
  1639  011C                     	;# 
  1640  018C                     	;# 
  1641  018D                     	;# 
  1642  018E                     	;# 
  1643  0191                     	;# 
  1644  0191                     	;# 
  1645  0192                     	;# 
  1646  0193                     	;# 
  1647  0193                     	;# 
  1648  0194                     	;# 
  1649  0195                     	;# 
  1650  0196                     	;# 
  1651  0199                     	;# 
  1652  0199                     	;# 
  1653  0199                     	;# 
  1654  019A                     	;# 
  1655  019A                     	;# 
  1656  019A                     	;# 
  1657  019B                     	;# 
  1658  019B                     	;# 
  1659  019B                     	;# 
  1660  019B                     	;# 
  1661  019B                     	;# 
  1662  019C                     	;# 
  1663  019C                     	;# 
  1664  019C                     	;# 
  1665  019D                     	;# 
  1666  019D                     	;# 
  1667  019D                     	;# 
  1668  019E                     	;# 
  1669  019E                     	;# 
  1670  019E                     	;# 
  1671  019F                     	;# 
  1672  019F                     	;# 
  1673  019F                     	;# 
  1674  019F                     	;# 
  1675  019F                     	;# 
  1676  020C                     	;# 
  1677  020D                     	;# 
  1678  020E                     	;# 
  1679  0211                     	;# 
  1680  0211                     	;# 
  1681  0212                     	;# 
  1682  0212                     	;# 
  1683  0213                     	;# 
  1684  0213                     	;# 
  1685  0214                     	;# 
  1686  0214                     	;# 
  1687  0215                     	;# 
  1688  0215                     	;# 
  1689  0215                     	;# 
  1690  0215                     	;# 
  1691  0216                     	;# 
  1692  0216                     	;# 
  1693  0217                     	;# 
  1694  0217                     	;# 
  1695  028C                     	;# 
  1696  028D                     	;# 
  1697  028E                     	;# 
  1698  0291                     	;# 
  1699  0291                     	;# 
  1700  0292                     	;# 
  1701  0293                     	;# 
  1702  0293                     	;# 
  1703  0298                     	;# 
  1704  0298                     	;# 
  1705  0299                     	;# 
  1706  029A                     	;# 
  1707  029A                     	;# 
  1708  029E                     	;# 
  1709  030C                     	;# 
  1710  030D                     	;# 
  1711  030E                     	;# 
  1712  038C                     	;# 
  1713  038D                     	;# 
  1714  038E                     	;# 
  1715  0391                     	;# 
  1716  0392                     	;# 
  1717  0393                     	;# 
  1718  0394                     	;# 
  1719  0395                     	;# 
  1720  0396                     	;# 
  1721  0397                     	;# 
  1722  0398                     	;# 
  1723  0399                     	;# 
  1724  0415                     	;# 
  1725  0416                     	;# 
  1726  0417                     	;# 
  1727  041C                     	;# 
  1728  041D                     	;# 
  1729  041E                     	;# 
  1730  0511                     	;# 
  1731  0515                     	;# 
  1732  0617                     	;# 
  1733  0618                     	;# 
  1734  0619                     	;# 
  1735  0619                     	;# 
  1736  061A                     	;# 
  1737  061B                     	;# 
  1738  061C                     	;# 
  1739  061C                     	;# 
  1740  0691                     	;# 
  1741  0692                     	;# 
  1742  0693                     	;# 
  1743  0694                     	;# 
  1744  0695                     	;# 
  1745  0696                     	;# 
  1746  0697                     	;# 
  1747  0698                     	;# 
  1748  0699                     	;# 
  1749  069A                     	;# 
  1750  069B                     	;# 
  1751  069C                     	;# 
  1752  069D                     	;# 
  1753  069E                     	;# 
  1754  069F                     	;# 
  1755  0E0F                     	;# 
  1756  0E10                     	;# 
  1757  0E11                     	;# 
  1758  0E12                     	;# 
  1759  0E13                     	;# 
  1760  0E14                     	;# 
  1761  0E15                     	;# 
  1762  0E17                     	;# 
  1763  0E20                     	;# 
  1764  0E21                     	;# 
  1765  0E22                     	;# 
  1766  0E24                     	;# 
  1767  0E25                     	;# 
  1768  0E28                     	;# 
  1769  0E29                     	;# 
  1770  0E2A                     	;# 
  1771  0E2B                     	;# 
  1772  0E90                     	;# 
  1773  0E91                     	;# 
  1774  0E92                     	;# 
  1775  0E94                     	;# 
  1776  0E95                     	;# 
  1777  0E9C                     	;# 
  1778  0E9D                     	;# 
  1779  0E9E                     	;# 
  1780  0E9F                     	;# 
  1781  0EA0                     	;# 
  1782  0EA1                     	;# 
  1783  0EA2                     	;# 
  1784  0EA3                     	;# 
  1785  0EA4                     	;# 
  1786  0EA5                     	;# 
  1787  0EA6                     	;# 
  1788  0EA7                     	;# 
  1789  0F0F                     	;# 
  1790  0F10                     	;# 
  1791  0F11                     	;# 
  1792  0F12                     	;# 
  1793  0F13                     	;# 
  1794  0F14                     	;# 
  1795  0F15                     	;# 
  1796  0F16                     	;# 
  1797  0F17                     	;# 
  1798  0F18                     	;# 
  1799  0F19                     	;# 
  1800  0F1A                     	;# 
  1801  0F1B                     	;# 
  1802  0F1C                     	;# 
  1803  0F1D                     	;# 
  1804  0F1E                     	;# 
  1805  0F1F                     	;# 
  1806  0F20                     	;# 
  1807  0F21                     	;# 
  1808  0F22                     	;# 
  1809  0F23                     	;# 
  1810  0F24                     	;# 
  1811  0F25                     	;# 
  1812  0F26                     	;# 
  1813  0F27                     	;# 
  1814  0F28                     	;# 
  1815  0F29                     	;# 
  1816  0F2A                     	;# 
  1817  0F2B                     	;# 
  1818  0F2C                     	;# 
  1819  0F2D                     	;# 
  1820  0FE4                     	;# 
  1821  0FE5                     	;# 
  1822  0FE6                     	;# 
  1823  0FE7                     	;# 
  1824  0FE8                     	;# 
  1825  0FE9                     	;# 
  1826  0FEA                     	;# 
  1827  0FEB                     	;# 
  1828  0FED                     	;# 
  1829  0FEE                     	;# 
  1830  0FEF                     	;# 
  1831  0000                     	;# 
  1832  0001                     	;# 
  1833  0002                     	;# 
  1834  0003                     	;# 
  1835  0004                     	;# 
  1836  0005                     	;# 
  1837  0006                     	;# 
  1838  0007                     	;# 
  1839  0008                     	;# 
  1840  0009                     	;# 
  1841  000A                     	;# 
  1842  000B                     	;# 
  1843  000C                     	;# 
  1844  000D                     	;# 
  1845  000E                     	;# 
  1846  0011                     	;# 
  1847  0012                     	;# 
  1848  0013                     	;# 
  1849  0015                     	;# 
  1850  0016                     	;# 
  1851  0016                     	;# 
  1852  0017                     	;# 
  1853  0018                     	;# 
  1854  0019                     	;# 
  1855  001A                     	;# 
  1856  001B                     	;# 
  1857  001C                     	;# 
  1858  008C                     	;# 
  1859  008D                     	;# 
  1860  008E                     	;# 
  1861  0091                     	;# 
  1862  0092                     	;# 
  1863  0093                     	;# 
  1864  0095                     	;# 
  1865  0096                     	;# 
  1866  0097                     	;# 
  1867  0098                     	;# 
  1868  0099                     	;# 
  1869  009A                     	;# 
  1870  009B                     	;# 
  1871  009B                     	;# 
  1872  009C                     	;# 
  1873  009D                     	;# 
  1874  009E                     	;# 
  1875  009F                     	;# 
  1876  010C                     	;# 
  1877  010D                     	;# 
  1878  010E                     	;# 
  1879  0111                     	;# 
  1880  0112                     	;# 
  1881  0113                     	;# 
  1882  0114                     	;# 
  1883  0115                     	;# 
  1884  0116                     	;# 
  1885  0117                     	;# 
  1886  0118                     	;# 
  1887  0119                     	;# 
  1888  011C                     	;# 
  1889  018C                     	;# 
  1890  018D                     	;# 
  1891  018E                     	;# 
  1892  0191                     	;# 
  1893  0191                     	;# 
  1894  0192                     	;# 
  1895  0193                     	;# 
  1896  0193                     	;# 
  1897  0194                     	;# 
  1898  0195                     	;# 
  1899  0196                     	;# 
  1900  0199                     	;# 
  1901  0199                     	;# 
  1902  0199                     	;# 
  1903  019A                     	;# 
  1904  019A                     	;# 
  1905  019A                     	;# 
  1906  019B                     	;# 
  1907  019B                     	;# 
  1908  019B                     	;# 
  1909  019B                     	;# 
  1910  019B                     	;# 
  1911  019C                     	;# 
  1912  019C                     	;# 
  1913  019C                     	;# 
  1914  019D                     	;# 
  1915  019D                     	;# 
  1916  019D                     	;# 
  1917  019E                     	;# 
  1918  019E                     	;# 
  1919  019E                     	;# 
  1920  019F                     	;# 
  1921  019F                     	;# 
  1922  019F                     	;# 
  1923  019F                     	;# 
  1924  019F                     	;# 
  1925  020C                     	;# 
  1926  020D                     	;# 
  1927  020E                     	;# 
  1928  0211                     	;# 
  1929  0211                     	;# 
  1930  0212                     	;# 
  1931  0212                     	;# 
  1932  0213                     	;# 
  1933  0213                     	;# 
  1934  0214                     	;# 
  1935  0214                     	;# 
  1936  0215                     	;# 
  1937  0215                     	;# 
  1938  0215                     	;# 
  1939  0215                     	;# 
  1940  0216                     	;# 
  1941  0216                     	;# 
  1942  0217                     	;# 
  1943  0217                     	;# 
  1944  028C                     	;# 
  1945  028D                     	;# 
  1946  028E                     	;# 
  1947  0291                     	;# 
  1948  0291                     	;# 
  1949  0292                     	;# 
  1950  0293                     	;# 
  1951  0293                     	;# 
  1952  0298                     	;# 
  1953  0298                     	;# 
  1954  0299                     	;# 
  1955  029A                     	;# 
  1956  029A                     	;# 
  1957  029E                     	;# 
  1958  030C                     	;# 
  1959  030D                     	;# 
  1960  030E                     	;# 
  1961  038C                     	;# 
  1962  038D                     	;# 
  1963  038E                     	;# 
  1964  0391                     	;# 
  1965  0392                     	;# 
  1966  0393                     	;# 
  1967  0394                     	;# 
  1968  0395                     	;# 
  1969  0396                     	;# 
  1970  0397                     	;# 
  1971  0398                     	;# 
  1972  0399                     	;# 
  1973  0415                     	;# 
  1974  0416                     	;# 
  1975  0417                     	;# 
  1976  041C                     	;# 
  1977  041D                     	;# 
  1978  041E                     	;# 
  1979  0511                     	;# 
  1980  0515                     	;# 
  1981  0617                     	;# 
  1982  0618                     	;# 
  1983  0619                     	;# 
  1984  0619                     	;# 
  1985  061A                     	;# 
  1986  061B                     	;# 
  1987  061C                     	;# 
  1988  061C                     	;# 
  1989  0691                     	;# 
  1990  0692                     	;# 
  1991  0693                     	;# 
  1992  0694                     	;# 
  1993  0695                     	;# 
  1994  0696                     	;# 
  1995  0697                     	;# 
  1996  0698                     	;# 
  1997  0699                     	;# 
  1998  069A                     	;# 
  1999  069B                     	;# 
  2000  069C                     	;# 
  2001  069D                     	;# 
  2002  069E                     	;# 
  2003  069F                     	;# 
  2004  0E0F                     	;# 
  2005  0E10                     	;# 
  2006  0E11                     	;# 
  2007  0E12                     	;# 
  2008  0E13                     	;# 
  2009  0E14                     	;# 
  2010  0E15                     	;# 
  2011  0E17                     	;# 
  2012  0E20                     	;# 
  2013  0E21                     	;# 
  2014  0E22                     	;# 
  2015  0E24                     	;# 
  2016  0E25                     	;# 
  2017  0E28                     	;# 
  2018  0E29                     	;# 
  2019  0E2A                     	;# 
  2020  0E2B                     	;# 
  2021  0E90                     	;# 
  2022  0E91                     	;# 
  2023  0E92                     	;# 
  2024  0E94                     	;# 
  2025  0E95                     	;# 
  2026  0E9C                     	;# 
  2027  0E9D                     	;# 
  2028  0E9E                     	;# 
  2029  0E9F                     	;# 
  2030  0EA0                     	;# 
  2031  0EA1                     	;# 
  2032  0EA2                     	;# 
  2033  0EA3                     	;# 
  2034  0EA4                     	;# 
  2035  0EA5                     	;# 
  2036  0EA6                     	;# 
  2037  0EA7                     	;# 
  2038  0F0F                     	;# 
  2039  0F10                     	;# 
  2040  0F11                     	;# 
  2041  0F12                     	;# 
  2042  0F13                     	;# 
  2043  0F14                     	;# 
  2044  0F15                     	;# 
  2045  0F16                     	;# 
  2046  0F17                     	;# 
  2047  0F18                     	;# 
  2048  0F19                     	;# 
  2049  0F1A                     	;# 
  2050  0F1B                     	;# 
  2051  0F1C                     	;# 
  2052  0F1D                     	;# 
  2053  0F1E                     	;# 
  2054  0F1F                     	;# 
  2055  0F20                     	;# 
  2056  0F21                     	;# 
  2057  0F22                     	;# 
  2058  0F23                     	;# 
  2059  0F24                     	;# 
  2060  0F25                     	;# 
  2061  0F26                     	;# 
  2062  0F27                     	;# 
  2063  0F28                     	;# 
  2064  0F29                     	;# 
  2065  0F2A                     	;# 
  2066  0F2B                     	;# 
  2067  0F2C                     	;# 
  2068  0F2D                     	;# 
  2069  0FE4                     	;# 
  2070  0FE5                     	;# 
  2071  0FE6                     	;# 
  2072  0FE7                     	;# 
  2073  0FE8                     	;# 
  2074  0FE9                     	;# 
  2075  0FEA                     	;# 
  2076  0FEB                     	;# 
  2077  0FED                     	;# 
  2078  0FEE                     	;# 
  2079  0FEF                     	;# 
  2080  0000                     	;# 
  2081  0001                     	;# 
  2082  0002                     	;# 
  2083  0003                     	;# 
  2084  0004                     	;# 
  2085  0005                     	;# 
  2086  0006                     	;# 
  2087  0007                     	;# 
  2088  0008                     	;# 
  2089  0009                     	;# 
  2090  000A                     	;# 
  2091  000B                     	;# 
  2092  000C                     	;# 
  2093  000D                     	;# 
  2094  000E                     	;# 
  2095  0011                     	;# 
  2096  0012                     	;# 
  2097  0013                     	;# 
  2098  0015                     	;# 
  2099  0016                     	;# 
  2100  0016                     	;# 
  2101  0017                     	;# 
  2102  0018                     	;# 
  2103  0019                     	;# 
  2104  001A                     	;# 
  2105  001B                     	;# 
  2106  001C                     	;# 
  2107  008C                     	;# 
  2108  008D                     	;# 
  2109  008E                     	;# 
  2110  0091                     	;# 
  2111  0092                     	;# 
  2112  0093                     	;# 
  2113  0095                     	;# 
  2114  0096                     	;# 
  2115  0097                     	;# 
  2116  0098                     	;# 
  2117  0099                     	;# 
  2118  009A                     	;# 
  2119  009B                     	;# 
  2120  009B                     	;# 
  2121  009C                     	;# 
  2122  009D                     	;# 
  2123  009E                     	;# 
  2124  009F                     	;# 
  2125  010C                     	;# 
  2126  010D                     	;# 
  2127  010E                     	;# 
  2128  0111                     	;# 
  2129  0112                     	;# 
  2130  0113                     	;# 
  2131  0114                     	;# 
  2132  0115                     	;# 
  2133  0116                     	;# 
  2134  0117                     	;# 
  2135  0118                     	;# 
  2136  0119                     	;# 
  2137  011C                     	;# 
  2138  018C                     	;# 
  2139  018D                     	;# 
  2140  018E                     	;# 
  2141  0191                     	;# 
  2142  0191                     	;# 
  2143  0192                     	;# 
  2144  0193                     	;# 
  2145  0193                     	;# 
  2146  0194                     	;# 
  2147  0195                     	;# 
  2148  0196                     	;# 
  2149  0199                     	;# 
  2150  0199                     	;# 
  2151  0199                     	;# 
  2152  019A                     	;# 
  2153  019A                     	;# 
  2154  019A                     	;# 
  2155  019B                     	;# 
  2156  019B                     	;# 
  2157  019B                     	;# 
  2158  019B                     	;# 
  2159  019B                     	;# 
  2160  019C                     	;# 
  2161  019C                     	;# 
  2162  019C                     	;# 
  2163  019D                     	;# 
  2164  019D                     	;# 
  2165  019D                     	;# 
  2166  019E                     	;# 
  2167  019E                     	;# 
  2168  019E                     	;# 
  2169  019F                     	;# 
  2170  019F                     	;# 
  2171  019F                     	;# 
  2172  019F                     	;# 
  2173  019F                     	;# 
  2174  020C                     	;# 
  2175  020D                     	;# 
  2176  020E                     	;# 
  2177  0211                     	;# 
  2178  0211                     	;# 
  2179  0212                     	;# 
  2180  0212                     	;# 
  2181  0213                     	;# 
  2182  0213                     	;# 
  2183  0214                     	;# 
  2184  0214                     	;# 
  2185  0215                     	;# 
  2186  0215                     	;# 
  2187  0215                     	;# 
  2188  0215                     	;# 
  2189  0216                     	;# 
  2190  0216                     	;# 
  2191  0217                     	;# 
  2192  0217                     	;# 
  2193  028C                     	;# 
  2194  028D                     	;# 
  2195  028E                     	;# 
  2196  0291                     	;# 
  2197  0291                     	;# 
  2198  0292                     	;# 
  2199  0293                     	;# 
  2200  0293                     	;# 
  2201  0298                     	;# 
  2202  0298                     	;# 
  2203  0299                     	;# 
  2204  029A                     	;# 
  2205  029A                     	;# 
  2206  029E                     	;# 
  2207  030C                     	;# 
  2208  030D                     	;# 
  2209  030E                     	;# 
  2210  038C                     	;# 
  2211  038D                     	;# 
  2212  038E                     	;# 
  2213  0391                     	;# 
  2214  0392                     	;# 
  2215  0393                     	;# 
  2216  0394                     	;# 
  2217  0395                     	;# 
  2218  0396                     	;# 
  2219  0397                     	;# 
  2220  0398                     	;# 
  2221  0399                     	;# 
  2222  0415                     	;# 
  2223  0416                     	;# 
  2224  0417                     	;# 
  2225  041C                     	;# 
  2226  041D                     	;# 
  2227  041E                     	;# 
  2228  0511                     	;# 
  2229  0515                     	;# 
  2230  0617                     	;# 
  2231  0618                     	;# 
  2232  0619                     	;# 
  2233  0619                     	;# 
  2234  061A                     	;# 
  2235  061B                     	;# 
  2236  061C                     	;# 
  2237  061C                     	;# 
  2238  0691                     	;# 
  2239  0692                     	;# 
  2240  0693                     	;# 
  2241  0694                     	;# 
  2242  0695                     	;# 
  2243  0696                     	;# 
  2244  0697                     	;# 
  2245  0698                     	;# 
  2246  0699                     	;# 
  2247  069A                     	;# 
  2248  069B                     	;# 
  2249  069C                     	;# 
  2250  069D                     	;# 
  2251  069E                     	;# 
  2252  069F                     	;# 
  2253  0E0F                     	;# 
  2254  0E10                     	;# 
  2255  0E11                     	;# 
  2256  0E12                     	;# 
  2257  0E13                     	;# 
  2258  0E14                     	;# 
  2259  0E15                     	;# 
  2260  0E17                     	;# 
  2261  0E20                     	;# 
  2262  0E21                     	;# 
  2263  0E22                     	;# 
  2264  0E24                     	;# 
  2265  0E25                     	;# 
  2266  0E28                     	;# 
  2267  0E29                     	;# 
  2268  0E2A                     	;# 
  2269  0E2B                     	;# 
  2270  0E90                     	;# 
  2271  0E91                     	;# 
  2272  0E92                     	;# 
  2273  0E94                     	;# 
  2274  0E95                     	;# 
  2275  0E9C                     	;# 
  2276  0E9D                     	;# 
  2277  0E9E                     	;# 
  2278  0E9F                     	;# 
  2279  0EA0                     	;# 
  2280  0EA1                     	;# 
  2281  0EA2                     	;# 
  2282  0EA3                     	;# 
  2283  0EA4                     	;# 
  2284  0EA5                     	;# 
  2285  0EA6                     	;# 
  2286  0EA7                     	;# 
  2287  0F0F                     	;# 
  2288  0F10                     	;# 
  2289  0F11                     	;# 
  2290  0F12                     	;# 
  2291  0F13                     	;# 
  2292  0F14                     	;# 
  2293  0F15                     	;# 
  2294  0F16                     	;# 
  2295  0F17                     	;# 
  2296  0F18                     	;# 
  2297  0F19                     	;# 
  2298  0F1A                     	;# 
  2299  0F1B                     	;# 
  2300  0F1C                     	;# 
  2301  0F1D                     	;# 
  2302  0F1E                     	;# 
  2303  0F1F                     	;# 
  2304  0F20                     	;# 
  2305  0F21                     	;# 
  2306  0F22                     	;# 
  2307  0F23                     	;# 
  2308  0F24                     	;# 
  2309  0F25                     	;# 
  2310  0F26                     	;# 
  2311  0F27                     	;# 
  2312  0F28                     	;# 
  2313  0F29                     	;# 
  2314  0F2A                     	;# 
  2315  0F2B                     	;# 
  2316  0F2C                     	;# 
  2317  0F2D                     	;# 
  2318  0FE4                     	;# 
  2319  0FE5                     	;# 
  2320  0FE6                     	;# 
  2321  0FE7                     	;# 
  2322  0FE8                     	;# 
  2323  0FE9                     	;# 
  2324  0FEA                     	;# 
  2325  0FEB                     	;# 
  2326  0FED                     	;# 
  2327  0FEE                     	;# 
  2328  0FEF                     	;# 
  2329  0000                     	;# 
  2330  0001                     	;# 
  2331  0002                     	;# 
  2332  0003                     	;# 
  2333  0004                     	;# 
  2334  0005                     	;# 
  2335  0006                     	;# 
  2336  0007                     	;# 
  2337  0008                     	;# 
  2338  0009                     	;# 
  2339  000A                     	;# 
  2340  000B                     	;# 
  2341  000C                     	;# 
  2342  000D                     	;# 
  2343  000E                     	;# 
  2344  0011                     	;# 
  2345  0012                     	;# 
  2346  0013                     	;# 
  2347  0015                     	;# 
  2348  0016                     	;# 
  2349  0016                     	;# 
  2350  0017                     	;# 
  2351  0018                     	;# 
  2352  0019                     	;# 
  2353  001A                     	;# 
  2354  001B                     	;# 
  2355  001C                     	;# 
  2356  008C                     	;# 
  2357  008D                     	;# 
  2358  008E                     	;# 
  2359  0091                     	;# 
  2360  0092                     	;# 
  2361  0093                     	;# 
  2362  0095                     	;# 
  2363  0096                     	;# 
  2364  0097                     	;# 
  2365  0098                     	;# 
  2366  0099                     	;# 
  2367  009A                     	;# 
  2368  009B                     	;# 
  2369  009B                     	;# 
  2370  009C                     	;# 
  2371  009D                     	;# 
  2372  009E                     	;# 
  2373  009F                     	;# 
  2374  010C                     	;# 
  2375  010D                     	;# 
  2376  010E                     	;# 
  2377  0111                     	;# 
  2378  0112                     	;# 
  2379  0113                     	;# 
  2380  0114                     	;# 
  2381  0115                     	;# 
  2382  0116                     	;# 
  2383  0117                     	;# 
  2384  0118                     	;# 
  2385  0119                     	;# 
  2386  011C                     	;# 
  2387  018C                     	;# 
  2388  018D                     	;# 
  2389  018E                     	;# 
  2390  0191                     	;# 
  2391  0191                     	;# 
  2392  0192                     	;# 
  2393  0193                     	;# 
  2394  0193                     	;# 
  2395  0194                     	;# 
  2396  0195                     	;# 
  2397  0196                     	;# 
  2398  0199                     	;# 
  2399  0199                     	;# 
  2400  0199                     	;# 
  2401  019A                     	;# 
  2402  019A                     	;# 
  2403  019A                     	;# 
  2404  019B                     	;# 
  2405  019B                     	;# 
  2406  019B                     	;# 
  2407  019B                     	;# 
  2408  019B                     	;# 
  2409  019C                     	;# 
  2410  019C                     	;# 
  2411  019C                     	;# 
  2412  019D                     	;# 
  2413  019D                     	;# 
  2414  019D                     	;# 
  2415  019E                     	;# 
  2416  019E                     	;# 
  2417  019E                     	;# 
  2418  019F                     	;# 
  2419  019F                     	;# 
  2420  019F                     	;# 
  2421  019F                     	;# 
  2422  019F                     	;# 
  2423  020C                     	;# 
  2424  020D                     	;# 
  2425  020E                     	;# 
  2426  0211                     	;# 
  2427  0211                     	;# 
  2428  0212                     	;# 
  2429  0212                     	;# 
  2430  0213                     	;# 
  2431  0213                     	;# 
  2432  0214                     	;# 
  2433  0214                     	;# 
  2434  0215                     	;# 
  2435  0215                     	;# 
  2436  0215                     	;# 
  2437  0215                     	;# 
  2438  0216                     	;# 
  2439  0216                     	;# 
  2440  0217                     	;# 
  2441  0217                     	;# 
  2442  028C                     	;# 
  2443  028D                     	;# 
  2444  028E                     	;# 
  2445  0291                     	;# 
  2446  0291                     	;# 
  2447  0292                     	;# 
  2448  0293                     	;# 
  2449  0293                     	;# 
  2450  0298                     	;# 
  2451  0298                     	;# 
  2452  0299                     	;# 
  2453  029A                     	;# 
  2454  029A                     	;# 
  2455  029E                     	;# 
  2456  030C                     	;# 
  2457  030D                     	;# 
  2458  030E                     	;# 
  2459  038C                     	;# 
  2460  038D                     	;# 
  2461  038E                     	;# 
  2462  0391                     	;# 
  2463  0392                     	;# 
  2464  0393                     	;# 
  2465  0394                     	;# 
  2466  0395                     	;# 
  2467  0396                     	;# 
  2468  0397                     	;# 
  2469  0398                     	;# 
  2470  0399                     	;# 
  2471  0415                     	;# 
  2472  0416                     	;# 
  2473  0417                     	;# 
  2474  041C                     	;# 
  2475  041D                     	;# 
  2476  041E                     	;# 
  2477  0511                     	;# 
  2478  0515                     	;# 
  2479  0617                     	;# 
  2480  0618                     	;# 
  2481  0619                     	;# 
  2482  0619                     	;# 
  2483  061A                     	;# 
  2484  061B                     	;# 
  2485  061C                     	;# 
  2486  061C                     	;# 
  2487  0691                     	;# 
  2488  0692                     	;# 
  2489  0693                     	;# 
  2490  0694                     	;# 
  2491  0695                     	;# 
  2492  0696                     	;# 
  2493  0697                     	;# 
  2494  0698                     	;# 
  2495  0699                     	;# 
  2496  069A                     	;# 
  2497  069B                     	;# 
  2498  069C                     	;# 
  2499  069D                     	;# 
  2500  069E                     	;# 
  2501  069F                     	;# 
  2502  0E0F                     	;# 
  2503  0E10                     	;# 
  2504  0E11                     	;# 
  2505  0E12                     	;# 
  2506  0E13                     	;# 
  2507  0E14                     	;# 
  2508  0E15                     	;# 
  2509  0E17                     	;# 
  2510  0E20                     	;# 
  2511  0E21                     	;# 
  2512  0E22                     	;# 
  2513  0E24                     	;# 
  2514  0E25                     	;# 
  2515  0E28                     	;# 
  2516  0E29                     	;# 
  2517  0E2A                     	;# 
  2518  0E2B                     	;# 
  2519  0E90                     	;# 
  2520  0E91                     	;# 
  2521  0E92                     	;# 
  2522  0E94                     	;# 
  2523  0E95                     	;# 
  2524  0E9C                     	;# 
  2525  0E9D                     	;# 
  2526  0E9E                     	;# 
  2527  0E9F                     	;# 
  2528  0EA0                     	;# 
  2529  0EA1                     	;# 
  2530  0EA2                     	;# 
  2531  0EA3                     	;# 
  2532  0EA4                     	;# 
  2533  0EA5                     	;# 
  2534  0EA6                     	;# 
  2535  0EA7                     	;# 
  2536  0F0F                     	;# 
  2537  0F10                     	;# 
  2538  0F11                     	;# 
  2539  0F12                     	;# 
  2540  0F13                     	;# 
  2541  0F14                     	;# 
  2542  0F15                     	;# 
  2543  0F16                     	;# 
  2544  0F17                     	;# 
  2545  0F18                     	;# 
  2546  0F19                     	;# 
  2547  0F1A                     	;# 
  2548  0F1B                     	;# 
  2549  0F1C                     	;# 
  2550  0F1D                     	;# 
  2551  0F1E                     	;# 
  2552  0F1F                     	;# 
  2553  0F20                     	;# 
  2554  0F21                     	;# 
  2555  0F22                     	;# 
  2556  0F23                     	;# 
  2557  0F24                     	;# 
  2558  0F25                     	;# 
  2559  0F26                     	;# 
  2560  0F27                     	;# 
  2561  0F28                     	;# 
  2562  0F29                     	;# 
  2563  0F2A                     	;# 
  2564  0F2B                     	;# 
  2565  0F2C                     	;# 
  2566  0F2D                     	;# 
  2567  0FE4                     	;# 
  2568  0FE5                     	;# 
  2569  0FE6                     	;# 
  2570  0FE7                     	;# 
  2571  0FE8                     	;# 
  2572  0FE9                     	;# 
  2573  0FEA                     	;# 
  2574  0FEB                     	;# 
  2575  0FED                     	;# 
  2576  0FEE                     	;# 
  2577  0FEF                     	;# 
  2578  0000                     	;# 
  2579  0001                     	;# 
  2580  0002                     	;# 
  2581  0003                     	;# 
  2582  0004                     	;# 
  2583  0005                     	;# 
  2584  0006                     	;# 
  2585  0007                     	;# 
  2586  0008                     	;# 
  2587  0009                     	;# 
  2588  000A                     	;# 
  2589  000B                     	;# 
  2590  000C                     	;# 
  2591  000D                     	;# 
  2592  000E                     	;# 
  2593  0011                     	;# 
  2594  0012                     	;# 
  2595  0013                     	;# 
  2596  0015                     	;# 
  2597  0016                     	;# 
  2598  0016                     	;# 
  2599  0017                     	;# 
  2600  0018                     	;# 
  2601  0019                     	;# 
  2602  001A                     	;# 
  2603  001B                     	;# 
  2604  001C                     	;# 
  2605  008C                     	;# 
  2606  008D                     	;# 
  2607  008E                     	;# 
  2608  0091                     	;# 
  2609  0092                     	;# 
  2610  0093                     	;# 
  2611  0095                     	;# 
  2612  0096                     	;# 
  2613  0097                     	;# 
  2614  0098                     	;# 
  2615  0099                     	;# 
  2616  009A                     	;# 
  2617  009B                     	;# 
  2618  009B                     	;# 
  2619  009C                     	;# 
  2620  009D                     	;# 
  2621  009E                     	;# 
  2622  009F                     	;# 
  2623  010C                     	;# 
  2624  010D                     	;# 
  2625  010E                     	;# 
  2626  0111                     	;# 
  2627  0112                     	;# 
  2628  0113                     	;# 
  2629  0114                     	;# 
  2630  0115                     	;# 
  2631  0116                     	;# 
  2632  0117                     	;# 
  2633  0118                     	;# 
  2634  0119                     	;# 
  2635  011C                     	;# 
  2636  018C                     	;# 
  2637  018D                     	;# 
  2638  018E                     	;# 
  2639  0191                     	;# 
  2640  0191                     	;# 
  2641  0192                     	;# 
  2642  0193                     	;# 
  2643  0193                     	;# 
  2644  0194                     	;# 
  2645  0195                     	;# 
  2646  0196                     	;# 
  2647  0199                     	;# 
  2648  0199                     	;# 
  2649  0199                     	;# 
  2650  019A                     	;# 
  2651  019A                     	;# 
  2652  019A                     	;# 
  2653  019B                     	;# 
  2654  019B                     	;# 
  2655  019B                     	;# 
  2656  019B                     	;# 
  2657  019B                     	;# 
  2658  019C                     	;# 
  2659  019C                     	;# 
  2660  019C                     	;# 
  2661  019D                     	;# 
  2662  019D                     	;# 
  2663  019D                     	;# 
  2664  019E                     	;# 
  2665  019E                     	;# 
  2666  019E                     	;# 
  2667  019F                     	;# 
  2668  019F                     	;# 
  2669  019F                     	;# 
  2670  019F                     	;# 
  2671  019F                     	;# 
  2672  020C                     	;# 
  2673  020D                     	;# 
  2674  020E                     	;# 
  2675  0211                     	;# 
  2676  0211                     	;# 
  2677  0212                     	;# 
  2678  0212                     	;# 
  2679  0213                     	;# 
  2680  0213                     	;# 
  2681  0214                     	;# 
  2682  0214                     	;# 
  2683  0215                     	;# 
  2684  0215                     	;# 
  2685  0215                     	;# 
  2686  0215                     	;# 
  2687  0216                     	;# 
  2688  0216                     	;# 
  2689  0217                     	;# 
  2690  0217                     	;# 
  2691  028C                     	;# 
  2692  028D                     	;# 
  2693  028E                     	;# 
  2694  0291                     	;# 
  2695  0291                     	;# 
  2696  0292                     	;# 
  2697  0293                     	;# 
  2698  0293                     	;# 
  2699  0298                     	;# 
  2700  0298                     	;# 
  2701  0299                     	;# 
  2702  029A                     	;# 
  2703  029A                     	;# 
  2704  029E                     	;# 
  2705  030C                     	;# 
  2706  030D                     	;# 
  2707  030E                     	;# 
  2708  038C                     	;# 
  2709  038D                     	;# 
  2710  038E                     	;# 
  2711  0391                     	;# 
  2712  0392                     	;# 
  2713  0393                     	;# 
  2714  0394                     	;# 
  2715  0395                     	;# 
  2716  0396                     	;# 
  2717  0397                     	;# 
  2718  0398                     	;# 
  2719  0399                     	;# 
  2720  0415                     	;# 
  2721  0416                     	;# 
  2722  0417                     	;# 
  2723  041C                     	;# 
  2724  041D                     	;# 
  2725  041E                     	;# 
  2726  0511                     	;# 
  2727  0515                     	;# 
  2728  0617                     	;# 
  2729  0618                     	;# 
  2730  0619                     	;# 
  2731  0619                     	;# 
  2732  061A                     	;# 
  2733  061B                     	;# 
  2734  061C                     	;# 
  2735  061C                     	;# 
  2736  0691                     	;# 
  2737  0692                     	;# 
  2738  0693                     	;# 
  2739  0694                     	;# 
  2740  0695                     	;# 
  2741  0696                     	;# 
  2742  0697                     	;# 
  2743  0698                     	;# 
  2744  0699                     	;# 
  2745  069A                     	;# 
  2746  069B                     	;# 
  2747  069C                     	;# 
  2748  069D                     	;# 
  2749  069E                     	;# 
  2750  069F                     	;# 
  2751  0E0F                     	;# 
  2752  0E10                     	;# 
  2753  0E11                     	;# 
  2754  0E12                     	;# 
  2755  0E13                     	;# 
  2756  0E14                     	;# 
  2757  0E15                     	;# 
  2758  0E17                     	;# 
  2759  0E20                     	;# 
  2760  0E21                     	;# 
  2761  0E22                     	;# 
  2762  0E24                     	;# 
  2763  0E25                     	;# 
  2764  0E28                     	;# 
  2765  0E29                     	;# 
  2766  0E2A                     	;# 
  2767  0E2B                     	;# 
  2768  0E90                     	;# 
  2769  0E91                     	;# 
  2770  0E92                     	;# 
  2771  0E94                     	;# 
  2772  0E95                     	;# 
  2773  0E9C                     	;# 
  2774  0E9D                     	;# 
  2775  0E9E                     	;# 
  2776  0E9F                     	;# 
  2777  0EA0                     	;# 
  2778  0EA1                     	;# 
  2779  0EA2                     	;# 
  2780  0EA3                     	;# 
  2781  0EA4                     	;# 
  2782  0EA5                     	;# 
  2783  0EA6                     	;# 
  2784  0EA7                     	;# 
  2785  0F0F                     	;# 
  2786  0F10                     	;# 
  2787  0F11                     	;# 
  2788  0F12                     	;# 
  2789  0F13                     	;# 
  2790  0F14                     	;# 
  2791  0F15                     	;# 
  2792  0F16                     	;# 
  2793  0F17                     	;# 
  2794  0F18                     	;# 
  2795  0F19                     	;# 
  2796  0F1A                     	;# 
  2797  0F1B                     	;# 
  2798  0F1C                     	;# 
  2799  0F1D                     	;# 
  2800  0F1E                     	;# 
  2801  0F1F                     	;# 
  2802  0F20                     	;# 
  2803  0F21                     	;# 
  2804  0F22                     	;# 
  2805  0F23                     	;# 
  2806  0F24                     	;# 
  2807  0F25                     	;# 
  2808  0F26                     	;# 
  2809  0F27                     	;# 
  2810  0F28                     	;# 
  2811  0F29                     	;# 
  2812  0F2A                     	;# 
  2813  0F2B                     	;# 
  2814  0F2C                     	;# 
  2815  0F2D                     	;# 
  2816  0FE4                     	;# 
  2817  0FE5                     	;# 
  2818  0FE6                     	;# 
  2819  0FE7                     	;# 
  2820  0FE8                     	;# 
  2821  0FE9                     	;# 
  2822  0FEA                     	;# 
  2823  0FEB                     	;# 
  2824  0FED                     	;# 
  2825  0FEE                     	;# 
  2826  0FEF                     	;# 
  2827                           
  2828 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2829  0000                     
  2830 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2831  0000                     
  2832 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2833  0000                     
  2834                           	psect	stringtext1
  2835  0529                     __pstringtext1:	
  2836  0529                     _dpowers:	
  2837  0529  3401               	retlw	1
  2838  052A  3400               	retlw	0
  2839  052B  340A               	retlw	10
  2840  052C  3400               	retlw	0
  2841  052D  3464               	retlw	100
  2842  052E  3400               	retlw	0
  2843  052F  34E8               	retlw	232
  2844  0530  3403               	retlw	3
  2845  0531  3410               	retlw	16
  2846  0532  3427               	retlw	39
  2847  0533                     __end_of_dpowers:	
  2848                           
  2849                           	psect	nvBANK0
  2850  004D                     __pnvBANK0:	
  2851  004D                     _INT_InterruptHandler:	
  2852  004D                     	ds	2
  2853  004F                     _EUSART_ErrorHandler:	
  2854  004F                     	ds	2
  2855  0051                     _EUSART_OverrunErrorHandler:	
  2856  0051                     	ds	2
  2857  0053                     _EUSART_FramingErrorHandler:	
  2858  0053                     	ds	2
  2859  001C                     _T2CONbits	set	28
  2860  001C                     _T2CON	set	28
  2861  001A                     _TMR2	set	26
  2862  001B                     _PR2	set	27
  2863  0015                     _TMR0	set	21
  2864  0011                     _PIR1bits	set	17
  2865  000B                     _INTCONbits	set	11
  2866  009D                     _ADCON0bits	set	157
  2867  009E                     _ADCON1	set	158
  2868  009D                     _ADCON0	set	157
  2869  0095                     _OPTION_REG	set	149
  2870  0095                     _OPTION_REGbits	set	149
  2871  008E                     _TRISC	set	142
  2872  008D                     _TRISB	set	141
  2873  008C                     _TRISA	set	140
  2874  0097                     _WDTCON	set	151
  2875  0098                     _OSCTUNE	set	152
  2876  009A                     _OSCSTAT	set	154
  2877  0099                     _OSCCON	set	153
  2878  009B                     _ADRES	set	155
  2879  0117                     _FVRCONbits	set	279
  2880  0117                     _FVRCON	set	279
  2881  010E                     _LATC	set	270
  2882  010D                     _LATB	set	269
  2883  010C                     _LATA	set	268
  2884  0116                     _BORCON	set	278
  2885  0119                     _DAC1CON1	set	281
  2886  0118                     _DAC1CON0	set	280
  2887  019A                     _TX1REG	set	410
  2888  0199                     _RC1REG	set	409
  2889  019D                     _RC1STAbits	set	413
  2890  019E                     _TX1STAbits	set	414
  2891  019C                     _SP1BRGH	set	412
  2892  019B                     _SP1BRGL	set	411
  2893  019E                     _TX1STA	set	414
  2894  019D                     _RC1STA	set	413
  2895  019F                     _BAUD1CON	set	415
  2896  018C                     _ANSELA	set	396
  2897  018D                     _ANSELB	set	397
  2898  018E                     _ANSELC	set	398
  2899  020E                     _WPUC	set	526
  2900  020C                     _WPUA	set	524
  2901  020D                     _WPUB	set	525
  2902  0291                     _CCPR1L	set	657
  2903  0293                     _CCP1CONbits	set	659
  2904  029E                     _CCPTMRSbits	set	670
  2905  028E                     _ODCONC	set	654
  2906  028D                     _ODCONB	set	653
  2907  028C                     _ODCONA	set	652
  2908  030E                     _SLRCONC	set	782
  2909  030D                     _SLRCONB	set	781
  2910  030C                     _SLRCONA	set	780
  2911  038E                     _INLVLC	set	910
  2912  038D                     _INLVLB	set	909
  2913  038C                     _INLVLA	set	908
  2914  0515                     _OPA2CON	set	1301
  2915  0511                     _OPA1CON	set	1297
  2916  061C                     _PWM4CONbits	set	1564
  2917  061A                     _PWM4DCLbits	set	1562
  2918  061B                     _PWM4DCH	set	1563
  2919  0619                     _PWM3CONbits	set	1561
  2920  0617                     _PWM3DCLbits	set	1559
  2921  0618                     _PWM3DCH	set	1560
  2922  0E24                     _RXPPS	set	3620
  2923  0E10                     _INTPPS	set	3600
  2924  0EA5                     _RC5PPS	set	3749
  2925  0E95                     _RA5PPS	set	3733
  2926  0EA4                     _RC4PPS	set	3748
  2927  0E9F                     _RB7PPS	set	3743
  2928                           
  2929                           	psect	stringtext2
  2930  04E1                     __pstringtext2:	
  2931  04E1                     STR_1:	
  2932  04E1  340A               	retlw	10
  2933  04E2  3420               	retlw	32	;' '
  2934  04E3  3446               	retlw	70	;'F'
  2935  04E4  3472               	retlw	114	;'r'
  2936  04E5  3465               	retlw	101	;'e'
  2937  04E6  3471               	retlw	113	;'q'
  2938  04E7  3475               	retlw	117	;'u'
  2939  04E8  3465               	retlw	101	;'e'
  2940  04E9  346E               	retlw	110	;'n'
  2941  04EA  3463               	retlw	99	;'c'
  2942  04EB  3479               	retlw	121	;'y'
  2943  04EC  3420               	retlw	32	;' '
  2944  04ED  3473               	retlw	115	;'s'
  2945  04EE  3465               	retlw	101	;'e'
  2946  04EF  346C               	retlw	108	;'l'
  2947  04F0  3465               	retlw	101	;'e'
  2948  04F1  3463               	retlw	99	;'c'
  2949  04F2  3474               	retlw	116	;'t'
  2950  04F3  3465               	retlw	101	;'e'
  2951  04F4  3464               	retlw	100	;'d'
  2952  04F5  3400               	retlw	0
  2953                           
  2954                           	psect	stringtext3
  2955  04F6                     __pstringtext3:	
  2956  04F6                     STR_4:	
  2957  04F6  340A               	retlw	10
  2958  04F7  3420               	retlw	32	;' '
  2959  04F8  3472               	retlw	114	;'r'
  2960  04F9  3465               	retlw	101	;'e'
  2961  04FA  3473               	retlw	115	;'s'
  2962  04FB  3465               	retlw	101	;'e'
  2963  04FC  3474               	retlw	116	;'t'
  2964  04FD  3420               	retlw	32	;' '
  2965  04FE  3473               	retlw	115	;'s'
  2966  04FF  3465               	retlw	101	;'e'
  2967  0500  346C               	retlw	108	;'l'
  2968  0501  3465               	retlw	101	;'e'
  2969  0502  3463               	retlw	99	;'c'
  2970  0503  3474               	retlw	116	;'t'
  2971  0504  3400               	retlw	0
  2972                           
  2973                           	psect	stringtext4
  2974  057E                     __pstringtext4:	
  2975  057E                     STR_2:	
  2976  057E  3425               	retlw	37	;'%'
  2977  057F  3464               	retlw	100	;'d'
  2978  0580  340A               	retlw	10
  2979  0581  3400               	retlw	0
  2980                           
  2981                           	psect	stringtext5
  2982  0000                     __pstringtext5:	
  2983  057E                     
  2984                           ; #config settings
  2985  0000                     
  2986                           	psect	cinit
  2987  0016                     start_initialization:	
  2988  0016                     __initialization:	
  2989                           
  2990                           ; Clear objects allocated to COMMON
  2991  0016  01F0               	clrf	__pbssCOMMON& (0+127)
  2992  0017  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2993  0018  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2994  0019  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2995  001A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2996  001B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2997  001C  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  2998                           
  2999                           ; Clear objects allocated to BANK0
  3000  001D  303F               	movlw	low __pbssBANK0
  3001  001E  0084               	movwf	4
  3002  001F  3000               	movlw	high __pbssBANK0
  3003  0020  0085               	movwf	5
  3004  0021  300E               	movlw	14
  3005  0022  3185  2555  3180   	fcall	clear_ram0
  3006                           
  3007                           ; Clear objects allocated to BANK1
  3008  0025  30A0               	movlw	low __pbssBANK1
  3009  0026  0084               	movwf	4
  3010  0027  3000               	movlw	high __pbssBANK1
  3011  0028  0085               	movwf	5
  3012  0029  3021               	movlw	33
  3013  002A  3185  2555         	fcall	clear_ram0
  3014  002C                     end_of_initialization:	
  3015                           ;End of C runtime variable initialization code
  3016                           
  3017  002C                     __end_of__initialization:	
  3018  002C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3019  002D  0020               	movlb	0
  3020  002E  3183  2BC1         	ljmp	_main	;jump to C main() function
  3021                           
  3022                           	psect	bssCOMMON
  3023  0070                     __pbssCOMMON:	
  3024  0070                     _timer0ReloadVal:	
  3025  0070                     	ds	1
  3026  0071                     _ir_code:	
  3027  0071                     	ds	6
  3028                           
  3029                           	psect	bssBANK0
  3030  003F                     __pbssBANK0:	
  3031  003F                     _Vdd_mv:	
  3032  003F                     	ds	2
  3033  0041                     _microamps:	
  3034  0041                     	ds	2
  3035  0043                     _current:	
  3036  0043                     	ds	1
  3037  0044                     _duty:	
  3038  0044                     	ds	1
  3039  0045                     _frequency:	
  3040  0045                     	ds	1
  3041  0046                     _flag:	
  3042  0046                     	ds	1
  3043  0047                     _LED_blue:	
  3044  0047                     	ds	1
  3045  0048                     _LED_green:	
  3046  0048                     	ds	1
  3047  0049                     _LED_red:	
  3048  0049                     	ds	1
  3049  004A                     _eusartRxLastError:	
  3050  004A                     	ds	1
  3051  004B                     _Vdac_mv:	
  3052  004B                     	ds	2
  3053                           
  3054                           	psect	bssBANK1
  3055  00A0                     __pbssBANK1:	
  3056  00A0                     _stats:	
  3057  00A0                     	ds	33
  3058                           
  3059                           	psect	clrtext
  3060  0555                     clear_ram0:	
  3061                           ;	Called with FSR0 containing the base address, and
  3062                           ;	WREG with the size to clear
  3063                           
  3064  0555  0064               	clrwdt	;clear the watchdog before getting into this loop
  3065  0556                     clrloop0:	
  3066  0556  0180               	clrf	0	;clear RAM location pointed to by FSR
  3067  0557  3101               	addfsr 0,1
  3068  0558  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3069  0559  2D56               	goto	clrloop0	;have we reached the end yet?
  3070  055A  3400               	retlw	0	;all done for this memory range, return
  3071                           
  3072                           	psect	cstackCOMMON
  3073  0077                     __pcstackCOMMON:	
  3074  0077                     ?_PIN_MANAGER_Initialize:	
  3075  0077                     ?_OSCILLATOR_Initialize:	
  3076                           ; 1 bytes @ 0x0
  3077                           
  3078  0077                     ?_WDT_Initialize:	
  3079                           ; 1 bytes @ 0x0
  3080                           
  3081  0077                     ?_OPA1_Initialize:	
  3082                           ; 1 bytes @ 0x0
  3083                           
  3084  0077                     ?_OPA2_Initialize:	
  3085                           ; 1 bytes @ 0x0
  3086                           
  3087  0077                     ?_TMR2_Initialize:	
  3088                           ; 1 bytes @ 0x0
  3089                           
  3090  0077                     ?_EXT_INT_Initialize:	
  3091                           ; 1 bytes @ 0x0
  3092                           
  3093  0077                     ?_TMR0_Initialize:	
  3094                           ; 1 bytes @ 0x0
  3095                           
  3096  0077                     ?_EUSART_Initialize:	
  3097                           ; 1 bytes @ 0x0
  3098                           
  3099  0077                     ?_INT_ISR:	
  3100                           ; 1 bytes @ 0x0
  3101                           
  3102  0077                     ?_INT_CallBack:	
  3103                           ; 1 bytes @ 0x0
  3104                           
  3105  0077                     ?_DAC_Initialize:	
  3106                           ; 1 bytes @ 0x0
  3107                           
  3108  0077                     ?_SYSTEM_Initialize:	
  3109                           ; 1 bytes @ 0x0
  3110                           
  3111  0077                     ?_PIN_MANAGER_IOC:	
  3112                           ; 1 bytes @ 0x0
  3113                           
  3114  0077                     ??_PIN_MANAGER_IOC:	
  3115                           ; 1 bytes @ 0x0
  3116                           
  3117  0077                     ?_INTERRUPT_InterruptManager:	
  3118                           ; 1 bytes @ 0x0
  3119                           
  3120  0077                     ?_EUSART_Write:	
  3121                           ; 1 bytes @ 0x0
  3122                           
  3123  0077                     ?_putch:	
  3124                           ; 1 bytes @ 0x0
  3125                           
  3126  0077                     ?_INT_DefaultInterruptHandler:	
  3127                           ; 1 bytes @ 0x0
  3128                           
  3129  0077                     ??_INT_DefaultInterruptHandler:	
  3130                           ; 1 bytes @ 0x0
  3131                           
  3132  0077                     ?_initLED:	
  3133                           ; 1 bytes @ 0x0
  3134                           
  3135  0077                     ?_lowBattery:	
  3136                           ; 1 bytes @ 0x0
  3137                           
  3138  0077                     ?_startUp:	
  3139                           ; 1 bytes @ 0x0
  3140                           
  3141  0077                     ?_selectSomething:	
  3142                           ; 1 bytes @ 0x0
  3143                           
  3144  0077                     ?_selectFrequency:	
  3145                           ; 1 bytes @ 0x0
  3146                           
  3147  0077                     ?_process_remote_command:	
  3148                           ; 1 bytes @ 0x0
  3149                           
  3150  0077                     ?_main:	
  3151                           ; 1 bytes @ 0x0
  3152                           
  3153                           
  3154                           ; 1 bytes @ 0x0
  3155  0077                     	ds	1
  3156  0078                     INT_DefaultInterruptHandler@time:	
  3157                           
  3158                           ; 1 bytes @ 0x1
  3159  0078                     	ds	1
  3160  0079                     ??_PIN_MANAGER_Initialize:	
  3161  0079                     ??_OSCILLATOR_Initialize:	
  3162                           ; 1 bytes @ 0x2
  3163                           
  3164  0079                     ??_WDT_Initialize:	
  3165                           ; 1 bytes @ 0x2
  3166                           
  3167  0079                     ??_OPA1_Initialize:	
  3168                           ; 1 bytes @ 0x2
  3169                           
  3170  0079                     ??_OPA2_Initialize:	
  3171                           ; 1 bytes @ 0x2
  3172                           
  3173  0079                     ??_TMR2_Initialize:	
  3174                           ; 1 bytes @ 0x2
  3175                           
  3176  0079                     ??_EXT_INT_Initialize:	
  3177                           ; 1 bytes @ 0x2
  3178                           
  3179  0079                     ??_TMR0_Initialize:	
  3180                           ; 1 bytes @ 0x2
  3181                           
  3182  0079                     ??_EUSART_Initialize:	
  3183                           ; 1 bytes @ 0x2
  3184                           
  3185  0079                     ??_INT_ISR:	
  3186                           ; 1 bytes @ 0x2
  3187                           
  3188  0079                     ??_EUSART_SetFramingErrorHandler:	
  3189                           ; 1 bytes @ 0x2
  3190                           
  3191  0079                     ??_EUSART_SetOverrunErrorHandler:	
  3192                           ; 1 bytes @ 0x2
  3193                           
  3194  0079                     ??_EUSART_SetErrorHandler:	
  3195                           ; 1 bytes @ 0x2
  3196                           
  3197  0079                     ??_INT_CallBack:	
  3198                           ; 1 bytes @ 0x2
  3199                           
  3200  0079                     ??_DAC_Initialize:	
  3201                           ; 1 bytes @ 0x2
  3202                           
  3203  0079                     ??_SYSTEM_Initialize:	
  3204                           ; 1 bytes @ 0x2
  3205                           
  3206  0079                     ??_INTERRUPT_InterruptManager:	
  3207                           ; 1 bytes @ 0x2
  3208                           
  3209  0079                     ??_EUSART_Write:	
  3210                           ; 1 bytes @ 0x2
  3211                           
  3212  0079                     ??_INT_SetInterruptHandler:	
  3213                           ; 1 bytes @ 0x2
  3214                           
  3215  0079                     ??_initLED:	
  3216                           ; 1 bytes @ 0x2
  3217                           
  3218  0079                     ??_setLEDColor:	
  3219                           ; 1 bytes @ 0x2
  3220                           
  3221  0079                     ??___aldiv:	
  3222                           ; 1 bytes @ 0x2
  3223                           
  3224  0079                     ??___lwdiv:	
  3225                           ; 1 bytes @ 0x2
  3226                           
  3227  0079                     EUSART_Write@txData:	
  3228                           ; 1 bytes @ 0x2
  3229                           
  3230  0079                     setLEDColor@red:	
  3231                           ; 1 bytes @ 0x2
  3232                           
  3233                           
  3234                           ; 1 bytes @ 0x2
  3235  0079                     	ds	1
  3236  007A                     ??_putch:	
  3237  007A                     ??_battery_voltage:	
  3238                           ; 1 bytes @ 0x3
  3239                           
  3240  007A                     ??_lowBattery:	
  3241                           ; 1 bytes @ 0x3
  3242                           
  3243  007A                     ??_startUp:	
  3244                           ; 1 bytes @ 0x3
  3245                           
  3246  007A                     ??_selectSomething:	
  3247                           ; 1 bytes @ 0x3
  3248                           
  3249  007A                     ??___lwmod:	
  3250                           ; 1 bytes @ 0x3
  3251                           
  3252  007A                     putch@txData:	
  3253                           ; 1 bytes @ 0x3
  3254                           
  3255                           
  3256                           ; 1 bytes @ 0x3
  3257  007A                     	ds	1
  3258  007B                     ___lwmod@counter:	
  3259                           
  3260                           ; 1 bytes @ 0x4
  3261  007B                     	ds	1
  3262                           
  3263                           	psect	cstackBANK0
  3264  0020                     __pcstackBANK0:	
  3265  0020                     ?_EUSART_SetFramingErrorHandler:	
  3266  0020                     ?_EUSART_SetOverrunErrorHandler:	
  3267                           ; 1 bytes @ 0x0
  3268                           
  3269  0020                     ?_EUSART_SetErrorHandler:	
  3270                           ; 1 bytes @ 0x0
  3271                           
  3272  0020                     ?_INT_SetInterruptHandler:	
  3273                           ; 1 bytes @ 0x0
  3274                           
  3275  0020                     ?_setLEDColor:	
  3276                           ; 1 bytes @ 0x0
  3277                           
  3278  0020                     ?___lwdiv:	
  3279                           ; 1 bytes @ 0x0
  3280                           
  3281  0020                     ?___aldiv:	
  3282                           ; 2 bytes @ 0x0
  3283                           
  3284  0020                     setLEDColor@green:	
  3285                           ; 4 bytes @ 0x0
  3286                           
  3287  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3288                           ; 1 bytes @ 0x0
  3289                           
  3290  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3291                           ; 2 bytes @ 0x0
  3292                           
  3293  0020                     EUSART_SetErrorHandler@interruptHandler:	
  3294                           ; 2 bytes @ 0x0
  3295                           
  3296  0020                     INT_SetInterruptHandler@InterruptHandler:	
  3297                           ; 2 bytes @ 0x0
  3298                           
  3299  0020                     ___lwdiv@divisor:	
  3300                           ; 2 bytes @ 0x0
  3301                           
  3302  0020                     ___aldiv@divisor:	
  3303                           ; 2 bytes @ 0x0
  3304                           
  3305                           
  3306                           ; 4 bytes @ 0x0
  3307  0020                     	ds	1
  3308  0021                     setLEDColor@blue:	
  3309                           
  3310                           ; 1 bytes @ 0x1
  3311  0021                     	ds	1
  3312  0022                     startUp@i:	
  3313  0022                     ___lwdiv@dividend:	
  3314                           ; 2 bytes @ 0x2
  3315                           
  3316                           
  3317                           ; 2 bytes @ 0x2
  3318  0022                     	ds	2
  3319  0024                     ___lwdiv@counter:	
  3320  0024                     ___aldiv@dividend:	
  3321                           ; 1 bytes @ 0x4
  3322                           
  3323                           
  3324                           ; 4 bytes @ 0x4
  3325  0024                     	ds	1
  3326  0025                     ___lwdiv@quotient:	
  3327                           
  3328                           ; 2 bytes @ 0x5
  3329  0025                     	ds	2
  3330  0027                     ?___lwmod:	
  3331  0027                     ___lwmod@divisor:	
  3332                           ; 2 bytes @ 0x7
  3333                           
  3334                           
  3335                           ; 2 bytes @ 0x7
  3336  0027                     	ds	1
  3337  0028                     ___aldiv@counter:	
  3338                           
  3339                           ; 1 bytes @ 0x8
  3340  0028                     	ds	1
  3341  0029                     ___aldiv@sign:	
  3342  0029                     ___lwmod@dividend:	
  3343                           ; 1 bytes @ 0x9
  3344                           
  3345                           
  3346                           ; 2 bytes @ 0x9
  3347  0029                     	ds	1
  3348  002A                     ___aldiv@quotient:	
  3349                           
  3350                           ; 4 bytes @ 0xA
  3351  002A                     	ds	1
  3352  002B                     ?_printf:	
  3353  002B                     printf@f:	
  3354                           ; 2 bytes @ 0xB
  3355                           
  3356                           
  3357                           ; 2 bytes @ 0xB
  3358  002B                     	ds	3
  3359  002E                     ?_battery_voltage:	
  3360                           
  3361                           ; 2 bytes @ 0xE
  3362  002E                     	ds	1
  3363  002F                     ??_printf:	
  3364                           
  3365                           ; 1 bytes @ 0xF
  3366  002F                     	ds	4
  3367  0033                     printf@ap:	
  3368                           
  3369                           ; 1 bytes @ 0x13
  3370  0033                     	ds	1
  3371  0034                     printf@flag:	
  3372                           
  3373                           ; 1 bytes @ 0x14
  3374  0034                     	ds	1
  3375  0035                     printf@prec:	
  3376                           
  3377                           ; 1 bytes @ 0x15
  3378  0035                     	ds	1
  3379  0036                     printf@val:	
  3380                           
  3381                           ; 2 bytes @ 0x16
  3382  0036                     	ds	2
  3383  0038                     printf@c:	
  3384                           
  3385                           ; 1 bytes @ 0x18
  3386  0038                     	ds	1
  3387  0039                     ??_selectFrequency:	
  3388                           
  3389                           ; 1 bytes @ 0x19
  3390  0039                     	ds	2
  3391  003B                     ??_process_remote_command:	
  3392                           
  3393                           ; 1 bytes @ 0x1B
  3394  003B                     	ds	2
  3395  003D                     process_remote_command@code:	
  3396                           
  3397                           ; 1 bytes @ 0x1D
  3398  003D                     	ds	1
  3399  003E                     ??_main:	
  3400                           
  3401                           ; 1 bytes @ 0x1E
  3402  003E                     	ds	1
  3403                           
  3404                           	psect	maintext
  3405  03C1                     __pmaintext:	
  3406 ;;
  3407 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3408 ;;
  3409 ;; *************** function _main *****************
  3410 ;; Defined at:
  3411 ;;		line 310 in file "main.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;		None
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;		None
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      void 
  3418 ;; Registers used:
  3419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3420 ;; Tracked objects:
  3421 ;;		On entry : B1F/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3425 ;;      Params:         0       0       0       0       0       0       0       0
  3426 ;;      Locals:         0       0       0       0       0       0       0       0
  3427 ;;      Temps:          0       1       0       0       0       0       0       0
  3428 ;;      Totals:         0       1       0       0       0       0       0       0
  3429 ;;Total ram usage:        1 bytes
  3430 ;; Hardware stack levels required when called:    9
  3431 ;; This function calls:
  3432 ;;		_DAC_Initialize
  3433 ;;		_OPA1_Initialize
  3434 ;;		_OPA2_Initialize
  3435 ;;		_SYSTEM_Initialize
  3436 ;;		_battery_voltage
  3437 ;;		_initLED
  3438 ;;		_lowBattery
  3439 ;;		_process_remote_command
  3440 ;;		_startUp
  3441 ;; This function is called by:
  3442 ;;		Startup code after reset
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           
  3447                           ;psect for function _main
  3448  03C1                     _main:	
  3449                           
  3450                           ;main.c: 313: SYSTEM_Initialize();
  3451                           
  3452                           ;incstack = 0
  3453                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3454  03C1  3184  24C3  3183   	fcall	_SYSTEM_Initialize
  3455                           
  3456                           ;main.c: 314: DAC_Initialize();
  3457  03C4  3185  2573  3183   	fcall	_DAC_Initialize
  3458                           
  3459                           ;main.c: 315: OPA1_Initialize();
  3460  03C7  3185  258A  3183   	fcall	_OPA1_Initialize
  3461                           
  3462                           ;main.c: 316: OPA2_Initialize();
  3463  03CA  3185  2586  3183   	fcall	_OPA2_Initialize
  3464                           
  3465                           ;main.c: 317: initLED();
  3466  03CD  3182  22E2  3183   	fcall	_initLED
  3467                           
  3468                           ;main.c: 318: (INTCONbits.GIE = 1);
  3469  03D0  178B               	bsf	11,7	;volatile
  3470                           
  3471                           ;main.c: 319: (INTCONbits.PEIE = 1);
  3472  03D1  170B               	bsf	11,6	;volatile
  3473                           
  3474                           ;main.c: 320: startUp();
  3475  03D2  3183  2326  3183   	fcall	_startUp
  3476  03D5                     l483:	
  3477                           ;main.c: 331: while(1){
  3478                           
  3479                           
  3480                           ;main.c: 333: if ((int)battery_voltage() < 2500)
  3481  03D5  3183  23F1  3183   	fcall	_battery_voltage
  3482  03D8  0020               	movlb	0	; select bank0
  3483  03D9  082F               	movf	?_battery_voltage+1,w
  3484  03DA  3A80               	xorlw	128
  3485  03DB  00BE               	movwf	??_main
  3486  03DC  3089               	movlw	137
  3487  03DD  023E               	subwf	??_main,w
  3488  03DE  1D03               	skipz
  3489  03DF  2BE2               	goto	u1865
  3490  03E0  30C4               	movlw	196
  3491  03E1  022E               	subwf	?_battery_voltage,w
  3492  03E2                     u1865:	
  3493  03E2  1803               	skipnc
  3494  03E3  2BE7               	goto	l2451
  3495                           
  3496                           ;main.c: 334: {;main.c: 335: lowBattery();
  3497  03E4  3184  244C  3183   	fcall	_lowBattery
  3498  03E7                     l2451:	
  3499                           
  3500                           ;main.c: 337: };main.c: 343: if (STATE_DONE == ir_code.state){
  3501  03E7  3002               	movlw	2
  3502  03E8  0672               	xorwf	_ir_code+1,w
  3503  03E9  1D03               	btfss	3,2
  3504  03EA  2BD5               	goto	l483
  3505                           
  3506                           ;main.c: 361: process_remote_command(&ir_code);
  3507  03EB  3071               	movlw	(low (_ir_code| 0))& (0+255)
  3508  03EC  3180  2030  3183   	fcall	_process_remote_command
  3509                           
  3510                           ;main.c: 364: ir_code.state = STATE_RESET;
  3511  03EF  01F2               	clrf	_ir_code+1
  3512  03F0  2BD5               	goto	l483
  3513  03F1                     __end_of_main:	
  3514                           
  3515                           	psect	text1
  3516  0326                     __ptext1:	
  3517 ;; *************** function _startUp *****************
  3518 ;; Defined at:
  3519 ;;		line 162 in file "main.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  i               2    2[BANK0 ] int 
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, status,0, pclath, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3533 ;;      Params:         0       0       0       0       0       0       0       0
  3534 ;;      Locals:         0       2       0       0       0       0       0       0
  3535 ;;      Temps:          1       0       0       0       0       0       0       0
  3536 ;;      Totals:         1       2       0       0       0       0       0       0
  3537 ;;Total ram usage:        3 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    5
  3540 ;; This function calls:
  3541 ;;		_setLEDColor
  3542 ;; This function is called by:
  3543 ;;		_main
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           
  3548                           ;psect for function _startUp
  3549  0326                     _startUp:	
  3550                           
  3551                           ;main.c: 163: for (int i = 0; i < 5; i++){
  3552                           
  3553                           ;incstack = 0
  3554                           ; Regs used in _startUp: [wreg+status,2+status,0+pclath+cstack]
  3555  0326  0020               	movlb	0	; select bank0
  3556  0327  01A2               	clrf	startUp@i
  3557  0328  01A3               	clrf	startUp@i+1
  3558  0329                     l2361:	
  3559                           
  3560                           ;main.c: 164: setLEDColor(255, 0, 255);
  3561  0329  0020               	movlb	0	; select bank0
  3562  032A  01A0               	clrf	setLEDColor@green
  3563  032B  30FF               	movlw	255
  3564  032C  00FA               	movwf	??_startUp
  3565  032D  087A               	movf	??_startUp,w
  3566  032E  00A1               	movwf	setLEDColor@blue
  3567  032F  30FF               	movlw	255
  3568  0330  3185  2505  3183   	fcall	_setLEDColor
  3569                           
  3570                           ;main.c: 165: _delay((unsigned long)((100)*(4000000/4000.0)));
  3571  0333  3082               	movlw	130
  3572  0334  00FA               	movwf	??_startUp
  3573  0335  30DE               	movlw	222
  3574  0336                     u1887:	
  3575  0336  0B89               	decfsz	9,f
  3576  0337  2B36               	goto	u1887
  3577  0338  0BFA               	decfsz	??_startUp,f
  3578  0339  2B36               	goto	u1887
  3579                           
  3580                           ;main.c: 166: setLEDColor(0, 0, 0);
  3581  033A  0020               	movlb	0	; select bank0
  3582  033B  01A0               	clrf	setLEDColor@green
  3583  033C  01A1               	clrf	setLEDColor@blue
  3584  033D  3000               	movlw	0
  3585  033E  3185  2505  3183   	fcall	_setLEDColor
  3586                           
  3587                           ;main.c: 167: _delay((unsigned long)((100)*(4000000/4000.0)));
  3588  0341  3082               	movlw	130
  3589  0342  00FA               	movwf	??_startUp
  3590  0343  30DE               	movlw	222
  3591  0344                     u1897:	
  3592  0344  0B89               	decfsz	9,f
  3593  0345  2B44               	goto	u1897
  3594  0346  0BFA               	decfsz	??_startUp,f
  3595  0347  2B44               	goto	u1897
  3596  0348  3001               	movlw	1
  3597  0349  0020               	movlb	0	; select bank0
  3598  034A  07A2               	addwf	startUp@i,f
  3599  034B  3000               	movlw	0
  3600  034C  3DA3               	addwfc	startUp@i+1,f
  3601  034D  0823               	movf	startUp@i+1,w
  3602  034E  3A80               	xorlw	128
  3603  034F  00FA               	movwf	??_startUp
  3604  0350  3080               	movlw	128
  3605  0351  027A               	subwf	??_startUp,w
  3606  0352  1D03               	skipz
  3607  0353  2B56               	goto	u1785
  3608  0354  3005               	movlw	5
  3609  0355  0222               	subwf	startUp@i,w
  3610  0356                     u1785:	
  3611  0356  1C03               	skipc
  3612  0357  2B29               	goto	l2361
  3613                           
  3614                           ;main.c: 168: };main.c: 169: duty = 0;
  3615  0358  0020               	movlb	0	; select bank0
  3616  0359  01C4               	clrf	_duty
  3617  035A  0008               	return
  3618  035B                     __end_of_startUp:	
  3619                           
  3620                           	psect	text2
  3621  0030                     __ptext2:	
  3622 ;; *************** function _process_remote_command *****************
  3623 ;; Defined at:
  3624 ;;		line 219 in file "main.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  code            1    wreg     PTR struct .
  3627 ;;		 -> ir_code(6), 
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  code            1   29[BANK0 ] PTR struct .
  3630 ;;		 -> ir_code(6), 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3640 ;;      Params:         0       0       0       0       0       0       0       0
  3641 ;;      Locals:         0       1       0       0       0       0       0       0
  3642 ;;      Temps:          0       2       0       0       0       0       0       0
  3643 ;;      Totals:         0       3       0       0       0       0       0       0
  3644 ;;Total ram usage:        3 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    8
  3647 ;; This function calls:
  3648 ;;		_printf
  3649 ;;		_selectFrequency
  3650 ;;		_selectSomething
  3651 ;;		_setLEDColor
  3652 ;; This function is called by:
  3653 ;;		_main
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           
  3658                           ;psect for function _process_remote_command
  3659  0030                     _process_remote_command:	
  3660                           
  3661                           ;incstack = 0
  3662                           ; Regs used in _process_remote_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3663                           ;process_remote_command@code stored from wreg
  3664  0030  0020               	movlb	0	; select bank0
  3665  0031  00BD               	movwf	process_remote_command@code
  3666                           
  3667                           ;main.c: 220: setLEDColor(0, 0, 0);
  3668  0032  01A0               	clrf	setLEDColor@green
  3669  0033  01A1               	clrf	setLEDColor@blue
  3670  0034  3000               	movlw	0
  3671  0035  3185  2505  3180   	fcall	_setLEDColor
  3672                           
  3673                           ;main.c: 222: switch(code->command){
  3674  0038  28B0               	goto	l2433
  3675  0039                     l2371:	
  3676                           
  3677                           ;main.c: 224: setLEDColor(0, 0, 0);
  3678  0039  01A0               	clrf	setLEDColor@green
  3679  003A  01A1               	clrf	setLEDColor@blue
  3680  003B  3000               	movlw	0
  3681  003C  3185  2505  3180   	fcall	_setLEDColor
  3682                           
  3683                           ;main.c: 225: if (flag == 1){
  3684  003F  0020               	movlb	0	; select bank0
  3685  0040  0346               	decf	_flag,w
  3686  0041  1D03               	btfss	3,2
  3687  0042  2864               	goto	l2385
  3688                           
  3689                           ;main.c: 226: if (duty >= 0 && duty <=150){
  3690  0043  3097               	movlw	151
  3691  0044  0244               	subwf	_duty,w
  3692  0045  1803               	skipnc
  3693  0046  284D               	goto	l2379
  3694                           
  3695                           ;main.c: 227: duty = duty + 30;
  3696  0047  0844               	movf	_duty,w
  3697  0048  3E1E               	addlw	30
  3698  0049  00BB               	movwf	??_process_remote_command
  3699  004A  083B               	movf	??_process_remote_command,w
  3700  004B  00C4               	movwf	_duty
  3701                           
  3702                           ;main.c: 228: }
  3703  004C  2854               	goto	l2383
  3704  004D                     l2379:	
  3705                           
  3706                           ;main.c: 229: else {;main.c: 230: duty = 150;
  3707  004D  3096               	movlw	150
  3708  004E  00BB               	movwf	??_process_remote_command
  3709  004F  083B               	movf	??_process_remote_command,w
  3710  0050  00C4               	movwf	_duty
  3711                           
  3712                           ;main.c: 231: selectSomething();
  3713  0051  3182  2299  3180   	fcall	_selectSomething
  3714  0054                     l2383:	
  3715                           
  3716                           ;main.c: 232: };main.c: 235: printf("%d\n", (duty));
  3717  0054  307E               	movlw	low (STR_2| (0+32768))
  3718  0055  0020               	movlb	0	; select bank0
  3719  0056  00AB               	movwf	printf@f
  3720  0057  3085               	movlw	high (STR_2| (0+32768))
  3721  0058  00AC               	movwf	printf@f+1
  3722  0059  0844               	movf	_duty,w
  3723  005A  00BB               	movwf	??_process_remote_command
  3724  005B  01BC               	clrf	??_process_remote_command+1
  3725  005C  083B               	movf	??_process_remote_command,w
  3726  005D  00AD               	movwf	?_printf+2
  3727  005E  083C               	movf	??_process_remote_command+1,w
  3728  005F  00AE               	movwf	?_printf+3
  3729  0060  3180  20FF  3180   	fcall	_printf
  3730                           
  3731                           ;main.c: 236: }
  3732  0063  28DE               	goto	l2435
  3733  0064                     l2385:	
  3734                           
  3735                           ;main.c: 237: else if (flag == 2){
  3736  0064  3002               	movlw	2
  3737  0065  0646               	xorwf	_flag,w
  3738  0066  1903               	btfsc	3,2
  3739  0067  28DE               	goto	l2435
  3740  0068                     l2389:	
  3741                           
  3742                           ;main.c: 240: else{;main.c: 241: selectSomething();
  3743  0068  3182  2299  3180   	fcall	_selectSomething
  3744  006B  28DE               	goto	l2435
  3745  006C                     l2391:	
  3746                           
  3747                           ;main.c: 245: if (flag == 1){
  3748  006C  0346               	decf	_flag,w
  3749  006D  1D03               	btfss	3,2
  3750  006E  2864               	goto	l2385
  3751                           
  3752                           ;main.c: 246: if (duty >= 0 && duty <=150){
  3753  006F  3097               	movlw	151
  3754  0070  0244               	subwf	_duty,w
  3755  0071  1803               	skipnc
  3756  0072  2887               	goto	l2399
  3757                           
  3758                           ;main.c: 247: duty = duty - 30;
  3759  0073  0844               	movf	_duty,w
  3760  0074  3EE2               	addlw	226
  3761  0075  00BB               	movwf	??_process_remote_command
  3762  0076  083B               	movf	??_process_remote_command,w
  3763  0077  00C4               	movwf	_duty
  3764                           
  3765                           ;main.c: 248: printf("%d\n", (duty));
  3766  0078  307E               	movlw	low (STR_2| (0+32768))
  3767  0079  00AB               	movwf	printf@f
  3768  007A  3085               	movlw	high (STR_2| (0+32768))
  3769  007B  00AC               	movwf	printf@f+1
  3770  007C  0844               	movf	_duty,w
  3771  007D  00BB               	movwf	??_process_remote_command
  3772  007E  01BC               	clrf	??_process_remote_command+1
  3773  007F  083B               	movf	??_process_remote_command,w
  3774  0080  00AD               	movwf	?_printf+2
  3775  0081  083C               	movf	??_process_remote_command+1,w
  3776  0082  00AE               	movwf	?_printf+3
  3777  0083  3180  20FF  3180   	fcall	_printf
  3778                           
  3779                           ;main.c: 249: }
  3780  0086  28DE               	goto	l2435
  3781  0087                     l2399:	
  3782                           
  3783                           ;main.c: 250: else{;main.c: 251: duty = 150;
  3784  0087  3096               	movlw	150
  3785  0088  00BB               	movwf	??_process_remote_command
  3786  0089  083B               	movf	??_process_remote_command,w
  3787  008A  00C4               	movwf	_duty
  3788  008B  2868               	goto	l2389
  3789  008C                     l2409:	
  3790                           ;main.c: 257: else if (flag == 2){
  3791                           
  3792                           
  3793                           ;main.c: 265: selectFrequency();
  3794  008C  3184  2477  3180   	fcall	_selectFrequency
  3795                           
  3796                           ;main.c: 266: break;
  3797  008F  28DE               	goto	l2435
  3798  0090                     l2411:	
  3799                           
  3800                           ;main.c: 268: LED_red = 0;
  3801  0090  01C9               	clrf	_LED_red
  3802                           
  3803                           ;main.c: 269: LED_green = 130;
  3804  0091  3082               	movlw	130
  3805  0092  00BB               	movwf	??_process_remote_command
  3806  0093  083B               	movf	??_process_remote_command,w
  3807  0094  00C8               	movwf	_LED_green
  3808                           
  3809                           ;main.c: 270: LED_blue = 255;
  3810  0095  30FF               	movlw	255
  3811  0096  00BB               	movwf	??_process_remote_command
  3812  0097  083B               	movf	??_process_remote_command,w
  3813  0098  00C7               	movwf	_LED_blue
  3814                           
  3815                           ;main.c: 271: flag = 2;
  3816  0099  3002               	movlw	2
  3817  009A  00BB               	movwf	??_process_remote_command
  3818  009B  083B               	movf	??_process_remote_command,w
  3819  009C  00C6               	movwf	_flag
  3820                           
  3821                           ;main.c: 272: break;
  3822  009D  28DE               	goto	l2435
  3823  009E                     l2419:	
  3824                           
  3825                           ;main.c: 274: LED_red = 0;
  3826  009E  01C9               	clrf	_LED_red
  3827                           
  3828                           ;main.c: 275: LED_green = 255;
  3829  009F  30FF               	movlw	255
  3830  00A0  00BB               	movwf	??_process_remote_command
  3831  00A1  083B               	movf	??_process_remote_command,w
  3832  00A2  00C8               	movwf	_LED_green
  3833                           
  3834                           ;main.c: 276: LED_blue = 0;
  3835  00A3  01C7               	clrf	_LED_blue
  3836                           
  3837                           ;main.c: 277: printf("\n reset select");
  3838  00A4  30F6               	movlw	low (STR_4| (0+32768))
  3839  00A5  00AB               	movwf	printf@f
  3840  00A6  3084               	movlw	high (STR_4| (0+32768))
  3841  00A7  00AC               	movwf	printf@f+1
  3842  00A8  3180  20FF  3180   	fcall	_printf
  3843                           
  3844                           ;main.c: 278: flag = 0;
  3845  00AB  0020               	movlb	0	; select bank0
  3846  00AC  01C6               	clrf	_flag
  3847                           
  3848                           ;main.c: 279: break;
  3849  00AD  28DE               	goto	l2435
  3850  00AE                     l2429:	
  3851                           
  3852                           ;main.c: 281: duty = 0;
  3853  00AE  01C4               	clrf	_duty
  3854                           
  3855                           ;main.c: 282: break;
  3856  00AF  28DE               	goto	l2435
  3857  00B0                     l2433:	
  3858  00B0  0020               	movlb	0	; select bank0
  3859  00B1  083D               	movf	process_remote_command@code,w
  3860  00B2  3E03               	addlw	3
  3861  00B3  0086               	movwf	6
  3862  00B4  0187               	clrf	7
  3863  00B5  0801               	movf	1,w
  3864                           
  3865                           ; Switch size 1, requested type "simple"
  3866                           ; Number of cases is 13, Range of values is 8 to 176
  3867                           ; switch strategies available:
  3868                           ; Name         Instructions Cycles
  3869                           ; simple_byte           40    21 (average)
  3870                           ; jumptable            263     9 (fixed)
  3871                           ;	Chosen strategy is simple_byte
  3872  00B6  3A08               	xorlw	8	; case 8
  3873  00B7  1903               	skipnz
  3874  00B8  289E               	goto	l2419
  3875  00B9  3A18               	xorlw	24	; case 16
  3876  00BA  1903               	skipnz
  3877  00BB  2890               	goto	l2411
  3878  00BC  3A08               	xorlw	8	; case 24
  3879  00BD  1903               	skipnz
  3880  00BE  28DE               	goto	l2435
  3881  00BF  3A30               	xorlw	48	; case 40
  3882  00C0  1903               	skipnz
  3883  00C1  28DE               	goto	l2435
  3884  00C2  3A60               	xorlw	96	; case 72
  3885  00C3  1903               	skipnz
  3886  00C4  28DE               	goto	l2435
  3887  00C5  3A18               	xorlw	24	; case 80
  3888  00C6  1903               	skipnz
  3889  00C7  288C               	goto	l2409
  3890  00C8  3A08               	xorlw	8	; case 88
  3891  00C9  1903               	skipnz
  3892  00CA  28DE               	goto	l2435
  3893  00CB  3A30               	xorlw	48	; case 104
  3894  00CC  1903               	skipnz
  3895  00CD  28DE               	goto	l2435
  3896  00CE  3AE0               	xorlw	224	; case 136
  3897  00CF  1903               	skipnz
  3898  00D0  28AE               	goto	l2429
  3899  00D1  3A10               	xorlw	16	; case 152
  3900  00D2  1903               	skipnz
  3901  00D3  28DE               	goto	l2435
  3902  00D4  3A38               	xorlw	56	; case 160
  3903  00D5  1903               	skipnz
  3904  00D6  2839               	goto	l2371
  3905  00D7  3A08               	xorlw	8	; case 168
  3906  00D8  1903               	skipnz
  3907  00D9  28DE               	goto	l2435
  3908  00DA  3A18               	xorlw	24	; case 176
  3909  00DB  1903               	skipnz
  3910  00DC  286C               	goto	l2391
  3911  00DD  28DE               	goto	l2435
  3912  00DE                     l2435:	
  3913                           
  3914                           ;main.c: 301: setLEDColor(LED_red, LED_green, LED_blue);
  3915  00DE  0020               	movlb	0	; select bank0
  3916  00DF  0848               	movf	_LED_green,w
  3917  00E0  00BB               	movwf	??_process_remote_command
  3918  00E1  083B               	movf	??_process_remote_command,w
  3919  00E2  00A0               	movwf	setLEDColor@green
  3920  00E3  0847               	movf	_LED_blue,w
  3921  00E4  00BC               	movwf	??_process_remote_command+1
  3922  00E5  083C               	movf	??_process_remote_command+1,w
  3923  00E6  00A1               	movwf	setLEDColor@blue
  3924  00E7  0849               	movf	_LED_red,w
  3925  00E8  3185  2505  3180   	fcall	_setLEDColor
  3926                           
  3927                           ;main.c: 302: _delay((unsigned long)((1000)*(4000000/4000.0)));
  3928  00EB  3006               	movlw	6
  3929  00EC  0020               	movlb	0	; select bank0
  3930  00ED  00BC               	movwf	??_process_remote_command+1
  3931  00EE  3013               	movlw	19
  3932  00EF  00BB               	movwf	??_process_remote_command
  3933  00F0  30AD               	movlw	173
  3934  00F1                     u1907:	
  3935  00F1  0B89               	decfsz	9,f
  3936  00F2  28F1               	goto	u1907
  3937  00F3  0BBB               	decfsz	??_process_remote_command,f
  3938  00F4  28F1               	goto	u1907
  3939  00F5  0BBC               	decfsz	??_process_remote_command+1,f
  3940  00F6  28F1               	goto	u1907
  3941  00F7  3200               	nop2
  3942                           
  3943                           ;main.c: 303: setLEDColor(0, 0, 0);
  3944  00F8  0020               	movlb	0	; select bank0
  3945  00F9  01A0               	clrf	setLEDColor@green
  3946  00FA  01A1               	clrf	setLEDColor@blue
  3947  00FB  3000               	movlw	0
  3948  00FC  3185  2505         	fcall	_setLEDColor
  3949  00FE  0008               	return
  3950  00FF                     __end_of_process_remote_command:	
  3951                           
  3952                           	psect	text3
  3953  0299                     __ptext3:	
  3954 ;; *************** function _selectSomething *****************
  3955 ;; Defined at:
  3956 ;;		line 172 in file "main.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;		None
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;		None
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  1    wreg      void 
  3963 ;; Registers used:
  3964 ;;		wreg, status,2, status,0, pclath, cstack
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3970 ;;      Params:         0       0       0       0       0       0       0       0
  3971 ;;      Locals:         0       0       0       0       0       0       0       0
  3972 ;;      Temps:          2       0       0       0       0       0       0       0
  3973 ;;      Totals:         2       0       0       0       0       0       0       0
  3974 ;;Total ram usage:        2 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; Hardware stack levels required when called:    5
  3977 ;; This function calls:
  3978 ;;		_setLEDColor
  3979 ;; This function is called by:
  3980 ;;		_process_remote_command
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           
  3985                           ;psect for function _selectSomething
  3986  0299                     _selectSomething:	
  3987                           
  3988                           ;main.c: 174: setLEDColor(255, 0, 0);
  3989                           
  3990                           ;incstack = 0
  3991                           ; Regs used in _selectSomething: [wreg+status,2+status,0+pclath+cstack]
  3992  0299  0020               	movlb	0	; select bank0
  3993  029A  01A0               	clrf	setLEDColor@green
  3994  029B  01A1               	clrf	setLEDColor@blue
  3995  029C  30FF               	movlw	255
  3996  029D  3185  2505  3182   	fcall	_setLEDColor
  3997                           
  3998                           ;main.c: 175: _delay((unsigned long)((500)*(4000000/4000.0)));
  3999  02A0  3003               	movlw	3
  4000  02A1  00FB               	movwf	??_selectSomething+1
  4001  02A2  308A               	movlw	138
  4002  02A3  00FA               	movwf	??_selectSomething
  4003  02A4  3056               	movlw	86
  4004  02A5                     u1917:	
  4005  02A5  0B89               	decfsz	9,f
  4006  02A6  2AA5               	goto	u1917
  4007  02A7  0BFA               	decfsz	??_selectSomething,f
  4008  02A8  2AA5               	goto	u1917
  4009  02A9  0BFB               	decfsz	??_selectSomething+1,f
  4010  02AA  2AA5               	goto	u1917
  4011                           
  4012                           ;main.c: 176: setLEDColor(0, 0, 0);
  4013  02AB  0020               	movlb	0	; select bank0
  4014  02AC  01A0               	clrf	setLEDColor@green
  4015  02AD  01A1               	clrf	setLEDColor@blue
  4016  02AE  3000               	movlw	0
  4017  02AF  3185  2505  3182   	fcall	_setLEDColor
  4018                           
  4019                           ;main.c: 177: _delay((unsigned long)((500)*(4000000/4000.0)));
  4020  02B2  3003               	movlw	3
  4021  02B3  00FB               	movwf	??_selectSomething+1
  4022  02B4  308A               	movlw	138
  4023  02B5  00FA               	movwf	??_selectSomething
  4024  02B6  3056               	movlw	86
  4025  02B7                     u1927:	
  4026  02B7  0B89               	decfsz	9,f
  4027  02B8  2AB7               	goto	u1927
  4028  02B9  0BFA               	decfsz	??_selectSomething,f
  4029  02BA  2AB7               	goto	u1927
  4030  02BB  0BFB               	decfsz	??_selectSomething+1,f
  4031  02BC  2AB7               	goto	u1927
  4032                           
  4033                           ;main.c: 178: setLEDColor(255, 0, 0);
  4034  02BD  0020               	movlb	0	; select bank0
  4035  02BE  01A0               	clrf	setLEDColor@green
  4036  02BF  01A1               	clrf	setLEDColor@blue
  4037  02C0  30FF               	movlw	255
  4038  02C1  3185  2505  3182   	fcall	_setLEDColor
  4039                           
  4040                           ;main.c: 179: _delay((unsigned long)((500)*(4000000/4000.0)));
  4041  02C4  3003               	movlw	3
  4042  02C5  00FB               	movwf	??_selectSomething+1
  4043  02C6  308A               	movlw	138
  4044  02C7  00FA               	movwf	??_selectSomething
  4045  02C8  3056               	movlw	86
  4046  02C9                     u1937:	
  4047  02C9  0B89               	decfsz	9,f
  4048  02CA  2AC9               	goto	u1937
  4049  02CB  0BFA               	decfsz	??_selectSomething,f
  4050  02CC  2AC9               	goto	u1937
  4051  02CD  0BFB               	decfsz	??_selectSomething+1,f
  4052  02CE  2AC9               	goto	u1937
  4053                           
  4054                           ;main.c: 180: setLEDColor(0, 0, 0);
  4055  02CF  0020               	movlb	0	; select bank0
  4056  02D0  01A0               	clrf	setLEDColor@green
  4057  02D1  01A1               	clrf	setLEDColor@blue
  4058  02D2  3000               	movlw	0
  4059  02D3  3185  2505  3182   	fcall	_setLEDColor
  4060                           
  4061                           ;main.c: 181: _delay((unsigned long)((500)*(4000000/4000.0)));
  4062  02D6  3003               	movlw	3
  4063  02D7  00FB               	movwf	??_selectSomething+1
  4064  02D8  308A               	movlw	138
  4065  02D9  00FA               	movwf	??_selectSomething
  4066  02DA  3056               	movlw	86
  4067  02DB                     u1947:	
  4068  02DB  0B89               	decfsz	9,f
  4069  02DC  2ADB               	goto	u1947
  4070  02DD  0BFA               	decfsz	??_selectSomething,f
  4071  02DE  2ADB               	goto	u1947
  4072  02DF  0BFB               	decfsz	??_selectSomething+1,f
  4073  02E0  2ADB               	goto	u1947
  4074  02E1  0008               	return
  4075  02E2                     __end_of_selectSomething:	
  4076                           
  4077                           	psect	text4
  4078  0477                     __ptext4:	
  4079 ;; *************** function _selectFrequency *****************
  4080 ;; Defined at:
  4081 ;;		line 184 in file "main.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;		None
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4095 ;;      Params:         0       0       0       0       0       0       0       0
  4096 ;;      Locals:         0       0       0       0       0       0       0       0
  4097 ;;      Temps:          0       2       0       0       0       0       0       0
  4098 ;;      Totals:         0       2       0       0       0       0       0       0
  4099 ;;Total ram usage:        2 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    7
  4102 ;; This function calls:
  4103 ;;		_printf
  4104 ;;		_setLEDColor
  4105 ;; This function is called by:
  4106 ;;		_process_remote_command
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           
  4111                           ;psect for function _selectFrequency
  4112  0477                     _selectFrequency:	
  4113                           
  4114                           ;main.c: 185: flag = 1;
  4115                           
  4116                           ;incstack = 0
  4117                           ; Regs used in _selectFrequency: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4118  0477  0020               	movlb	0	; select bank0
  4119  0478  01C6               	clrf	_flag
  4120  0479  0AC6               	incf	_flag,f
  4121                           
  4122                           ;main.c: 186: setLEDColor(255, 0, 255);
  4123  047A  01A0               	clrf	setLEDColor@green
  4124  047B  30FF               	movlw	255
  4125  047C  00B9               	movwf	??_selectFrequency
  4126  047D  0839               	movf	??_selectFrequency,w
  4127  047E  00A1               	movwf	setLEDColor@blue
  4128  047F  30FF               	movlw	255
  4129  0480  3185  2505  3184   	fcall	_setLEDColor
  4130                           
  4131                           ;main.c: 187: _delay((unsigned long)((1000)*(4000000/4000.0)));
  4132  0483  3006               	movlw	6
  4133  0484  0020               	movlb	0	; select bank0
  4134  0485  00BA               	movwf	??_selectFrequency+1
  4135  0486  3013               	movlw	19
  4136  0487  00B9               	movwf	??_selectFrequency
  4137  0488  30AD               	movlw	173
  4138  0489                     u1957:	
  4139  0489  0B89               	decfsz	9,f
  4140  048A  2C89               	goto	u1957
  4141  048B  0BB9               	decfsz	??_selectFrequency,f
  4142  048C  2C89               	goto	u1957
  4143  048D  0BBA               	decfsz	??_selectFrequency+1,f
  4144  048E  2C89               	goto	u1957
  4145  048F  3200               	nop2
  4146                           
  4147                           ;main.c: 188: setLEDColor(0, 0, 0);
  4148  0490  0020               	movlb	0	; select bank0
  4149  0491  01A0               	clrf	setLEDColor@green
  4150  0492  01A1               	clrf	setLEDColor@blue
  4151  0493  3000               	movlw	0
  4152  0494  3185  2505  3184   	fcall	_setLEDColor
  4153                           
  4154                           ;main.c: 189: printf("\n Frequency selected");
  4155  0497  30E1               	movlw	low (STR_1| (0+32768))
  4156  0498  0020               	movlb	0	; select bank0
  4157  0499  00AB               	movwf	printf@f
  4158  049A  3084               	movlw	high (STR_1| (0+32768))
  4159  049B  00AC               	movwf	printf@f+1
  4160  049C  3180  20FF         	fcall	_printf
  4161  049E  0008               	return
  4162  049F                     __end_of_selectFrequency:	
  4163                           
  4164                           	psect	text5
  4165  00FF                     __ptext5:	
  4166 ;; *************** function _printf *****************
  4167 ;; Defined at:
  4168 ;;		line 477 in file "/Applications/microchip/xc8/v2.10/pic/sources/c90/common/doprnt.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  f               2   11[BANK0 ] PTR const unsigned char 
  4171 ;;		 -> STR_4(15), STR_3(4), STR_2(4), STR_1(21), 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  tmpval          4    0        struct .
  4174 ;;  val             2   22[BANK0 ] unsigned int 
  4175 ;;  cp              2    0        PTR const unsigned char 
  4176 ;;  len             2    0        unsigned int 
  4177 ;;  c               1   24[BANK0 ] unsigned char 
  4178 ;;  prec            1   21[BANK0 ] char 
  4179 ;;  flag            1   20[BANK0 ] unsigned char 
  4180 ;;  ap              1   19[BANK0 ] PTR void [1]
  4181 ;;		 -> ?_printf(2), 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  2   11[BANK0 ] int 
  4184 ;; Registers used:
  4185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4191 ;;      Params:         0       4       0       0       0       0       0       0
  4192 ;;      Locals:         0       6       0       0       0       0       0       0
  4193 ;;      Temps:          0       4       0       0       0       0       0       0
  4194 ;;      Totals:         0      14       0       0       0       0       0       0
  4195 ;;Total ram usage:       14 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:    6
  4198 ;; This function calls:
  4199 ;;		___lwdiv
  4200 ;;		___lwmod
  4201 ;;		_putch
  4202 ;; This function is called by:
  4203 ;;		_selectFrequency
  4204 ;;		_process_remote_command
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function _printf
  4210  00FF                     _printf:	
  4211                           
  4212                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  4213                           
  4214                           ;incstack = 0
  4215                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4216  00FF  302D               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4217  0100  0020               	movlb	0	; select bank0
  4218  0101  00AF               	movwf	??_printf
  4219  0102  082F               	movf	??_printf,w
  4220  0103  00B3               	movwf	printf@ap
  4221  0104                     l2237:	
  4222                           ;doprnt.c: 553: while((c = *f++)) {
  4223                           
  4224  0104  0020               	movlb	0	; select bank0
  4225  0105  082C               	movf	printf@f+1,w
  4226  0106  00B0               	movwf	??_printf+1
  4227  0107  082B               	movf	printf@f,w
  4228  0108  00AF               	movwf	??_printf
  4229  0109  0AAB               	incf	printf@f,f
  4230  010A  1903               	skipnz
  4231  010B  0AAC               	incf	printf@f+1,f
  4232  010C  082F               	movf	??_printf,w
  4233  010D  0084               	movwf	4
  4234  010E  0830               	movf	??_printf+1,w
  4235  010F  0085               	movwf	5
  4236  0110  0800               	movf	0,w	;code access
  4237  0111  00B1               	movwf	??_printf+2
  4238  0112  0831               	movf	??_printf+2,w
  4239  0113  00B8               	movwf	printf@c
  4240  0114  0838               	movf	printf@c,w
  4241  0115  1903               	btfsc	3,2
  4242  0116  0008               	return
  4243                           
  4244                           ;doprnt.c: 555: if(c != '%')
  4245  0117  3025               	movlw	37
  4246  0118  0638               	xorwf	printf@c,w
  4247  0119  1903               	btfsc	3,2
  4248  011A  2920               	goto	l2197
  4249                           
  4250                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  4251  011B  0838               	movf	printf@c,w
  4252  011C  3185  2579  3180   	fcall	_putch
  4253                           
  4254                           ;doprnt.c: 559: continue;
  4255  011F  2904               	goto	l2237
  4256  0120                     l2197:	
  4257                           
  4258                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  4259  0120  01B4               	clrf	printf@flag
  4260                           
  4261                           ;doprnt.c: 661: switch(c = *f++) {
  4262  0121  082C               	movf	printf@f+1,w
  4263  0122  00B0               	movwf	??_printf+1
  4264  0123  082B               	movf	printf@f,w
  4265  0124  00AF               	movwf	??_printf
  4266  0125  0AAB               	incf	printf@f,f
  4267  0126  1903               	skipnz
  4268  0127  0AAC               	incf	printf@f+1,f
  4269  0128  082F               	movf	??_printf,w
  4270  0129  0084               	movwf	4
  4271  012A  0830               	movf	??_printf+1,w
  4272  012B  0085               	movwf	5
  4273  012C  0800               	movf	0,w	;code access
  4274  012D  00B8               	movwf	printf@c
  4275                           
  4276                           ; Switch size 1, requested type "simple"
  4277                           ; Number of cases is 3, Range of values is 0 to 105
  4278                           ; switch strategies available:
  4279                           ; Name         Instructions Cycles
  4280                           ; simple_byte           10     6 (average)
  4281                           ; direct_byte          218     6 (fixed)
  4282                           ; jumptable            260     6 (fixed)
  4283                           ;	Chosen strategy is simple_byte
  4284  012E  3A00               	xorlw	0	; case 0
  4285  012F  1903               	skipnz
  4286  0130  29B1               	goto	l582
  4287  0131  3A64               	xorlw	100	; case 100
  4288  0132  1903               	skipnz
  4289  0133  2938               	goto	l2203
  4290  0134  3A0D               	xorlw	13	; case 105
  4291  0135  1903               	skipnz
  4292  0136  2938               	goto	l2203
  4293  0137  2904               	goto	l2237
  4294  0138                     l2203:	
  4295                           
  4296                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  4297  0138  0833               	movf	printf@ap,w
  4298  0139  0086               	movwf	6
  4299  013A  0187               	clrf	7
  4300  013B  3F40               	moviw [0]fsr1
  4301  013C  00B6               	movwf	printf@val
  4302  013D  3F41               	moviw [1]fsr1
  4303  013E  00B7               	movwf	printf@val+1
  4304  013F  3002               	movlw	2
  4305  0140  00AF               	movwf	??_printf
  4306  0141  082F               	movf	??_printf,w
  4307  0142  07B3               	addwf	printf@ap,f
  4308                           
  4309                           ;doprnt.c: 1287: if((int)val < 0) {
  4310  0143  1FB7               	btfss	printf@val+1,7
  4311  0144  294E               	goto	l2213
  4312                           
  4313                           ;doprnt.c: 1288: flag |= 0x03;
  4314  0145  3003               	movlw	3
  4315  0146  00AF               	movwf	??_printf
  4316  0147  082F               	movf	??_printf,w
  4317  0148  04B4               	iorwf	printf@flag,f
  4318                           
  4319                           ;doprnt.c: 1289: val = -val;
  4320  0149  09B6               	comf	printf@val,f
  4321  014A  09B7               	comf	printf@val+1,f
  4322  014B  0AB6               	incf	printf@val,f
  4323  014C  1903               	skipnz
  4324  014D  0AB7               	incf	printf@val+1,f
  4325  014E                     l2213:	
  4326                           
  4327                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  4328  014E  01B8               	clrf	printf@c
  4329  014F  0AB8               	incf	printf@c,f
  4330  0150                     l2219:	
  4331                           
  4332                           ;doprnt.c: 1332: if(val < dpowers[c])
  4333  0150  0838               	movf	printf@c,w
  4334  0151  00AF               	movwf	??_printf
  4335  0152  01B0               	clrf	??_printf+1
  4336  0153  35AF               	lslf	??_printf,f
  4337  0154  0DB0               	rlf	??_printf+1,f
  4338  0155  3029               	movlw	low (_dpowers| (0+32768))
  4339  0156  072F               	addwf	??_printf,w
  4340  0157  0084               	movwf	4
  4341  0158  3085               	movlw	high (_dpowers| (0+32768))
  4342  0159  3D30               	addwfc	??_printf+1,w
  4343  015A  0085               	movwf	5
  4344  015B  3F00               	moviw [0]fsr0
  4345  015C  00B1               	movwf	??_printf+2
  4346  015D  3F01               	moviw [1]fsr0
  4347  015E  00B2               	movwf	??_printf+3
  4348  015F  0832               	movf	??_printf+3,w
  4349  0160  0237               	subwf	printf@val+1,w
  4350  0161  1D03               	skipz
  4351  0162  2965               	goto	u1615
  4352  0163  0831               	movf	??_printf+2,w
  4353  0164  0236               	subwf	printf@val,w
  4354  0165                     u1615:	
  4355  0165  1C03               	btfss	3,0
  4356  0166  296F               	goto	l2225
  4357  0167  3001               	movlw	1
  4358  0168  00AF               	movwf	??_printf
  4359  0169  082F               	movf	??_printf,w
  4360  016A  07B8               	addwf	printf@c,f
  4361  016B  3005               	movlw	5
  4362  016C  0638               	xorwf	printf@c,w
  4363  016D  1D03               	btfss	3,2
  4364  016E  2950               	goto	l2219
  4365  016F                     l2225:	
  4366                           
  4367                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  4368  016F  0834               	movf	printf@flag,w
  4369  0170  3903               	andlw	3
  4370  0171  1903               	btfsc	3,2
  4371  0172  2977               	goto	l2229
  4372                           
  4373                           ;doprnt.c: 1465: (putch('-') );
  4374  0173  302D               	movlw	45
  4375  0174  3185  2579  3180   	fcall	_putch
  4376  0177                     l2229:	
  4377                           
  4378                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  4379  0177  0020               	movlb	0	; select bank0
  4380  0178  0838               	movf	printf@c,w
  4381  0179  00AF               	movwf	??_printf
  4382  017A  082F               	movf	??_printf,w
  4383  017B  00B5               	movwf	printf@prec
  4384  017C                     l2235:	
  4385                           ;doprnt.c: 1500: while(prec--) {
  4386                           
  4387  017C  30FF               	movlw	255
  4388  017D  0020               	movlb	0	; select bank0
  4389  017E  00AF               	movwf	??_printf
  4390  017F  082F               	movf	??_printf,w
  4391  0180  07B5               	addwf	printf@prec,f
  4392  0181  0A35               	incf	printf@prec,w
  4393  0182  1903               	btfsc	3,2
  4394  0183  2904               	goto	l2237
  4395                           
  4396                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  4397  0184  300A               	movlw	10
  4398  0185  00A7               	movwf	___lwmod@divisor
  4399  0186  3000               	movlw	0
  4400  0187  00A8               	movwf	___lwmod@divisor+1
  4401  0188  0835               	movf	printf@prec,w
  4402  0189  00AF               	movwf	??_printf
  4403  018A  01B0               	clrf	??_printf+1
  4404  018B  35AF               	lslf	??_printf,f
  4405  018C  0DB0               	rlf	??_printf+1,f
  4406  018D  3029               	movlw	low (_dpowers| (0+32768))
  4407  018E  072F               	addwf	??_printf,w
  4408  018F  0084               	movwf	4
  4409  0190  3085               	movlw	high (_dpowers| (0+32768))
  4410  0191  3D30               	addwfc	??_printf+1,w
  4411  0192  0085               	movwf	5
  4412  0193  3F00               	moviw [0]fsr0
  4413  0194  00A0               	movwf	___lwdiv@divisor
  4414  0195  3F01               	moviw [1]fsr0
  4415  0196  00A1               	movwf	___lwdiv@divisor+1
  4416  0197  0837               	movf	printf@val+1,w
  4417  0198  00A3               	movwf	___lwdiv@dividend+1
  4418  0199  0836               	movf	printf@val,w
  4419  019A  00A2               	movwf	___lwdiv@dividend
  4420  019B  3183  235B  3180   	fcall	___lwdiv
  4421  019E  0020               	movlb	0	; select bank0
  4422  019F  0821               	movf	?___lwdiv+1,w
  4423  01A0  00AA               	movwf	___lwmod@dividend+1
  4424  01A1  0820               	movf	?___lwdiv,w
  4425  01A2  00A9               	movwf	___lwmod@dividend
  4426  01A3  3184  241F  3180   	fcall	___lwmod
  4427  01A6  0020               	movlb	0	; select bank0
  4428  01A7  0827               	movf	?___lwmod,w
  4429  01A8  3E30               	addlw	48
  4430  01A9  00B1               	movwf	??_printf+2
  4431  01AA  0831               	movf	??_printf+2,w
  4432  01AB  00B8               	movwf	printf@c
  4433                           
  4434                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  4435  01AC  0838               	movf	printf@c,w
  4436  01AD  3185  2579  3180   	fcall	_putch
  4437  01B0  297C               	goto	l2235
  4438  01B1                     l582:	
  4439  01B1  0008               	return
  4440  01B2                     __end_of_printf:	
  4441                           
  4442                           	psect	text6
  4443  0579                     __ptext6:	
  4444 ;; *************** function _putch *****************
  4445 ;; Defined at:
  4446 ;;		line 146 in file "mcc_generated_files/eusart.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  txData          1    wreg     unsigned char 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  txData          1    3[COMMON] unsigned char 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, status,0, pclath, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4460 ;;      Params:         0       0       0       0       0       0       0       0
  4461 ;;      Locals:         1       0       0       0       0       0       0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0       0
  4463 ;;      Totals:         1       0       0       0       0       0       0       0
  4464 ;;Total ram usage:        1 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    5
  4467 ;; This function calls:
  4468 ;;		_EUSART_Write
  4469 ;; This function is called by:
  4470 ;;		_printf
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           
  4475                           ;psect for function _putch
  4476  0579                     _putch:	
  4477                           
  4478                           ;incstack = 0
  4479                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4480                           ;putch@txData stored from wreg
  4481  0579  00FA               	movwf	putch@txData
  4482                           
  4483                           ;eusart.c: 148: EUSART_Write(txData);
  4484  057A  087A               	movf	putch@txData,w
  4485  057B  3185  253D         	fcall	_EUSART_Write
  4486  057D  0008               	return
  4487  057E                     __end_of_putch:	
  4488                           
  4489                           	psect	text7
  4490  053D                     __ptext7:	
  4491 ;; *************** function _EUSART_Write *****************
  4492 ;; Defined at:
  4493 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  txData          1    wreg     unsigned char 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  txData          1    2[COMMON] unsigned char 
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      void 
  4500 ;; Registers used:
  4501 ;;		wreg
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4507 ;;      Params:         0       0       0       0       0       0       0       0
  4508 ;;      Locals:         1       0       0       0       0       0       0       0
  4509 ;;      Temps:          0       0       0       0       0       0       0       0
  4510 ;;      Totals:         1       0       0       0       0       0       0       0
  4511 ;;Total ram usage:        1 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:    4
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_putch
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           
  4522                           ;psect for function _EUSART_Write
  4523  053D                     _EUSART_Write:	
  4524                           
  4525                           ;incstack = 0
  4526                           ; Regs used in _EUSART_Write: [wreg]
  4527                           ;EUSART_Write@txData stored from wreg
  4528  053D  00F9               	movwf	EUSART_Write@txData
  4529  053E                     l197:	
  4530                           ;eusart.c: 135: {
  4531                           
  4532  053E  0020               	movlb	0	; select bank0
  4533  053F  1E11               	btfss	17,4	;volatile
  4534  0540  2D3E               	goto	l197
  4535                           
  4536                           ;eusart.c: 136: };eusart.c: 138: TX1REG = txData;
  4537  0541  0879               	movf	EUSART_Write@txData,w
  4538  0542  0023               	movlb	3	; select bank3
  4539  0543  009A               	movwf	26	;volatile
  4540  0544  0008               	return
  4541  0545                     __end_of_EUSART_Write:	
  4542                           
  4543                           	psect	text8
  4544  041F                     __ptext8:	
  4545 ;; *************** function ___lwmod *****************
  4546 ;; Defined at:
  4547 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c90/common/lwmod.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;  divisor         2    7[BANK0 ] unsigned int 
  4550 ;;  dividend        2    9[BANK0 ] unsigned int 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  counter         1    4[COMMON] unsigned char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  2    7[BANK0 ] unsigned int 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4562 ;;      Params:         0       4       0       0       0       0       0       0
  4563 ;;      Locals:         1       0       0       0       0       0       0       0
  4564 ;;      Temps:          1       0       0       0       0       0       0       0
  4565 ;;      Totals:         2       4       0       0       0       0       0       0
  4566 ;;Total ram usage:        6 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    4
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_printf
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           
  4577                           ;psect for function ___lwmod
  4578  041F                     ___lwmod:	
  4579                           
  4580                           ;incstack = 0
  4581                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4582  041F  0020               	movlb	0	; select bank0
  4583  0420  0827               	movf	___lwmod@divisor,w
  4584  0421  0428               	iorwf	___lwmod@divisor+1,w
  4585  0422  1903               	btfsc	3,2
  4586  0423  2C47               	goto	l2181
  4587  0424  01FB               	clrf	___lwmod@counter
  4588  0425  0AFB               	incf	___lwmod@counter,f
  4589  0426                     l2171:	
  4590  0426  1BA8               	btfsc	___lwmod@divisor+1,7
  4591  0427  2C32               	goto	l2173
  4592  0428  3001               	movlw	1
  4593  0429                     u1545:	
  4594  0429  35A7               	lslf	___lwmod@divisor,f
  4595  042A  0DA8               	rlf	___lwmod@divisor+1,f
  4596  042B  0B89               	decfsz	9,f
  4597  042C  2C29               	goto	u1545
  4598  042D  3001               	movlw	1
  4599  042E  00FA               	movwf	??___lwmod
  4600  042F  087A               	movf	??___lwmod,w
  4601  0430  07FB               	addwf	___lwmod@counter,f
  4602  0431  2C26               	goto	l2171
  4603  0432                     l2173:	
  4604  0432  0828               	movf	___lwmod@divisor+1,w
  4605  0433  022A               	subwf	___lwmod@dividend+1,w
  4606  0434  1D03               	skipz
  4607  0435  2C38               	goto	u1565
  4608  0436  0827               	movf	___lwmod@divisor,w
  4609  0437  0229               	subwf	___lwmod@dividend,w
  4610  0438                     u1565:	
  4611  0438  1C03               	skipc
  4612  0439  2C3E               	goto	l2177
  4613  043A  0827               	movf	___lwmod@divisor,w
  4614  043B  02A9               	subwf	___lwmod@dividend,f
  4615  043C  0828               	movf	___lwmod@divisor+1,w
  4616  043D  3BAA               	subwfb	___lwmod@dividend+1,f
  4617  043E                     l2177:	
  4618  043E  3001               	movlw	1
  4619  043F                     u1575:	
  4620  043F  36A8               	lsrf	___lwmod@divisor+1,f
  4621  0440  0CA7               	rrf	___lwmod@divisor,f
  4622  0441  0B89               	decfsz	9,f
  4623  0442  2C3F               	goto	u1575
  4624  0443  3001               	movlw	1
  4625  0444  02FB               	subwf	___lwmod@counter,f
  4626  0445  1D03               	btfss	3,2
  4627  0446  2C32               	goto	l2173
  4628  0447                     l2181:	
  4629  0447  082A               	movf	___lwmod@dividend+1,w
  4630  0448  00A8               	movwf	?___lwmod+1
  4631  0449  0829               	movf	___lwmod@dividend,w
  4632  044A  00A7               	movwf	?___lwmod
  4633  044B  0008               	return
  4634  044C                     __end_of___lwmod:	
  4635                           
  4636                           	psect	text9
  4637  035B                     __ptext9:	
  4638 ;; *************** function ___lwdiv *****************
  4639 ;; Defined at:
  4640 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c90/common/lwdiv.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  divisor         2    0[BANK0 ] unsigned int 
  4643 ;;  dividend        2    2[BANK0 ] unsigned int 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  quotient        2    5[BANK0 ] unsigned int 
  4646 ;;  counter         1    4[BANK0 ] unsigned char 
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  2    0[BANK0 ] unsigned int 
  4649 ;; Registers used:
  4650 ;;		wreg, status,2, status,0
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4656 ;;      Params:         0       4       0       0       0       0       0       0
  4657 ;;      Locals:         0       3       0       0       0       0       0       0
  4658 ;;      Temps:          1       0       0       0       0       0       0       0
  4659 ;;      Totals:         1       7       0       0       0       0       0       0
  4660 ;;Total ram usage:        8 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; Hardware stack levels required when called:    4
  4663 ;; This function calls:
  4664 ;;		Nothing
  4665 ;; This function is called by:
  4666 ;;		_printf
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           
  4671                           ;psect for function ___lwdiv
  4672  035B                     ___lwdiv:	
  4673                           
  4674                           ;incstack = 0
  4675                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4676  035B  0020               	movlb	0	; select bank0
  4677  035C  01A5               	clrf	___lwdiv@quotient
  4678  035D  01A6               	clrf	___lwdiv@quotient+1
  4679  035E  0820               	movf	___lwdiv@divisor,w
  4680  035F  0421               	iorwf	___lwdiv@divisor+1,w
  4681  0360  1903               	btfsc	3,2
  4682  0361  2B8B               	goto	l2159
  4683  0362  01A4               	clrf	___lwdiv@counter
  4684  0363  0AA4               	incf	___lwdiv@counter,f
  4685  0364                     l2147:	
  4686  0364  1BA1               	btfsc	___lwdiv@divisor+1,7
  4687  0365  2B70               	goto	l2149
  4688  0366  3001               	movlw	1
  4689  0367                     u1475:	
  4690  0367  35A0               	lslf	___lwdiv@divisor,f
  4691  0368  0DA1               	rlf	___lwdiv@divisor+1,f
  4692  0369  0B89               	decfsz	9,f
  4693  036A  2B67               	goto	u1475
  4694  036B  3001               	movlw	1
  4695  036C  00F9               	movwf	??___lwdiv
  4696  036D  0879               	movf	??___lwdiv,w
  4697  036E  07A4               	addwf	___lwdiv@counter,f
  4698  036F  2B64               	goto	l2147
  4699  0370                     l2149:	
  4700  0370  3001               	movlw	1
  4701  0371                     u1495:	
  4702  0371  35A5               	lslf	___lwdiv@quotient,f
  4703  0372  0DA6               	rlf	___lwdiv@quotient+1,f
  4704  0373  0B89               	decfsz	9,f
  4705  0374  2B71               	goto	u1495
  4706  0375  0821               	movf	___lwdiv@divisor+1,w
  4707  0376  0223               	subwf	___lwdiv@dividend+1,w
  4708  0377  1D03               	skipz
  4709  0378  2B7B               	goto	u1505
  4710  0379  0820               	movf	___lwdiv@divisor,w
  4711  037A  0222               	subwf	___lwdiv@dividend,w
  4712  037B                     u1505:	
  4713  037B  1C03               	skipc
  4714  037C  2B82               	goto	l2155
  4715  037D  0820               	movf	___lwdiv@divisor,w
  4716  037E  02A2               	subwf	___lwdiv@dividend,f
  4717  037F  0821               	movf	___lwdiv@divisor+1,w
  4718  0380  3BA3               	subwfb	___lwdiv@dividend+1,f
  4719  0381  1425               	bsf	___lwdiv@quotient,0
  4720  0382                     l2155:	
  4721  0382  3001               	movlw	1
  4722  0383                     u1515:	
  4723  0383  36A1               	lsrf	___lwdiv@divisor+1,f
  4724  0384  0CA0               	rrf	___lwdiv@divisor,f
  4725  0385  0B89               	decfsz	9,f
  4726  0386  2B83               	goto	u1515
  4727  0387  3001               	movlw	1
  4728  0388  02A4               	subwf	___lwdiv@counter,f
  4729  0389  1D03               	btfss	3,2
  4730  038A  2B70               	goto	l2149
  4731  038B                     l2159:	
  4732  038B  0826               	movf	___lwdiv@quotient+1,w
  4733  038C  00A1               	movwf	?___lwdiv+1
  4734  038D  0825               	movf	___lwdiv@quotient,w
  4735  038E  00A0               	movwf	?___lwdiv
  4736  038F  0008               	return
  4737  0390                     __end_of___lwdiv:	
  4738                           
  4739                           	psect	text10
  4740  044C                     __ptext10:	
  4741 ;; *************** function _lowBattery *****************
  4742 ;; Defined at:
  4743 ;;		line 155 in file "main.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;		None
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;		None
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0, pclath, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4757 ;;      Params:         0       0       0       0       0       0       0       0
  4758 ;;      Locals:         0       0       0       0       0       0       0       0
  4759 ;;      Temps:          2       0       0       0       0       0       0       0
  4760 ;;      Totals:         2       0       0       0       0       0       0       0
  4761 ;;Total ram usage:        2 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    5
  4764 ;; This function calls:
  4765 ;;		_setLEDColor
  4766 ;; This function is called by:
  4767 ;;		_main
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           
  4772                           ;psect for function _lowBattery
  4773  044C                     _lowBattery:	
  4774                           
  4775                           ;main.c: 156: setLEDColor(0, 255, 255);
  4776                           
  4777                           ;incstack = 0
  4778                           ; Regs used in _lowBattery: [wreg+status,2+status,0+pclath+cstack]
  4779  044C  30FF               	movlw	255
  4780  044D  00FA               	movwf	??_lowBattery
  4781  044E  087A               	movf	??_lowBattery,w
  4782  044F  0020               	movlb	0	; select bank0
  4783  0450  00A0               	movwf	setLEDColor@green
  4784  0451  30FF               	movlw	255
  4785  0452  00FB               	movwf	??_lowBattery+1
  4786  0453  087B               	movf	??_lowBattery+1,w
  4787  0454  00A1               	movwf	setLEDColor@blue
  4788  0455  3000               	movlw	0
  4789  0456  3185  2505  3184   	fcall	_setLEDColor
  4790                           
  4791                           ;main.c: 157: _delay((unsigned long)((250)*(4000000/4000.0)));
  4792  0459  3002               	movlw	2
  4793  045A  00FB               	movwf	??_lowBattery+1
  4794  045B  3045               	movlw	69
  4795  045C  00FA               	movwf	??_lowBattery
  4796  045D  30AA               	movlw	170
  4797  045E                     u1967:	
  4798  045E  0B89               	decfsz	9,f
  4799  045F  2C5E               	goto	u1967
  4800  0460  0BFA               	decfsz	??_lowBattery,f
  4801  0461  2C5E               	goto	u1967
  4802  0462  0BFB               	decfsz	??_lowBattery+1,f
  4803  0463  2C5E               	goto	u1967
  4804                           
  4805                           ;main.c: 158: setLEDColor(0, 0, 0);
  4806  0464  0020               	movlb	0	; select bank0
  4807  0465  01A0               	clrf	setLEDColor@green
  4808  0466  01A1               	clrf	setLEDColor@blue
  4809  0467  3000               	movlw	0
  4810  0468  3185  2505  3184   	fcall	_setLEDColor
  4811                           
  4812                           ;main.c: 159: _delay((unsigned long)((500)*(4000000/4000.0)));
  4813  046B  3003               	movlw	3
  4814  046C  00FB               	movwf	??_lowBattery+1
  4815  046D  308A               	movlw	138
  4816  046E  00FA               	movwf	??_lowBattery
  4817  046F  3056               	movlw	86
  4818  0470                     u1977:	
  4819  0470  0B89               	decfsz	9,f
  4820  0471  2C70               	goto	u1977
  4821  0472  0BFA               	decfsz	??_lowBattery,f
  4822  0473  2C70               	goto	u1977
  4823  0474  0BFB               	decfsz	??_lowBattery+1,f
  4824  0475  2C70               	goto	u1977
  4825  0476  0008               	return
  4826  0477                     __end_of_lowBattery:	
  4827                           
  4828                           	psect	text11
  4829  0505                     __ptext11:	
  4830 ;; *************** function _setLEDColor *****************
  4831 ;; Defined at:
  4832 ;;		line 140 in file "main.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;  red             1    wreg     unsigned char 
  4835 ;;  green           1    0[BANK0 ] unsigned char 
  4836 ;;  blue            1    1[BANK0 ] unsigned char 
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;  red             1    2[COMMON] unsigned char 
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  1    wreg      void 
  4841 ;; Registers used:
  4842 ;;		wreg, status,2
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4848 ;;      Params:         0       2       0       0       0       0       0       0
  4849 ;;      Locals:         1       0       0       0       0       0       0       0
  4850 ;;      Temps:          0       0       0       0       0       0       0       0
  4851 ;;      Totals:         1       2       0       0       0       0       0       0
  4852 ;;Total ram usage:        3 bytes
  4853 ;; Hardware stack levels used:    1
  4854 ;; Hardware stack levels required when called:    4
  4855 ;; This function calls:
  4856 ;;		Nothing
  4857 ;; This function is called by:
  4858 ;;		_lowBattery
  4859 ;;		_startUp
  4860 ;;		_selectSomething
  4861 ;;		_selectFrequency
  4862 ;;		_process_remote_command
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           
  4867                           ;psect for function _setLEDColor
  4868  0505                     _setLEDColor:	
  4869                           
  4870                           ;incstack = 0
  4871                           ; Regs used in _setLEDColor: [wreg+status,2]
  4872                           ;setLEDColor@red stored from wreg
  4873  0505  00F9               	movwf	setLEDColor@red
  4874                           
  4875                           ;main.c: 146: CCPR1L = 255 - red;
  4876  0506  0979               	comf	setLEDColor@red,w
  4877  0507  0025               	movlb	5	; select bank5
  4878  0508  0091               	movwf	17	;volatile
  4879                           
  4880                           ;main.c: 148: PWM3DCH = green;
  4881  0509  0020               	movlb	0	; select bank0
  4882  050A  0820               	movf	setLEDColor@green,w
  4883  050B  002C               	movlb	12	; select bank12
  4884  050C  0098               	movwf	24	;volatile
  4885                           
  4886                           ;main.c: 150: PWM4DCH = blue;
  4887  050D  0020               	movlb	0	; select bank0
  4888  050E  0821               	movf	setLEDColor@blue,w
  4889  050F  002C               	movlb	12	; select bank12
  4890  0510  009B               	movwf	27	;volatile
  4891  0511  0008               	return
  4892  0512                     __end_of_setLEDColor:	
  4893                           
  4894                           	psect	text12
  4895  02E2                     __ptext12:	
  4896 ;; *************** function _initLED *****************
  4897 ;; Defined at:
  4898 ;;		line 99 in file "main.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;		None
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;		None
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      void 
  4905 ;; Registers used:
  4906 ;;		wreg, status,2, status,0
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4912 ;;      Params:         0       0       0       0       0       0       0       0
  4913 ;;      Locals:         0       0       0       0       0       0       0       0
  4914 ;;      Temps:          1       0       0       0       0       0       0       0
  4915 ;;      Totals:         1       0       0       0       0       0       0       0
  4916 ;;Total ram usage:        1 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    4
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_main
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           
  4927                           ;psect for function _initLED
  4928  02E2                     _initLED:	
  4929                           
  4930                           ;main.c: 102: PR2 = 255;
  4931                           
  4932                           ;incstack = 0
  4933                           ; Regs used in _initLED: [wreg+status,2+status,0]
  4934  02E2  30FF               	movlw	255
  4935  02E3  0020               	movlb	0	; select bank0
  4936  02E4  009B               	movwf	27	;volatile
  4937                           
  4938                           ;main.c: 103: T2CONbits.T2CKPS = 0b10;
  4939  02E5  081C               	movf	28,w	;volatile
  4940  02E6  39FC               	andlw	-4
  4941  02E7  3802               	iorlw	2
  4942  02E8  009C               	movwf	28	;volatile
  4943                           
  4944                           ;main.c: 104: T2CONbits.TMR2ON = 1;
  4945  02E9  151C               	bsf	28,2	;volatile
  4946                           
  4947                           ;main.c: 108: TRISC |= 0b00010000;
  4948  02EA  0021               	movlb	1	; select bank1
  4949  02EB  160E               	bsf	14,4	;volatile
  4950                           
  4951                           ;main.c: 109: RC4PPS = 0b01110;
  4952  02EC  300E               	movlw	14
  4953  02ED  003D               	movlb	29	; select bank29
  4954  02EE  00A4               	movwf	36	;volatile
  4955                           
  4956                           ;main.c: 110: CCPTMRSbits.P3TSEL = 0b00;
  4957  02EF  30CF               	movlw	-49
  4958  02F0  0025               	movlb	5	; select bank5
  4959  02F1  059E               	andwf	30,f	;volatile
  4960                           
  4961                           ;main.c: 111: PWM3DCH = 0;
  4962  02F2  002C               	movlb	12	; select bank12
  4963  02F3  0198               	clrf	24	;volatile
  4964                           
  4965                           ;main.c: 112: PWM3DCLbits.PWM3DCL = 0;
  4966  02F4  303F               	movlw	-193
  4967  02F5  0597               	andwf	23,f	;volatile
  4968                           
  4969                           ;main.c: 113: PWM3CONbits.PWM3POL = 1;
  4970  02F6  1619               	bsf	25,4	;volatile
  4971                           
  4972                           ;main.c: 114: TRISC &= 0b11101111;
  4973  02F7  30EF               	movlw	239
  4974  02F8  00F9               	movwf	??_initLED
  4975  02F9  0879               	movf	??_initLED,w
  4976  02FA  0021               	movlb	1	; select bank1
  4977  02FB  058E               	andwf	14,f	;volatile
  4978                           
  4979                           ;main.c: 115: PWM3CONbits.PWM3EN = 1;
  4980  02FC  002C               	movlb	12	; select bank12
  4981  02FD  1799               	bsf	25,7	;volatile
  4982                           
  4983                           ;main.c: 119: TRISA |= 0b00100000;
  4984  02FE  0021               	movlb	1	; select bank1
  4985  02FF  168C               	bsf	12,5	;volatile
  4986                           
  4987                           ;main.c: 120: RA5PPS = 0b01111;
  4988  0300  300F               	movlw	15
  4989  0301  003D               	movlb	29	; select bank29
  4990  0302  0095               	movwf	21	;volatile
  4991                           
  4992                           ;main.c: 121: CCPTMRSbits.P4TSEL = 0b00;
  4993  0303  303F               	movlw	-193
  4994  0304  0025               	movlb	5	; select bank5
  4995  0305  059E               	andwf	30,f	;volatile
  4996                           
  4997                           ;main.c: 122: PWM4DCH = 0;
  4998  0306  002C               	movlb	12	; select bank12
  4999  0307  019B               	clrf	27	;volatile
  5000                           
  5001                           ;main.c: 123: PWM4DCLbits.PWM4DCL = 0;
  5002  0308  303F               	movlw	-193
  5003  0309  059A               	andwf	26,f	;volatile
  5004                           
  5005                           ;main.c: 124: PWM4CONbits.PWM4POL = 1;
  5006  030A  161C               	bsf	28,4	;volatile
  5007                           
  5008                           ;main.c: 125: TRISA &= 0b11011111;
  5009  030B  30DF               	movlw	223
  5010  030C  00F9               	movwf	??_initLED
  5011  030D  0879               	movf	??_initLED,w
  5012  030E  0021               	movlb	1	; select bank1
  5013  030F  058C               	andwf	12,f	;volatile
  5014                           
  5015                           ;main.c: 126: PWM4CONbits.PWM4EN = 1;
  5016  0310  002C               	movlb	12	; select bank12
  5017  0311  179C               	bsf	28,7	;volatile
  5018                           
  5019                           ;main.c: 132: TRISC |= 0b00100000;
  5020  0312  0021               	movlb	1	; select bank1
  5021  0313  168E               	bsf	14,5	;volatile
  5022                           
  5023                           ;main.c: 133: RC5PPS = 0b01100;
  5024  0314  300C               	movlw	12
  5025  0315  003D               	movlb	29	; select bank29
  5026  0316  00A5               	movwf	37	;volatile
  5027                           
  5028                           ;main.c: 134: CCP1CONbits.CCP1M = 0b1100;
  5029  0317  0025               	movlb	5	; select bank5
  5030  0318  0813               	movf	19,w	;volatile
  5031  0319  39F0               	andlw	-16
  5032  031A  380C               	iorlw	12
  5033  031B  0093               	movwf	19	;volatile
  5034                           
  5035                           ;main.c: 135: CCPR1L = 255;
  5036  031C  30FF               	movlw	255
  5037  031D  0091               	movwf	17	;volatile
  5038                           
  5039                           ;main.c: 136: CCP1CONbits.DC1B = 0x3;
  5040  031E  3030               	movlw	48
  5041  031F  0493               	iorwf	19,f	;volatile
  5042                           
  5043                           ;main.c: 137: TRISC &= 0b11011111;
  5044  0320  30DF               	movlw	223
  5045  0321  00F9               	movwf	??_initLED
  5046  0322  0879               	movf	??_initLED,w
  5047  0323  0021               	movlb	1	; select bank1
  5048  0324  058E               	andwf	14,f	;volatile
  5049  0325  0008               	return
  5050  0326                     __end_of_initLED:	
  5051                           
  5052                           	psect	text13
  5053  03F1                     __ptext13:	
  5054 ;; *************** function _battery_voltage *****************
  5055 ;; Defined at:
  5056 ;;		line 74 in file "main.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;		None
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;		None
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  2   14[BANK0 ] unsigned int 
  5063 ;; Registers used:
  5064 ;;		wreg, status,2, status,0, pclath, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5070 ;;      Params:         0       2       0       0       0       0       0       0
  5071 ;;      Locals:         0       0       0       0       0       0       0       0
  5072 ;;      Temps:          0       0       0       0       0       0       0       0
  5073 ;;      Totals:         0       2       0       0       0       0       0       0
  5074 ;;Total ram usage:        2 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    5
  5077 ;; This function calls:
  5078 ;;		___aldiv
  5079 ;; This function is called by:
  5080 ;;		_main
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           
  5085                           ;psect for function _battery_voltage
  5086  03F1                     _battery_voltage:	
  5087                           
  5088                           ;main.c: 76: FVRCON = 0b10000001;
  5089                           
  5090                           ;incstack = 0
  5091                           ; Regs used in _battery_voltage: [wreg+status,2+status,0+pclath+cstack]
  5092  03F1  3081               	movlw	129
  5093  03F2  0022               	movlb	2	; select bank2
  5094  03F3  0097               	movwf	23	;volatile
  5095                           
  5096                           ;main.c: 77: ADCON0 = 0b01111101;
  5097  03F4  307D               	movlw	125
  5098  03F5  0021               	movlb	1	; select bank1
  5099  03F6  009D               	movwf	29	;volatile
  5100                           
  5101                           ;main.c: 78: ADCON1 = 0b10010000;
  5102  03F7  3090               	movlw	144
  5103  03F8  009E               	movwf	30	;volatile
  5104  03F9                     l418:	
  5105                           ;main.c: 79: while(!FVRCONbits.FVRRDY){ }
  5106                           
  5107  03F9  0022               	movlb	2	; select bank2
  5108  03FA  1F17               	btfss	23,6	;volatile
  5109  03FB  2BF9               	goto	l418
  5110                           
  5111                           ;main.c: 80: __nop();
  5112  03FC  0000               	nop
  5113                           
  5114                           ;main.c: 81: __nop();
  5115  03FD  0000               	nop
  5116                           
  5117                           ;main.c: 82: __nop();
  5118  03FE  0000               	nop
  5119                           
  5120                           ;main.c: 83: __nop();
  5121  03FF  0000               	nop
  5122                           
  5123                           ;main.c: 84: __nop();
  5124  0400  0000               	nop
  5125                           
  5126                           ;main.c: 85: ADCON0bits.GO_nDONE = 1;
  5127  0401  0021               	movlb	1	; select bank1
  5128  0402  149D               	bsf	29,1	;volatile
  5129  0403                     l421:	
  5130                           ;main.c: 86: while(ADCON0bits.GO_nDONE){ }
  5131                           
  5132  0403  189D               	btfsc	29,1	;volatile
  5133  0404  2C03               	goto	l421
  5134                           
  5135                           ;main.c: 87: ADCON0bits.ADON = 0;
  5136  0405  101D               	bcf	29,0	;volatile
  5137                           
  5138                           ;main.c: 92: return 1047552L / ADRES;
  5139  0406  081B               	movf	27,w	;volatile
  5140  0407  0020               	movlb	0	; select bank0
  5141  0408  00A0               	movwf	___aldiv@divisor
  5142  0409  0021               	movlb	1	; select bank1
  5143  040A  081C               	movf	28,w	;volatile
  5144  040B  0020               	movlb	0	; select bank0
  5145  040C  00A1               	movwf	___aldiv@divisor+1
  5146  040D  01A2               	clrf	___aldiv@divisor+2
  5147  040E  01A3               	clrf	___aldiv@divisor+3
  5148  040F  3000               	movlw	0
  5149  0410  00A7               	movwf	___aldiv@dividend+3
  5150  0411  300F               	movlw	15
  5151  0412  00A6               	movwf	___aldiv@dividend+2
  5152  0413  30FC               	movlw	252
  5153  0414  00A5               	movwf	___aldiv@dividend+1
  5154  0415  3000               	movlw	0
  5155  0416  00A4               	movwf	___aldiv@dividend
  5156  0417  3181  21B2         	fcall	___aldiv
  5157  0419  0020               	movlb	0	; select bank0
  5158  041A  0821               	movf	?___aldiv+1,w
  5159  041B  00AF               	movwf	?_battery_voltage+1
  5160  041C  0820               	movf	?___aldiv,w
  5161  041D  00AE               	movwf	?_battery_voltage
  5162  041E  0008               	return
  5163  041F                     __end_of_battery_voltage:	
  5164                           
  5165                           	psect	text14
  5166  01B2                     __ptext14:	
  5167 ;; *************** function ___aldiv *****************
  5168 ;; Defined at:
  5169 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c90/common/aldiv.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;  divisor         4    0[BANK0 ] long 
  5172 ;;  dividend        4    4[BANK0 ] long 
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;  quotient        4   10[BANK0 ] long 
  5175 ;;  sign            1    9[BANK0 ] unsigned char 
  5176 ;;  counter         1    8[BANK0 ] unsigned char 
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  4    0[BANK0 ] long 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5186 ;;      Params:         0       8       0       0       0       0       0       0
  5187 ;;      Locals:         0       6       0       0       0       0       0       0
  5188 ;;      Temps:          1       0       0       0       0       0       0       0
  5189 ;;      Totals:         1      14       0       0       0       0       0       0
  5190 ;;Total ram usage:       15 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:    4
  5193 ;; This function calls:
  5194 ;;		Nothing
  5195 ;; This function is called by:
  5196 ;;		_battery_voltage
  5197 ;;		_setCurrent
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           
  5202                           ;psect for function ___aldiv
  5203  01B2                     ___aldiv:	
  5204                           
  5205                           ;incstack = 0
  5206                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5207  01B2  0020               	movlb	0	; select bank0
  5208  01B3  01A9               	clrf	___aldiv@sign
  5209  01B4  1FA3               	btfss	___aldiv@divisor+3,7
  5210  01B5  29C3               	goto	l657
  5211  01B6  09A0               	comf	___aldiv@divisor,f
  5212  01B7  09A1               	comf	___aldiv@divisor+1,f
  5213  01B8  09A2               	comf	___aldiv@divisor+2,f
  5214  01B9  09A3               	comf	___aldiv@divisor+3,f
  5215  01BA  0AA0               	incf	___aldiv@divisor,f
  5216  01BB  1903               	skipnz
  5217  01BC  0AA1               	incf	___aldiv@divisor+1,f
  5218  01BD  1903               	skipnz
  5219  01BE  0AA2               	incf	___aldiv@divisor+2,f
  5220  01BF  1903               	skipnz
  5221  01C0  0AA3               	incf	___aldiv@divisor+3,f
  5222  01C1  01A9               	clrf	___aldiv@sign
  5223  01C2  0AA9               	incf	___aldiv@sign,f
  5224  01C3                     l657:	
  5225  01C3  1FA7               	btfss	___aldiv@dividend+3,7
  5226  01C4  29D4               	goto	l2271
  5227  01C5  09A4               	comf	___aldiv@dividend,f
  5228  01C6  09A5               	comf	___aldiv@dividend+1,f
  5229  01C7  09A6               	comf	___aldiv@dividend+2,f
  5230  01C8  09A7               	comf	___aldiv@dividend+3,f
  5231  01C9  0AA4               	incf	___aldiv@dividend,f
  5232  01CA  1903               	skipnz
  5233  01CB  0AA5               	incf	___aldiv@dividend+1,f
  5234  01CC  1903               	skipnz
  5235  01CD  0AA6               	incf	___aldiv@dividend+2,f
  5236  01CE  1903               	skipnz
  5237  01CF  0AA7               	incf	___aldiv@dividend+3,f
  5238  01D0  3001               	movlw	1
  5239  01D1  00F9               	movwf	??___aldiv
  5240  01D2  0879               	movf	??___aldiv,w
  5241  01D3  06A9               	xorwf	___aldiv@sign,f
  5242  01D4                     l2271:	
  5243  01D4  3000               	movlw	0
  5244  01D5  00AD               	movwf	___aldiv@quotient+3
  5245  01D6  3000               	movlw	0
  5246  01D7  00AC               	movwf	___aldiv@quotient+2
  5247  01D8  3000               	movlw	0
  5248  01D9  00AB               	movwf	___aldiv@quotient+1
  5249  01DA  3000               	movlw	0
  5250  01DB  00AA               	movwf	___aldiv@quotient
  5251  01DC  0823               	movf	___aldiv@divisor+3,w
  5252  01DD  0422               	iorwf	___aldiv@divisor+2,w
  5253  01DE  0421               	iorwf	___aldiv@divisor+1,w
  5254  01DF  0420               	iorwf	___aldiv@divisor,w
  5255  01E0  1903               	skipnz
  5256  01E1  2A1D               	goto	l2293
  5257  01E2  01A8               	clrf	___aldiv@counter
  5258  01E3  0AA8               	incf	___aldiv@counter,f
  5259  01E4                     l2279:	
  5260  01E4  1BA3               	btfsc	___aldiv@divisor+3,7
  5261  01E5  29F2               	goto	l2281
  5262  01E6  3001               	movlw	1
  5263  01E7                     u1695:	
  5264  01E7  35A0               	lslf	___aldiv@divisor,f
  5265  01E8  0DA1               	rlf	___aldiv@divisor+1,f
  5266  01E9  0DA2               	rlf	___aldiv@divisor+2,f
  5267  01EA  0DA3               	rlf	___aldiv@divisor+3,f
  5268  01EB  0B89               	decfsz	9,f
  5269  01EC  29E7               	goto	u1695
  5270  01ED  3001               	movlw	1
  5271  01EE  00F9               	movwf	??___aldiv
  5272  01EF  0879               	movf	??___aldiv,w
  5273  01F0  07A8               	addwf	___aldiv@counter,f
  5274  01F1  29E4               	goto	l2279
  5275  01F2                     l2281:	
  5276  01F2  3001               	movlw	1
  5277  01F3                     u1715:	
  5278  01F3  35AA               	lslf	___aldiv@quotient,f
  5279  01F4  0DAB               	rlf	___aldiv@quotient+1,f
  5280  01F5  0DAC               	rlf	___aldiv@quotient+2,f
  5281  01F6  0DAD               	rlf	___aldiv@quotient+3,f
  5282  01F7  0B89               	decfsz	9,f
  5283  01F8  29F3               	goto	u1715
  5284  01F9  0823               	movf	___aldiv@divisor+3,w
  5285  01FA  0227               	subwf	___aldiv@dividend+3,w
  5286  01FB  1D03               	skipz
  5287  01FC  2A07               	goto	u1725
  5288  01FD  0822               	movf	___aldiv@divisor+2,w
  5289  01FE  0226               	subwf	___aldiv@dividend+2,w
  5290  01FF  1D03               	skipz
  5291  0200  2A07               	goto	u1725
  5292  0201  0821               	movf	___aldiv@divisor+1,w
  5293  0202  0225               	subwf	___aldiv@dividend+1,w
  5294  0203  1D03               	skipz
  5295  0204  2A07               	goto	u1725
  5296  0205  0820               	movf	___aldiv@divisor,w
  5297  0206  0224               	subwf	___aldiv@dividend,w
  5298  0207                     u1725:	
  5299  0207  1C03               	skipc
  5300  0208  2A12               	goto	l2289
  5301  0209  0820               	movf	___aldiv@divisor,w
  5302  020A  02A4               	subwf	___aldiv@dividend,f
  5303  020B  0821               	movf	___aldiv@divisor+1,w
  5304  020C  3BA5               	subwfb	___aldiv@dividend+1,f
  5305  020D  0822               	movf	___aldiv@divisor+2,w
  5306  020E  3BA6               	subwfb	___aldiv@dividend+2,f
  5307  020F  0823               	movf	___aldiv@divisor+3,w
  5308  0210  3BA7               	subwfb	___aldiv@dividend+3,f
  5309  0211  142A               	bsf	___aldiv@quotient,0
  5310  0212                     l2289:	
  5311  0212  3001               	movlw	1
  5312  0213                     u1735:	
  5313  0213  36A3               	lsrf	___aldiv@divisor+3,f
  5314  0214  0CA2               	rrf	___aldiv@divisor+2,f
  5315  0215  0CA1               	rrf	___aldiv@divisor+1,f
  5316  0216  0CA0               	rrf	___aldiv@divisor,f
  5317  0217  0B89               	decfsz	9,f
  5318  0218  2A13               	goto	u1735
  5319  0219  3001               	movlw	1
  5320  021A  02A8               	subwf	___aldiv@counter,f
  5321  021B  1D03               	btfss	3,2
  5322  021C  29F2               	goto	l2281
  5323  021D                     l2293:	
  5324  021D  0829               	movf	___aldiv@sign,w
  5325  021E  1903               	btfsc	3,2
  5326  021F  2A2B               	goto	l2297
  5327  0220  09AA               	comf	___aldiv@quotient,f
  5328  0221  09AB               	comf	___aldiv@quotient+1,f
  5329  0222  09AC               	comf	___aldiv@quotient+2,f
  5330  0223  09AD               	comf	___aldiv@quotient+3,f
  5331  0224  0AAA               	incf	___aldiv@quotient,f
  5332  0225  1903               	skipnz
  5333  0226  0AAB               	incf	___aldiv@quotient+1,f
  5334  0227  1903               	skipnz
  5335  0228  0AAC               	incf	___aldiv@quotient+2,f
  5336  0229  1903               	skipnz
  5337  022A  0AAD               	incf	___aldiv@quotient+3,f
  5338  022B                     l2297:	
  5339  022B  082D               	movf	___aldiv@quotient+3,w
  5340  022C  00A3               	movwf	?___aldiv+3
  5341  022D  082C               	movf	___aldiv@quotient+2,w
  5342  022E  00A2               	movwf	?___aldiv+2
  5343  022F  082B               	movf	___aldiv@quotient+1,w
  5344  0230  00A1               	movwf	?___aldiv+1
  5345  0231  082A               	movf	___aldiv@quotient,w
  5346  0232  00A0               	movwf	?___aldiv
  5347  0233  0008               	return
  5348  0234                     __end_of___aldiv:	
  5349                           
  5350                           	psect	text15
  5351  04C3                     __ptext15:	
  5352 ;; *************** function _SYSTEM_Initialize *****************
  5353 ;; Defined at:
  5354 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;		None
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;		None
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  1    wreg      void 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0, pclath, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5368 ;;      Params:         0       0       0       0       0       0       0       0
  5369 ;;      Locals:         0       0       0       0       0       0       0       0
  5370 ;;      Temps:          0       0       0       0       0       0       0       0
  5371 ;;      Totals:         0       0       0       0       0       0       0       0
  5372 ;;Total ram usage:        0 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    6
  5375 ;; This function calls:
  5376 ;;		_DAC_Initialize
  5377 ;;		_EUSART_Initialize
  5378 ;;		_EXT_INT_Initialize
  5379 ;;		_OPA1_Initialize
  5380 ;;		_OPA2_Initialize
  5381 ;;		_OSCILLATOR_Initialize
  5382 ;;		_PIN_MANAGER_Initialize
  5383 ;;		_TMR0_Initialize
  5384 ;;		_TMR2_Initialize
  5385 ;;		_WDT_Initialize
  5386 ;; This function is called by:
  5387 ;;		_main
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           
  5392                           ;psect for function _SYSTEM_Initialize
  5393  04C3                     _SYSTEM_Initialize:	
  5394                           
  5395                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  5396                           
  5397                           ;incstack = 0
  5398                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5399  04C3  3183  2390  3184   	fcall	_PIN_MANAGER_Initialize
  5400                           
  5401                           ;mcc.c: 54: OSCILLATOR_Initialize();
  5402  04C6  3185  254D  3184   	fcall	_OSCILLATOR_Initialize
  5403                           
  5404                           ;mcc.c: 55: WDT_Initialize();
  5405  04C9  3185  2582  3184   	fcall	_WDT_Initialize
  5406                           
  5407                           ;mcc.c: 56: DAC_Initialize();
  5408  04CC  3185  2573  3184   	fcall	_DAC_Initialize
  5409                           
  5410                           ;mcc.c: 57: OPA1_Initialize();
  5411  04CF  3185  258A  3184   	fcall	_OPA1_Initialize
  5412                           
  5413                           ;mcc.c: 58: OPA2_Initialize();
  5414  04D2  3185  2586  3184   	fcall	_OPA2_Initialize
  5415                           
  5416                           ;mcc.c: 59: TMR2_Initialize();
  5417  04D5  3185  2545  3184   	fcall	_TMR2_Initialize
  5418                           
  5419                           ;mcc.c: 60: EXT_INT_Initialize();
  5420  04D8  3185  2512  3184   	fcall	_EXT_INT_Initialize
  5421                           
  5422                           ;mcc.c: 61: TMR0_Initialize();
  5423  04DB  3185  2533  3184   	fcall	_TMR0_Initialize
  5424                           
  5425                           ;mcc.c: 62: EUSART_Initialize();
  5426  04DE  3184  249F         	fcall	_EUSART_Initialize
  5427  04E0  0008               	return
  5428  04E1                     __end_of_SYSTEM_Initialize:	
  5429                           
  5430                           	psect	text16
  5431  0582                     __ptext16:	
  5432 ;; *************** function _WDT_Initialize *****************
  5433 ;; Defined at:
  5434 ;;		line 77 in file "mcc_generated_files/mcc.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;		None
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;		None
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  1    wreg      void 
  5441 ;; Registers used:
  5442 ;;		wreg
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5448 ;;      Params:         0       0       0       0       0       0       0       0
  5449 ;;      Locals:         0       0       0       0       0       0       0       0
  5450 ;;      Temps:          0       0       0       0       0       0       0       0
  5451 ;;      Totals:         0       0       0       0       0       0       0       0
  5452 ;;Total ram usage:        0 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    4
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_SYSTEM_Initialize
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           
  5463                           ;psect for function _WDT_Initialize
  5464  0582                     _WDT_Initialize:	
  5465                           
  5466                           ;mcc.c: 80: WDTCON = 0x16;
  5467                           
  5468                           ;incstack = 0
  5469                           ; Regs used in _WDT_Initialize: [wreg]
  5470  0582  3016               	movlw	22
  5471  0583  0021               	movlb	1	; select bank1
  5472  0584  0097               	movwf	23	;volatile
  5473  0585  0008               	return
  5474  0586                     __end_of_WDT_Initialize:	
  5475                           
  5476                           	psect	text17
  5477  0545                     __ptext17:	
  5478 ;; *************** function _TMR2_Initialize *****************
  5479 ;; Defined at:
  5480 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5494 ;;      Params:         0       0       0       0       0       0       0       0
  5495 ;;      Locals:         0       0       0       0       0       0       0       0
  5496 ;;      Temps:          0       0       0       0       0       0       0       0
  5497 ;;      Totals:         0       0       0       0       0       0       0       0
  5498 ;;Total ram usage:        0 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:    4
  5501 ;; This function calls:
  5502 ;;		Nothing
  5503 ;; This function is called by:
  5504 ;;		_SYSTEM_Initialize
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           
  5509                           ;psect for function _TMR2_Initialize
  5510  0545                     _TMR2_Initialize:	
  5511                           
  5512                           ;tmr2.c: 67: PR2 = 255;
  5513                           
  5514                           ;incstack = 0
  5515                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5516  0545  30FF               	movlw	255
  5517  0546  0020               	movlb	0	; select bank0
  5518  0547  009B               	movwf	27	;volatile
  5519                           
  5520                           ;tmr2.c: 70: TMR2 = 0x00;
  5521  0548  019A               	clrf	26	;volatile
  5522                           
  5523                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
  5524  0549  1091               	bcf	17,1	;volatile
  5525                           
  5526                           ;tmr2.c: 76: T2CON = 0x06;
  5527  054A  3006               	movlw	6
  5528  054B  009C               	movwf	28	;volatile
  5529  054C  0008               	return
  5530  054D                     __end_of_TMR2_Initialize:	
  5531                           
  5532                           	psect	text18
  5533  0533                     __ptext18:	
  5534 ;; *************** function _TMR0_Initialize *****************
  5535 ;; Defined at:
  5536 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;		None
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;		None
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      void 
  5543 ;; Registers used:
  5544 ;;		wreg, status,2
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5550 ;;      Params:         0       0       0       0       0       0       0       0
  5551 ;;      Locals:         0       0       0       0       0       0       0       0
  5552 ;;      Temps:          0       0       0       0       0       0       0       0
  5553 ;;      Totals:         0       0       0       0       0       0       0       0
  5554 ;;Total ram usage:        0 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:    4
  5557 ;; This function calls:
  5558 ;;		Nothing
  5559 ;; This function is called by:
  5560 ;;		_SYSTEM_Initialize
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           
  5565                           ;psect for function _TMR0_Initialize
  5566  0533                     _TMR0_Initialize:	
  5567                           
  5568                           ;tmr0.c: 68: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD5 & 0x3F));
  5569                           
  5570                           ;incstack = 0
  5571                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  5572  0533  0021               	movlb	1	; select bank1
  5573  0534  0815               	movf	21,w	;volatile
  5574  0535  39C0               	andlw	192
  5575  0536  3815               	iorlw	21
  5576  0537  0095               	movwf	21	;volatile
  5577                           
  5578                           ;tmr0.c: 71: TMR0 = 0x00;
  5579  0538  0020               	movlb	0	; select bank0
  5580  0539  0195               	clrf	21	;volatile
  5581                           
  5582                           ;tmr0.c: 74: timer0ReloadVal= 0;
  5583  053A  01F0               	clrf	_timer0ReloadVal	;volatile
  5584                           
  5585                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  5586  053B  110B               	bcf	11,2	;volatile
  5587  053C  0008               	return
  5588  053D                     __end_of_TMR0_Initialize:	
  5589                           
  5590                           	psect	text19
  5591  0390                     __ptext19:	
  5592 ;; *************** function _PIN_MANAGER_Initialize *****************
  5593 ;; Defined at:
  5594 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;		None
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;		None
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  1    wreg      void 
  5601 ;; Registers used:
  5602 ;;		wreg, status,2
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5608 ;;      Params:         0       0       0       0       0       0       0       0
  5609 ;;      Locals:         0       0       0       0       0       0       0       0
  5610 ;;      Temps:          0       0       0       0       0       0       0       0
  5611 ;;      Totals:         0       0       0       0       0       0       0       0
  5612 ;;Total ram usage:        0 bytes
  5613 ;; Hardware stack levels used:    1
  5614 ;; Hardware stack levels required when called:    4
  5615 ;; This function calls:
  5616 ;;		Nothing
  5617 ;; This function is called by:
  5618 ;;		_SYSTEM_Initialize
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           
  5623                           ;psect for function _PIN_MANAGER_Initialize
  5624  0390                     _PIN_MANAGER_Initialize:	
  5625                           
  5626                           ;pin_manager.c: 60: LATA = 0x00;
  5627                           
  5628                           ;incstack = 0
  5629                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5630  0390  0022               	movlb	2	; select bank2
  5631  0391  018C               	clrf	12	;volatile
  5632                           
  5633                           ;pin_manager.c: 61: LATB = 0x00;
  5634  0392  018D               	clrf	13	;volatile
  5635                           
  5636                           ;pin_manager.c: 62: LATC = 0x00;
  5637  0393  018E               	clrf	14	;volatile
  5638                           
  5639                           ;pin_manager.c: 67: TRISA = 0x04;
  5640  0394  3004               	movlw	4
  5641  0395  0021               	movlb	1	; select bank1
  5642  0396  008C               	movwf	12	;volatile
  5643                           
  5644                           ;pin_manager.c: 68: TRISB = 0x20;
  5645  0397  3020               	movlw	32
  5646  0398  008D               	movwf	13	;volatile
  5647                           
  5648                           ;pin_manager.c: 69: TRISC = 0x10;
  5649  0399  3010               	movlw	16
  5650  039A  008E               	movwf	14	;volatile
  5651                           
  5652                           ;pin_manager.c: 74: ANSELC = 0x00;
  5653  039B  0023               	movlb	3	; select bank3
  5654  039C  018E               	clrf	14	;volatile
  5655                           
  5656                           ;pin_manager.c: 75: ANSELB = 0x00;
  5657  039D  018D               	clrf	13	;volatile
  5658                           
  5659                           ;pin_manager.c: 76: ANSELA = 0x00;
  5660  039E  018C               	clrf	12	;volatile
  5661                           
  5662                           ;pin_manager.c: 81: WPUB = 0x00;
  5663  039F  0024               	movlb	4	; select bank4
  5664  03A0  018D               	clrf	13	;volatile
  5665                           
  5666                           ;pin_manager.c: 82: WPUA = 0x00;
  5667  03A1  018C               	clrf	12	;volatile
  5668                           
  5669                           ;pin_manager.c: 83: WPUC = 0x00;
  5670  03A2  018E               	clrf	14	;volatile
  5671                           
  5672                           ;pin_manager.c: 84: OPTION_REGbits.nWPUEN = 0;
  5673  03A3  0021               	movlb	1	; select bank1
  5674  03A4  1395               	bcf	21,7	;volatile
  5675                           
  5676                           ;pin_manager.c: 89: ODCONA = 0x00;
  5677  03A5  0025               	movlb	5	; select bank5
  5678  03A6  018C               	clrf	12	;volatile
  5679                           
  5680                           ;pin_manager.c: 90: ODCONB = 0x00;
  5681  03A7  018D               	clrf	13	;volatile
  5682                           
  5683                           ;pin_manager.c: 91: ODCONC = 0x00;
  5684  03A8  018E               	clrf	14	;volatile
  5685                           
  5686                           ;pin_manager.c: 96: SLRCONA = 0x37;
  5687  03A9  3037               	movlw	55
  5688  03AA  0026               	movlb	6	; select bank6
  5689  03AB  008C               	movwf	12	;volatile
  5690                           
  5691                           ;pin_manager.c: 97: SLRCONB = 0xF0;
  5692  03AC  30F0               	movlw	240
  5693  03AD  008D               	movwf	13	;volatile
  5694                           
  5695                           ;pin_manager.c: 98: SLRCONC = 0xFF;
  5696  03AE  30FF               	movlw	255
  5697  03AF  008E               	movwf	14	;volatile
  5698                           
  5699                           ;pin_manager.c: 103: INLVLA = 0x3F;
  5700  03B0  303F               	movlw	63
  5701  03B1  0027               	movlb	7	; select bank7
  5702  03B2  008C               	movwf	12	;volatile
  5703                           
  5704                           ;pin_manager.c: 104: INLVLB = 0xF0;
  5705  03B3  30F0               	movlw	240
  5706  03B4  008D               	movwf	13	;volatile
  5707                           
  5708                           ;pin_manager.c: 105: INLVLC = 0xFF;
  5709  03B5  30FF               	movlw	255
  5710  03B6  008E               	movwf	14	;volatile
  5711                           
  5712                           ;pin_manager.c: 113: INTCONbits.IOCIE = 1;
  5713  03B7  158B               	bsf	11,3	;volatile
  5714                           
  5715                           ;pin_manager.c: 116: INTPPS = 0x02;
  5716  03B8  3002               	movlw	2
  5717  03B9  003C               	movlb	28	; select bank28
  5718  03BA  0090               	movwf	16	;volatile
  5719                           
  5720                           ;pin_manager.c: 117: RXPPS = 0x0D;
  5721  03BB  300D               	movlw	13
  5722  03BC  00A4               	movwf	36	;volatile
  5723                           
  5724                           ;pin_manager.c: 118: RB7PPS = 0x14;
  5725  03BD  3014               	movlw	20
  5726  03BE  003D               	movlb	29	; select bank29
  5727  03BF  009F               	movwf	31	;volatile
  5728  03C0  0008               	return
  5729  03C1                     __end_of_PIN_MANAGER_Initialize:	
  5730                           
  5731                           	psect	text20
  5732  054D                     __ptext20:	
  5733 ;; *************** function _OSCILLATOR_Initialize *****************
  5734 ;; Defined at:
  5735 ;;		line 65 in file "mcc_generated_files/mcc.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;		None
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;		None
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  1    wreg      void 
  5742 ;; Registers used:
  5743 ;;		wreg, status,2
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5749 ;;      Params:         0       0       0       0       0       0       0       0
  5750 ;;      Locals:         0       0       0       0       0       0       0       0
  5751 ;;      Temps:          0       0       0       0       0       0       0       0
  5752 ;;      Totals:         0       0       0       0       0       0       0       0
  5753 ;;Total ram usage:        0 bytes
  5754 ;; Hardware stack levels used:    1
  5755 ;; Hardware stack levels required when called:    4
  5756 ;; This function calls:
  5757 ;;		Nothing
  5758 ;; This function is called by:
  5759 ;;		_SYSTEM_Initialize
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763                           
  5764                           ;psect for function _OSCILLATOR_Initialize
  5765  054D                     _OSCILLATOR_Initialize:	
  5766                           
  5767                           ;mcc.c: 68: OSCCON = 0x6A;
  5768                           
  5769                           ;incstack = 0
  5770                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5771  054D  306A               	movlw	106
  5772  054E  0021               	movlb	1	; select bank1
  5773  054F  0099               	movwf	25	;volatile
  5774                           
  5775                           ;mcc.c: 70: OSCSTAT = 0x00;
  5776  0550  019A               	clrf	26	;volatile
  5777                           
  5778                           ;mcc.c: 72: OSCTUNE = 0x00;
  5779  0551  0198               	clrf	24	;volatile
  5780                           
  5781                           ;mcc.c: 74: BORCON = 0x00;
  5782  0552  0022               	movlb	2	; select bank2
  5783  0553  0196               	clrf	22	;volatile
  5784  0554  0008               	return
  5785  0555                     __end_of_OSCILLATOR_Initialize:	
  5786                           
  5787                           	psect	text21
  5788  0586                     __ptext21:	
  5789 ;; *************** function _OPA2_Initialize *****************
  5790 ;; Defined at:
  5791 ;;		line 58 in file "mcc_generated_files/opa2.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;		None
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;		None
  5796 ;; Return value:  Size  Location     Type
  5797 ;;                  1    wreg      void 
  5798 ;; Registers used:
  5799 ;;		wreg
  5800 ;; Tracked objects:
  5801 ;;		On entry : 0/0
  5802 ;;		On exit  : 0/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5805 ;;      Params:         0       0       0       0       0       0       0       0
  5806 ;;      Locals:         0       0       0       0       0       0       0       0
  5807 ;;      Temps:          0       0       0       0       0       0       0       0
  5808 ;;      Totals:         0       0       0       0       0       0       0       0
  5809 ;;Total ram usage:        0 bytes
  5810 ;; Hardware stack levels used:    1
  5811 ;; Hardware stack levels required when called:    4
  5812 ;; This function calls:
  5813 ;;		Nothing
  5814 ;; This function is called by:
  5815 ;;		_SYSTEM_Initialize
  5816 ;;		_main
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           
  5821                           ;psect for function _OPA2_Initialize
  5822  0586                     _OPA2_Initialize:	
  5823                           
  5824                           ;opa2.c: 61: OPA2CON = 0xD2;
  5825                           
  5826                           ;incstack = 0
  5827                           ; Regs used in _OPA2_Initialize: [wreg]
  5828  0586  30D2               	movlw	210
  5829  0587  002A               	movlb	10	; select bank10
  5830  0588  0095               	movwf	21	;volatile
  5831  0589  0008               	return
  5832  058A                     __end_of_OPA2_Initialize:	
  5833                           
  5834                           	psect	text22
  5835  058A                     __ptext22:	
  5836 ;; *************** function _OPA1_Initialize *****************
  5837 ;; Defined at:
  5838 ;;		line 58 in file "mcc_generated_files/opa1.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;		None
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;		None
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      void 
  5845 ;; Registers used:
  5846 ;;		wreg
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5852 ;;      Params:         0       0       0       0       0       0       0       0
  5853 ;;      Locals:         0       0       0       0       0       0       0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0       0
  5855 ;;      Totals:         0       0       0       0       0       0       0       0
  5856 ;;Total ram usage:        0 bytes
  5857 ;; Hardware stack levels used:    1
  5858 ;; Hardware stack levels required when called:    4
  5859 ;; This function calls:
  5860 ;;		Nothing
  5861 ;; This function is called by:
  5862 ;;		_SYSTEM_Initialize
  5863 ;;		_main
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           
  5868                           ;psect for function _OPA1_Initialize
  5869  058A                     _OPA1_Initialize:	
  5870                           
  5871                           ;opa1.c: 61: OPA1CON = 0xD2;
  5872                           
  5873                           ;incstack = 0
  5874                           ; Regs used in _OPA1_Initialize: [wreg]
  5875  058A  30D2               	movlw	210
  5876  058B  002A               	movlb	10	; select bank10
  5877  058C  0091               	movwf	17	;volatile
  5878  058D  0008               	return
  5879  058E                     __end_of_OPA1_Initialize:	
  5880                           
  5881                           	psect	text23
  5882  0512                     __ptext23:	
  5883 ;; *************** function _EXT_INT_Initialize *****************
  5884 ;; Defined at:
  5885 ;;		line 132 in file "mcc_generated_files/ext_int.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;		None
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;		None
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      void 
  5892 ;; Registers used:
  5893 ;;		wreg, status,2, status,0, pclath, cstack
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5899 ;;      Params:         0       0       0       0       0       0       0       0
  5900 ;;      Locals:         0       0       0       0       0       0       0       0
  5901 ;;      Temps:          0       0       0       0       0       0       0       0
  5902 ;;      Totals:         0       0       0       0       0       0       0       0
  5903 ;;Total ram usage:        0 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:    5
  5906 ;; This function calls:
  5907 ;;		_INT_SetInterruptHandler
  5908 ;; This function is called by:
  5909 ;;		_SYSTEM_Initialize
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           
  5914                           ;psect for function _EXT_INT_Initialize
  5915  0512                     _EXT_INT_Initialize:	
  5916                           
  5917                           ;ext_int.c: 137: (INTCONbits.INTF = 0);
  5918                           
  5919                           ;incstack = 0
  5920                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5921  0512  108B               	bcf	11,1	;volatile
  5922                           
  5923                           ;ext_int.c: 138: (OPTION_REGbits.INTEDG = 0);
  5924  0513  0021               	movlb	1	; select bank1
  5925  0514  1315               	bcf	21,6	;volatile
  5926                           
  5927                           ;ext_int.c: 140: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
  5928  0515  3034               	movlw	low _INT_DefaultInterruptHandler
  5929  0516  0020               	movlb	0	; select bank0
  5930  0517  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler
  5931  0518  3002               	movlw	high _INT_DefaultInterruptHandler
  5932  0519  00A1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  5933  051A  3185  255B         	fcall	_INT_SetInterruptHandler
  5934                           
  5935                           ;ext_int.c: 141: (INTCONbits.INTE = 1);
  5936  051C  160B               	bsf	11,4	;volatile
  5937  051D  0008               	return
  5938  051E                     __end_of_EXT_INT_Initialize:	
  5939                           
  5940                           	psect	text24
  5941  055B                     __ptext24:	
  5942 ;; *************** function _INT_SetInterruptHandler *****************
  5943 ;; Defined at:
  5944 ;;		line 71 in file "mcc_generated_files/ext_int.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  5947 ;;		 -> INT_DefaultInterruptHandler(1), 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;		None
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1    wreg      void 
  5952 ;; Registers used:
  5953 ;;		wreg
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5959 ;;      Params:         0       2       0       0       0       0       0       0
  5960 ;;      Locals:         0       0       0       0       0       0       0       0
  5961 ;;      Temps:          0       0       0       0       0       0       0       0
  5962 ;;      Totals:         0       2       0       0       0       0       0       0
  5963 ;;Total ram usage:        2 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    4
  5966 ;; This function calls:
  5967 ;;		Nothing
  5968 ;; This function is called by:
  5969 ;;		_EXT_INT_Initialize
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           
  5974                           ;psect for function _INT_SetInterruptHandler
  5975  055B                     _INT_SetInterruptHandler:	
  5976                           
  5977                           ;ext_int.c: 72: INT_InterruptHandler = InterruptHandler;
  5978                           
  5979                           ;incstack = 0
  5980                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  5981  055B  0020               	movlb	0	; select bank0
  5982  055C  0821               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  5983  055D  00CE               	movwf	_INT_InterruptHandler+1
  5984  055E  0820               	movf	INT_SetInterruptHandler@InterruptHandler,w
  5985  055F  00CD               	movwf	_INT_InterruptHandler
  5986  0560  0008               	return
  5987  0561                     __end_of_INT_SetInterruptHandler:	
  5988                           
  5989                           	psect	text25
  5990  049F                     __ptext25:	
  5991 ;; *************** function _EUSART_Initialize *****************
  5992 ;; Defined at:
  5993 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;		None
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;		None
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  1    wreg      void 
  6000 ;; Registers used:
  6001 ;;		wreg, status,2, status,0, pclath, cstack
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6007 ;;      Params:         0       0       0       0       0       0       0       0
  6008 ;;      Locals:         0       0       0       0       0       0       0       0
  6009 ;;      Temps:          0       0       0       0       0       0       0       0
  6010 ;;      Totals:         0       0       0       0       0       0       0       0
  6011 ;;Total ram usage:        0 bytes
  6012 ;; Hardware stack levels used:    1
  6013 ;; Hardware stack levels required when called:    5
  6014 ;; This function calls:
  6015 ;;		_EUSART_SetErrorHandler
  6016 ;;		_EUSART_SetFramingErrorHandler
  6017 ;;		_EUSART_SetOverrunErrorHandler
  6018 ;; This function is called by:
  6019 ;;		_SYSTEM_Initialize
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           
  6024                           ;psect for function _EUSART_Initialize
  6025  049F                     _EUSART_Initialize:	
  6026                           
  6027                           ;eusart.c: 71: BAUD1CON = 0x08;
  6028                           
  6029                           ;incstack = 0
  6030                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6031  049F  3008               	movlw	8
  6032  04A0  0023               	movlb	3	; select bank3
  6033  04A1  009F               	movwf	31	;volatile
  6034                           
  6035                           ;eusart.c: 74: RC1STA = 0x90;
  6036  04A2  3090               	movlw	144
  6037  04A3  009D               	movwf	29	;volatile
  6038                           
  6039                           ;eusart.c: 77: TX1STA = 0x24;
  6040  04A4  3024               	movlw	36
  6041  04A5  009E               	movwf	30	;volatile
  6042                           
  6043                           ;eusart.c: 80: SP1BRGL = 0x08;
  6044  04A6  3008               	movlw	8
  6045  04A7  009B               	movwf	27	;volatile
  6046                           
  6047                           ;eusart.c: 83: SP1BRGH = 0x00;
  6048  04A8  019C               	clrf	28	;volatile
  6049                           
  6050                           ;eusart.c: 86: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  6051  04A9  3000               	movlw	0
  6052  04AA  0020               	movlb	0	; select bank0
  6053  04AB  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  6054  04AC  3000               	movlw	0
  6055  04AD  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  6056  04AE  3185  2567  3184   	fcall	_EUSART_SetFramingErrorHandler
  6057                           
  6058                           ;eusart.c: 87: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  6059  04B1  3000               	movlw	0
  6060  04B2  0020               	movlb	0	; select bank0
  6061  04B3  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  6062  04B4  3000               	movlw	0
  6063  04B5  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  6064  04B6  3185  2561  3184   	fcall	_EUSART_SetOverrunErrorHandler
  6065                           
  6066                           ;eusart.c: 88: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  6067  04B9  3000               	movlw	0
  6068  04BA  0020               	movlb	0	; select bank0
  6069  04BB  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  6070  04BC  3000               	movlw	0
  6071  04BD  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  6072  04BE  3185  256D         	fcall	_EUSART_SetErrorHandler
  6073                           
  6074                           ;eusart.c: 90: eusartRxLastError.status = 0;
  6075  04C0  0020               	movlb	0	; select bank0
  6076  04C1  01CA               	clrf	_eusartRxLastError	;volatile
  6077  04C2  0008               	return
  6078  04C3                     __end_of_EUSART_Initialize:	
  6079                           
  6080                           	psect	text26
  6081  0561                     __ptext26:	
  6082 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6083 ;; Defined at:
  6084 ;;		line 170 in file "mcc_generated_files/eusart.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6087 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;		None
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  1    wreg      void 
  6092 ;; Registers used:
  6093 ;;		wreg
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6099 ;;      Params:         0       2       0       0       0       0       0       0
  6100 ;;      Locals:         0       0       0       0       0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0       0
  6102 ;;      Totals:         0       2       0       0       0       0       0       0
  6103 ;;Total ram usage:        2 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:    4
  6106 ;; This function calls:
  6107 ;;		Nothing
  6108 ;; This function is called by:
  6109 ;;		_EUSART_Initialize
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           
  6114                           ;psect for function _EUSART_SetOverrunErrorHandler
  6115  0561                     _EUSART_SetOverrunErrorHandler:	
  6116                           
  6117                           ;eusart.c: 171: EUSART_OverrunErrorHandler = interruptHandler;
  6118                           
  6119                           ;incstack = 0
  6120                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6121  0561  0020               	movlb	0	; select bank0
  6122  0562  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  6123  0563  00D2               	movwf	_EUSART_OverrunErrorHandler+1
  6124  0564  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  6125  0565  00D1               	movwf	_EUSART_OverrunErrorHandler
  6126  0566  0008               	return
  6127  0567                     __end_of_EUSART_SetOverrunErrorHandler:	
  6128                           
  6129                           	psect	text27
  6130  0567                     __ptext27:	
  6131 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6132 ;; Defined at:
  6133 ;;		line 166 in file "mcc_generated_files/eusart.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6136 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;		None
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1    wreg      void 
  6141 ;; Registers used:
  6142 ;;		wreg
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6148 ;;      Params:         0       2       0       0       0       0       0       0
  6149 ;;      Locals:         0       0       0       0       0       0       0       0
  6150 ;;      Temps:          0       0       0       0       0       0       0       0
  6151 ;;      Totals:         0       2       0       0       0       0       0       0
  6152 ;;Total ram usage:        2 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; Hardware stack levels required when called:    4
  6155 ;; This function calls:
  6156 ;;		Nothing
  6157 ;; This function is called by:
  6158 ;;		_EUSART_Initialize
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           
  6163                           ;psect for function _EUSART_SetFramingErrorHandler
  6164  0567                     _EUSART_SetFramingErrorHandler:	
  6165                           
  6166                           ;eusart.c: 167: EUSART_FramingErrorHandler = interruptHandler;
  6167                           
  6168                           ;incstack = 0
  6169                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6170  0567  0020               	movlb	0	; select bank0
  6171  0568  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  6172  0569  00D4               	movwf	_EUSART_FramingErrorHandler+1
  6173  056A  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  6174  056B  00D3               	movwf	_EUSART_FramingErrorHandler
  6175  056C  0008               	return
  6176  056D                     __end_of_EUSART_SetFramingErrorHandler:	
  6177                           
  6178                           	psect	text28
  6179  056D                     __ptext28:	
  6180 ;; *************** function _EUSART_SetErrorHandler *****************
  6181 ;; Defined at:
  6182 ;;		line 174 in file "mcc_generated_files/eusart.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6185 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;		None
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  1    wreg      void 
  6190 ;; Registers used:
  6191 ;;		wreg
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6197 ;;      Params:         0       2       0       0       0       0       0       0
  6198 ;;      Locals:         0       0       0       0       0       0       0       0
  6199 ;;      Temps:          0       0       0       0       0       0       0       0
  6200 ;;      Totals:         0       2       0       0       0       0       0       0
  6201 ;;Total ram usage:        2 bytes
  6202 ;; Hardware stack levels used:    1
  6203 ;; Hardware stack levels required when called:    4
  6204 ;; This function calls:
  6205 ;;		Nothing
  6206 ;; This function is called by:
  6207 ;;		_EUSART_Initialize
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           
  6212                           ;psect for function _EUSART_SetErrorHandler
  6213  056D                     _EUSART_SetErrorHandler:	
  6214                           
  6215                           ;eusart.c: 175: EUSART_ErrorHandler = interruptHandler;
  6216                           
  6217                           ;incstack = 0
  6218                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6219  056D  0020               	movlb	0	; select bank0
  6220  056E  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  6221  056F  00D0               	movwf	_EUSART_ErrorHandler+1
  6222  0570  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  6223  0571  00CF               	movwf	_EUSART_ErrorHandler
  6224  0572  0008               	return
  6225  0573                     __end_of_EUSART_SetErrorHandler:	
  6226                           
  6227                           	psect	text29
  6228  0573                     __ptext29:	
  6229 ;; *************** function _DAC_Initialize *****************
  6230 ;; Defined at:
  6231 ;;		line 58 in file "mcc_generated_files/dac.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;		None
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;		None
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1    wreg      void 
  6238 ;; Registers used:
  6239 ;;		wreg
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6245 ;;      Params:         0       0       0       0       0       0       0       0
  6246 ;;      Locals:         0       0       0       0       0       0       0       0
  6247 ;;      Temps:          0       0       0       0       0       0       0       0
  6248 ;;      Totals:         0       0       0       0       0       0       0       0
  6249 ;;Total ram usage:        0 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; Hardware stack levels required when called:    4
  6252 ;; This function calls:
  6253 ;;		Nothing
  6254 ;; This function is called by:
  6255 ;;		_SYSTEM_Initialize
  6256 ;;		_main
  6257 ;; This function uses a non-reentrant model
  6258 ;;
  6259                           
  6260                           
  6261                           ;psect for function _DAC_Initialize
  6262  0573                     _DAC_Initialize:	
  6263                           
  6264                           ;dac.c: 61: DAC1CON0 = 0x80;
  6265                           
  6266                           ;incstack = 0
  6267                           ; Regs used in _DAC_Initialize: [wreg]
  6268  0573  3080               	movlw	128
  6269  0574  0022               	movlb	2	; select bank2
  6270  0575  0098               	movwf	24	;volatile
  6271                           
  6272                           ;dac.c: 63: DAC1CON1 = 0xFF;
  6273  0576  30FF               	movlw	255
  6274  0577  0099               	movwf	25	;volatile
  6275  0578  0008               	return
  6276  0579                     __end_of_DAC_Initialize:	
  6277                           
  6278                           	psect	intentry
  6279  0004                     __pintentry:	
  6280 ;; *************** function _INTERRUPT_InterruptManager *****************
  6281 ;; Defined at:
  6282 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;		None
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;		None
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1    wreg      void 
  6289 ;; Registers used:
  6290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6296 ;;      Params:         0       0       0       0       0       0       0       0
  6297 ;;      Locals:         0       0       0       0       0       0       0       0
  6298 ;;      Temps:          0       0       0       0       0       0       0       0
  6299 ;;      Totals:         0       0       0       0       0       0       0       0
  6300 ;;Total ram usage:        0 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    3
  6303 ;; This function calls:
  6304 ;;		_INT_ISR
  6305 ;;		_PIN_MANAGER_IOC
  6306 ;; This function is called by:
  6307 ;;		Interrupt level 1
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311  0004                     _INTERRUPT_InterruptManager:	
  6312                           
  6313                           ;incstack = 0
  6314  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6315                           
  6316                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6317  0005  3180               	pagesel	$
  6318                           
  6319                           ;interrupt_manager.c: 55: if(INTCONbits.INTE == 1 && INTCONbits.INTF == 1)
  6320  0006  1A0B               	btfsc	11,4	;volatile
  6321  0007  1C8B               	btfss	11,1	;volatile
  6322  0008  280D               	goto	i1l126
  6323                           
  6324                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: INT_ISR();
  6325  0009  3185  258E  3180   	fcall	_INT_ISR
  6326                           
  6327                           ;interrupt_manager.c: 58: }
  6328  000C  2812               	goto	i1l130
  6329  000D                     i1l126:	
  6330                           
  6331                           ;interrupt_manager.c: 59: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  6332  000D  198B               	btfsc	11,3	;volatile
  6333  000E  1C0B               	btfss	11,0	;volatile
  6334  000F  2812               	goto	i1l130
  6335                           
  6336                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: PIN_MANAGER_IOC();
  6337  0010  3185  2592         	fcall	_PIN_MANAGER_IOC
  6338  0012                     i1l130:	
  6339                           ;interrupt_manager.c: 62: }
  6340                           
  6341  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6342  0013  0009               	retfie
  6343  0014                     __end_of_INTERRUPT_InterruptManager:	
  6344                           
  6345                           	psect	text31
  6346  0592                     __ptext31:	
  6347 ;; *************** function _PIN_MANAGER_IOC *****************
  6348 ;; Defined at:
  6349 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;		None
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;		None
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  1    wreg      void 
  6356 ;; Registers used:
  6357 ;;		None
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6363 ;;      Params:         0       0       0       0       0       0       0       0
  6364 ;;      Locals:         0       0       0       0       0       0       0       0
  6365 ;;      Temps:          0       0       0       0       0       0       0       0
  6366 ;;      Totals:         0       0       0       0       0       0       0       0
  6367 ;;Total ram usage:        0 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		_INTERRUPT_InterruptManager
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           
  6377                           ;psect for function _PIN_MANAGER_IOC
  6378  0592                     _PIN_MANAGER_IOC:	
  6379                           
  6380                           ;incstack = 0
  6381                           ; Regs used in _PIN_MANAGER_IOC: []
  6382  0592  0008               	return
  6383  0593                     __end_of_PIN_MANAGER_IOC:	
  6384                           
  6385                           	psect	text32
  6386  058E                     __ptext32:	
  6387 ;; *************** function _INT_ISR *****************
  6388 ;; Defined at:
  6389 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6403 ;;      Params:         0       0       0       0       0       0       0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0       0
  6406 ;;      Totals:         0       0       0       0       0       0       0       0
  6407 ;;Total ram usage:        0 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:    2
  6410 ;; This function calls:
  6411 ;;		_INT_CallBack
  6412 ;; This function is called by:
  6413 ;;		_INTERRUPT_InterruptManager
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           
  6418                           ;psect for function _INT_ISR
  6419  058E                     _INT_ISR:	
  6420                           
  6421                           ;ext_int.c: 56: (INTCONbits.INTF = 0);
  6422                           
  6423                           ;incstack = 0
  6424                           ; Regs used in _INT_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6425  058E  108B               	bcf	11,1	;volatile
  6426                           
  6427                           ;ext_int.c: 59: INT_CallBack();
  6428  058F  3185  251E         	fcall	_INT_CallBack
  6429  0591  0008               	return
  6430  0592                     __end_of_INT_ISR:	
  6431                           
  6432                           	psect	text33
  6433  051E                     __ptext33:	
  6434 ;; *************** function _INT_CallBack *****************
  6435 ;; Defined at:
  6436 ;;		line 62 in file "mcc_generated_files/ext_int.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;		None
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;		None
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  1    wreg      void 
  6443 ;; Registers used:
  6444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6450 ;;      Params:         0       0       0       0       0       0       0       0
  6451 ;;      Locals:         0       0       0       0       0       0       0       0
  6452 ;;      Temps:          0       0       0       0       0       0       0       0
  6453 ;;      Totals:         0       0       0       0       0       0       0       0
  6454 ;;Total ram usage:        0 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; Hardware stack levels required when called:    1
  6457 ;; This function calls:
  6458 ;;		Absolute function
  6459 ;;		_INT_DefaultInterruptHandler
  6460 ;; This function is called by:
  6461 ;;		_INT_ISR
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           
  6466                           ;psect for function _INT_CallBack
  6467  051E                     _INT_CallBack:	
  6468                           
  6469                           ;ext_int.c: 65: if(INT_InterruptHandler)
  6470                           
  6471                           ;incstack = 0
  6472                           ; Regs used in _INT_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6473  051E  0020               	movlb	0	; select bank0
  6474  051F  084D               	movf	_INT_InterruptHandler,w
  6475  0520  044E               	iorwf	_INT_InterruptHandler+1,w
  6476  0521  1903               	btfsc	3,2
  6477  0522  0008               	return
  6478                           
  6479                           ;ext_int.c: 66: {;ext_int.c: 67: INT_InterruptHandler();
  6480  0523  084E               	movf	_INT_InterruptHandler+1,w
  6481  0524  008A               	movwf	10
  6482  0525  084D               	movf	_INT_InterruptHandler,w
  6483  0526  000A               	callw
  6484  0527  3185               	pagesel	$
  6485  0528  0008               	return
  6486  0529                     __end_of_INT_CallBack:	
  6487                           
  6488                           	psect	text34
  6489  0234                     __ptext34:	
  6490 ;; *************** function _INT_DefaultInterruptHandler *****************
  6491 ;; Defined at:
  6492 ;;		line 75 in file "mcc_generated_files/ext_int.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;		None
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;  time            1    1[COMMON] unsigned char 
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  1    wreg      void 
  6499 ;; Registers used:
  6500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6506 ;;      Params:         0       0       0       0       0       0       0       0
  6507 ;;      Locals:         1       0       0       0       0       0       0       0
  6508 ;;      Temps:          1       0       0       0       0       0       0       0
  6509 ;;      Totals:         2       0       0       0       0       0       0       0
  6510 ;;Total ram usage:        2 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; This function calls:
  6513 ;;		Nothing
  6514 ;; This function is called by:
  6515 ;;		_EXT_INT_Initialize
  6516 ;;		_INT_CallBack
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           
  6521                           ;psect for function _INT_DefaultInterruptHandler
  6522  0234                     _INT_DefaultInterruptHandler:	
  6523                           
  6524                           ;ext_int.c: 77: uint8_t time = TMR0;
  6525                           
  6526                           ;incstack = 0
  6527                           ; Regs used in _INT_DefaultInterruptHandler: [wreg-fsr1h+status,2+status,0]
  6528  0234  0020               	movlb	0	; select bank0
  6529  0235  0815               	movf	21,w	;volatile
  6530  0236  00F7               	movwf	??_INT_DefaultInterruptHandler
  6531  0237  0877               	movf	??_INT_DefaultInterruptHandler,w
  6532  0238  00F8               	movwf	INT_DefaultInterruptHandler@time
  6533                           
  6534                           ;ext_int.c: 78: TMR0 = 0;
  6535  0239  0195               	clrf	21	;volatile
  6536                           
  6537                           ;ext_int.c: 81: if (INTCONbits.TMR0IF){
  6538  023A  190B               	btfsc	11,2	;volatile
  6539                           
  6540                           ;ext_int.c: 82: time = 0;
  6541  023B  01F8               	clrf	INT_DefaultInterruptHandler@time
  6542                           
  6543                           ;ext_int.c: 83: };ext_int.c: 84: INTCONbits.TMR0IF = 0;
  6544  023C  110B               	bcf	11,2	;volatile
  6545                           
  6546                           ;ext_int.c: 86: switch(ir_code.state){
  6547  023D  2A8C               	goto	i1l1721
  6548  023E                     i1l1679:	
  6549                           
  6550                           ;ext_int.c: 89: if (time >= 180 && time <= 243){
  6551  023E  30B4               	movlw	180
  6552  023F  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6553  0240  1C03               	skipc
  6554  0241  2A97               	goto	i1l255
  6555  0242  30F4               	movlw	244
  6556  0243  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6557  0244  1803               	skipnc
  6558  0245  2A97               	goto	i1l255
  6559                           
  6560                           ;ext_int.c: 90: ir_code.n_bits = 0;
  6561  0246  01F1               	clrf	_ir_code
  6562                           
  6563                           ;ext_int.c: 91: ir_code.state = STATE_RECEIVING;
  6564  0247  01F2               	clrf	_ir_code+1
  6565  0248  0AF2               	incf	_ir_code+1,f
  6566                           
  6567                           ;ext_int.c: 92: stats[0] = time;
  6568  0249  0878               	movf	INT_DefaultInterruptHandler@time,w
  6569  024A  00F7               	movwf	??_INT_DefaultInterruptHandler
  6570  024B  0877               	movf	??_INT_DefaultInterruptHandler,w
  6571  024C  0021               	movlb	1	; select bank1
  6572  024D  00A0               	movwf	_stats^(0+128)
  6573  024E  2A97               	goto	i1l255
  6574  024F                     i1l1689:	
  6575                           
  6576                           ;ext_int.c: 97: ir_code.code <<= 1;
  6577  024F  3001               	movlw	1
  6578  0250                     u81_25:	
  6579  0250  35F3               	lslf	_ir_code+2,f
  6580  0251  0DF4               	rlf	_ir_code+3,f
  6581  0252  0DF5               	rlf	_ir_code+4,f
  6582  0253  0DF6               	rlf	_ir_code+5,f
  6583  0254  0B89               	decfsz	9,f
  6584  0255  2A50               	goto	u81_25
  6585                           
  6586                           ;ext_int.c: 98: if (time >= 29 && time <= 41){
  6587  0256  301D               	movlw	29
  6588  0257  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6589  0258  1C03               	skipc
  6590  0259  2A6C               	goto	i1l1701
  6591  025A  302A               	movlw	42
  6592  025B  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6593  025C  1803               	skipnc
  6594  025D  2A6C               	goto	i1l1701
  6595                           
  6596                           ;ext_int.c: 99: stats[1+ir_code.n_bits] = time;
  6597  025E  0878               	movf	INT_DefaultInterruptHandler@time,w
  6598  025F  00F7               	movwf	??_INT_DefaultInterruptHandler
  6599  0260  0871               	movf	_ir_code,w
  6600  0261  3EA1               	addlw	(low ((_stats| 0+1)))& (0+255)
  6601  0262  0086               	movwf	6
  6602  0263  0187               	clrf	7
  6603  0264  0877               	movf	??_INT_DefaultInterruptHandler,w
  6604  0265  0081               	movwf	1
  6605                           
  6606                           ;ext_int.c: 100: ir_code.code |= 1;
  6607  0266  1473               	bsf	_ir_code+2,0
  6608  0267                     i1l1699:	
  6609                           
  6610                           ;ext_int.c: 101: ir_code.n_bits++;
  6611  0267  3001               	movlw	1
  6612  0268  00F7               	movwf	??_INT_DefaultInterruptHandler
  6613  0269  0877               	movf	??_INT_DefaultInterruptHandler,w
  6614  026A  07F1               	addwf	_ir_code,f
  6615                           
  6616                           ;ext_int.c: 102: } else if (time >= 14 && time <= 20){
  6617  026B  2A7F               	goto	i1l1711
  6618  026C                     i1l1701:	
  6619  026C  300E               	movlw	14
  6620  026D  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6621  026E  1C03               	skipc
  6622  026F  2A7D               	goto	i1l1709
  6623  0270  3015               	movlw	21
  6624  0271  0278               	subwf	INT_DefaultInterruptHandler@time,w
  6625  0272  1803               	skipnc
  6626  0273  2A7D               	goto	i1l1709
  6627                           
  6628                           ;ext_int.c: 103: stats[1+ir_code.n_bits] = time;
  6629  0274  0878               	movf	INT_DefaultInterruptHandler@time,w
  6630  0275  00F7               	movwf	??_INT_DefaultInterruptHandler
  6631  0276  0871               	movf	_ir_code,w
  6632  0277  3EA1               	addlw	(low ((_stats| 0+1)))& (0+255)
  6633  0278  0086               	movwf	6
  6634  0279  0187               	clrf	7
  6635  027A  0877               	movf	??_INT_DefaultInterruptHandler,w
  6636  027B  0081               	movwf	1
  6637  027C  2A67               	goto	i1l1699
  6638  027D                     i1l1709:	
  6639                           
  6640                           ;ext_int.c: 107: ir_code.state = STATE_RESET;
  6641  027D  01F2               	clrf	_ir_code+1
  6642                           
  6643                           ;ext_int.c: 108: break;
  6644  027E  2A97               	goto	i1l255
  6645  027F                     i1l1711:	
  6646                           
  6647                           ;ext_int.c: 109: };ext_int.c: 110: if (32 == ir_code.n_bits){
  6648  027F  3020               	movlw	32
  6649  0280  0671               	xorwf	_ir_code,w
  6650  0281  1D03               	btfss	3,2
  6651  0282  2A97               	goto	i1l255
  6652                           
  6653                           ;ext_int.c: 113: if (ir_code.command == ((~ir_code.command_b) & 0xff)){
  6654  0283  0973               	comf	_ir_code+2,w
  6655  0284  0674               	xorwf	_ir_code+3,w
  6656  0285  1D03               	skipz
  6657  0286  2A7D               	goto	i1l1709
  6658                           
  6659                           ;ext_int.c: 114: ir_code.state = STATE_DONE;
  6660  0287  3002               	movlw	2
  6661  0288  00F7               	movwf	??_INT_DefaultInterruptHandler
  6662  0289  0877               	movf	??_INT_DefaultInterruptHandler,w
  6663  028A  00F2               	movwf	_ir_code+1
  6664                           
  6665                           ;ext_int.c: 115: } else {
  6666  028B  2A97               	goto	i1l255
  6667  028C                     i1l1721:	
  6668  028C  0872               	movf	_ir_code+1,w
  6669                           
  6670                           ; Switch size 1, requested type "simple"
  6671                           ; Number of cases is 3, Range of values is 0 to 2
  6672                           ; switch strategies available:
  6673                           ; Name         Instructions Cycles
  6674                           ; simple_byte           10     6 (average)
  6675                           ; direct_byte           12     6 (fixed)
  6676                           ; jumptable            260     6 (fixed)
  6677                           ;	Chosen strategy is simple_byte
  6678  028D  3A00               	xorlw	0	; case 0
  6679  028E  1903               	skipnz
  6680  028F  2A3E               	goto	i1l1679
  6681  0290  3A01               	xorlw	1	; case 1
  6682  0291  1903               	skipnz
  6683  0292  2A4F               	goto	i1l1689
  6684  0293  3A03               	xorlw	3	; case 2
  6685  0294  1903               	skipnz
  6686  0295  2A97               	goto	i1l255
  6687  0296  2A7D               	goto	i1l1709
  6688  0297                     i1l255:	
  6689                           
  6690                           ;ext_int.c: 129: INTCONbits.INTF = 0;
  6691  0297  108B               	bcf	11,1	;volatile
  6692  0298  0008               	return
  6693  0299                     __end_of_INT_DefaultInterruptHandler:	
  6694  007E                     btemp	set	126	;btemp
  6695  007E                     int$flags	set	126
  6696  007E                     wtemp0	set	126


Data Sizes:
    Strings     40
    Constant    10
    Data        0
    BSS         54
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80     31      53
    BANK1            80      0      33
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[15]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    process_remote_command@code	PTR struct . size(1) Largest target is 6
		 -> ir_code(COMMON[6]), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->_lowBattery
    _startUp->_setLEDColor
    _process_remote_command->_selectSomething
    _selectSomething->_setLEDColor
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _lowBattery->_setLEDColor
    _battery_voltage->___aldiv

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INT_CallBack->_INT_DefaultInterruptHandler

Critical Paths under _main in BANK0

    _main->_process_remote_command
    _startUp->_setLEDColor
    _process_remote_command->_selectFrequency
    _selectSomething->_setLEDColor
    _selectFrequency->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _lowBattery->_setLEDColor
    _battery_voltage->___aldiv
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   22787
                                             30 BANK0      1     1      0
                     _DAC_Initialize
                    _OPA1_Initialize
                    _OPA2_Initialize
                  _SYSTEM_Initialize
                    _battery_voltage
                            _initLED
                         _lowBattery
             _process_remote_command
                            _startUp
 ---------------------------------------------------------------------------------
 (1) _startUp                                              3     3      0    3493
                                              3 COMMON     1     1      0
                                              2 BANK0      2     2      0
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (1) _process_remote_command                               3     3      0   14448
                                             27 BANK0      3     3      0
                             _printf
                    _selectFrequency
                    _selectSomething
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (2) _selectSomething                                      2     2      0    3425
                                              3 COMMON     2     2      0
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (2) _selectFrequency                                      2     2      0    5475
                                             25 BANK0      2     2      0
                             _printf
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (3) _printf                                              22    18      4    2050
                                             11 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      62
                                              3 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART_Write                                         1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     470
                                              3 COMMON     2     2      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     479
                                              2 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _lowBattery                                           2     2      0    3425
                                              3 COMMON     2     2      0
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (2) _setLEDColor                                          3     1      2    3425
                                              2 COMMON     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initLED                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _battery_voltage                                      2     0      2     921
                                             14 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     921
                                              2 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     500
                     _DAC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
                    _OPA1_Initialize
                    _OPA2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OPA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OPA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     125
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     375
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     200
                            _INT_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT_ISR                                              0     0      0     200
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT_CallBack                                         0     0      0     200
                   Absolute function *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _INT_DefaultInterruptHandler                          2     2      0     200
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DAC_Initialize
   _OPA1_Initialize
   _OPA2_Initialize
   _SYSTEM_Initialize
     _DAC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OPA1_Initialize
     _OPA2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _battery_voltage
     ___aldiv
   _initLED
   _lowBattery
     _setLEDColor
   _process_remote_command
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART_Write
     _selectFrequency
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
           _EUSART_Write
       _setLEDColor
     _selectSomething
       _setLEDColor
     _setLEDColor
   _startUp
     _setLEDColor

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      62       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1F      35       6       66.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      21       8       41.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      62      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jul  4 17:37:21 2020

                                  __CFG_CP$OFF 0000                        __end_of_OPA1_Initialize 058E  
                              _timer0ReloadVal 0070                                    __CFG_LVP$ON 0000  
                                          l421 0403                                            l418 03F9  
                                          l197 053E                                            l483 03D5  
                                          l582 01B1                                            l657 01C3  
                                          _PR2 001B                 ?_EUSART_SetFramingErrorHandler 0020  
                              _TMR2_Initialize 0545                                   __CFG_BORV$LO 0000  
                                          wreg 0009                       __size_of_selectFrequency 0028  
                                         l2203 0138                                           l2213 014E  
                                         l2225 016F                                           l2155 0382  
                                         l2147 0364                                           l2171 0426  
                                         l2235 017C                                           l2219 0150  
                                         l2411 0090                                           l2149 0370  
                                         l2173 0432                                           l2181 0447  
                                         l2229 0177                                           l2237 0104  
                                         l2271 01D4                                           l2159 038B  
                                         l2281 01F2                                           l2177 043E  
                                         l2409 008C                                           l2433 00B0  
                                         l2361 0329                                           l2419 009E  
                                         l2435 00DE                                           l2371 0039  
                                         l2451 03E7                                           l2293 021D  
                                         l2197 0120                                           l2429 00AE  
                                         l2279 01E4                                           l2391 006C  
                                         l2383 0054                                           l2297 022B  
                                         l2289 0212                                           l2385 0064  
                                         l2379 004D                                           l2389 0068  
                                         l2399 0087                                           STR_1 04E1  
                                         STR_2 057E                                           STR_3 057E  
                                         STR_4 04F6                                           _LATA 010C  
                                         _LATB 010D                                __end_of_INT_ISR 0592  
                                         _LATC 010E                                           u1505 037B  
                                         u1515 0383                                           u1615 0165  
                                         u1545 0429                                           u1715 01F3  
                                         u1475 0367                                           u1725 0207  
                                         u1565 0438                                           u1735 0213  
                                         u1495 0371                                           u1575 043F  
                                         u1907 00F1                                           u1917 02A5  
                                         u1695 01E7                                           u1927 02B7  
                                         u1937 02C9                                           u1785 0356  
                                         u1865 03E2                                           u1947 02DB  
                                         u1957 0489                                           u1967 045E  
                                         u1887 0336                                           u1977 0470  
                                         u1897 0344                                           _TMR0 0015  
                                         _TMR2 001A                        __end_of_OPA2_Initialize 058A  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           _flag 0046  
                                         _main 03C1                                           _duty 0044  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E            __end_of_INT_DefaultInterruptHandler 0299  
                  _INT_DefaultInterruptHandler 0234                                           start 0014  
                                __CFG_IESO$OFF 0000                __end_of_INT_SetInterruptHandler 0561  
                                __CFG_MCLRE$ON 0000                        __end_of_TMR0_Initialize 053D  
                                ?_EUSART_Write 0077                 __size_of_OSCILLATOR_Initialize 0008  
                __end_of_OSCILLATOR_Initialize 0555                                __end_of___aldiv 0234  
                                        ?_main 0077                                          _ADRES 009B  
                                __CFG_WDTE$OFF 0000                                          _T2CON 001C  
                              __end_of___lwdiv 0390                                          i1l130 0012  
                                        i1l126 000D                                          i1l255 0297  
                              __end_of___lwmod 044C                                   ?_setLEDColor 0020  
                     __size_of_selectSomething 0049                                          _TRISA 008C  
                                        _TRISB 008D                                          u81_25 0250  
                                        _TRISC 008E                                          _RXPPS 0E24  
                              __end_of_initLED 0326                        __end_of_PIN_MANAGER_IOC 0593  
                              __end_of_dpowers 0533                                 _WDT_Initialize 0582  
                                        _putch 0579                                          _stats 00A0  
                               __CFG_BOREN$OFF 0000                                          pclath 000A  
                              __end_of_startUp 035B                                          status 0003  
                      ?_process_remote_command 0077                                          wtemp0 007E  
                             ??_DAC_Initialize 0079                                __initialization 0016  
                                 __end_of_main 03F1                                 ??_EUSART_Write 0079  
                      __end_of_TMR2_Initialize 054D                                 __CFG_LPBOR$OFF 0000  
                  ?_INTERRUPT_InterruptManager 0077                               ?_OPA1_Initialize 0077  
                                       ??_main 003E                       __size_of_battery_voltage 002E  
                               __CFG_PLLEN$OFF 0000                         __end_of_WDT_Initialize 0586  
                                    ??_INT_ISR 0079              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 0051                                         _CCPR1L 0291  
                               __CFG_ZCDDIS$ON 0000                                         _ANSELA 018C  
                                       ?_putch 0077                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RA5PPS 0E95  
                                       _RC1STA 019D                                         _RC4PPS 0EA4  
                                       _RB7PPS 0E9F                                         _RC5PPS 0EA5  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         i1l1701 026C  
                                       i1l1711 027F                                         i1l1721 028C  
               __end_of_process_remote_command 00FF                                         i1l1709 027D  
                                       i1l1679 023E                                         i1l1689 024F  
                                       i1l1699 0267                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       _FVRCON 0117                                         _INTPPS 0E10  
                             ?_OPA2_Initialize 0077                                         _OSCCON 0099  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                              ??_selectFrequency 0039  
                               __CFG_PWRTE$OFF 0000                                         _Vdd_mv 003F  
                                    ??___aldiv 0079                                 __CFG_STVREN$ON 0000  
                                    ??___lwdiv 0079                                      ??___lwmod 007A  
                             ?_TMR0_Initialize 0077                                         _printf 00FF  
                                ?_INT_CallBack 0077                                      ??_initLED 0079  
                              ?_WDT_Initialize 0077               __size_of_INT_SetInterruptHandler 0006  
                                    ??_startUp 007A        INT_SetInterruptHandler@InterruptHandler 0020  
                             ?_PIN_MANAGER_IOC 0077                              ??_selectSomething 007A  
                            _SYSTEM_Initialize 04C3                        __end_of__initialization 002C  
                           ?_SYSTEM_Initialize 0077                                 __pcstackCOMMON 0077  
                          ??_SYSTEM_Initialize 0079                                  __end_of_putch 057E  
                             ?_TMR2_Initialize 0077                                 ??_INT_CallBack 0079  
                  __size_of_EXT_INT_Initialize 000C                                 _OPTION_REGbits 0095  
                         __size_of_setLEDColor 000D                ??_EUSART_SetOverrunErrorHandler 0079  
                            ??_battery_voltage 007A                      __end_of_SYSTEM_Initialize 04E1  
                                      ??_putch 007A                                     __pbssBANK0 003F  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 0545  
                                   __pmaintext 03C1                                __CFG_PPS1WAY$ON 0000  
                                   __pintentry 0004                                        ?_printf 002B  
                                      _OPA1CON 0511                                        _OPA2CON 0515  
                                      _LED_red 0049                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                                        _INT_ISR 058E  
                                      _OSCSTAT 009A                                        _OSCTUNE 0098  
                                      _PWM3DCH 0618                                        _PWM4DCH 061B  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                       ??_EUSART_SetErrorHandler 0079  
                                      _Vdac_mv 004B                                        ___aldiv 01B2  
                                      ___lwdiv 035B                                        ___lwmod 041F  
                                      __ptext1 0326                                        __ptext2 0030  
                                      __ptext3 0299                                        __ptext4 0477  
                                      __ptext5 00FF                                        __ptext6 0579  
                                      __ptext7 053D                                        __ptext8 041F  
                                      __ptext9 035B                                __size_of_printf 00B3  
                                      _initLED 02E2                                        _ir_code 0071  
                                   _lowBattery 044C                                        _dpowers 0529  
                        _OSCILLATOR_Initialize 054D                                      _T2CONbits 001C  
                                      _current 0043                               ___aldiv@dividend 0024  
                     ??_PIN_MANAGER_Initialize 0079                        _INT_SetInterruptHandler 055B  
                              _selectFrequency 0477                                        _startUp 0326  
                   __size_of_SYSTEM_Initialize 001E                                        clrloop0 0556  
                         end_of_initialization 002C          __end_of_EUSART_SetOverrunErrorHandler 0567  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0561  
                                    _LED_green 0048                           __end_of_INT_CallBack 0529  
                            _EUSART_Initialize 049F                               __CFG_CLKOUTEN$ON 0000  
                           ?_EUSART_Initialize 0077                                        printf@c 0038  
                                      printf@f 002B                               ___aldiv@quotient 002A  
                              setLEDColor@blue 0021                            ??_EUSART_Initialize 0079  
                             ??_WDT_Initialize 0079                                _selectSomething 0299  
                             __CFG_FOSC$INTOSC 0000                          __size_of_EUSART_Write 0008  
                     __size_of_OPA1_Initialize 0004                __size_of_EUSART_SetErrorHandler 0006  
                    __end_of_EUSART_Initialize 04C3                                    _CCP1CONbits 0293  
                     __size_of_OPA2_Initialize 0004                     _EUSART_DefaultErrorHandler 0000  
                              _battery_voltage 03F1                                   _EUSART_Write 053D  
                       ?_OSCILLATOR_Initialize 0077                        __end_of_selectFrequency 049F  
                    ??_INT_SetInterruptHandler 0079                        __size_of_DAC_Initialize 0006  
                                  ?_lowBattery 0077                                 __end_of_printf 01B2  
                          start_initialization 0016                       __size_of_TMR0_Initialize 000A  
              __size_of_PIN_MANAGER_Initialize 0031                                    putch@txData 007A  
                     __size_of_PIN_MANAGER_IOC 0001                   ?_INT_DefaultInterruptHandler 0077  
               ?_EUSART_SetOverrunErrorHandler 0020                     _EUSART_FramingErrorHandler 0053  
                      __end_of_selectSomething 02E2                         _EUSART_SetErrorHandler 056D  
                                  _CCPTMRSbits 029E                     __end_of_EXT_INT_Initialize 051E  
                                     ??_printf 002F                                  ??_setLEDColor 0079  
                                  __pbssCOMMON 0070                                      ___latbits 0001  
                     ??_process_remote_command 003B                                       ?_INT_ISR 0077  
                                __pcstackBANK0 0020                       __size_of_TMR2_Initialize 0008  
                        __size_of_INT_CallBack 000B                     __size_of_EUSART_Initialize 0024  
                            ??_OPA1_Initialize 0079                                      __pnvBANK0 004D  
                          __size_of_lowBattery 002B                               ___lwdiv@dividend 0022  
                       _PIN_MANAGER_Initialize 0390                        __end_of_battery_voltage 041F  
                ??_INT_DefaultInterruptHandler 0077                                       ?___aldiv 0020  
                                     ?___lwdiv 0020                                       ?___lwmod 0027  
                                     _DAC1CON0 0118                                       _DAC1CON1 0119  
                 ??_INTERRUPT_InterruptManager 0079                              ??_OPA2_Initialize 0079  
                             ?_selectFrequency 0077                                   _INT_CallBack 051E  
                                     _BAUD1CON 019F                                       ?_initLED 0077  
                                    _frequency 0045                               ___lwdiv@quotient 0025  
                                     ?_startUp 0077                            __end_of_setLEDColor 0512  
                                    _microamps 0041                                 __size_of_putch 0005  
                              ___aldiv@divisor 0020                              ??_TMR0_Initialize 0079  
                              ___aldiv@counter 0028         EUSART_SetErrorHandler@interruptHandler 0020  
                                     _LED_blue 0047                                      clear_ram0 0555  
                            _eusartRxLastError 004A            __size_of_INTERRUPT_InterruptManager 0010  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0079  
                             ?_selectSomething 0077                                 setLEDColor@red 0079  
            _EUSART_DefaultOverrunErrorHandler 0000                              ??_PIN_MANAGER_IOC 0077  
                                   _ADCON0bits 009D                                 _DAC_Initialize 0573  
                                   printf@flag 0034                                     printf@prec 0035  
         __size_of_INT_DefaultInterruptHandler 0065                __size_of_process_remote_command 00CF  
                             __size_of_INT_ISR 0004                              ??_TMR2_Initialize 0079  
                             ?_battery_voltage 002E                        ??_OSCILLATOR_Initialize 0079  
                          _EUSART_ErrorHandler 004F                               __size_of___aldiv 0082  
                       __end_of_DAC_Initialize 0579                               __size_of___lwdiv 0035  
                             __size_of___lwmod 002D                                   ??_lowBattery 007A  
                                  _setLEDColor 0505                               __size_of_initLED 0044  
                              ___lwdiv@divisor 0020                                ___lwdiv@counter 0024  
                                     __ptext10 044C                                       __ptext11 0505  
                                     __ptext20 054D                                       __ptext12 02E2  
                                     __ptext21 0586                                       __ptext13 03F1  
                                     __ptext22 058A                                       __ptext14 01B2  
                                     __ptext31 0592                                       __ptext23 0512  
                                     __ptext15 04C3                                       __ptext32 058E  
                                     __ptext24 055B                                       __ptext16 0582  
                                     __ptext33 051E                                       __ptext25 049F  
                                     __ptext17 0545                                       __ptext34 0234  
                                     __ptext26 0561                                       __ptext18 0533  
                                     __ptext27 0567                                       __ptext19 0390  
                                     __ptext28 056D                                       __ptext29 0573  
                             __size_of_startUp 0035                                  __size_of_main 0030  
                      ?_EUSART_SetErrorHandler 0020                         _process_remote_command 0030  
                                   _RC1STAbits 019D                             __end_of_lowBattery 0477  
EUSART_SetOverrunErrorHandler@interruptHandler 0020                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 0014                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 056D         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0567                                ?_DAC_Initialize 0077  
                                    printf@val 0036                                     _INTCONbits 000B  
              INT_DefaultInterruptHandler@time 0078                                    _PWM3DCLbits 0617  
                              _OPA1_Initialize 058A                                    _PWM4DCLbits 061A  
                                   _FVRCONbits 0117                           _INT_InterruptHandler 004D  
                                  _PWM3CONbits 0619                                    _PWM4CONbits 061C  
                           _EXT_INT_Initialize 0512                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000                               ___lwmod@dividend 0029  
                      ?_PIN_MANAGER_Initialize 0077                     process_remote_command@code 003D  
               __end_of_EUSART_SetErrorHandler 0573                            ?_EXT_INT_Initialize 0077  
                              _OPA2_Initialize 0586                                       printf@ap 0033  
EUSART_SetFramingErrorHandler@interruptHandler 0020                       ?_INT_SetInterruptHandler 0020  
                                     startUp@i 0022                                  __pstringtext1 0529  
                                __pstringtext2 04E1                                  __pstringtext3 04F6  
                                __pstringtext4 057E                                  __pstringtext5 0000  
                         ??_EXT_INT_Initialize 0079                                     _OPTION_REG 0095  
                             setLEDColor@green 0020                                ___lwmod@divisor 0027  
                              _TMR0_Initialize 0533                                ___lwmod@counter 007B  
                                 ___aldiv@sign 0029                                     _TX1STAbits 019E  
                           EUSART_Write@txData 0079                 __end_of_PIN_MANAGER_Initialize 03C1  
                              _PIN_MANAGER_IOC 0592  
