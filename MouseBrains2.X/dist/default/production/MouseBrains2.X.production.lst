

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jul 18 21:49:09 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16LF1708
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x7E,2
    60  0000                     
    61                           ; Version 1.45
    62                           ; Generated 16/11/2017 GMT
    63                           ; 
    64                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16LF1708 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  0111                     	;# 
   144  0112                     	;# 
   145  0113                     	;# 
   146  0114                     	;# 
   147  0115                     	;# 
   148  0116                     	;# 
   149  0117                     	;# 
   150  0118                     	;# 
   151  0119                     	;# 
   152  011C                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  018E                     	;# 
   156  0191                     	;# 
   157  0191                     	;# 
   158  0192                     	;# 
   159  0193                     	;# 
   160  0193                     	;# 
   161  0194                     	;# 
   162  0195                     	;# 
   163  0196                     	;# 
   164  0199                     	;# 
   165  0199                     	;# 
   166  0199                     	;# 
   167  019A                     	;# 
   168  019A                     	;# 
   169  019A                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019B                     	;# 
   175  019C                     	;# 
   176  019C                     	;# 
   177  019C                     	;# 
   178  019D                     	;# 
   179  019D                     	;# 
   180  019D                     	;# 
   181  019E                     	;# 
   182  019E                     	;# 
   183  019E                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  019F                     	;# 
   187  019F                     	;# 
   188  019F                     	;# 
   189  020C                     	;# 
   190  020D                     	;# 
   191  020E                     	;# 
   192  0211                     	;# 
   193  0211                     	;# 
   194  0212                     	;# 
   195  0212                     	;# 
   196  0213                     	;# 
   197  0213                     	;# 
   198  0214                     	;# 
   199  0214                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0216                     	;# 
   205  0216                     	;# 
   206  0217                     	;# 
   207  0217                     	;# 
   208  028C                     	;# 
   209  028D                     	;# 
   210  028E                     	;# 
   211  0291                     	;# 
   212  0291                     	;# 
   213  0292                     	;# 
   214  0293                     	;# 
   215  0293                     	;# 
   216  0298                     	;# 
   217  0298                     	;# 
   218  0299                     	;# 
   219  029A                     	;# 
   220  029A                     	;# 
   221  029E                     	;# 
   222  030C                     	;# 
   223  030D                     	;# 
   224  030E                     	;# 
   225  038C                     	;# 
   226  038D                     	;# 
   227  038E                     	;# 
   228  0391                     	;# 
   229  0392                     	;# 
   230  0393                     	;# 
   231  0394                     	;# 
   232  0395                     	;# 
   233  0396                     	;# 
   234  0397                     	;# 
   235  0398                     	;# 
   236  0399                     	;# 
   237  0415                     	;# 
   238  0416                     	;# 
   239  0417                     	;# 
   240  041C                     	;# 
   241  041D                     	;# 
   242  041E                     	;# 
   243  0511                     	;# 
   244  0515                     	;# 
   245  0617                     	;# 
   246  0618                     	;# 
   247  0619                     	;# 
   248  0619                     	;# 
   249  061A                     	;# 
   250  061B                     	;# 
   251  061C                     	;# 
   252  061C                     	;# 
   253  0691                     	;# 
   254  0692                     	;# 
   255  0693                     	;# 
   256  0694                     	;# 
   257  0695                     	;# 
   258  0696                     	;# 
   259  0697                     	;# 
   260  0698                     	;# 
   261  0699                     	;# 
   262  069A                     	;# 
   263  069B                     	;# 
   264  069C                     	;# 
   265  069D                     	;# 
   266  069E                     	;# 
   267  069F                     	;# 
   268  0E0F                     	;# 
   269  0E10                     	;# 
   270  0E11                     	;# 
   271  0E12                     	;# 
   272  0E13                     	;# 
   273  0E14                     	;# 
   274  0E15                     	;# 
   275  0E17                     	;# 
   276  0E20                     	;# 
   277  0E21                     	;# 
   278  0E22                     	;# 
   279  0E24                     	;# 
   280  0E25                     	;# 
   281  0E28                     	;# 
   282  0E29                     	;# 
   283  0E2A                     	;# 
   284  0E2B                     	;# 
   285  0E90                     	;# 
   286  0E91                     	;# 
   287  0E92                     	;# 
   288  0E94                     	;# 
   289  0E95                     	;# 
   290  0E9C                     	;# 
   291  0E9D                     	;# 
   292  0E9E                     	;# 
   293  0E9F                     	;# 
   294  0EA0                     	;# 
   295  0EA1                     	;# 
   296  0EA2                     	;# 
   297  0EA3                     	;# 
   298  0EA4                     	;# 
   299  0EA5                     	;# 
   300  0EA6                     	;# 
   301  0EA7                     	;# 
   302  0F0F                     	;# 
   303  0F10                     	;# 
   304  0F11                     	;# 
   305  0F12                     	;# 
   306  0F13                     	;# 
   307  0F14                     	;# 
   308  0F15                     	;# 
   309  0F16                     	;# 
   310  0F17                     	;# 
   311  0F18                     	;# 
   312  0F19                     	;# 
   313  0F1A                     	;# 
   314  0F1B                     	;# 
   315  0F1C                     	;# 
   316  0F1D                     	;# 
   317  0F1E                     	;# 
   318  0F1F                     	;# 
   319  0F20                     	;# 
   320  0F21                     	;# 
   321  0F22                     	;# 
   322  0F23                     	;# 
   323  0F24                     	;# 
   324  0F25                     	;# 
   325  0F26                     	;# 
   326  0F27                     	;# 
   327  0F28                     	;# 
   328  0F29                     	;# 
   329  0F2A                     	;# 
   330  0F2B                     	;# 
   331  0F2C                     	;# 
   332  0F2D                     	;# 
   333  0FE4                     	;# 
   334  0FE5                     	;# 
   335  0FE6                     	;# 
   336  0FE7                     	;# 
   337  0FE8                     	;# 
   338  0FE9                     	;# 
   339  0FEA                     	;# 
   340  0FEB                     	;# 
   341  0FED                     	;# 
   342  0FEE                     	;# 
   343  0FEF                     	;# 
   344  0000                     	;# 
   345  0001                     	;# 
   346  0002                     	;# 
   347  0003                     	;# 
   348  0004                     	;# 
   349  0005                     	;# 
   350  0006                     	;# 
   351  0007                     	;# 
   352  0008                     	;# 
   353  0009                     	;# 
   354  000A                     	;# 
   355  000B                     	;# 
   356  000C                     	;# 
   357  000D                     	;# 
   358  000E                     	;# 
   359  0011                     	;# 
   360  0012                     	;# 
   361  0013                     	;# 
   362  0015                     	;# 
   363  0016                     	;# 
   364  0016                     	;# 
   365  0017                     	;# 
   366  0018                     	;# 
   367  0019                     	;# 
   368  001A                     	;# 
   369  001B                     	;# 
   370  001C                     	;# 
   371  008C                     	;# 
   372  008D                     	;# 
   373  008E                     	;# 
   374  0091                     	;# 
   375  0092                     	;# 
   376  0093                     	;# 
   377  0095                     	;# 
   378  0096                     	;# 
   379  0097                     	;# 
   380  0098                     	;# 
   381  0099                     	;# 
   382  009A                     	;# 
   383  009B                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  010C                     	;# 
   390  010D                     	;# 
   391  010E                     	;# 
   392  0111                     	;# 
   393  0112                     	;# 
   394  0113                     	;# 
   395  0114                     	;# 
   396  0115                     	;# 
   397  0116                     	;# 
   398  0117                     	;# 
   399  0118                     	;# 
   400  0119                     	;# 
   401  011C                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404  018E                     	;# 
   405  0191                     	;# 
   406  0191                     	;# 
   407  0192                     	;# 
   408  0193                     	;# 
   409  0193                     	;# 
   410  0194                     	;# 
   411  0195                     	;# 
   412  0196                     	;# 
   413  0199                     	;# 
   414  0199                     	;# 
   415  0199                     	;# 
   416  019A                     	;# 
   417  019A                     	;# 
   418  019A                     	;# 
   419  019B                     	;# 
   420  019B                     	;# 
   421  019B                     	;# 
   422  019B                     	;# 
   423  019B                     	;# 
   424  019C                     	;# 
   425  019C                     	;# 
   426  019C                     	;# 
   427  019D                     	;# 
   428  019D                     	;# 
   429  019D                     	;# 
   430  019E                     	;# 
   431  019E                     	;# 
   432  019E                     	;# 
   433  019F                     	;# 
   434  019F                     	;# 
   435  019F                     	;# 
   436  019F                     	;# 
   437  019F                     	;# 
   438  020C                     	;# 
   439  020D                     	;# 
   440  020E                     	;# 
   441  0211                     	;# 
   442  0211                     	;# 
   443  0212                     	;# 
   444  0212                     	;# 
   445  0213                     	;# 
   446  0213                     	;# 
   447  0214                     	;# 
   448  0214                     	;# 
   449  0215                     	;# 
   450  0215                     	;# 
   451  0215                     	;# 
   452  0215                     	;# 
   453  0216                     	;# 
   454  0216                     	;# 
   455  0217                     	;# 
   456  0217                     	;# 
   457  028C                     	;# 
   458  028D                     	;# 
   459  028E                     	;# 
   460  0291                     	;# 
   461  0291                     	;# 
   462  0292                     	;# 
   463  0293                     	;# 
   464  0293                     	;# 
   465  0298                     	;# 
   466  0298                     	;# 
   467  0299                     	;# 
   468  029A                     	;# 
   469  029A                     	;# 
   470  029E                     	;# 
   471  030C                     	;# 
   472  030D                     	;# 
   473  030E                     	;# 
   474  038C                     	;# 
   475  038D                     	;# 
   476  038E                     	;# 
   477  0391                     	;# 
   478  0392                     	;# 
   479  0393                     	;# 
   480  0394                     	;# 
   481  0395                     	;# 
   482  0396                     	;# 
   483  0397                     	;# 
   484  0398                     	;# 
   485  0399                     	;# 
   486  0415                     	;# 
   487  0416                     	;# 
   488  0417                     	;# 
   489  041C                     	;# 
   490  041D                     	;# 
   491  041E                     	;# 
   492  0511                     	;# 
   493  0515                     	;# 
   494  0617                     	;# 
   495  0618                     	;# 
   496  0619                     	;# 
   497  0619                     	;# 
   498  061A                     	;# 
   499  061B                     	;# 
   500  061C                     	;# 
   501  061C                     	;# 
   502  0691                     	;# 
   503  0692                     	;# 
   504  0693                     	;# 
   505  0694                     	;# 
   506  0695                     	;# 
   507  0696                     	;# 
   508  0697                     	;# 
   509  0698                     	;# 
   510  0699                     	;# 
   511  069A                     	;# 
   512  069B                     	;# 
   513  069C                     	;# 
   514  069D                     	;# 
   515  069E                     	;# 
   516  069F                     	;# 
   517  0E0F                     	;# 
   518  0E10                     	;# 
   519  0E11                     	;# 
   520  0E12                     	;# 
   521  0E13                     	;# 
   522  0E14                     	;# 
   523  0E15                     	;# 
   524  0E17                     	;# 
   525  0E20                     	;# 
   526  0E21                     	;# 
   527  0E22                     	;# 
   528  0E24                     	;# 
   529  0E25                     	;# 
   530  0E28                     	;# 
   531  0E29                     	;# 
   532  0E2A                     	;# 
   533  0E2B                     	;# 
   534  0E90                     	;# 
   535  0E91                     	;# 
   536  0E92                     	;# 
   537  0E94                     	;# 
   538  0E95                     	;# 
   539  0E9C                     	;# 
   540  0E9D                     	;# 
   541  0E9E                     	;# 
   542  0E9F                     	;# 
   543  0EA0                     	;# 
   544  0EA1                     	;# 
   545  0EA2                     	;# 
   546  0EA3                     	;# 
   547  0EA4                     	;# 
   548  0EA5                     	;# 
   549  0EA6                     	;# 
   550  0EA7                     	;# 
   551  0F0F                     	;# 
   552  0F10                     	;# 
   553  0F11                     	;# 
   554  0F12                     	;# 
   555  0F13                     	;# 
   556  0F14                     	;# 
   557  0F15                     	;# 
   558  0F16                     	;# 
   559  0F17                     	;# 
   560  0F18                     	;# 
   561  0F19                     	;# 
   562  0F1A                     	;# 
   563  0F1B                     	;# 
   564  0F1C                     	;# 
   565  0F1D                     	;# 
   566  0F1E                     	;# 
   567  0F1F                     	;# 
   568  0F20                     	;# 
   569  0F21                     	;# 
   570  0F22                     	;# 
   571  0F23                     	;# 
   572  0F24                     	;# 
   573  0F25                     	;# 
   574  0F26                     	;# 
   575  0F27                     	;# 
   576  0F28                     	;# 
   577  0F29                     	;# 
   578  0F2A                     	;# 
   579  0F2B                     	;# 
   580  0F2C                     	;# 
   581  0F2D                     	;# 
   582  0FE4                     	;# 
   583  0FE5                     	;# 
   584  0FE6                     	;# 
   585  0FE7                     	;# 
   586  0FE8                     	;# 
   587  0FE9                     	;# 
   588  0FEA                     	;# 
   589  0FEB                     	;# 
   590  0FED                     	;# 
   591  0FEE                     	;# 
   592  0FEF                     	;# 
   593  0000                     	;# 
   594  0001                     	;# 
   595  0002                     	;# 
   596  0003                     	;# 
   597  0004                     	;# 
   598  0005                     	;# 
   599  0006                     	;# 
   600  0007                     	;# 
   601  0008                     	;# 
   602  0009                     	;# 
   603  000A                     	;# 
   604  000B                     	;# 
   605  000C                     	;# 
   606  000D                     	;# 
   607  000E                     	;# 
   608  0011                     	;# 
   609  0012                     	;# 
   610  0013                     	;# 
   611  0015                     	;# 
   612  0016                     	;# 
   613  0016                     	;# 
   614  0017                     	;# 
   615  0018                     	;# 
   616  0019                     	;# 
   617  001A                     	;# 
   618  001B                     	;# 
   619  001C                     	;# 
   620  008C                     	;# 
   621  008D                     	;# 
   622  008E                     	;# 
   623  0091                     	;# 
   624  0092                     	;# 
   625  0093                     	;# 
   626  0095                     	;# 
   627  0096                     	;# 
   628  0097                     	;# 
   629  0098                     	;# 
   630  0099                     	;# 
   631  009A                     	;# 
   632  009B                     	;# 
   633  009B                     	;# 
   634  009C                     	;# 
   635  009D                     	;# 
   636  009E                     	;# 
   637  009F                     	;# 
   638  010C                     	;# 
   639  010D                     	;# 
   640  010E                     	;# 
   641  0111                     	;# 
   642  0112                     	;# 
   643  0113                     	;# 
   644  0114                     	;# 
   645  0115                     	;# 
   646  0116                     	;# 
   647  0117                     	;# 
   648  0118                     	;# 
   649  0119                     	;# 
   650  011C                     	;# 
   651  018C                     	;# 
   652  018D                     	;# 
   653  018E                     	;# 
   654  0191                     	;# 
   655  0191                     	;# 
   656  0192                     	;# 
   657  0193                     	;# 
   658  0193                     	;# 
   659  0194                     	;# 
   660  0195                     	;# 
   661  0196                     	;# 
   662  0199                     	;# 
   663  0199                     	;# 
   664  0199                     	;# 
   665  019A                     	;# 
   666  019A                     	;# 
   667  019A                     	;# 
   668  019B                     	;# 
   669  019B                     	;# 
   670  019B                     	;# 
   671  019B                     	;# 
   672  019B                     	;# 
   673  019C                     	;# 
   674  019C                     	;# 
   675  019C                     	;# 
   676  019D                     	;# 
   677  019D                     	;# 
   678  019D                     	;# 
   679  019E                     	;# 
   680  019E                     	;# 
   681  019E                     	;# 
   682  019F                     	;# 
   683  019F                     	;# 
   684  019F                     	;# 
   685  019F                     	;# 
   686  019F                     	;# 
   687  020C                     	;# 
   688  020D                     	;# 
   689  020E                     	;# 
   690  0211                     	;# 
   691  0211                     	;# 
   692  0212                     	;# 
   693  0212                     	;# 
   694  0213                     	;# 
   695  0213                     	;# 
   696  0214                     	;# 
   697  0214                     	;# 
   698  0215                     	;# 
   699  0215                     	;# 
   700  0215                     	;# 
   701  0215                     	;# 
   702  0216                     	;# 
   703  0216                     	;# 
   704  0217                     	;# 
   705  0217                     	;# 
   706  028C                     	;# 
   707  028D                     	;# 
   708  028E                     	;# 
   709  0291                     	;# 
   710  0291                     	;# 
   711  0292                     	;# 
   712  0293                     	;# 
   713  0293                     	;# 
   714  0298                     	;# 
   715  0298                     	;# 
   716  0299                     	;# 
   717  029A                     	;# 
   718  029A                     	;# 
   719  029E                     	;# 
   720  030C                     	;# 
   721  030D                     	;# 
   722  030E                     	;# 
   723  038C                     	;# 
   724  038D                     	;# 
   725  038E                     	;# 
   726  0391                     	;# 
   727  0392                     	;# 
   728  0393                     	;# 
   729  0394                     	;# 
   730  0395                     	;# 
   731  0396                     	;# 
   732  0397                     	;# 
   733  0398                     	;# 
   734  0399                     	;# 
   735  0415                     	;# 
   736  0416                     	;# 
   737  0417                     	;# 
   738  041C                     	;# 
   739  041D                     	;# 
   740  041E                     	;# 
   741  0511                     	;# 
   742  0515                     	;# 
   743  0617                     	;# 
   744  0618                     	;# 
   745  0619                     	;# 
   746  0619                     	;# 
   747  061A                     	;# 
   748  061B                     	;# 
   749  061C                     	;# 
   750  061C                     	;# 
   751  0691                     	;# 
   752  0692                     	;# 
   753  0693                     	;# 
   754  0694                     	;# 
   755  0695                     	;# 
   756  0696                     	;# 
   757  0697                     	;# 
   758  0698                     	;# 
   759  0699                     	;# 
   760  069A                     	;# 
   761  069B                     	;# 
   762  069C                     	;# 
   763  069D                     	;# 
   764  069E                     	;# 
   765  069F                     	;# 
   766  0E0F                     	;# 
   767  0E10                     	;# 
   768  0E11                     	;# 
   769  0E12                     	;# 
   770  0E13                     	;# 
   771  0E14                     	;# 
   772  0E15                     	;# 
   773  0E17                     	;# 
   774  0E20                     	;# 
   775  0E21                     	;# 
   776  0E22                     	;# 
   777  0E24                     	;# 
   778  0E25                     	;# 
   779  0E28                     	;# 
   780  0E29                     	;# 
   781  0E2A                     	;# 
   782  0E2B                     	;# 
   783  0E90                     	;# 
   784  0E91                     	;# 
   785  0E92                     	;# 
   786  0E94                     	;# 
   787  0E95                     	;# 
   788  0E9C                     	;# 
   789  0E9D                     	;# 
   790  0E9E                     	;# 
   791  0E9F                     	;# 
   792  0EA0                     	;# 
   793  0EA1                     	;# 
   794  0EA2                     	;# 
   795  0EA3                     	;# 
   796  0EA4                     	;# 
   797  0EA5                     	;# 
   798  0EA6                     	;# 
   799  0EA7                     	;# 
   800  0F0F                     	;# 
   801  0F10                     	;# 
   802  0F11                     	;# 
   803  0F12                     	;# 
   804  0F13                     	;# 
   805  0F14                     	;# 
   806  0F15                     	;# 
   807  0F16                     	;# 
   808  0F17                     	;# 
   809  0F18                     	;# 
   810  0F19                     	;# 
   811  0F1A                     	;# 
   812  0F1B                     	;# 
   813  0F1C                     	;# 
   814  0F1D                     	;# 
   815  0F1E                     	;# 
   816  0F1F                     	;# 
   817  0F20                     	;# 
   818  0F21                     	;# 
   819  0F22                     	;# 
   820  0F23                     	;# 
   821  0F24                     	;# 
   822  0F25                     	;# 
   823  0F26                     	;# 
   824  0F27                     	;# 
   825  0F28                     	;# 
   826  0F29                     	;# 
   827  0F2A                     	;# 
   828  0F2B                     	;# 
   829  0F2C                     	;# 
   830  0F2D                     	;# 
   831  0FE4                     	;# 
   832  0FE5                     	;# 
   833  0FE6                     	;# 
   834  0FE7                     	;# 
   835  0FE8                     	;# 
   836  0FE9                     	;# 
   837  0FEA                     	;# 
   838  0FEB                     	;# 
   839  0FED                     	;# 
   840  0FEE                     	;# 
   841  0FEF                     	;# 
   842  0000                     	;# 
   843  0001                     	;# 
   844  0002                     	;# 
   845  0003                     	;# 
   846  0004                     	;# 
   847  0005                     	;# 
   848  0006                     	;# 
   849  0007                     	;# 
   850  0008                     	;# 
   851  0009                     	;# 
   852  000A                     	;# 
   853  000B                     	;# 
   854  000C                     	;# 
   855  000D                     	;# 
   856  000E                     	;# 
   857  0011                     	;# 
   858  0012                     	;# 
   859  0013                     	;# 
   860  0015                     	;# 
   861  0016                     	;# 
   862  0016                     	;# 
   863  0017                     	;# 
   864  0018                     	;# 
   865  0019                     	;# 
   866  001A                     	;# 
   867  001B                     	;# 
   868  001C                     	;# 
   869  008C                     	;# 
   870  008D                     	;# 
   871  008E                     	;# 
   872  0091                     	;# 
   873  0092                     	;# 
   874  0093                     	;# 
   875  0095                     	;# 
   876  0096                     	;# 
   877  0097                     	;# 
   878  0098                     	;# 
   879  0099                     	;# 
   880  009A                     	;# 
   881  009B                     	;# 
   882  009B                     	;# 
   883  009C                     	;# 
   884  009D                     	;# 
   885  009E                     	;# 
   886  009F                     	;# 
   887  010C                     	;# 
   888  010D                     	;# 
   889  010E                     	;# 
   890  0111                     	;# 
   891  0112                     	;# 
   892  0113                     	;# 
   893  0114                     	;# 
   894  0115                     	;# 
   895  0116                     	;# 
   896  0117                     	;# 
   897  0118                     	;# 
   898  0119                     	;# 
   899  011C                     	;# 
   900  018C                     	;# 
   901  018D                     	;# 
   902  018E                     	;# 
   903  0191                     	;# 
   904  0191                     	;# 
   905  0192                     	;# 
   906  0193                     	;# 
   907  0193                     	;# 
   908  0194                     	;# 
   909  0195                     	;# 
   910  0196                     	;# 
   911  0199                     	;# 
   912  0199                     	;# 
   913  0199                     	;# 
   914  019A                     	;# 
   915  019A                     	;# 
   916  019A                     	;# 
   917  019B                     	;# 
   918  019B                     	;# 
   919  019B                     	;# 
   920  019B                     	;# 
   921  019B                     	;# 
   922  019C                     	;# 
   923  019C                     	;# 
   924  019C                     	;# 
   925  019D                     	;# 
   926  019D                     	;# 
   927  019D                     	;# 
   928  019E                     	;# 
   929  019E                     	;# 
   930  019E                     	;# 
   931  019F                     	;# 
   932  019F                     	;# 
   933  019F                     	;# 
   934  019F                     	;# 
   935  019F                     	;# 
   936  020C                     	;# 
   937  020D                     	;# 
   938  020E                     	;# 
   939  0211                     	;# 
   940  0211                     	;# 
   941  0212                     	;# 
   942  0212                     	;# 
   943  0213                     	;# 
   944  0213                     	;# 
   945  0214                     	;# 
   946  0214                     	;# 
   947  0215                     	;# 
   948  0215                     	;# 
   949  0215                     	;# 
   950  0215                     	;# 
   951  0216                     	;# 
   952  0216                     	;# 
   953  0217                     	;# 
   954  0217                     	;# 
   955  028C                     	;# 
   956  028D                     	;# 
   957  028E                     	;# 
   958  0291                     	;# 
   959  0291                     	;# 
   960  0292                     	;# 
   961  0293                     	;# 
   962  0293                     	;# 
   963  0298                     	;# 
   964  0298                     	;# 
   965  0299                     	;# 
   966  029A                     	;# 
   967  029A                     	;# 
   968  029E                     	;# 
   969  030C                     	;# 
   970  030D                     	;# 
   971  030E                     	;# 
   972  038C                     	;# 
   973  038D                     	;# 
   974  038E                     	;# 
   975  0391                     	;# 
   976  0392                     	;# 
   977  0393                     	;# 
   978  0394                     	;# 
   979  0395                     	;# 
   980  0396                     	;# 
   981  0397                     	;# 
   982  0398                     	;# 
   983  0399                     	;# 
   984  0415                     	;# 
   985  0416                     	;# 
   986  0417                     	;# 
   987  041C                     	;# 
   988  041D                     	;# 
   989  041E                     	;# 
   990  0511                     	;# 
   991  0515                     	;# 
   992  0617                     	;# 
   993  0618                     	;# 
   994  0619                     	;# 
   995  0619                     	;# 
   996  061A                     	;# 
   997  061B                     	;# 
   998  061C                     	;# 
   999  061C                     	;# 
  1000  0691                     	;# 
  1001  0692                     	;# 
  1002  0693                     	;# 
  1003  0694                     	;# 
  1004  0695                     	;# 
  1005  0696                     	;# 
  1006  0697                     	;# 
  1007  0698                     	;# 
  1008  0699                     	;# 
  1009  069A                     	;# 
  1010  069B                     	;# 
  1011  069C                     	;# 
  1012  069D                     	;# 
  1013  069E                     	;# 
  1014  069F                     	;# 
  1015  0E0F                     	;# 
  1016  0E10                     	;# 
  1017  0E11                     	;# 
  1018  0E12                     	;# 
  1019  0E13                     	;# 
  1020  0E14                     	;# 
  1021  0E15                     	;# 
  1022  0E17                     	;# 
  1023  0E20                     	;# 
  1024  0E21                     	;# 
  1025  0E22                     	;# 
  1026  0E24                     	;# 
  1027  0E25                     	;# 
  1028  0E28                     	;# 
  1029  0E29                     	;# 
  1030  0E2A                     	;# 
  1031  0E2B                     	;# 
  1032  0E90                     	;# 
  1033  0E91                     	;# 
  1034  0E92                     	;# 
  1035  0E94                     	;# 
  1036  0E95                     	;# 
  1037  0E9C                     	;# 
  1038  0E9D                     	;# 
  1039  0E9E                     	;# 
  1040  0E9F                     	;# 
  1041  0EA0                     	;# 
  1042  0EA1                     	;# 
  1043  0EA2                     	;# 
  1044  0EA3                     	;# 
  1045  0EA4                     	;# 
  1046  0EA5                     	;# 
  1047  0EA6                     	;# 
  1048  0EA7                     	;# 
  1049  0F0F                     	;# 
  1050  0F10                     	;# 
  1051  0F11                     	;# 
  1052  0F12                     	;# 
  1053  0F13                     	;# 
  1054  0F14                     	;# 
  1055  0F15                     	;# 
  1056  0F16                     	;# 
  1057  0F17                     	;# 
  1058  0F18                     	;# 
  1059  0F19                     	;# 
  1060  0F1A                     	;# 
  1061  0F1B                     	;# 
  1062  0F1C                     	;# 
  1063  0F1D                     	;# 
  1064  0F1E                     	;# 
  1065  0F1F                     	;# 
  1066  0F20                     	;# 
  1067  0F21                     	;# 
  1068  0F22                     	;# 
  1069  0F23                     	;# 
  1070  0F24                     	;# 
  1071  0F25                     	;# 
  1072  0F26                     	;# 
  1073  0F27                     	;# 
  1074  0F28                     	;# 
  1075  0F29                     	;# 
  1076  0F2A                     	;# 
  1077  0F2B                     	;# 
  1078  0F2C                     	;# 
  1079  0F2D                     	;# 
  1080  0FE4                     	;# 
  1081  0FE5                     	;# 
  1082  0FE6                     	;# 
  1083  0FE7                     	;# 
  1084  0FE8                     	;# 
  1085  0FE9                     	;# 
  1086  0FEA                     	;# 
  1087  0FEB                     	;# 
  1088  0FED                     	;# 
  1089  0FEE                     	;# 
  1090  0FEF                     	;# 
  1091  0000                     	;# 
  1092  0001                     	;# 
  1093  0002                     	;# 
  1094  0003                     	;# 
  1095  0004                     	;# 
  1096  0005                     	;# 
  1097  0006                     	;# 
  1098  0007                     	;# 
  1099  0008                     	;# 
  1100  0009                     	;# 
  1101  000A                     	;# 
  1102  000B                     	;# 
  1103  000C                     	;# 
  1104  000D                     	;# 
  1105  000E                     	;# 
  1106  0011                     	;# 
  1107  0012                     	;# 
  1108  0013                     	;# 
  1109  0015                     	;# 
  1110  0016                     	;# 
  1111  0016                     	;# 
  1112  0017                     	;# 
  1113  0018                     	;# 
  1114  0019                     	;# 
  1115  001A                     	;# 
  1116  001B                     	;# 
  1117  001C                     	;# 
  1118  008C                     	;# 
  1119  008D                     	;# 
  1120  008E                     	;# 
  1121  0091                     	;# 
  1122  0092                     	;# 
  1123  0093                     	;# 
  1124  0095                     	;# 
  1125  0096                     	;# 
  1126  0097                     	;# 
  1127  0098                     	;# 
  1128  0099                     	;# 
  1129  009A                     	;# 
  1130  009B                     	;# 
  1131  009B                     	;# 
  1132  009C                     	;# 
  1133  009D                     	;# 
  1134  009E                     	;# 
  1135  009F                     	;# 
  1136  010C                     	;# 
  1137  010D                     	;# 
  1138  010E                     	;# 
  1139  0111                     	;# 
  1140  0112                     	;# 
  1141  0113                     	;# 
  1142  0114                     	;# 
  1143  0115                     	;# 
  1144  0116                     	;# 
  1145  0117                     	;# 
  1146  0118                     	;# 
  1147  0119                     	;# 
  1148  011C                     	;# 
  1149  018C                     	;# 
  1150  018D                     	;# 
  1151  018E                     	;# 
  1152  0191                     	;# 
  1153  0191                     	;# 
  1154  0192                     	;# 
  1155  0193                     	;# 
  1156  0193                     	;# 
  1157  0194                     	;# 
  1158  0195                     	;# 
  1159  0196                     	;# 
  1160  0199                     	;# 
  1161  0199                     	;# 
  1162  0199                     	;# 
  1163  019A                     	;# 
  1164  019A                     	;# 
  1165  019A                     	;# 
  1166  019B                     	;# 
  1167  019B                     	;# 
  1168  019B                     	;# 
  1169  019B                     	;# 
  1170  019B                     	;# 
  1171  019C                     	;# 
  1172  019C                     	;# 
  1173  019C                     	;# 
  1174  019D                     	;# 
  1175  019D                     	;# 
  1176  019D                     	;# 
  1177  019E                     	;# 
  1178  019E                     	;# 
  1179  019E                     	;# 
  1180  019F                     	;# 
  1181  019F                     	;# 
  1182  019F                     	;# 
  1183  019F                     	;# 
  1184  019F                     	;# 
  1185  020C                     	;# 
  1186  020D                     	;# 
  1187  020E                     	;# 
  1188  0211                     	;# 
  1189  0211                     	;# 
  1190  0212                     	;# 
  1191  0212                     	;# 
  1192  0213                     	;# 
  1193  0213                     	;# 
  1194  0214                     	;# 
  1195  0214                     	;# 
  1196  0215                     	;# 
  1197  0215                     	;# 
  1198  0215                     	;# 
  1199  0215                     	;# 
  1200  0216                     	;# 
  1201  0216                     	;# 
  1202  0217                     	;# 
  1203  0217                     	;# 
  1204  028C                     	;# 
  1205  028D                     	;# 
  1206  028E                     	;# 
  1207  0291                     	;# 
  1208  0291                     	;# 
  1209  0292                     	;# 
  1210  0293                     	;# 
  1211  0293                     	;# 
  1212  0298                     	;# 
  1213  0298                     	;# 
  1214  0299                     	;# 
  1215  029A                     	;# 
  1216  029A                     	;# 
  1217  029E                     	;# 
  1218  030C                     	;# 
  1219  030D                     	;# 
  1220  030E                     	;# 
  1221  038C                     	;# 
  1222  038D                     	;# 
  1223  038E                     	;# 
  1224  0391                     	;# 
  1225  0392                     	;# 
  1226  0393                     	;# 
  1227  0394                     	;# 
  1228  0395                     	;# 
  1229  0396                     	;# 
  1230  0397                     	;# 
  1231  0398                     	;# 
  1232  0399                     	;# 
  1233  0415                     	;# 
  1234  0416                     	;# 
  1235  0417                     	;# 
  1236  041C                     	;# 
  1237  041D                     	;# 
  1238  041E                     	;# 
  1239  0511                     	;# 
  1240  0515                     	;# 
  1241  0617                     	;# 
  1242  0618                     	;# 
  1243  0619                     	;# 
  1244  0619                     	;# 
  1245  061A                     	;# 
  1246  061B                     	;# 
  1247  061C                     	;# 
  1248  061C                     	;# 
  1249  0691                     	;# 
  1250  0692                     	;# 
  1251  0693                     	;# 
  1252  0694                     	;# 
  1253  0695                     	;# 
  1254  0696                     	;# 
  1255  0697                     	;# 
  1256  0698                     	;# 
  1257  0699                     	;# 
  1258  069A                     	;# 
  1259  069B                     	;# 
  1260  069C                     	;# 
  1261  069D                     	;# 
  1262  069E                     	;# 
  1263  069F                     	;# 
  1264  0E0F                     	;# 
  1265  0E10                     	;# 
  1266  0E11                     	;# 
  1267  0E12                     	;# 
  1268  0E13                     	;# 
  1269  0E14                     	;# 
  1270  0E15                     	;# 
  1271  0E17                     	;# 
  1272  0E20                     	;# 
  1273  0E21                     	;# 
  1274  0E22                     	;# 
  1275  0E24                     	;# 
  1276  0E25                     	;# 
  1277  0E28                     	;# 
  1278  0E29                     	;# 
  1279  0E2A                     	;# 
  1280  0E2B                     	;# 
  1281  0E90                     	;# 
  1282  0E91                     	;# 
  1283  0E92                     	;# 
  1284  0E94                     	;# 
  1285  0E95                     	;# 
  1286  0E9C                     	;# 
  1287  0E9D                     	;# 
  1288  0E9E                     	;# 
  1289  0E9F                     	;# 
  1290  0EA0                     	;# 
  1291  0EA1                     	;# 
  1292  0EA2                     	;# 
  1293  0EA3                     	;# 
  1294  0EA4                     	;# 
  1295  0EA5                     	;# 
  1296  0EA6                     	;# 
  1297  0EA7                     	;# 
  1298  0F0F                     	;# 
  1299  0F10                     	;# 
  1300  0F11                     	;# 
  1301  0F12                     	;# 
  1302  0F13                     	;# 
  1303  0F14                     	;# 
  1304  0F15                     	;# 
  1305  0F16                     	;# 
  1306  0F17                     	;# 
  1307  0F18                     	;# 
  1308  0F19                     	;# 
  1309  0F1A                     	;# 
  1310  0F1B                     	;# 
  1311  0F1C                     	;# 
  1312  0F1D                     	;# 
  1313  0F1E                     	;# 
  1314  0F1F                     	;# 
  1315  0F20                     	;# 
  1316  0F21                     	;# 
  1317  0F22                     	;# 
  1318  0F23                     	;# 
  1319  0F24                     	;# 
  1320  0F25                     	;# 
  1321  0F26                     	;# 
  1322  0F27                     	;# 
  1323  0F28                     	;# 
  1324  0F29                     	;# 
  1325  0F2A                     	;# 
  1326  0F2B                     	;# 
  1327  0F2C                     	;# 
  1328  0F2D                     	;# 
  1329  0FE4                     	;# 
  1330  0FE5                     	;# 
  1331  0FE6                     	;# 
  1332  0FE7                     	;# 
  1333  0FE8                     	;# 
  1334  0FE9                     	;# 
  1335  0FEA                     	;# 
  1336  0FEB                     	;# 
  1337  0FED                     	;# 
  1338  0FEE                     	;# 
  1339  0FEF                     	;# 
  1340  0000                     	;# 
  1341  0001                     	;# 
  1342  0002                     	;# 
  1343  0003                     	;# 
  1344  0004                     	;# 
  1345  0005                     	;# 
  1346  0006                     	;# 
  1347  0007                     	;# 
  1348  0008                     	;# 
  1349  0009                     	;# 
  1350  000A                     	;# 
  1351  000B                     	;# 
  1352  000C                     	;# 
  1353  000D                     	;# 
  1354  000E                     	;# 
  1355  0011                     	;# 
  1356  0012                     	;# 
  1357  0013                     	;# 
  1358  0015                     	;# 
  1359  0016                     	;# 
  1360  0016                     	;# 
  1361  0017                     	;# 
  1362  0018                     	;# 
  1363  0019                     	;# 
  1364  001A                     	;# 
  1365  001B                     	;# 
  1366  001C                     	;# 
  1367  008C                     	;# 
  1368  008D                     	;# 
  1369  008E                     	;# 
  1370  0091                     	;# 
  1371  0092                     	;# 
  1372  0093                     	;# 
  1373  0095                     	;# 
  1374  0096                     	;# 
  1375  0097                     	;# 
  1376  0098                     	;# 
  1377  0099                     	;# 
  1378  009A                     	;# 
  1379  009B                     	;# 
  1380  009B                     	;# 
  1381  009C                     	;# 
  1382  009D                     	;# 
  1383  009E                     	;# 
  1384  009F                     	;# 
  1385  010C                     	;# 
  1386  010D                     	;# 
  1387  010E                     	;# 
  1388  0111                     	;# 
  1389  0112                     	;# 
  1390  0113                     	;# 
  1391  0114                     	;# 
  1392  0115                     	;# 
  1393  0116                     	;# 
  1394  0117                     	;# 
  1395  0118                     	;# 
  1396  0119                     	;# 
  1397  011C                     	;# 
  1398  018C                     	;# 
  1399  018D                     	;# 
  1400  018E                     	;# 
  1401  0191                     	;# 
  1402  0191                     	;# 
  1403  0192                     	;# 
  1404  0193                     	;# 
  1405  0193                     	;# 
  1406  0194                     	;# 
  1407  0195                     	;# 
  1408  0196                     	;# 
  1409  0199                     	;# 
  1410  0199                     	;# 
  1411  0199                     	;# 
  1412  019A                     	;# 
  1413  019A                     	;# 
  1414  019A                     	;# 
  1415  019B                     	;# 
  1416  019B                     	;# 
  1417  019B                     	;# 
  1418  019B                     	;# 
  1419  019B                     	;# 
  1420  019C                     	;# 
  1421  019C                     	;# 
  1422  019C                     	;# 
  1423  019D                     	;# 
  1424  019D                     	;# 
  1425  019D                     	;# 
  1426  019E                     	;# 
  1427  019E                     	;# 
  1428  019E                     	;# 
  1429  019F                     	;# 
  1430  019F                     	;# 
  1431  019F                     	;# 
  1432  019F                     	;# 
  1433  019F                     	;# 
  1434  020C                     	;# 
  1435  020D                     	;# 
  1436  020E                     	;# 
  1437  0211                     	;# 
  1438  0211                     	;# 
  1439  0212                     	;# 
  1440  0212                     	;# 
  1441  0213                     	;# 
  1442  0213                     	;# 
  1443  0214                     	;# 
  1444  0214                     	;# 
  1445  0215                     	;# 
  1446  0215                     	;# 
  1447  0215                     	;# 
  1448  0215                     	;# 
  1449  0216                     	;# 
  1450  0216                     	;# 
  1451  0217                     	;# 
  1452  0217                     	;# 
  1453  028C                     	;# 
  1454  028D                     	;# 
  1455  028E                     	;# 
  1456  0291                     	;# 
  1457  0291                     	;# 
  1458  0292                     	;# 
  1459  0293                     	;# 
  1460  0293                     	;# 
  1461  0298                     	;# 
  1462  0298                     	;# 
  1463  0299                     	;# 
  1464  029A                     	;# 
  1465  029A                     	;# 
  1466  029E                     	;# 
  1467  030C                     	;# 
  1468  030D                     	;# 
  1469  030E                     	;# 
  1470  038C                     	;# 
  1471  038D                     	;# 
  1472  038E                     	;# 
  1473  0391                     	;# 
  1474  0392                     	;# 
  1475  0393                     	;# 
  1476  0394                     	;# 
  1477  0395                     	;# 
  1478  0396                     	;# 
  1479  0397                     	;# 
  1480  0398                     	;# 
  1481  0399                     	;# 
  1482  0415                     	;# 
  1483  0416                     	;# 
  1484  0417                     	;# 
  1485  041C                     	;# 
  1486  041D                     	;# 
  1487  041E                     	;# 
  1488  0511                     	;# 
  1489  0515                     	;# 
  1490  0617                     	;# 
  1491  0618                     	;# 
  1492  0619                     	;# 
  1493  0619                     	;# 
  1494  061A                     	;# 
  1495  061B                     	;# 
  1496  061C                     	;# 
  1497  061C                     	;# 
  1498  0691                     	;# 
  1499  0692                     	;# 
  1500  0693                     	;# 
  1501  0694                     	;# 
  1502  0695                     	;# 
  1503  0696                     	;# 
  1504  0697                     	;# 
  1505  0698                     	;# 
  1506  0699                     	;# 
  1507  069A                     	;# 
  1508  069B                     	;# 
  1509  069C                     	;# 
  1510  069D                     	;# 
  1511  069E                     	;# 
  1512  069F                     	;# 
  1513  0E0F                     	;# 
  1514  0E10                     	;# 
  1515  0E11                     	;# 
  1516  0E12                     	;# 
  1517  0E13                     	;# 
  1518  0E14                     	;# 
  1519  0E15                     	;# 
  1520  0E17                     	;# 
  1521  0E20                     	;# 
  1522  0E21                     	;# 
  1523  0E22                     	;# 
  1524  0E24                     	;# 
  1525  0E25                     	;# 
  1526  0E28                     	;# 
  1527  0E29                     	;# 
  1528  0E2A                     	;# 
  1529  0E2B                     	;# 
  1530  0E90                     	;# 
  1531  0E91                     	;# 
  1532  0E92                     	;# 
  1533  0E94                     	;# 
  1534  0E95                     	;# 
  1535  0E9C                     	;# 
  1536  0E9D                     	;# 
  1537  0E9E                     	;# 
  1538  0E9F                     	;# 
  1539  0EA0                     	;# 
  1540  0EA1                     	;# 
  1541  0EA2                     	;# 
  1542  0EA3                     	;# 
  1543  0EA4                     	;# 
  1544  0EA5                     	;# 
  1545  0EA6                     	;# 
  1546  0EA7                     	;# 
  1547  0F0F                     	;# 
  1548  0F10                     	;# 
  1549  0F11                     	;# 
  1550  0F12                     	;# 
  1551  0F13                     	;# 
  1552  0F14                     	;# 
  1553  0F15                     	;# 
  1554  0F16                     	;# 
  1555  0F17                     	;# 
  1556  0F18                     	;# 
  1557  0F19                     	;# 
  1558  0F1A                     	;# 
  1559  0F1B                     	;# 
  1560  0F1C                     	;# 
  1561  0F1D                     	;# 
  1562  0F1E                     	;# 
  1563  0F1F                     	;# 
  1564  0F20                     	;# 
  1565  0F21                     	;# 
  1566  0F22                     	;# 
  1567  0F23                     	;# 
  1568  0F24                     	;# 
  1569  0F25                     	;# 
  1570  0F26                     	;# 
  1571  0F27                     	;# 
  1572  0F28                     	;# 
  1573  0F29                     	;# 
  1574  0F2A                     	;# 
  1575  0F2B                     	;# 
  1576  0F2C                     	;# 
  1577  0F2D                     	;# 
  1578  0FE4                     	;# 
  1579  0FE5                     	;# 
  1580  0FE6                     	;# 
  1581  0FE7                     	;# 
  1582  0FE8                     	;# 
  1583  0FE9                     	;# 
  1584  0FEA                     	;# 
  1585  0FEB                     	;# 
  1586  0FED                     	;# 
  1587  0FEE                     	;# 
  1588  0FEF                     	;# 
  1589  0000                     	;# 
  1590  0001                     	;# 
  1591  0002                     	;# 
  1592  0003                     	;# 
  1593  0004                     	;# 
  1594  0005                     	;# 
  1595  0006                     	;# 
  1596  0007                     	;# 
  1597  0008                     	;# 
  1598  0009                     	;# 
  1599  000A                     	;# 
  1600  000B                     	;# 
  1601  000C                     	;# 
  1602  000D                     	;# 
  1603  000E                     	;# 
  1604  0011                     	;# 
  1605  0012                     	;# 
  1606  0013                     	;# 
  1607  0015                     	;# 
  1608  0016                     	;# 
  1609  0016                     	;# 
  1610  0017                     	;# 
  1611  0018                     	;# 
  1612  0019                     	;# 
  1613  001A                     	;# 
  1614  001B                     	;# 
  1615  001C                     	;# 
  1616  008C                     	;# 
  1617  008D                     	;# 
  1618  008E                     	;# 
  1619  0091                     	;# 
  1620  0092                     	;# 
  1621  0093                     	;# 
  1622  0095                     	;# 
  1623  0096                     	;# 
  1624  0097                     	;# 
  1625  0098                     	;# 
  1626  0099                     	;# 
  1627  009A                     	;# 
  1628  009B                     	;# 
  1629  009B                     	;# 
  1630  009C                     	;# 
  1631  009D                     	;# 
  1632  009E                     	;# 
  1633  009F                     	;# 
  1634  010C                     	;# 
  1635  010D                     	;# 
  1636  010E                     	;# 
  1637  0111                     	;# 
  1638  0112                     	;# 
  1639  0113                     	;# 
  1640  0114                     	;# 
  1641  0115                     	;# 
  1642  0116                     	;# 
  1643  0117                     	;# 
  1644  0118                     	;# 
  1645  0119                     	;# 
  1646  011C                     	;# 
  1647  018C                     	;# 
  1648  018D                     	;# 
  1649  018E                     	;# 
  1650  0191                     	;# 
  1651  0191                     	;# 
  1652  0192                     	;# 
  1653  0193                     	;# 
  1654  0193                     	;# 
  1655  0194                     	;# 
  1656  0195                     	;# 
  1657  0196                     	;# 
  1658  0199                     	;# 
  1659  0199                     	;# 
  1660  0199                     	;# 
  1661  019A                     	;# 
  1662  019A                     	;# 
  1663  019A                     	;# 
  1664  019B                     	;# 
  1665  019B                     	;# 
  1666  019B                     	;# 
  1667  019B                     	;# 
  1668  019B                     	;# 
  1669  019C                     	;# 
  1670  019C                     	;# 
  1671  019C                     	;# 
  1672  019D                     	;# 
  1673  019D                     	;# 
  1674  019D                     	;# 
  1675  019E                     	;# 
  1676  019E                     	;# 
  1677  019E                     	;# 
  1678  019F                     	;# 
  1679  019F                     	;# 
  1680  019F                     	;# 
  1681  019F                     	;# 
  1682  019F                     	;# 
  1683  020C                     	;# 
  1684  020D                     	;# 
  1685  020E                     	;# 
  1686  0211                     	;# 
  1687  0211                     	;# 
  1688  0212                     	;# 
  1689  0212                     	;# 
  1690  0213                     	;# 
  1691  0213                     	;# 
  1692  0214                     	;# 
  1693  0214                     	;# 
  1694  0215                     	;# 
  1695  0215                     	;# 
  1696  0215                     	;# 
  1697  0215                     	;# 
  1698  0216                     	;# 
  1699  0216                     	;# 
  1700  0217                     	;# 
  1701  0217                     	;# 
  1702  028C                     	;# 
  1703  028D                     	;# 
  1704  028E                     	;# 
  1705  0291                     	;# 
  1706  0291                     	;# 
  1707  0292                     	;# 
  1708  0293                     	;# 
  1709  0293                     	;# 
  1710  0298                     	;# 
  1711  0298                     	;# 
  1712  0299                     	;# 
  1713  029A                     	;# 
  1714  029A                     	;# 
  1715  029E                     	;# 
  1716  030C                     	;# 
  1717  030D                     	;# 
  1718  030E                     	;# 
  1719  038C                     	;# 
  1720  038D                     	;# 
  1721  038E                     	;# 
  1722  0391                     	;# 
  1723  0392                     	;# 
  1724  0393                     	;# 
  1725  0394                     	;# 
  1726  0395                     	;# 
  1727  0396                     	;# 
  1728  0397                     	;# 
  1729  0398                     	;# 
  1730  0399                     	;# 
  1731  0415                     	;# 
  1732  0416                     	;# 
  1733  0417                     	;# 
  1734  041C                     	;# 
  1735  041D                     	;# 
  1736  041E                     	;# 
  1737  0511                     	;# 
  1738  0515                     	;# 
  1739  0617                     	;# 
  1740  0618                     	;# 
  1741  0619                     	;# 
  1742  0619                     	;# 
  1743  061A                     	;# 
  1744  061B                     	;# 
  1745  061C                     	;# 
  1746  061C                     	;# 
  1747  0691                     	;# 
  1748  0692                     	;# 
  1749  0693                     	;# 
  1750  0694                     	;# 
  1751  0695                     	;# 
  1752  0696                     	;# 
  1753  0697                     	;# 
  1754  0698                     	;# 
  1755  0699                     	;# 
  1756  069A                     	;# 
  1757  069B                     	;# 
  1758  069C                     	;# 
  1759  069D                     	;# 
  1760  069E                     	;# 
  1761  069F                     	;# 
  1762  0E0F                     	;# 
  1763  0E10                     	;# 
  1764  0E11                     	;# 
  1765  0E12                     	;# 
  1766  0E13                     	;# 
  1767  0E14                     	;# 
  1768  0E15                     	;# 
  1769  0E17                     	;# 
  1770  0E20                     	;# 
  1771  0E21                     	;# 
  1772  0E22                     	;# 
  1773  0E24                     	;# 
  1774  0E25                     	;# 
  1775  0E28                     	;# 
  1776  0E29                     	;# 
  1777  0E2A                     	;# 
  1778  0E2B                     	;# 
  1779  0E90                     	;# 
  1780  0E91                     	;# 
  1781  0E92                     	;# 
  1782  0E94                     	;# 
  1783  0E95                     	;# 
  1784  0E9C                     	;# 
  1785  0E9D                     	;# 
  1786  0E9E                     	;# 
  1787  0E9F                     	;# 
  1788  0EA0                     	;# 
  1789  0EA1                     	;# 
  1790  0EA2                     	;# 
  1791  0EA3                     	;# 
  1792  0EA4                     	;# 
  1793  0EA5                     	;# 
  1794  0EA6                     	;# 
  1795  0EA7                     	;# 
  1796  0F0F                     	;# 
  1797  0F10                     	;# 
  1798  0F11                     	;# 
  1799  0F12                     	;# 
  1800  0F13                     	;# 
  1801  0F14                     	;# 
  1802  0F15                     	;# 
  1803  0F16                     	;# 
  1804  0F17                     	;# 
  1805  0F18                     	;# 
  1806  0F19                     	;# 
  1807  0F1A                     	;# 
  1808  0F1B                     	;# 
  1809  0F1C                     	;# 
  1810  0F1D                     	;# 
  1811  0F1E                     	;# 
  1812  0F1F                     	;# 
  1813  0F20                     	;# 
  1814  0F21                     	;# 
  1815  0F22                     	;# 
  1816  0F23                     	;# 
  1817  0F24                     	;# 
  1818  0F25                     	;# 
  1819  0F26                     	;# 
  1820  0F27                     	;# 
  1821  0F28                     	;# 
  1822  0F29                     	;# 
  1823  0F2A                     	;# 
  1824  0F2B                     	;# 
  1825  0F2C                     	;# 
  1826  0F2D                     	;# 
  1827  0FE4                     	;# 
  1828  0FE5                     	;# 
  1829  0FE6                     	;# 
  1830  0FE7                     	;# 
  1831  0FE8                     	;# 
  1832  0FE9                     	;# 
  1833  0FEA                     	;# 
  1834  0FEB                     	;# 
  1835  0FED                     	;# 
  1836  0FEE                     	;# 
  1837  0FEF                     	;# 
  1838  0000                     	;# 
  1839  0001                     	;# 
  1840  0002                     	;# 
  1841  0003                     	;# 
  1842  0004                     	;# 
  1843  0005                     	;# 
  1844  0006                     	;# 
  1845  0007                     	;# 
  1846  0008                     	;# 
  1847  0009                     	;# 
  1848  000A                     	;# 
  1849  000B                     	;# 
  1850  000C                     	;# 
  1851  000D                     	;# 
  1852  000E                     	;# 
  1853  0011                     	;# 
  1854  0012                     	;# 
  1855  0013                     	;# 
  1856  0015                     	;# 
  1857  0016                     	;# 
  1858  0016                     	;# 
  1859  0017                     	;# 
  1860  0018                     	;# 
  1861  0019                     	;# 
  1862  001A                     	;# 
  1863  001B                     	;# 
  1864  001C                     	;# 
  1865  008C                     	;# 
  1866  008D                     	;# 
  1867  008E                     	;# 
  1868  0091                     	;# 
  1869  0092                     	;# 
  1870  0093                     	;# 
  1871  0095                     	;# 
  1872  0096                     	;# 
  1873  0097                     	;# 
  1874  0098                     	;# 
  1875  0099                     	;# 
  1876  009A                     	;# 
  1877  009B                     	;# 
  1878  009B                     	;# 
  1879  009C                     	;# 
  1880  009D                     	;# 
  1881  009E                     	;# 
  1882  009F                     	;# 
  1883  010C                     	;# 
  1884  010D                     	;# 
  1885  010E                     	;# 
  1886  0111                     	;# 
  1887  0112                     	;# 
  1888  0113                     	;# 
  1889  0114                     	;# 
  1890  0115                     	;# 
  1891  0116                     	;# 
  1892  0117                     	;# 
  1893  0118                     	;# 
  1894  0119                     	;# 
  1895  011C                     	;# 
  1896  018C                     	;# 
  1897  018D                     	;# 
  1898  018E                     	;# 
  1899  0191                     	;# 
  1900  0191                     	;# 
  1901  0192                     	;# 
  1902  0193                     	;# 
  1903  0193                     	;# 
  1904  0194                     	;# 
  1905  0195                     	;# 
  1906  0196                     	;# 
  1907  0199                     	;# 
  1908  0199                     	;# 
  1909  0199                     	;# 
  1910  019A                     	;# 
  1911  019A                     	;# 
  1912  019A                     	;# 
  1913  019B                     	;# 
  1914  019B                     	;# 
  1915  019B                     	;# 
  1916  019B                     	;# 
  1917  019B                     	;# 
  1918  019C                     	;# 
  1919  019C                     	;# 
  1920  019C                     	;# 
  1921  019D                     	;# 
  1922  019D                     	;# 
  1923  019D                     	;# 
  1924  019E                     	;# 
  1925  019E                     	;# 
  1926  019E                     	;# 
  1927  019F                     	;# 
  1928  019F                     	;# 
  1929  019F                     	;# 
  1930  019F                     	;# 
  1931  019F                     	;# 
  1932  020C                     	;# 
  1933  020D                     	;# 
  1934  020E                     	;# 
  1935  0211                     	;# 
  1936  0211                     	;# 
  1937  0212                     	;# 
  1938  0212                     	;# 
  1939  0213                     	;# 
  1940  0213                     	;# 
  1941  0214                     	;# 
  1942  0214                     	;# 
  1943  0215                     	;# 
  1944  0215                     	;# 
  1945  0215                     	;# 
  1946  0215                     	;# 
  1947  0216                     	;# 
  1948  0216                     	;# 
  1949  0217                     	;# 
  1950  0217                     	;# 
  1951  028C                     	;# 
  1952  028D                     	;# 
  1953  028E                     	;# 
  1954  0291                     	;# 
  1955  0291                     	;# 
  1956  0292                     	;# 
  1957  0293                     	;# 
  1958  0293                     	;# 
  1959  0298                     	;# 
  1960  0298                     	;# 
  1961  0299                     	;# 
  1962  029A                     	;# 
  1963  029A                     	;# 
  1964  029E                     	;# 
  1965  030C                     	;# 
  1966  030D                     	;# 
  1967  030E                     	;# 
  1968  038C                     	;# 
  1969  038D                     	;# 
  1970  038E                     	;# 
  1971  0391                     	;# 
  1972  0392                     	;# 
  1973  0393                     	;# 
  1974  0394                     	;# 
  1975  0395                     	;# 
  1976  0396                     	;# 
  1977  0397                     	;# 
  1978  0398                     	;# 
  1979  0399                     	;# 
  1980  0415                     	;# 
  1981  0416                     	;# 
  1982  0417                     	;# 
  1983  041C                     	;# 
  1984  041D                     	;# 
  1985  041E                     	;# 
  1986  0511                     	;# 
  1987  0515                     	;# 
  1988  0617                     	;# 
  1989  0618                     	;# 
  1990  0619                     	;# 
  1991  0619                     	;# 
  1992  061A                     	;# 
  1993  061B                     	;# 
  1994  061C                     	;# 
  1995  061C                     	;# 
  1996  0691                     	;# 
  1997  0692                     	;# 
  1998  0693                     	;# 
  1999  0694                     	;# 
  2000  0695                     	;# 
  2001  0696                     	;# 
  2002  0697                     	;# 
  2003  0698                     	;# 
  2004  0699                     	;# 
  2005  069A                     	;# 
  2006  069B                     	;# 
  2007  069C                     	;# 
  2008  069D                     	;# 
  2009  069E                     	;# 
  2010  069F                     	;# 
  2011  0E0F                     	;# 
  2012  0E10                     	;# 
  2013  0E11                     	;# 
  2014  0E12                     	;# 
  2015  0E13                     	;# 
  2016  0E14                     	;# 
  2017  0E15                     	;# 
  2018  0E17                     	;# 
  2019  0E20                     	;# 
  2020  0E21                     	;# 
  2021  0E22                     	;# 
  2022  0E24                     	;# 
  2023  0E25                     	;# 
  2024  0E28                     	;# 
  2025  0E29                     	;# 
  2026  0E2A                     	;# 
  2027  0E2B                     	;# 
  2028  0E90                     	;# 
  2029  0E91                     	;# 
  2030  0E92                     	;# 
  2031  0E94                     	;# 
  2032  0E95                     	;# 
  2033  0E9C                     	;# 
  2034  0E9D                     	;# 
  2035  0E9E                     	;# 
  2036  0E9F                     	;# 
  2037  0EA0                     	;# 
  2038  0EA1                     	;# 
  2039  0EA2                     	;# 
  2040  0EA3                     	;# 
  2041  0EA4                     	;# 
  2042  0EA5                     	;# 
  2043  0EA6                     	;# 
  2044  0EA7                     	;# 
  2045  0F0F                     	;# 
  2046  0F10                     	;# 
  2047  0F11                     	;# 
  2048  0F12                     	;# 
  2049  0F13                     	;# 
  2050  0F14                     	;# 
  2051  0F15                     	;# 
  2052  0F16                     	;# 
  2053  0F17                     	;# 
  2054  0F18                     	;# 
  2055  0F19                     	;# 
  2056  0F1A                     	;# 
  2057  0F1B                     	;# 
  2058  0F1C                     	;# 
  2059  0F1D                     	;# 
  2060  0F1E                     	;# 
  2061  0F1F                     	;# 
  2062  0F20                     	;# 
  2063  0F21                     	;# 
  2064  0F22                     	;# 
  2065  0F23                     	;# 
  2066  0F24                     	;# 
  2067  0F25                     	;# 
  2068  0F26                     	;# 
  2069  0F27                     	;# 
  2070  0F28                     	;# 
  2071  0F29                     	;# 
  2072  0F2A                     	;# 
  2073  0F2B                     	;# 
  2074  0F2C                     	;# 
  2075  0F2D                     	;# 
  2076  0FE4                     	;# 
  2077  0FE5                     	;# 
  2078  0FE6                     	;# 
  2079  0FE7                     	;# 
  2080  0FE8                     	;# 
  2081  0FE9                     	;# 
  2082  0FEA                     	;# 
  2083  0FEB                     	;# 
  2084  0FED                     	;# 
  2085  0FEE                     	;# 
  2086  0FEF                     	;# 
  2087  0000                     	;# 
  2088  0001                     	;# 
  2089  0002                     	;# 
  2090  0003                     	;# 
  2091  0004                     	;# 
  2092  0005                     	;# 
  2093  0006                     	;# 
  2094  0007                     	;# 
  2095  0008                     	;# 
  2096  0009                     	;# 
  2097  000A                     	;# 
  2098  000B                     	;# 
  2099  000C                     	;# 
  2100  000D                     	;# 
  2101  000E                     	;# 
  2102  0011                     	;# 
  2103  0012                     	;# 
  2104  0013                     	;# 
  2105  0015                     	;# 
  2106  0016                     	;# 
  2107  0016                     	;# 
  2108  0017                     	;# 
  2109  0018                     	;# 
  2110  0019                     	;# 
  2111  001A                     	;# 
  2112  001B                     	;# 
  2113  001C                     	;# 
  2114  008C                     	;# 
  2115  008D                     	;# 
  2116  008E                     	;# 
  2117  0091                     	;# 
  2118  0092                     	;# 
  2119  0093                     	;# 
  2120  0095                     	;# 
  2121  0096                     	;# 
  2122  0097                     	;# 
  2123  0098                     	;# 
  2124  0099                     	;# 
  2125  009A                     	;# 
  2126  009B                     	;# 
  2127  009B                     	;# 
  2128  009C                     	;# 
  2129  009D                     	;# 
  2130  009E                     	;# 
  2131  009F                     	;# 
  2132  010C                     	;# 
  2133  010D                     	;# 
  2134  010E                     	;# 
  2135  0111                     	;# 
  2136  0112                     	;# 
  2137  0113                     	;# 
  2138  0114                     	;# 
  2139  0115                     	;# 
  2140  0116                     	;# 
  2141  0117                     	;# 
  2142  0118                     	;# 
  2143  0119                     	;# 
  2144  011C                     	;# 
  2145  018C                     	;# 
  2146  018D                     	;# 
  2147  018E                     	;# 
  2148  0191                     	;# 
  2149  0191                     	;# 
  2150  0192                     	;# 
  2151  0193                     	;# 
  2152  0193                     	;# 
  2153  0194                     	;# 
  2154  0195                     	;# 
  2155  0196                     	;# 
  2156  0199                     	;# 
  2157  0199                     	;# 
  2158  0199                     	;# 
  2159  019A                     	;# 
  2160  019A                     	;# 
  2161  019A                     	;# 
  2162  019B                     	;# 
  2163  019B                     	;# 
  2164  019B                     	;# 
  2165  019B                     	;# 
  2166  019B                     	;# 
  2167  019C                     	;# 
  2168  019C                     	;# 
  2169  019C                     	;# 
  2170  019D                     	;# 
  2171  019D                     	;# 
  2172  019D                     	;# 
  2173  019E                     	;# 
  2174  019E                     	;# 
  2175  019E                     	;# 
  2176  019F                     	;# 
  2177  019F                     	;# 
  2178  019F                     	;# 
  2179  019F                     	;# 
  2180  019F                     	;# 
  2181  020C                     	;# 
  2182  020D                     	;# 
  2183  020E                     	;# 
  2184  0211                     	;# 
  2185  0211                     	;# 
  2186  0212                     	;# 
  2187  0212                     	;# 
  2188  0213                     	;# 
  2189  0213                     	;# 
  2190  0214                     	;# 
  2191  0214                     	;# 
  2192  0215                     	;# 
  2193  0215                     	;# 
  2194  0215                     	;# 
  2195  0215                     	;# 
  2196  0216                     	;# 
  2197  0216                     	;# 
  2198  0217                     	;# 
  2199  0217                     	;# 
  2200  028C                     	;# 
  2201  028D                     	;# 
  2202  028E                     	;# 
  2203  0291                     	;# 
  2204  0291                     	;# 
  2205  0292                     	;# 
  2206  0293                     	;# 
  2207  0293                     	;# 
  2208  0298                     	;# 
  2209  0298                     	;# 
  2210  0299                     	;# 
  2211  029A                     	;# 
  2212  029A                     	;# 
  2213  029E                     	;# 
  2214  030C                     	;# 
  2215  030D                     	;# 
  2216  030E                     	;# 
  2217  038C                     	;# 
  2218  038D                     	;# 
  2219  038E                     	;# 
  2220  0391                     	;# 
  2221  0392                     	;# 
  2222  0393                     	;# 
  2223  0394                     	;# 
  2224  0395                     	;# 
  2225  0396                     	;# 
  2226  0397                     	;# 
  2227  0398                     	;# 
  2228  0399                     	;# 
  2229  0415                     	;# 
  2230  0416                     	;# 
  2231  0417                     	;# 
  2232  041C                     	;# 
  2233  041D                     	;# 
  2234  041E                     	;# 
  2235  0511                     	;# 
  2236  0515                     	;# 
  2237  0617                     	;# 
  2238  0618                     	;# 
  2239  0619                     	;# 
  2240  0619                     	;# 
  2241  061A                     	;# 
  2242  061B                     	;# 
  2243  061C                     	;# 
  2244  061C                     	;# 
  2245  0691                     	;# 
  2246  0692                     	;# 
  2247  0693                     	;# 
  2248  0694                     	;# 
  2249  0695                     	;# 
  2250  0696                     	;# 
  2251  0697                     	;# 
  2252  0698                     	;# 
  2253  0699                     	;# 
  2254  069A                     	;# 
  2255  069B                     	;# 
  2256  069C                     	;# 
  2257  069D                     	;# 
  2258  069E                     	;# 
  2259  069F                     	;# 
  2260  0E0F                     	;# 
  2261  0E10                     	;# 
  2262  0E11                     	;# 
  2263  0E12                     	;# 
  2264  0E13                     	;# 
  2265  0E14                     	;# 
  2266  0E15                     	;# 
  2267  0E17                     	;# 
  2268  0E20                     	;# 
  2269  0E21                     	;# 
  2270  0E22                     	;# 
  2271  0E24                     	;# 
  2272  0E25                     	;# 
  2273  0E28                     	;# 
  2274  0E29                     	;# 
  2275  0E2A                     	;# 
  2276  0E2B                     	;# 
  2277  0E90                     	;# 
  2278  0E91                     	;# 
  2279  0E92                     	;# 
  2280  0E94                     	;# 
  2281  0E95                     	;# 
  2282  0E9C                     	;# 
  2283  0E9D                     	;# 
  2284  0E9E                     	;# 
  2285  0E9F                     	;# 
  2286  0EA0                     	;# 
  2287  0EA1                     	;# 
  2288  0EA2                     	;# 
  2289  0EA3                     	;# 
  2290  0EA4                     	;# 
  2291  0EA5                     	;# 
  2292  0EA6                     	;# 
  2293  0EA7                     	;# 
  2294  0F0F                     	;# 
  2295  0F10                     	;# 
  2296  0F11                     	;# 
  2297  0F12                     	;# 
  2298  0F13                     	;# 
  2299  0F14                     	;# 
  2300  0F15                     	;# 
  2301  0F16                     	;# 
  2302  0F17                     	;# 
  2303  0F18                     	;# 
  2304  0F19                     	;# 
  2305  0F1A                     	;# 
  2306  0F1B                     	;# 
  2307  0F1C                     	;# 
  2308  0F1D                     	;# 
  2309  0F1E                     	;# 
  2310  0F1F                     	;# 
  2311  0F20                     	;# 
  2312  0F21                     	;# 
  2313  0F22                     	;# 
  2314  0F23                     	;# 
  2315  0F24                     	;# 
  2316  0F25                     	;# 
  2317  0F26                     	;# 
  2318  0F27                     	;# 
  2319  0F28                     	;# 
  2320  0F29                     	;# 
  2321  0F2A                     	;# 
  2322  0F2B                     	;# 
  2323  0F2C                     	;# 
  2324  0F2D                     	;# 
  2325  0FE4                     	;# 
  2326  0FE5                     	;# 
  2327  0FE6                     	;# 
  2328  0FE7                     	;# 
  2329  0FE8                     	;# 
  2330  0FE9                     	;# 
  2331  0FEA                     	;# 
  2332  0FEB                     	;# 
  2333  0FED                     	;# 
  2334  0FEE                     	;# 
  2335  0FEF                     	;# 
  2336  0000                     	;# 
  2337  0001                     	;# 
  2338  0002                     	;# 
  2339  0003                     	;# 
  2340  0004                     	;# 
  2341  0005                     	;# 
  2342  0006                     	;# 
  2343  0007                     	;# 
  2344  0008                     	;# 
  2345  0009                     	;# 
  2346  000A                     	;# 
  2347  000B                     	;# 
  2348  000C                     	;# 
  2349  000D                     	;# 
  2350  000E                     	;# 
  2351  0011                     	;# 
  2352  0012                     	;# 
  2353  0013                     	;# 
  2354  0015                     	;# 
  2355  0016                     	;# 
  2356  0016                     	;# 
  2357  0017                     	;# 
  2358  0018                     	;# 
  2359  0019                     	;# 
  2360  001A                     	;# 
  2361  001B                     	;# 
  2362  001C                     	;# 
  2363  008C                     	;# 
  2364  008D                     	;# 
  2365  008E                     	;# 
  2366  0091                     	;# 
  2367  0092                     	;# 
  2368  0093                     	;# 
  2369  0095                     	;# 
  2370  0096                     	;# 
  2371  0097                     	;# 
  2372  0098                     	;# 
  2373  0099                     	;# 
  2374  009A                     	;# 
  2375  009B                     	;# 
  2376  009B                     	;# 
  2377  009C                     	;# 
  2378  009D                     	;# 
  2379  009E                     	;# 
  2380  009F                     	;# 
  2381  010C                     	;# 
  2382  010D                     	;# 
  2383  010E                     	;# 
  2384  0111                     	;# 
  2385  0112                     	;# 
  2386  0113                     	;# 
  2387  0114                     	;# 
  2388  0115                     	;# 
  2389  0116                     	;# 
  2390  0117                     	;# 
  2391  0118                     	;# 
  2392  0119                     	;# 
  2393  011C                     	;# 
  2394  018C                     	;# 
  2395  018D                     	;# 
  2396  018E                     	;# 
  2397  0191                     	;# 
  2398  0191                     	;# 
  2399  0192                     	;# 
  2400  0193                     	;# 
  2401  0193                     	;# 
  2402  0194                     	;# 
  2403  0195                     	;# 
  2404  0196                     	;# 
  2405  0199                     	;# 
  2406  0199                     	;# 
  2407  0199                     	;# 
  2408  019A                     	;# 
  2409  019A                     	;# 
  2410  019A                     	;# 
  2411  019B                     	;# 
  2412  019B                     	;# 
  2413  019B                     	;# 
  2414  019B                     	;# 
  2415  019B                     	;# 
  2416  019C                     	;# 
  2417  019C                     	;# 
  2418  019C                     	;# 
  2419  019D                     	;# 
  2420  019D                     	;# 
  2421  019D                     	;# 
  2422  019E                     	;# 
  2423  019E                     	;# 
  2424  019E                     	;# 
  2425  019F                     	;# 
  2426  019F                     	;# 
  2427  019F                     	;# 
  2428  019F                     	;# 
  2429  019F                     	;# 
  2430  020C                     	;# 
  2431  020D                     	;# 
  2432  020E                     	;# 
  2433  0211                     	;# 
  2434  0211                     	;# 
  2435  0212                     	;# 
  2436  0212                     	;# 
  2437  0213                     	;# 
  2438  0213                     	;# 
  2439  0214                     	;# 
  2440  0214                     	;# 
  2441  0215                     	;# 
  2442  0215                     	;# 
  2443  0215                     	;# 
  2444  0215                     	;# 
  2445  0216                     	;# 
  2446  0216                     	;# 
  2447  0217                     	;# 
  2448  0217                     	;# 
  2449  028C                     	;# 
  2450  028D                     	;# 
  2451  028E                     	;# 
  2452  0291                     	;# 
  2453  0291                     	;# 
  2454  0292                     	;# 
  2455  0293                     	;# 
  2456  0293                     	;# 
  2457  0298                     	;# 
  2458  0298                     	;# 
  2459  0299                     	;# 
  2460  029A                     	;# 
  2461  029A                     	;# 
  2462  029E                     	;# 
  2463  030C                     	;# 
  2464  030D                     	;# 
  2465  030E                     	;# 
  2466  038C                     	;# 
  2467  038D                     	;# 
  2468  038E                     	;# 
  2469  0391                     	;# 
  2470  0392                     	;# 
  2471  0393                     	;# 
  2472  0394                     	;# 
  2473  0395                     	;# 
  2474  0396                     	;# 
  2475  0397                     	;# 
  2476  0398                     	;# 
  2477  0399                     	;# 
  2478  0415                     	;# 
  2479  0416                     	;# 
  2480  0417                     	;# 
  2481  041C                     	;# 
  2482  041D                     	;# 
  2483  041E                     	;# 
  2484  0511                     	;# 
  2485  0515                     	;# 
  2486  0617                     	;# 
  2487  0618                     	;# 
  2488  0619                     	;# 
  2489  0619                     	;# 
  2490  061A                     	;# 
  2491  061B                     	;# 
  2492  061C                     	;# 
  2493  061C                     	;# 
  2494  0691                     	;# 
  2495  0692                     	;# 
  2496  0693                     	;# 
  2497  0694                     	;# 
  2498  0695                     	;# 
  2499  0696                     	;# 
  2500  0697                     	;# 
  2501  0698                     	;# 
  2502  0699                     	;# 
  2503  069A                     	;# 
  2504  069B                     	;# 
  2505  069C                     	;# 
  2506  069D                     	;# 
  2507  069E                     	;# 
  2508  069F                     	;# 
  2509  0E0F                     	;# 
  2510  0E10                     	;# 
  2511  0E11                     	;# 
  2512  0E12                     	;# 
  2513  0E13                     	;# 
  2514  0E14                     	;# 
  2515  0E15                     	;# 
  2516  0E17                     	;# 
  2517  0E20                     	;# 
  2518  0E21                     	;# 
  2519  0E22                     	;# 
  2520  0E24                     	;# 
  2521  0E25                     	;# 
  2522  0E28                     	;# 
  2523  0E29                     	;# 
  2524  0E2A                     	;# 
  2525  0E2B                     	;# 
  2526  0E90                     	;# 
  2527  0E91                     	;# 
  2528  0E92                     	;# 
  2529  0E94                     	;# 
  2530  0E95                     	;# 
  2531  0E9C                     	;# 
  2532  0E9D                     	;# 
  2533  0E9E                     	;# 
  2534  0E9F                     	;# 
  2535  0EA0                     	;# 
  2536  0EA1                     	;# 
  2537  0EA2                     	;# 
  2538  0EA3                     	;# 
  2539  0EA4                     	;# 
  2540  0EA5                     	;# 
  2541  0EA6                     	;# 
  2542  0EA7                     	;# 
  2543  0F0F                     	;# 
  2544  0F10                     	;# 
  2545  0F11                     	;# 
  2546  0F12                     	;# 
  2547  0F13                     	;# 
  2548  0F14                     	;# 
  2549  0F15                     	;# 
  2550  0F16                     	;# 
  2551  0F17                     	;# 
  2552  0F18                     	;# 
  2553  0F19                     	;# 
  2554  0F1A                     	;# 
  2555  0F1B                     	;# 
  2556  0F1C                     	;# 
  2557  0F1D                     	;# 
  2558  0F1E                     	;# 
  2559  0F1F                     	;# 
  2560  0F20                     	;# 
  2561  0F21                     	;# 
  2562  0F22                     	;# 
  2563  0F23                     	;# 
  2564  0F24                     	;# 
  2565  0F25                     	;# 
  2566  0F26                     	;# 
  2567  0F27                     	;# 
  2568  0F28                     	;# 
  2569  0F29                     	;# 
  2570  0F2A                     	;# 
  2571  0F2B                     	;# 
  2572  0F2C                     	;# 
  2573  0F2D                     	;# 
  2574  0FE4                     	;# 
  2575  0FE5                     	;# 
  2576  0FE6                     	;# 
  2577  0FE7                     	;# 
  2578  0FE8                     	;# 
  2579  0FE9                     	;# 
  2580  0FEA                     	;# 
  2581  0FEB                     	;# 
  2582  0FED                     	;# 
  2583  0FEE                     	;# 
  2584  0FEF                     	;# 
  2585  0000                     	;# 
  2586  0001                     	;# 
  2587  0002                     	;# 
  2588  0003                     	;# 
  2589  0004                     	;# 
  2590  0005                     	;# 
  2591  0006                     	;# 
  2592  0007                     	;# 
  2593  0008                     	;# 
  2594  0009                     	;# 
  2595  000A                     	;# 
  2596  000B                     	;# 
  2597  000C                     	;# 
  2598  000D                     	;# 
  2599  000E                     	;# 
  2600  0011                     	;# 
  2601  0012                     	;# 
  2602  0013                     	;# 
  2603  0015                     	;# 
  2604  0016                     	;# 
  2605  0016                     	;# 
  2606  0017                     	;# 
  2607  0018                     	;# 
  2608  0019                     	;# 
  2609  001A                     	;# 
  2610  001B                     	;# 
  2611  001C                     	;# 
  2612  008C                     	;# 
  2613  008D                     	;# 
  2614  008E                     	;# 
  2615  0091                     	;# 
  2616  0092                     	;# 
  2617  0093                     	;# 
  2618  0095                     	;# 
  2619  0096                     	;# 
  2620  0097                     	;# 
  2621  0098                     	;# 
  2622  0099                     	;# 
  2623  009A                     	;# 
  2624  009B                     	;# 
  2625  009B                     	;# 
  2626  009C                     	;# 
  2627  009D                     	;# 
  2628  009E                     	;# 
  2629  009F                     	;# 
  2630  010C                     	;# 
  2631  010D                     	;# 
  2632  010E                     	;# 
  2633  0111                     	;# 
  2634  0112                     	;# 
  2635  0113                     	;# 
  2636  0114                     	;# 
  2637  0115                     	;# 
  2638  0116                     	;# 
  2639  0117                     	;# 
  2640  0118                     	;# 
  2641  0119                     	;# 
  2642  011C                     	;# 
  2643  018C                     	;# 
  2644  018D                     	;# 
  2645  018E                     	;# 
  2646  0191                     	;# 
  2647  0191                     	;# 
  2648  0192                     	;# 
  2649  0193                     	;# 
  2650  0193                     	;# 
  2651  0194                     	;# 
  2652  0195                     	;# 
  2653  0196                     	;# 
  2654  0199                     	;# 
  2655  0199                     	;# 
  2656  0199                     	;# 
  2657  019A                     	;# 
  2658  019A                     	;# 
  2659  019A                     	;# 
  2660  019B                     	;# 
  2661  019B                     	;# 
  2662  019B                     	;# 
  2663  019B                     	;# 
  2664  019B                     	;# 
  2665  019C                     	;# 
  2666  019C                     	;# 
  2667  019C                     	;# 
  2668  019D                     	;# 
  2669  019D                     	;# 
  2670  019D                     	;# 
  2671  019E                     	;# 
  2672  019E                     	;# 
  2673  019E                     	;# 
  2674  019F                     	;# 
  2675  019F                     	;# 
  2676  019F                     	;# 
  2677  019F                     	;# 
  2678  019F                     	;# 
  2679  020C                     	;# 
  2680  020D                     	;# 
  2681  020E                     	;# 
  2682  0211                     	;# 
  2683  0211                     	;# 
  2684  0212                     	;# 
  2685  0212                     	;# 
  2686  0213                     	;# 
  2687  0213                     	;# 
  2688  0214                     	;# 
  2689  0214                     	;# 
  2690  0215                     	;# 
  2691  0215                     	;# 
  2692  0215                     	;# 
  2693  0215                     	;# 
  2694  0216                     	;# 
  2695  0216                     	;# 
  2696  0217                     	;# 
  2697  0217                     	;# 
  2698  028C                     	;# 
  2699  028D                     	;# 
  2700  028E                     	;# 
  2701  0291                     	;# 
  2702  0291                     	;# 
  2703  0292                     	;# 
  2704  0293                     	;# 
  2705  0293                     	;# 
  2706  0298                     	;# 
  2707  0298                     	;# 
  2708  0299                     	;# 
  2709  029A                     	;# 
  2710  029A                     	;# 
  2711  029E                     	;# 
  2712  030C                     	;# 
  2713  030D                     	;# 
  2714  030E                     	;# 
  2715  038C                     	;# 
  2716  038D                     	;# 
  2717  038E                     	;# 
  2718  0391                     	;# 
  2719  0392                     	;# 
  2720  0393                     	;# 
  2721  0394                     	;# 
  2722  0395                     	;# 
  2723  0396                     	;# 
  2724  0397                     	;# 
  2725  0398                     	;# 
  2726  0399                     	;# 
  2727  0415                     	;# 
  2728  0416                     	;# 
  2729  0417                     	;# 
  2730  041C                     	;# 
  2731  041D                     	;# 
  2732  041E                     	;# 
  2733  0511                     	;# 
  2734  0515                     	;# 
  2735  0617                     	;# 
  2736  0618                     	;# 
  2737  0619                     	;# 
  2738  0619                     	;# 
  2739  061A                     	;# 
  2740  061B                     	;# 
  2741  061C                     	;# 
  2742  061C                     	;# 
  2743  0691                     	;# 
  2744  0692                     	;# 
  2745  0693                     	;# 
  2746  0694                     	;# 
  2747  0695                     	;# 
  2748  0696                     	;# 
  2749  0697                     	;# 
  2750  0698                     	;# 
  2751  0699                     	;# 
  2752  069A                     	;# 
  2753  069B                     	;# 
  2754  069C                     	;# 
  2755  069D                     	;# 
  2756  069E                     	;# 
  2757  069F                     	;# 
  2758  0E0F                     	;# 
  2759  0E10                     	;# 
  2760  0E11                     	;# 
  2761  0E12                     	;# 
  2762  0E13                     	;# 
  2763  0E14                     	;# 
  2764  0E15                     	;# 
  2765  0E17                     	;# 
  2766  0E20                     	;# 
  2767  0E21                     	;# 
  2768  0E22                     	;# 
  2769  0E24                     	;# 
  2770  0E25                     	;# 
  2771  0E28                     	;# 
  2772  0E29                     	;# 
  2773  0E2A                     	;# 
  2774  0E2B                     	;# 
  2775  0E90                     	;# 
  2776  0E91                     	;# 
  2777  0E92                     	;# 
  2778  0E94                     	;# 
  2779  0E95                     	;# 
  2780  0E9C                     	;# 
  2781  0E9D                     	;# 
  2782  0E9E                     	;# 
  2783  0E9F                     	;# 
  2784  0EA0                     	;# 
  2785  0EA1                     	;# 
  2786  0EA2                     	;# 
  2787  0EA3                     	;# 
  2788  0EA4                     	;# 
  2789  0EA5                     	;# 
  2790  0EA6                     	;# 
  2791  0EA7                     	;# 
  2792  0F0F                     	;# 
  2793  0F10                     	;# 
  2794  0F11                     	;# 
  2795  0F12                     	;# 
  2796  0F13                     	;# 
  2797  0F14                     	;# 
  2798  0F15                     	;# 
  2799  0F16                     	;# 
  2800  0F17                     	;# 
  2801  0F18                     	;# 
  2802  0F19                     	;# 
  2803  0F1A                     	;# 
  2804  0F1B                     	;# 
  2805  0F1C                     	;# 
  2806  0F1D                     	;# 
  2807  0F1E                     	;# 
  2808  0F1F                     	;# 
  2809  0F20                     	;# 
  2810  0F21                     	;# 
  2811  0F22                     	;# 
  2812  0F23                     	;# 
  2813  0F24                     	;# 
  2814  0F25                     	;# 
  2815  0F26                     	;# 
  2816  0F27                     	;# 
  2817  0F28                     	;# 
  2818  0F29                     	;# 
  2819  0F2A                     	;# 
  2820  0F2B                     	;# 
  2821  0F2C                     	;# 
  2822  0F2D                     	;# 
  2823  0FE4                     	;# 
  2824  0FE5                     	;# 
  2825  0FE6                     	;# 
  2826  0FE7                     	;# 
  2827  0FE8                     	;# 
  2828  0FE9                     	;# 
  2829  0FEA                     	;# 
  2830  0FEB                     	;# 
  2831  0FED                     	;# 
  2832  0FEE                     	;# 
  2833  0FEF                     	;# 
  2834                           
  2835 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2836  0000                     
  2837 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2838  0000                     
  2839 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2840  0000                     
  2841                           	psect	idataBANK0
  2842  06EC                     __pidataBANK0:	
  2843                           
  2844                           ;initializer for _maxFrequencyIndex
  2845  06EC  3406               	retlw	6
  2846  06ED  3400               	retlw	0
  2847                           
  2848                           ;initializer for _maxCurrentIndex
  2849  06EE  340B               	retlw	11
  2850  06EF  3400               	retlw	0
  2851                           
  2852                           	psect	idataBANK1
  2853  05D5                     __pidataBANK1:	
  2854                           
  2855                           ;initializer for _currentValue
  2856  05D5  3400               	retlw	0
  2857  05D6  3400               	retlw	0
  2858  05D7  341E               	retlw	30
  2859  05D8  3400               	retlw	0
  2860  05D9  3432               	retlw	50
  2861  05DA  3400               	retlw	0
  2862  05DB  3446               	retlw	70
  2863  05DC  3400               	retlw	0
  2864  05DD  345A               	retlw	90
  2865  05DE  3400               	retlw	0
  2866  05DF  346E               	retlw	110
  2867  05E0  3400               	retlw	0
  2868  05E1  3482               	retlw	130
  2869  05E2  3400               	retlw	0
  2870  05E3  34A0               	retlw	160
  2871  05E4  3400               	retlw	0
  2872  05E5  34BE               	retlw	190
  2873  05E6  3400               	retlw	0
  2874  05E7  34DC               	retlw	220
  2875  05E8  3400               	retlw	0
  2876  05E9  34FA               	retlw	250
  2877  05EA  3400               	retlw	0
  2878                           
  2879                           ;initializer for _frequencyValue
  2880  05EB  3400               	retlw	0
  2881  05EC  3400               	retlw	0
  2882  05ED  3432               	retlw	50
  2883  05EE  3400               	retlw	0
  2884  05EF  3464               	retlw	100
  2885  05F0  3400               	retlw	0
  2886  05F1  3478               	retlw	120
  2887  05F2  3400               	retlw	0
  2888  05F3  3482               	retlw	130
  2889  05F4  3400               	retlw	0
  2890  05F5  348C               	retlw	140
  2891  05F6  3400               	retlw	0
  2892                           
  2893                           	psect	nvBANK0
  2894  0060                     __pnvBANK0:	
  2895  0060                     _INT_InterruptHandler:	
  2896  0060                     	ds	2
  2897  0062                     _EUSART_ErrorHandler:	
  2898  0062                     	ds	2
  2899  0064                     _EUSART_OverrunErrorHandler:	
  2900  0064                     	ds	2
  2901  0066                     _EUSART_FramingErrorHandler:	
  2902  0066                     	ds	2
  2903  001C                     _T2CONbits	set	28
  2904  001C                     _T2CON	set	28
  2905  001A                     _TMR2	set	26
  2906  001B                     _PR2	set	27
  2907  0015                     _TMR0	set	21
  2908  0011                     _PIR1bits	set	17
  2909  000B                     _INTCONbits	set	11
  2910  009D                     _ADCON0bits	set	157
  2911  009E                     _ADCON1	set	158
  2912  009D                     _ADCON0	set	157
  2913  0095                     _OPTION_REG	set	149
  2914  0095                     _OPTION_REGbits	set	149
  2915  008E                     _TRISC	set	142
  2916  008D                     _TRISB	set	141
  2917  008C                     _TRISA	set	140
  2918  0097                     _WDTCON	set	151
  2919  0098                     _OSCTUNE	set	152
  2920  009A                     _OSCSTAT	set	154
  2921  0099                     _OSCCON	set	153
  2922  009B                     _ADRES	set	155
  2923  0117                     _FVRCONbits	set	279
  2924  0117                     _FVRCON	set	279
  2925  010E                     _LATC	set	270
  2926  010D                     _LATB	set	269
  2927  010C                     _LATA	set	268
  2928  0116                     _BORCON	set	278
  2929  0119                     _DAC1CON1	set	281
  2930  0118                     _DAC1CON0	set	280
  2931  019A                     _TX1REG	set	410
  2932  0199                     _RC1REG	set	409
  2933  019D                     _RC1STAbits	set	413
  2934  019E                     _TX1STAbits	set	414
  2935  019C                     _SP1BRGH	set	412
  2936  019B                     _SP1BRGL	set	411
  2937  019E                     _TX1STA	set	414
  2938  019D                     _RC1STA	set	413
  2939  019F                     _BAUD1CON	set	415
  2940  018C                     _ANSELA	set	396
  2941  018D                     _ANSELB	set	397
  2942  018E                     _ANSELC	set	398
  2943  020E                     _WPUC	set	526
  2944  020C                     _WPUA	set	524
  2945  020D                     _WPUB	set	525
  2946  0291                     _CCPR1L	set	657
  2947  0293                     _CCP1CONbits	set	659
  2948  029E                     _CCPTMRSbits	set	670
  2949  028E                     _ODCONC	set	654
  2950  028D                     _ODCONB	set	653
  2951  028C                     _ODCONA	set	652
  2952  030E                     _SLRCONC	set	782
  2953  030D                     _SLRCONB	set	781
  2954  030C                     _SLRCONA	set	780
  2955  038E                     _INLVLC	set	910
  2956  038D                     _INLVLB	set	909
  2957  038C                     _INLVLA	set	908
  2958  0515                     _OPA2CON	set	1301
  2959  0511                     _OPA1CON	set	1297
  2960  061C                     _PWM4CONbits	set	1564
  2961  061A                     _PWM4DCLbits	set	1562
  2962  061B                     _PWM4DCH	set	1563
  2963  0619                     _PWM3CONbits	set	1561
  2964  0617                     _PWM3DCLbits	set	1559
  2965  0618                     _PWM3DCH	set	1560
  2966  0E24                     _RXPPS	set	3620
  2967  0E10                     _INTPPS	set	3600
  2968  0EA5                     _RC5PPS	set	3749
  2969  0E95                     _RA5PPS	set	3733
  2970  0EA4                     _RC4PPS	set	3748
  2971  0E9F                     _RB7PPS	set	3743
  2972                           
  2973                           	psect	stringtext1
  2974  064D                     __pstringtext1:	
  2975  064D                     STR_1:	
  2976  064D  340A               	retlw	10
  2977  064E  3420               	retlw	32	;' '
  2978  064F  3446               	retlw	70	;'F'
  2979  0650  3472               	retlw	114	;'r'
  2980  0651  3465               	retlw	101	;'e'
  2981  0652  3471               	retlw	113	;'q'
  2982  0653  3475               	retlw	117	;'u'
  2983  0654  3465               	retlw	101	;'e'
  2984  0655  346E               	retlw	110	;'n'
  2985  0656  3463               	retlw	99	;'c'
  2986  0657  3479               	retlw	121	;'y'
  2987  0658  3420               	retlw	32	;' '
  2988  0659  3473               	retlw	115	;'s'
  2989  065A  3465               	retlw	101	;'e'
  2990  065B  346C               	retlw	108	;'l'
  2991  065C  3465               	retlw	101	;'e'
  2992  065D  3463               	retlw	99	;'c'
  2993  065E  3474               	retlw	116	;'t'
  2994  065F  3465               	retlw	101	;'e'
  2995  0660  3464               	retlw	100	;'d'
  2996  0661  3400               	retlw	0
  2997                           
  2998                           	psect	stringtext2
  2999  0662                     __pstringtext2:	
  3000  0662                     STR_2:	
  3001  0662  340A               	retlw	10
  3002  0663  3420               	retlw	32	;' '
  3003  0664  3463               	retlw	99	;'c'
  3004  0665  3475               	retlw	117	;'u'
  3005  0666  3472               	retlw	114	;'r'
  3006  0667  3472               	retlw	114	;'r'
  3007  0668  3465               	retlw	101	;'e'
  3008  0669  346E               	retlw	110	;'n'
  3009  066A  3474               	retlw	116	;'t'
  3010  066B  3420               	retlw	32	;' '
  3011  066C  3473               	retlw	115	;'s'
  3012  066D  3465               	retlw	101	;'e'
  3013  066E  346C               	retlw	108	;'l'
  3014  066F  3465               	retlw	101	;'e'
  3015  0670  3463               	retlw	99	;'c'
  3016  0671  3474               	retlw	116	;'t'
  3017  0672  3465               	retlw	101	;'e'
  3018  0673  3464               	retlw	100	;'d'
  3019  0674  3400               	retlw	0
  3020                           
  3021                           	psect	stringtext3
  3022  0675                     __pstringtext3:	
  3023  0675                     STR_3:	
  3024  0675  340A               	retlw	10
  3025  0676  3420               	retlw	32	;' '
  3026  0677  3472               	retlw	114	;'r'
  3027  0678  3465               	retlw	101	;'e'
  3028  0679  3473               	retlw	115	;'s'
  3029  067A  3465               	retlw	101	;'e'
  3030  067B  3474               	retlw	116	;'t'
  3031  067C  3420               	retlw	32	;' '
  3032  067D  3473               	retlw	115	;'s'
  3033  067E  3465               	retlw	101	;'e'
  3034  067F  346C               	retlw	108	;'l'
  3035  0680  3465               	retlw	101	;'e'
  3036  0681  3463               	retlw	99	;'c'
  3037  0682  3474               	retlw	116	;'t'
  3038  0683  3400               	retlw	0
  3039                           
  3040                           	psect	stringtext4
  3041  0000                     __pstringtext4:	
  3042                           
  3043                           ; #config settings
  3044  0000                     
  3045                           	psect	cinit
  3046  001C                     start_initialization:	
  3047  001C                     __initialization:	
  3048                           
  3049                           ; Initialize objects allocated to BANK0
  3050  001C  30EC               	movlw	low __pidataBANK0
  3051  001D  0084               	movwf	4
  3052  001E  3086               	movlw	(high __pidataBANK0)| (0+128)
  3053  001F  0085               	movwf	5
  3054  0020  3068               	movlw	low __pdataBANK0
  3055  0021  0086               	movwf	6
  3056  0022  3000               	movlw	high __pdataBANK0
  3057  0023  0087               	movwf	7
  3058  0024  3004               	movlw	4
  3059  0025  3186  26BD  3180   	fcall	init_ram
  3060                           
  3061                           ; Initialize objects allocated to BANK1
  3062  0028  30D5               	movlw	low __pidataBANK1
  3063  0029  0084               	movwf	4
  3064  002A  3085               	movlw	(high __pidataBANK1)| (0+128)
  3065  002B  0085               	movwf	5
  3066  002C  30A0               	movlw	low __pdataBANK1
  3067  002D  0086               	movwf	6
  3068  002E  3000               	movlw	high __pdataBANK1
  3069  002F  0087               	movwf	7
  3070  0030  3022               	movlw	34
  3071  0031  3186  26BD  3180   	fcall	init_ram
  3072                           
  3073                           ; Clear objects allocated to COMMON
  3074  0034  01F6               	clrf	__pbssCOMMON& (0+127)
  3075  0035  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  3076  0036  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  3077  0037  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  3078  0038  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  3079                           
  3080                           ; Clear objects allocated to BANK0
  3081  0039  304B               	movlw	low __pbssBANK0
  3082  003A  0084               	movwf	4
  3083  003B  3000               	movlw	high __pbssBANK0
  3084  003C  0085               	movwf	5
  3085  003D  3015               	movlw	21
  3086  003E  3186  26C3  3180   	fcall	clear_ram0
  3087                           
  3088                           ; Clear objects allocated to BANK1
  3089  0041  30C2               	movlw	low __pbssBANK1
  3090  0042  0084               	movwf	4
  3091  0043  3000               	movlw	high __pbssBANK1
  3092  0044  0085               	movwf	5
  3093  0045  3021               	movlw	33
  3094  0046  3186  26C3         	fcall	clear_ram0
  3095  0048                     end_of_initialization:	
  3096                           ;End of C runtime variable initialization code
  3097                           
  3098  0048                     __end_of__initialization:	
  3099  0048  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3100  0049  0020               	movlb	0
  3101  004A  3184  2CA2         	ljmp	_main	;jump to C main() function
  3102                           
  3103                           	psect	bssCOMMON
  3104  0076                     __pbssCOMMON:	
  3105  0076                     _microamps:	
  3106  0076                     	ds	2
  3107  0078                     _current:	
  3108  0078                     	ds	1
  3109  0079                     _frequency:	
  3110  0079                     	ds	1
  3111  007A                     _timer0ReloadVal:	
  3112  007A                     	ds	1
  3113                           
  3114                           	psect	bssBANK0
  3115  004B                     __pbssBANK0:	
  3116  004B                     _frequencyIndex:	
  3117  004B                     	ds	2
  3118  004D                     _currentIndex:	
  3119  004D                     	ds	2
  3120  004F                     _Vdd_mv:	
  3121  004F                     	ds	2
  3122  0051                     _interfaceState:	
  3123  0051                     	ds	1
  3124  0052                     _duty:	
  3125  0052                     	ds	1
  3126  0053                     _flag:	
  3127  0053                     	ds	1
  3128  0054                     _LED_blue:	
  3129  0054                     	ds	1
  3130  0055                     _LED_green:	
  3131  0055                     	ds	1
  3132  0056                     _LED_red:	
  3133  0056                     	ds	1
  3134  0057                     _eusartRxLastError:	
  3135  0057                     	ds	1
  3136  0058                     _ir_code:	
  3137  0058                     	ds	6
  3138  005E                     _Vdac_mv:	
  3139  005E                     	ds	2
  3140                           
  3141                           	psect	dataBANK0
  3142  0068                     __pdataBANK0:	
  3143  0068                     _maxFrequencyIndex:	
  3144  0068                     	ds	2
  3145  006A                     _maxCurrentIndex:	
  3146  006A                     	ds	2
  3147                           
  3148                           	psect	bssBANK1
  3149  00C2                     __pbssBANK1:	
  3150  00C2                     _stats:	
  3151  00C2                     	ds	33
  3152                           
  3153                           	psect	dataBANK1
  3154  00A0                     __pdataBANK1:	
  3155  00A0                     _currentValue:	
  3156  00A0                     	ds	22
  3157  00B6                     _frequencyValue:	
  3158  00B6                     	ds	12
  3159                           
  3160                           	psect	inittext
  3161  06BD                     init_ram:	
  3162  06BD  00FE               	movwf	126
  3163  06BE                     initloop:	
  3164  06BE  0012               	moviw fsr0++
  3165  06BF  001E               	movwi fsr1++
  3166  06C0  0BFE               	decfsz	126,f
  3167  06C1  2EBE               	goto	initloop
  3168  06C2  3400               	retlw	0
  3169                           
  3170                           	psect	clrtext
  3171  06C3                     clear_ram0:	
  3172                           ;	Called with FSR0 containing the base address, and
  3173                           ;	WREG with the size to clear
  3174                           
  3175  06C3  0064               	clrwdt	;clear the watchdog before getting into this loop
  3176  06C4                     clrloop0:	
  3177  06C4  0180               	clrf	0	;clear RAM location pointed to by FSR
  3178  06C5  3101               	addfsr 0,1
  3179  06C6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3180  06C7  2EC4               	goto	clrloop0	;have we reached the end yet?
  3181  06C8  3400               	retlw	0	;all done for this memory range, return
  3182                           
  3183                           	psect	cstackCOMMON
  3184  0070                     __pcstackCOMMON:	
  3185  0070                     ?_PIN_MANAGER_Initialize:	
  3186  0070                     ?_OSCILLATOR_Initialize:	
  3187                           ; 1 bytes @ 0x0
  3188                           
  3189  0070                     ?_WDT_Initialize:	
  3190                           ; 1 bytes @ 0x0
  3191                           
  3192  0070                     ?_OPA1_Initialize:	
  3193                           ; 1 bytes @ 0x0
  3194                           
  3195  0070                     ?_OPA2_Initialize:	
  3196                           ; 1 bytes @ 0x0
  3197                           
  3198  0070                     ?_TMR2_Initialize:	
  3199                           ; 1 bytes @ 0x0
  3200                           
  3201  0070                     ?_EXT_INT_Initialize:	
  3202                           ; 1 bytes @ 0x0
  3203                           
  3204  0070                     ?_TMR0_Initialize:	
  3205                           ; 1 bytes @ 0x0
  3206                           
  3207  0070                     ?_EUSART_Initialize:	
  3208                           ; 1 bytes @ 0x0
  3209                           
  3210  0070                     ?_INT_ISR:	
  3211                           ; 1 bytes @ 0x0
  3212                           
  3213  0070                     ?_INT_CallBack:	
  3214                           ; 1 bytes @ 0x0
  3215                           
  3216  0070                     ?_DAC_Initialize:	
  3217                           ; 1 bytes @ 0x0
  3218                           
  3219  0070                     ?_SYSTEM_Initialize:	
  3220                           ; 1 bytes @ 0x0
  3221                           
  3222  0070                     ?_PIN_MANAGER_IOC:	
  3223                           ; 1 bytes @ 0x0
  3224                           
  3225  0070                     ??_PIN_MANAGER_IOC:	
  3226                           ; 1 bytes @ 0x0
  3227                           
  3228  0070                     ?_INTERRUPT_InterruptManager:	
  3229                           ; 1 bytes @ 0x0
  3230                           
  3231  0070                     ?_EUSART_Write:	
  3232                           ; 1 bytes @ 0x0
  3233                           
  3234  0070                     ?_putch:	
  3235                           ; 1 bytes @ 0x0
  3236                           
  3237  0070                     ?_INT_DefaultInterruptHandler:	
  3238                           ; 1 bytes @ 0x0
  3239                           
  3240  0070                     ??_INT_DefaultInterruptHandler:	
  3241                           ; 1 bytes @ 0x0
  3242                           
  3243  0070                     ?_initLED:	
  3244                           ; 1 bytes @ 0x0
  3245                           
  3246  0070                     ?_lowBattery:	
  3247                           ; 1 bytes @ 0x0
  3248                           
  3249  0070                     ?_startUp:	
  3250                           ; 1 bytes @ 0x0
  3251                           
  3252  0070                     ?_selectSomething:	
  3253                           ; 1 bytes @ 0x0
  3254                           
  3255  0070                     ?_selectFrequency:	
  3256                           ; 1 bytes @ 0x0
  3257                           
  3258  0070                     ?_selectCurrent:	
  3259                           ; 1 bytes @ 0x0
  3260                           
  3261  0070                     ?_process_remote_command:	
  3262                           ; 1 bytes @ 0x0
  3263                           
  3264  0070                     ?_main:	
  3265                           ; 1 bytes @ 0x0
  3266                           
  3267                           
  3268                           ; 1 bytes @ 0x0
  3269  0070                     	ds	1
  3270  0071                     INT_DefaultInterruptHandler@time:	
  3271                           
  3272                           ; 1 bytes @ 0x1
  3273  0071                     	ds	1
  3274  0072                     ??_INT_ISR:	
  3275  0072                     ??_INT_CallBack:	
  3276                           ; 1 bytes @ 0x2
  3277                           
  3278  0072                     ??_INTERRUPT_InterruptManager:	
  3279                           ; 1 bytes @ 0x2
  3280                           
  3281                           
  3282                           ; 1 bytes @ 0x2
  3283  0072                     	ds	1
  3284  0073                     ??_PIN_MANAGER_Initialize:	
  3285  0073                     ??_OSCILLATOR_Initialize:	
  3286                           ; 1 bytes @ 0x3
  3287                           
  3288  0073                     ??_WDT_Initialize:	
  3289                           ; 1 bytes @ 0x3
  3290                           
  3291  0073                     ??_OPA1_Initialize:	
  3292                           ; 1 bytes @ 0x3
  3293                           
  3294  0073                     ??_OPA2_Initialize:	
  3295                           ; 1 bytes @ 0x3
  3296                           
  3297  0073                     ??_TMR2_Initialize:	
  3298                           ; 1 bytes @ 0x3
  3299                           
  3300  0073                     ??_EXT_INT_Initialize:	
  3301                           ; 1 bytes @ 0x3
  3302                           
  3303  0073                     ??_TMR0_Initialize:	
  3304                           ; 1 bytes @ 0x3
  3305                           
  3306  0073                     ??_EUSART_Initialize:	
  3307                           ; 1 bytes @ 0x3
  3308                           
  3309  0073                     ??_EUSART_SetFramingErrorHandler:	
  3310                           ; 1 bytes @ 0x3
  3311                           
  3312  0073                     ??_EUSART_SetOverrunErrorHandler:	
  3313                           ; 1 bytes @ 0x3
  3314                           
  3315  0073                     ??_EUSART_SetErrorHandler:	
  3316                           ; 1 bytes @ 0x3
  3317                           
  3318  0073                     ??_DAC_Initialize:	
  3319                           ; 1 bytes @ 0x3
  3320                           
  3321  0073                     ??_SYSTEM_Initialize:	
  3322                           ; 1 bytes @ 0x3
  3323                           
  3324  0073                     ??_EUSART_Write:	
  3325                           ; 1 bytes @ 0x3
  3326                           
  3327  0073                     ??_INT_SetInterruptHandler:	
  3328                           ; 1 bytes @ 0x3
  3329                           
  3330  0073                     ??_initLED:	
  3331                           ; 1 bytes @ 0x3
  3332                           
  3333  0073                     ??_setLEDColor:	
  3334                           ; 1 bytes @ 0x3
  3335                           
  3336  0073                     ??___lmul:	
  3337                           ; 1 bytes @ 0x3
  3338                           
  3339  0073                     ??___awdiv:	
  3340                           ; 1 bytes @ 0x3
  3341                           
  3342  0073                     ??___lldiv:	
  3343                           ; 1 bytes @ 0x3
  3344                           
  3345  0073                     EUSART_Write@txData:	
  3346                           ; 1 bytes @ 0x3
  3347                           
  3348                           
  3349                           ; 1 bytes @ 0x3
  3350  0073                     	ds	1
  3351  0074                     ??_putch:	
  3352  0074                     ??___aldiv:	
  3353                           ; 1 bytes @ 0x4
  3354                           
  3355  0074                     putch@txData:	
  3356                           ; 1 bytes @ 0x4
  3357                           
  3358  0074                     setLEDColor@red:	
  3359                           ; 1 bytes @ 0x4
  3360                           
  3361                           
  3362                           ; 1 bytes @ 0x4
  3363  0074                     	ds	1
  3364  0075                     ??_battery_voltage:	
  3365  0075                     process_remote_command@code:	
  3366                           ; 1 bytes @ 0x5
  3367                           
  3368                           
  3369                           ; 1 bytes @ 0x5
  3370  0075                     	ds	1
  3371                           
  3372                           	psect	cstackBANK0
  3373  0020                     __pcstackBANK0:	
  3374  0020                     ?_EUSART_SetFramingErrorHandler:	
  3375  0020                     ?_EUSART_SetOverrunErrorHandler:	
  3376                           ; 1 bytes @ 0x0
  3377                           
  3378  0020                     ?_EUSART_SetErrorHandler:	
  3379                           ; 1 bytes @ 0x0
  3380                           
  3381  0020                     ?_INT_SetInterruptHandler:	
  3382                           ; 1 bytes @ 0x0
  3383                           
  3384  0020                     ?_setLEDColor:	
  3385                           ; 1 bytes @ 0x0
  3386                           
  3387  0020                     ?_printf:	
  3388                           ; 1 bytes @ 0x0
  3389                           
  3390  0020                     ?___awdiv:	
  3391                           ; 2 bytes @ 0x0
  3392                           
  3393  0020                     ?___lmul:	
  3394                           ; 2 bytes @ 0x0
  3395                           
  3396  0020                     setLEDColor@green:	
  3397                           ; 4 bytes @ 0x0
  3398                           
  3399  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3400                           ; 1 bytes @ 0x0
  3401                           
  3402  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3403                           ; 2 bytes @ 0x0
  3404                           
  3405  0020                     EUSART_SetErrorHandler@interruptHandler:	
  3406                           ; 2 bytes @ 0x0
  3407                           
  3408  0020                     INT_SetInterruptHandler@InterruptHandler:	
  3409                           ; 2 bytes @ 0x0
  3410                           
  3411  0020                     printf@f:	
  3412                           ; 2 bytes @ 0x0
  3413                           
  3414  0020                     ___awdiv@divisor:	
  3415                           ; 2 bytes @ 0x0
  3416                           
  3417  0020                     ___lmul@multiplier:	
  3418                           ; 2 bytes @ 0x0
  3419                           
  3420                           
  3421                           ; 4 bytes @ 0x0
  3422  0020                     	ds	1
  3423  0021                     setLEDColor@blue:	
  3424                           
  3425                           ; 1 bytes @ 0x1
  3426  0021                     	ds	1
  3427  0022                     ??_printf:	
  3428  0022                     ??_lowBattery:	
  3429                           ; 1 bytes @ 0x2
  3430                           
  3431  0022                     ??_startUp:	
  3432                           ; 1 bytes @ 0x2
  3433                           
  3434  0022                     ??_selectSomething:	
  3435                           ; 1 bytes @ 0x2
  3436                           
  3437  0022                     ___awdiv@dividend:	
  3438                           ; 1 bytes @ 0x2
  3439                           
  3440                           
  3441                           ; 2 bytes @ 0x2
  3442  0022                     	ds	2
  3443  0024                     ___awdiv@counter:	
  3444  0024                     startUp@i:	
  3445                           ; 1 bytes @ 0x4
  3446                           
  3447  0024                     ___lmul@multiplicand:	
  3448                           ; 2 bytes @ 0x4
  3449                           
  3450                           
  3451                           ; 4 bytes @ 0x4
  3452  0024                     	ds	1
  3453  0025                     printf@ap:	
  3454  0025                     ___awdiv@sign:	
  3455                           ; 1 bytes @ 0x5
  3456                           
  3457                           
  3458                           ; 1 bytes @ 0x5
  3459  0025                     	ds	1
  3460  0026                     printf@c:	
  3461  0026                     ___awdiv@quotient:	
  3462                           ; 1 bytes @ 0x6
  3463                           
  3464                           
  3465                           ; 2 bytes @ 0x6
  3466  0026                     	ds	1
  3467  0027                     ??_selectFrequency:	
  3468  0027                     ??_selectCurrent:	
  3469                           ; 1 bytes @ 0x7
  3470                           
  3471                           
  3472                           ; 1 bytes @ 0x7
  3473  0027                     	ds	1
  3474  0028                     ?___aldiv:	
  3475  0028                     ___lmul@product:	
  3476                           ; 4 bytes @ 0x8
  3477                           
  3478  0028                     ___aldiv@divisor:	
  3479                           ; 4 bytes @ 0x8
  3480                           
  3481                           
  3482                           ; 4 bytes @ 0x8
  3483  0028                     	ds	4
  3484  002C                     ?___lldiv:	
  3485  002C                     ___aldiv@dividend:	
  3486                           ; 4 bytes @ 0xC
  3487                           
  3488  002C                     ___lldiv@divisor:	
  3489                           ; 4 bytes @ 0xC
  3490                           
  3491                           
  3492                           ; 4 bytes @ 0xC
  3493  002C                     	ds	4
  3494  0030                     ___aldiv@counter:	
  3495  0030                     ___lldiv@dividend:	
  3496                           ; 1 bytes @ 0x10
  3497                           
  3498                           
  3499                           ; 4 bytes @ 0x10
  3500  0030                     	ds	1
  3501  0031                     ___aldiv@sign:	
  3502                           
  3503                           ; 1 bytes @ 0x11
  3504  0031                     	ds	1
  3505  0032                     ___aldiv@quotient:	
  3506                           
  3507                           ; 4 bytes @ 0x12
  3508  0032                     	ds	2
  3509  0034                     ___lldiv@quotient:	
  3510                           
  3511                           ; 4 bytes @ 0x14
  3512  0034                     	ds	2
  3513  0036                     ?_battery_voltage:	
  3514                           
  3515                           ; 2 bytes @ 0x16
  3516  0036                     	ds	2
  3517  0038                     ___lldiv@counter:	
  3518                           
  3519                           ; 1 bytes @ 0x18
  3520  0038                     	ds	1
  3521  0039                     ?_setCurrent:	
  3522  0039                     setCurrent@microamps:	
  3523                           ; 1 bytes @ 0x19
  3524                           
  3525                           
  3526                           ; 2 bytes @ 0x19
  3527  0039                     	ds	2
  3528  003B                     setCurrent@Vdd_mv:	
  3529                           
  3530                           ; 2 bytes @ 0x1B
  3531  003B                     	ds	2
  3532  003D                     ??_setCurrent:	
  3533                           
  3534                           ; 1 bytes @ 0x1D
  3535  003D                     	ds	8
  3536  0045                     setCurrent@DACValue:	
  3537                           
  3538                           ; 2 bytes @ 0x25
  3539  0045                     	ds	2
  3540  0047                     ??_process_remote_command:	
  3541                           
  3542                           ; 1 bytes @ 0x27
  3543  0047                     	ds	3
  3544  004A                     ??_main:	
  3545                           
  3546                           ; 1 bytes @ 0x2A
  3547  004A                     	ds	1
  3548                           
  3549                           	psect	maintext
  3550  04A2                     __pmaintext:	
  3551 ;;
  3552 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3553 ;;
  3554 ;; *************** function _main *****************
  3555 ;; Defined at:
  3556 ;;		line 350 in file "main.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;		None
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;		None
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  1    wreg      void 
  3563 ;; Registers used:
  3564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3565 ;; Tracked objects:
  3566 ;;		On entry : B1F/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3570 ;;      Params:         0       0       0       0       0       0       0       0
  3571 ;;      Locals:         0       0       0       0       0       0       0       0
  3572 ;;      Temps:          0       1       0       0       0       0       0       0
  3573 ;;      Totals:         0       1       0       0       0       0       0       0
  3574 ;;Total ram usage:        1 bytes
  3575 ;; Hardware stack levels required when called:    9
  3576 ;; This function calls:
  3577 ;;		_DAC_Initialize
  3578 ;;		_OPA1_Initialize
  3579 ;;		_OPA2_Initialize
  3580 ;;		_SYSTEM_Initialize
  3581 ;;		_battery_voltage
  3582 ;;		_initLED
  3583 ;;		_lowBattery
  3584 ;;		_process_remote_command
  3585 ;;		_startUp
  3586 ;; This function is called by:
  3587 ;;		Startup code after reset
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           
  3592                           ;psect for function _main
  3593  04A2                     _main:	
  3594                           
  3595                           ;main.c: 353: SYSTEM_Initialize();
  3596                           
  3597                           ;incstack = 0
  3598                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3599  04A2  3185  25F7  3184   	fcall	_SYSTEM_Initialize
  3600                           
  3601                           ;main.c: 354: DAC_Initialize();
  3602  04A5  3186  26E1  3184   	fcall	_DAC_Initialize
  3603                           
  3604                           ;main.c: 355: OPA1_Initialize();
  3605  04A8  3186  26F8  3184   	fcall	_OPA1_Initialize
  3606                           
  3607                           ;main.c: 356: OPA2_Initialize();
  3608  04AB  3186  26F4  3184   	fcall	_OPA2_Initialize
  3609                           
  3610                           ;main.c: 357: initLED();
  3611  04AE  3184  242B  3184   	fcall	_initLED
  3612                           
  3613                           ;main.c: 358: (INTCONbits.GIE = 1);
  3614  04B1  178B               	bsf	11,7	;volatile
  3615                           
  3616                           ;main.c: 359: (INTCONbits.PEIE = 1);
  3617  04B2  170B               	bsf	11,6	;volatile
  3618                           
  3619                           ;main.c: 360: startUp();
  3620  04B3  3183  23E3  3184   	fcall	_startUp
  3621  04B6                     l504:	
  3622                           ;main.c: 371: while(1){
  3623                           
  3624                           
  3625                           ;main.c: 373: if ((int)battery_voltage() < 2500)
  3626  04B6  3185  2504  3184   	fcall	_battery_voltage
  3627  04B9  0020               	movlb	0	; select bank0
  3628  04BA  0837               	movf	?_battery_voltage+1,w
  3629  04BB  3A80               	xorlw	128
  3630  04BC  00CA               	movwf	??_main
  3631  04BD  3089               	movlw	137
  3632  04BE  024A               	subwf	??_main,w
  3633  04BF  1D03               	skipz
  3634  04C0  2CC3               	goto	u2015
  3635  04C1  30C4               	movlw	196
  3636  04C2  0236               	subwf	?_battery_voltage,w
  3637  04C3                     u2015:	
  3638  04C3  1803               	skipnc
  3639  04C4  2CC8               	goto	l2455
  3640                           
  3641                           ;main.c: 374: {
  3642                           ;main.c: 375: lowBattery();
  3643  04C5  3185  2532  3184   	fcall	_lowBattery
  3644  04C8                     l2455:	
  3645                           
  3646                           ;main.c: 377: }
  3647                           ;main.c: 383: if (STATE_DONE == ir_code.state){
  3648  04C8  3002               	movlw	2
  3649  04C9  0020               	movlb	0	; select bank0
  3650  04CA  0659               	xorwf	_ir_code+1,w
  3651  04CB  1D03               	btfss	3,2
  3652  04CC  2CB6               	goto	l504
  3653                           
  3654                           ;main.c: 401: process_remote_command(&ir_code);
  3655  04CD  3058               	movlw	(low (_ir_code| 0))& (0+255)
  3656  04CE  3180  204C  3184   	fcall	_process_remote_command
  3657                           
  3658                           ;main.c: 404: ir_code.state = STATE_RESET;
  3659  04D1  0020               	movlb	0	; select bank0
  3660  04D2  01D9               	clrf	_ir_code+1
  3661  04D3  2CB6               	goto	l504
  3662  04D4                     __end_of_main:	
  3663                           ;main.c: 405: }
  3664                           ;main.c: 406: }
  3665                           ;main.c: 408: return;
  3666                           
  3667                           
  3668                           	psect	text1
  3669  03E3                     __ptext1:	
  3670 ;; *************** function _startUp *****************
  3671 ;; Defined at:
  3672 ;;		line 186 in file "main.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;		None
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  i               2    4[BANK0 ] int 
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  1    wreg      void 
  3679 ;; Registers used:
  3680 ;;		wreg, status,2, status,0, pclath, cstack
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3686 ;;      Params:         0       0       0       0       0       0       0       0
  3687 ;;      Locals:         0       2       0       0       0       0       0       0
  3688 ;;      Temps:          0       2       0       0       0       0       0       0
  3689 ;;      Totals:         0       4       0       0       0       0       0       0
  3690 ;;Total ram usage:        4 bytes
  3691 ;; Hardware stack levels used:    1
  3692 ;; Hardware stack levels required when called:    5
  3693 ;; This function calls:
  3694 ;;		_setLEDColor
  3695 ;; This function is called by:
  3696 ;;		_main
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           
  3701                           ;psect for function _startUp
  3702  03E3                     _startUp:	
  3703                           
  3704                           ;main.c: 187: interfaceState = STATE_RUNNING;
  3705                           
  3706                           ;incstack = 0
  3707                           ; Regs used in _startUp: [wreg+status,2+status,0+pclath+cstack]
  3708  03E3  0020               	movlb	0	; select bank0
  3709  03E4  01D1               	clrf	_interfaceState
  3710                           
  3711                           ;main.c: 188: for (int i = 0; i < 5; i++){
  3712  03E5  01A4               	clrf	startUp@i
  3713  03E6  01A5               	clrf	startUp@i+1
  3714  03E7  0825               	movf	startUp@i+1,w
  3715  03E8  3A80               	xorlw	128
  3716  03E9  00A2               	movwf	??_startUp
  3717  03EA  3080               	movlw	128
  3718  03EB  0222               	subwf	??_startUp,w
  3719  03EC  1D03               	skipz
  3720  03ED  2BF0               	goto	u1875
  3721  03EE  3005               	movlw	5
  3722  03EF  0224               	subwf	startUp@i,w
  3723  03F0                     u1875:	
  3724  03F0  1803               	btfsc	3,0
  3725  03F1  2C28               	goto	l2367
  3726  03F2                     l2361:	
  3727                           
  3728                           ;main.c: 189: setLEDColor(0, 180, 230);
  3729  03F2  30B4               	movlw	180
  3730  03F3  0020               	movlb	0	; select bank0
  3731  03F4  00A2               	movwf	??_startUp
  3732  03F5  0822               	movf	??_startUp,w
  3733  03F6  00A0               	movwf	setLEDColor@green
  3734  03F7  30E6               	movlw	230
  3735  03F8  00A3               	movwf	??_startUp+1
  3736  03F9  0823               	movf	??_startUp+1,w
  3737  03FA  00A1               	movwf	setLEDColor@blue
  3738  03FB  3000               	movlw	0
  3739  03FC  3186  2632  3183   	fcall	_setLEDColor
  3740                           
  3741                           ;main.c: 190: _delay((unsigned long)((100)*(4000000/4000.0)));
  3742  03FF  3082               	movlw	130
  3743  0400  0020               	movlb	0	; select bank0
  3744  0401  00A2               	movwf	??_startUp
  3745  0402  30DD               	movlw	221
  3746  0403                     u2037:	
  3747  0403  0B89               	decfsz	9,f
  3748  0404  2C03               	goto	u2037
  3749  0405  0BA2               	decfsz	??_startUp,f
  3750  0406  2C03               	goto	u2037
  3751  0407  3200               	nop2
  3752                           
  3753                           ;main.c: 191: setLEDColor(0, 0, 0);
  3754  0408  0020               	movlb	0	; select bank0
  3755  0409  01A0               	clrf	setLEDColor@green
  3756  040A  01A1               	clrf	setLEDColor@blue
  3757  040B  3000               	movlw	0
  3758  040C  3186  2632  3183   	fcall	_setLEDColor
  3759                           
  3760                           ;main.c: 192: _delay((unsigned long)((100)*(4000000/4000.0)));
  3761  040F  3082               	movlw	130
  3762  0410  0020               	movlb	0	; select bank0
  3763  0411  00A2               	movwf	??_startUp
  3764  0412  30DD               	movlw	221
  3765  0413                     u2047:	
  3766  0413  0B89               	decfsz	9,f
  3767  0414  2C13               	goto	u2047
  3768  0415  0BA2               	decfsz	??_startUp,f
  3769  0416  2C13               	goto	u2047
  3770  0417  3200               	nop2
  3771  0418  3001               	movlw	1
  3772  0419  0020               	movlb	0	; select bank0
  3773  041A  07A4               	addwf	startUp@i,f
  3774  041B  3000               	movlw	0
  3775  041C  3DA5               	addwfc	startUp@i+1,f
  3776  041D  0825               	movf	startUp@i+1,w
  3777  041E  3A80               	xorlw	128
  3778  041F  00A2               	movwf	??_startUp
  3779  0420  3080               	movlw	128
  3780  0421  0222               	subwf	??_startUp,w
  3781  0422  1D03               	skipz
  3782  0423  2C26               	goto	u1885
  3783  0424  3005               	movlw	5
  3784  0425  0224               	subwf	startUp@i,w
  3785  0426                     u1885:	
  3786  0426  1C03               	skipc
  3787  0427  2BF2               	goto	l2361
  3788  0428                     l2367:	
  3789                           
  3790                           ;main.c: 193: }
  3791                           ;main.c: 194: duty = 0;
  3792  0428  0020               	movlb	0	; select bank0
  3793  0429  01D2               	clrf	_duty
  3794  042A  0008               	return
  3795  042B                     __end_of_startUp:	
  3796                           
  3797                           	psect	text2
  3798  004C                     __ptext2:	
  3799 ;; *************** function _process_remote_command *****************
  3800 ;; Defined at:
  3801 ;;		line 257 in file "main.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  code            1    wreg     PTR struct .
  3804 ;;		 -> ir_code(6), 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  code            1    5[COMMON] PTR struct .
  3807 ;;		 -> ir_code(6), 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3817 ;;      Params:         0       0       0       0       0       0       0       0
  3818 ;;      Locals:         1       0       0       0       0       0       0       0
  3819 ;;      Temps:          0       3       0       0       0       0       0       0
  3820 ;;      Totals:         1       3       0       0       0       0       0       0
  3821 ;;Total ram usage:        4 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    8
  3824 ;; This function calls:
  3825 ;;		_battery_voltage
  3826 ;;		_printf
  3827 ;;		_selectCurrent
  3828 ;;		_selectFrequency
  3829 ;;		_selectSomething
  3830 ;;		_setCurrent
  3831 ;;		_setLEDColor
  3832 ;; This function is called by:
  3833 ;;		_main
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           
  3838                           ;psect for function _process_remote_command
  3839  004C                     _process_remote_command:	
  3840                           
  3841                           ;incstack = 0
  3842                           ; Regs used in _process_remote_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3843                           ;process_remote_command@code stored from wreg
  3844  004C  00F5               	movwf	process_remote_command@code
  3845                           
  3846                           ;main.c: 258: setLEDColor(0, 0, 0);
  3847  004D  0020               	movlb	0	; select bank0
  3848  004E  01A0               	clrf	setLEDColor@green
  3849  004F  01A1               	clrf	setLEDColor@blue
  3850  0050  3000               	movlw	0
  3851  0051  3186  2632  3180   	fcall	_setLEDColor
  3852                           
  3853                           ;main.c: 260: switch(code->command){
  3854  0054  2913               	goto	l2439
  3855  0055                     l2371:	
  3856                           ;main.c: 261: case 0xa0:
  3857                           
  3858                           
  3859                           ;main.c: 262: if(STATE_CURRENT == interfaceState){
  3860  0055  0020               	movlb	0	; select bank0
  3861  0056  0351               	decf	_interfaceState,w
  3862  0057  1D03               	btfss	3,2
  3863  0058  288A               	goto	l2381
  3864                           
  3865                           ;main.c: 263: currentIndex++;
  3866  0059  3001               	movlw	1
  3867  005A  07CD               	addwf	_currentIndex,f
  3868  005B  3000               	movlw	0
  3869  005C  3DCE               	addwfc	_currentIndex+1,f
  3870                           
  3871                           ;main.c: 264: if (currentIndex > maxCurrentIndex - 1)
  3872  005D  086A               	movf	_maxCurrentIndex,w
  3873  005E  3EFF               	addlw	255
  3874  005F  00C7               	movwf	??_process_remote_command
  3875  0060  30FF               	movlw	255
  3876  0061  3D6B               	addwfc	_maxCurrentIndex+1,w
  3877  0062  00C8               	movwf	??_process_remote_command+1
  3878  0063  0848               	movf	??_process_remote_command+1,w
  3879  0064  3A80               	xorlw	128
  3880  0065  00C9               	movwf	??_process_remote_command+2
  3881  0066  084E               	movf	_currentIndex+1,w
  3882  0067  3A80               	xorlw	128
  3883  0068  0249               	subwf	??_process_remote_command+2,w
  3884  0069  1D03               	skipz
  3885  006A  286D               	goto	u1905
  3886  006B  084D               	movf	_currentIndex,w
  3887  006C  0247               	subwf	??_process_remote_command,w
  3888  006D                     u1905:	
  3889  006D  1803               	skipnc
  3890  006E  2876               	goto	l2379
  3891                           
  3892                           ;main.c: 265: {
  3893                           ;main.c: 266: currentIndex = maxCurrentIndex - 1;
  3894  006F  0020               	movlb	0	; select bank0
  3895  0070  086A               	movf	_maxCurrentIndex,w
  3896  0071  3EFF               	addlw	255
  3897  0072  00CD               	movwf	_currentIndex
  3898  0073  30FF               	movlw	255
  3899  0074  3D6B               	addwfc	_maxCurrentIndex+1,w
  3900  0075  00CE               	movwf	_currentIndex+1
  3901  0076                     l2379:	
  3902                           
  3903                           ;main.c: 267: }
  3904                           ;main.c: 268: setCurrent(currentValue[currentIndex],battery_voltage());
  3905  0076  0020               	movlb	0	; select bank0
  3906  0077  354D               	lslf	_currentIndex,w
  3907  0078  3EA0               	addlw	(low (_currentValue| 0))& (0+255)
  3908  0079  0086               	movwf	6
  3909  007A  0187               	clrf	7
  3910  007B  3F40               	moviw [0]fsr1
  3911  007C  00B9               	movwf	setCurrent@microamps
  3912  007D  3F41               	moviw [1]fsr1
  3913  007E  00BA               	movwf	setCurrent@microamps+1
  3914  007F  3185  2504  3180   	fcall	_battery_voltage
  3915  0082  0020               	movlb	0	; select bank0
  3916  0083  0837               	movf	?_battery_voltage+1,w
  3917  0084  00BC               	movwf	setCurrent@Vdd_mv+1
  3918  0085  0836               	movf	?_battery_voltage,w
  3919  0086  00BB               	movwf	setCurrent@Vdd_mv
  3920  0087  3181  2161  3180   	fcall	_setCurrent
  3921  008A                     l2381:	
  3922                           
  3923                           ;main.c: 269: }
  3924                           ;main.c: 270: if(STATE_FREQUENCY == interfaceState){
  3925  008A  3002               	movlw	2
  3926  008B  0020               	movlb	0	; select bank0
  3927  008C  0651               	xorwf	_interfaceState,w
  3928  008D  1D03               	btfss	3,2
  3929  008E  28AC               	goto	l475
  3930                           
  3931                           ;main.c: 271: frequencyIndex++;
  3932  008F  3001               	movlw	1
  3933  0090  07CB               	addwf	_frequencyIndex,f
  3934  0091  3000               	movlw	0
  3935  0092  3DCC               	addwfc	_frequencyIndex+1,f
  3936                           
  3937                           ;main.c: 272: if (frequencyIndex > maxFrequencyIndex - 1)
  3938  0093  0868               	movf	_maxFrequencyIndex,w
  3939  0094  3EFF               	addlw	255
  3940  0095  00C7               	movwf	??_process_remote_command
  3941  0096  30FF               	movlw	255
  3942  0097  3D69               	addwfc	_maxFrequencyIndex+1,w
  3943  0098  00C8               	movwf	??_process_remote_command+1
  3944  0099  0848               	movf	??_process_remote_command+1,w
  3945  009A  3A80               	xorlw	128
  3946  009B  00C9               	movwf	??_process_remote_command+2
  3947  009C  084C               	movf	_frequencyIndex+1,w
  3948  009D  3A80               	xorlw	128
  3949  009E  0249               	subwf	??_process_remote_command+2,w
  3950  009F  1D03               	skipz
  3951  00A0  28A3               	goto	u1925
  3952  00A1  084B               	movf	_frequencyIndex,w
  3953  00A2  0247               	subwf	??_process_remote_command,w
  3954  00A3                     u1925:	
  3955  00A3  1803               	skipnc
  3956  00A4  28AC               	goto	l475
  3957                           
  3958                           ;main.c: 273: {
  3959                           ;main.c: 274: frequencyIndex = maxFrequencyIndex - 1;
  3960  00A5  0020               	movlb	0	; select bank0
  3961  00A6  0868               	movf	_maxFrequencyIndex,w
  3962  00A7  3EFF               	addlw	255
  3963  00A8  00CB               	movwf	_frequencyIndex
  3964  00A9  30FF               	movlw	255
  3965  00AA  3D69               	addwfc	_maxFrequencyIndex+1,w
  3966  00AB  00CC               	movwf	_frequencyIndex+1
  3967  00AC                     l475:	
  3968                           
  3969                           ;main.c: 275: }
  3970                           ;main.c: 276: }
  3971                           ;main.c: 277: if(STATE_RUNNING == interfaceState){
  3972  00AC  0020               	movlb	0	; select bank0
  3973  00AD  0851               	movf	_interfaceState,w
  3974  00AE  1D03               	btfss	3,2
  3975  00AF  28B3               	goto	l2391
  3976                           
  3977                           ;main.c: 278: selectSomething();
  3978  00B0  3183  2392  3180   	fcall	_selectSomething
  3979  00B3                     l2391:	
  3980                           
  3981                           ;main.c: 279: }
  3982                           ;main.c: 280: if(STATE_LOWBATTERY == interfaceState){
  3983  00B3  3003               	movlw	3
  3984  00B4  0020               	movlb	0	; select bank0
  3985  00B5  0651               	xorwf	_interfaceState,w
  3986  00B6  1D03               	btfss	3,2
  3987  00B7  2940               	goto	l2441
  3988                           
  3989                           ;main.c: 281: selectSomething();
  3990  00B8  3183  2392  3180   	fcall	_selectSomething
  3991                           
  3992                           ;main.c: 282: }
  3993                           ;main.c: 283: break;
  3994  00BB  2940               	goto	l2441
  3995  00BC                     l2395:	
  3996                           ;main.c: 284: case 0xb0:
  3997                           
  3998                           
  3999                           ;main.c: 285: if(STATE_CURRENT == interfaceState){
  4000  00BC  0020               	movlb	0	; select bank0
  4001  00BD  0351               	decf	_interfaceState,w
  4002  00BE  1D03               	btfss	3,2
  4003  00BF  28DB               	goto	l2405
  4004                           
  4005                           ;main.c: 286: currentIndex--;
  4006  00C0  30FF               	movlw	255
  4007  00C1  07CD               	addwf	_currentIndex,f
  4008  00C2  30FF               	movlw	255
  4009  00C3  3DCE               	addwfc	_currentIndex+1,f
  4010                           
  4011                           ;main.c: 287: if (currentIndex < 0)
  4012  00C4  1FCE               	btfss	_currentIndex+1,7
  4013  00C5  28C8               	goto	l2403
  4014                           
  4015                           ;main.c: 288: {
  4016                           ;main.c: 289: currentIndex = 0;
  4017  00C6  01CD               	clrf	_currentIndex
  4018  00C7  01CE               	clrf	_currentIndex+1
  4019  00C8                     l2403:	
  4020                           
  4021                           ;main.c: 290: }
  4022                           ;main.c: 291: setCurrent(currentValue[currentIndex],battery_voltage());
  4023  00C8  354D               	lslf	_currentIndex,w
  4024  00C9  3EA0               	addlw	(low (_currentValue| 0))& (0+255)
  4025  00CA  0086               	movwf	6
  4026  00CB  0187               	clrf	7
  4027  00CC  3F40               	moviw [0]fsr1
  4028  00CD  00B9               	movwf	setCurrent@microamps
  4029  00CE  3F41               	moviw [1]fsr1
  4030  00CF  00BA               	movwf	setCurrent@microamps+1
  4031  00D0  3185  2504  3180   	fcall	_battery_voltage
  4032  00D3  0020               	movlb	0	; select bank0
  4033  00D4  0837               	movf	?_battery_voltage+1,w
  4034  00D5  00BC               	movwf	setCurrent@Vdd_mv+1
  4035  00D6  0836               	movf	?_battery_voltage,w
  4036  00D7  00BB               	movwf	setCurrent@Vdd_mv
  4037  00D8  3181  2161  3180   	fcall	_setCurrent
  4038  00DB                     l2405:	
  4039                           
  4040                           ;main.c: 292: }
  4041                           ;main.c: 293: if(STATE_FREQUENCY == interfaceState){
  4042  00DB  3002               	movlw	2
  4043  00DC  0020               	movlb	0	; select bank0
  4044  00DD  0651               	xorwf	_interfaceState,w
  4045  00DE  1D03               	btfss	3,2
  4046  00DF  28E8               	goto	l2413
  4047                           
  4048                           ;main.c: 294: frequencyIndex--;
  4049  00E0  30FF               	movlw	255
  4050  00E1  07CB               	addwf	_frequencyIndex,f
  4051  00E2  30FF               	movlw	255
  4052  00E3  3DCC               	addwfc	_frequencyIndex+1,f
  4053                           
  4054                           ;main.c: 295: if (frequencyIndex < 0)
  4055  00E4  1FCC               	btfss	_frequencyIndex+1,7
  4056  00E5  28E8               	goto	l2413
  4057                           
  4058                           ;main.c: 296: {
  4059                           ;main.c: 297: frequencyIndex = 0;
  4060  00E6  01CB               	clrf	_frequencyIndex
  4061  00E7  01CC               	clrf	_frequencyIndex+1
  4062  00E8                     l2413:	
  4063                           
  4064                           ;main.c: 298: }
  4065                           ;main.c: 299: }
  4066                           ;main.c: 300: if(STATE_RUNNING == interfaceState){
  4067  00E8  0851               	movf	_interfaceState,w
  4068  00E9  1D03               	btfss	3,2
  4069  00EA  28EE               	goto	l2417
  4070                           
  4071                           ;main.c: 301: selectSomething();
  4072  00EB  3183  2392  3180   	fcall	_selectSomething
  4073  00EE                     l2417:	
  4074                           
  4075                           ;main.c: 302: }
  4076                           ;main.c: 303: if(STATE_LOWBATTERY == interfaceState){
  4077  00EE  3003               	movlw	3
  4078  00EF  0020               	movlb	0	; select bank0
  4079  00F0  0651               	xorwf	_interfaceState,w
  4080  00F1  1D03               	btfss	3,2
  4081  00F2  2940               	goto	l2441
  4082                           
  4083                           ;main.c: 304: selectSomething();
  4084  00F3  3183  2392  3180   	fcall	_selectSomething
  4085                           
  4086                           ;main.c: 305: }
  4087                           ;main.c: 306: break;
  4088  00F6  2940               	goto	l2441
  4089  00F7                     l2421:	
  4090                           ;main.c: 307: case 0x50:
  4091                           
  4092                           
  4093                           ;main.c: 308: selectFrequency();
  4094  00F7  3185  255F  3180   	fcall	_selectFrequency
  4095                           
  4096                           ;main.c: 309: break;
  4097  00FA  2940               	goto	l2441
  4098  00FB                     l2423:	
  4099                           ;main.c: 310: case 0x10:
  4100                           
  4101                           
  4102                           ;main.c: 311: selectCurrent();
  4103  00FB  3185  2589  3180   	fcall	_selectCurrent
  4104                           
  4105                           ;main.c: 312: break;
  4106  00FE  2940               	goto	l2441
  4107  00FF                     l2425:	
  4108                           ;main.c: 313: case 0x08:
  4109                           
  4110                           
  4111                           ;main.c: 314: LED_red = 0;
  4112  00FF  0020               	movlb	0	; select bank0
  4113  0100  01D6               	clrf	_LED_red
  4114                           
  4115                           ;main.c: 315: LED_green = 255;
  4116  0101  30FF               	movlw	255
  4117  0102  00C7               	movwf	??_process_remote_command
  4118  0103  0847               	movf	??_process_remote_command,w
  4119  0104  00D5               	movwf	_LED_green
  4120                           
  4121                           ;main.c: 316: LED_blue = 0;
  4122  0105  01D4               	clrf	_LED_blue
  4123                           
  4124                           ;main.c: 317: printf("\n reset select");
  4125  0106  3075               	movlw	low (STR_3| (0+32768))
  4126  0107  00A0               	movwf	printf@f
  4127  0108  3086               	movlw	high (STR_3| (0+32768))
  4128  0109  00A1               	movwf	printf@f+1
  4129  010A  3186  2615  3180   	fcall	_printf
  4130                           
  4131                           ;main.c: 318: flag = 0;
  4132  010D  0020               	movlb	0	; select bank0
  4133  010E  01D3               	clrf	_flag
  4134                           
  4135                           ;main.c: 319: break;
  4136  010F  2940               	goto	l2441
  4137  0110                     l2435:	
  4138                           ;main.c: 320: case 0x88:
  4139                           
  4140                           
  4141                           ;main.c: 321: duty = 0;
  4142  0110  0020               	movlb	0	; select bank0
  4143  0111  01D2               	clrf	_duty
  4144                           
  4145                           ;main.c: 340: }
  4146                           
  4147                           ;main.c: 339: break;
  4148                           
  4149                           ;main.c: 338: default:
  4150                           
  4151                           ;main.c: 337: break;
  4152                           
  4153                           ;main.c: 335: case 0x58:
  4154                           
  4155                           ;main.c: 334: break;
  4156                           
  4157                           ;main.c: 333: case 0x98:
  4158                           
  4159                           ;main.c: 332: break;
  4160                           
  4161                           ;main.c: 331: case 0x18:
  4162                           
  4163                           ;main.c: 330: break;
  4164                           
  4165                           ;main.c: 329: case 0x68:
  4166                           
  4167                           ;main.c: 328: break;
  4168                           
  4169                           ;main.c: 327: case 0xa8:
  4170                           
  4171                           ;main.c: 326: break;
  4172                           
  4173                           ;main.c: 325: case 0x28:
  4174                           
  4175                           ;main.c: 324: break;
  4176                           
  4177                           ;main.c: 323: case 0x48:
  4178                           
  4179                           ;main.c: 322: break;
  4180  0112  2940               	goto	l2441
  4181  0113                     l2439:	
  4182  0113  0875               	movf	process_remote_command@code,w
  4183  0114  3E03               	addlw	3
  4184  0115  0086               	movwf	6
  4185  0116  0187               	clrf	7
  4186  0117  0801               	movf	1,w
  4187                           
  4188                           ; Switch size 1, requested type "space"
  4189                           ; Number of cases is 13, Range of values is 8 to 176
  4190                           ; switch strategies available:
  4191                           ; Name         Instructions Cycles
  4192                           ; simple_byte           40    21 (average)
  4193                           ; jumptable            263     9 (fixed)
  4194                           ;	Chosen strategy is simple_byte
  4195  0118  3A08               	xorlw	8	; case 8
  4196  0119  1903               	skipnz
  4197  011A  28FF               	goto	l2425
  4198  011B  3A18               	xorlw	24	; case 16
  4199  011C  1903               	skipnz
  4200  011D  28FB               	goto	l2423
  4201  011E  3A08               	xorlw	8	; case 24
  4202  011F  1903               	skipnz
  4203  0120  2940               	goto	l2441
  4204  0121  3A30               	xorlw	48	; case 40
  4205  0122  1903               	skipnz
  4206  0123  2940               	goto	l2441
  4207  0124  3A60               	xorlw	96	; case 72
  4208  0125  1903               	skipnz
  4209  0126  2940               	goto	l2441
  4210  0127  3A18               	xorlw	24	; case 80
  4211  0128  1903               	skipnz
  4212  0129  28F7               	goto	l2421
  4213  012A  3A08               	xorlw	8	; case 88
  4214  012B  1903               	skipnz
  4215  012C  2940               	goto	l2441
  4216  012D  3A30               	xorlw	48	; case 104
  4217  012E  1903               	skipnz
  4218  012F  2940               	goto	l2441
  4219  0130  3AE0               	xorlw	224	; case 136
  4220  0131  1903               	skipnz
  4221  0132  2910               	goto	l2435
  4222  0133  3A10               	xorlw	16	; case 152
  4223  0134  1903               	skipnz
  4224  0135  2940               	goto	l2441
  4225  0136  3A38               	xorlw	56	; case 160
  4226  0137  1903               	skipnz
  4227  0138  2855               	goto	l2371
  4228  0139  3A08               	xorlw	8	; case 168
  4229  013A  1903               	skipnz
  4230  013B  2940               	goto	l2441
  4231  013C  3A18               	xorlw	24	; case 176
  4232  013D  1903               	skipnz
  4233  013E  28BC               	goto	l2395
  4234  013F  2940               	goto	l2441
  4235  0140                     l2441:	
  4236                           
  4237                           ;main.c: 341: setLEDColor(LED_red, LED_green, LED_blue);
  4238  0140  0020               	movlb	0	; select bank0
  4239  0141  0855               	movf	_LED_green,w
  4240  0142  00C7               	movwf	??_process_remote_command
  4241  0143  0847               	movf	??_process_remote_command,w
  4242  0144  00A0               	movwf	setLEDColor@green
  4243  0145  0854               	movf	_LED_blue,w
  4244  0146  00C8               	movwf	??_process_remote_command+1
  4245  0147  0848               	movf	??_process_remote_command+1,w
  4246  0148  00A1               	movwf	setLEDColor@blue
  4247  0149  0856               	movf	_LED_red,w
  4248  014A  3186  2632  3180   	fcall	_setLEDColor
  4249                           
  4250                           ;main.c: 342: _delay((unsigned long)((1000)*(4000000/4000.0)));
  4251  014D  3006               	movlw	6
  4252  014E  0020               	movlb	0	; select bank0
  4253  014F  00C8               	movwf	??_process_remote_command+1
  4254  0150  3013               	movlw	19
  4255  0151  00C7               	movwf	??_process_remote_command
  4256  0152  30AD               	movlw	173
  4257  0153                     u2057:	
  4258  0153  0B89               	decfsz	9,f
  4259  0154  2953               	goto	u2057
  4260  0155  0BC7               	decfsz	??_process_remote_command,f
  4261  0156  2953               	goto	u2057
  4262  0157  0BC8               	decfsz	??_process_remote_command+1,f
  4263  0158  2953               	goto	u2057
  4264  0159  3200               	nop2
  4265                           
  4266                           ;main.c: 343: setLEDColor(0, 0, 0);
  4267  015A  0020               	movlb	0	; select bank0
  4268  015B  01A0               	clrf	setLEDColor@green
  4269  015C  01A1               	clrf	setLEDColor@blue
  4270  015D  3000               	movlw	0
  4271  015E  3186  2632         	fcall	_setLEDColor
  4272  0160  0008               	return
  4273  0161                     __end_of_process_remote_command:	
  4274                           
  4275                           	psect	text3
  4276  0161                     __ptext3:	
  4277 ;; *************** function _setCurrent *****************
  4278 ;; Defined at:
  4279 ;;		line 235 in file "main.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  microamps       2   25[BANK0 ] int 
  4282 ;;  Vdd_mv          2   27[BANK0 ] int 
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  DACValue        2   37[BANK0 ] int 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      void 
  4287 ;; Registers used:
  4288 ;;		wreg, status,2, status,0, pclath, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4294 ;;      Params:         0       4       0       0       0       0       0       0
  4295 ;;      Locals:         0       2       0       0       0       0       0       0
  4296 ;;      Temps:          0       8       0       0       0       0       0       0
  4297 ;;      Totals:         0      14       0       0       0       0       0       0
  4298 ;;Total ram usage:       14 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    5
  4301 ;; This function calls:
  4302 ;;		___aldiv
  4303 ;;		___awdiv
  4304 ;;		___lldiv
  4305 ;;		___lmul
  4306 ;; This function is called by:
  4307 ;;		_process_remote_command
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           
  4312                           ;psect for function _setCurrent
  4313  0161                     _setCurrent:	
  4314                           
  4315                           ;main.c: 237: Vdac_mv = Vdd_mv - ((uint32_t)(4700) * microamps + 500) / 1000;
  4316                           
  4317                           ;incstack = 0
  4318                           ; Regs used in _setCurrent: [wreg+status,2+status,0+pclath+cstack]
  4319  0161  3000               	movlw	0
  4320  0162  0020               	movlb	0	; select bank0
  4321  0163  00AF               	movwf	___lldiv@divisor+3
  4322  0164  3000               	movlw	0
  4323  0165  00AE               	movwf	___lldiv@divisor+2
  4324  0166  3003               	movlw	3
  4325  0167  00AD               	movwf	___lldiv@divisor+1
  4326  0168  30E8               	movlw	232
  4327  0169  00AC               	movwf	___lldiv@divisor
  4328  016A  30F4               	movlw	244
  4329  016B  00BD               	movwf	??_setCurrent
  4330  016C  3001               	movlw	1
  4331  016D  00BE               	movwf	??_setCurrent+1
  4332  016E  3000               	movlw	0
  4333  016F  00BF               	movwf	??_setCurrent+2
  4334  0170  3000               	movlw	0
  4335  0171  00C0               	movwf	??_setCurrent+3
  4336  0172  0839               	movf	setCurrent@microamps,w
  4337  0173  00A0               	movwf	___lmul@multiplier
  4338  0174  083A               	movf	setCurrent@microamps+1,w
  4339  0175  00A1               	movwf	___lmul@multiplier+1
  4340  0176  0D89               	rlf	9,f
  4341  0177  3B89               	subwfb	9,f
  4342  0178  0989               	comf	9,f
  4343  0179  00A2               	movwf	___lmul@multiplier+2
  4344  017A  00A3               	movwf	___lmul@multiplier+3
  4345  017B  3000               	movlw	0
  4346  017C  00A7               	movwf	___lmul@multiplicand+3
  4347  017D  3000               	movlw	0
  4348  017E  00A6               	movwf	___lmul@multiplicand+2
  4349  017F  3012               	movlw	18
  4350  0180  00A5               	movwf	___lmul@multiplicand+1
  4351  0181  305C               	movlw	92
  4352  0182  00A4               	movwf	___lmul@multiplicand
  4353  0183  3184  24D4  3181   	fcall	___lmul
  4354  0186  0020               	movlb	0	; select bank0
  4355  0187  0820               	movf	?___lmul,w
  4356  0188  07BD               	addwf	??_setCurrent,f
  4357  0189  0821               	movf	?___lmul+1,w
  4358  018A  3DBE               	addwfc	??_setCurrent+1,f
  4359  018B  0822               	movf	?___lmul+2,w
  4360  018C  3DBF               	addwfc	??_setCurrent+2,f
  4361  018D  0823               	movf	?___lmul+3,w
  4362  018E  3DC0               	addwfc	??_setCurrent+3,f
  4363  018F  0840               	movf	??_setCurrent+3,w
  4364  0190  00B3               	movwf	___lldiv@dividend+3
  4365  0191  083F               	movf	??_setCurrent+2,w
  4366  0192  00B2               	movwf	___lldiv@dividend+2
  4367  0193  083E               	movf	??_setCurrent+1,w
  4368  0194  00B1               	movwf	___lldiv@dividend+1
  4369  0195  083D               	movf	??_setCurrent,w
  4370  0196  00B0               	movwf	___lldiv@dividend
  4371  0197  3182  22ED  3181   	fcall	___lldiv
  4372  019A  0020               	movlb	0	; select bank0
  4373  019B  092C               	comf	?___lldiv,w
  4374  019C  00C1               	movwf	??_setCurrent+4
  4375  019D  092D               	comf	?___lldiv+1,w
  4376  019E  00C2               	movwf	??_setCurrent+5
  4377  019F  0AC1               	incf	??_setCurrent+4,f
  4378  01A0  1903               	skipnz
  4379  01A1  0AC2               	incf	??_setCurrent+5,f
  4380  01A2  083B               	movf	setCurrent@Vdd_mv,w
  4381  01A3  0741               	addwf	??_setCurrent+4,w
  4382  01A4  00DE               	movwf	_Vdac_mv
  4383  01A5  083C               	movf	setCurrent@Vdd_mv+1,w
  4384  01A6  3D42               	addwfc	??_setCurrent+5,w
  4385  01A7  00DF               	movwf	_Vdac_mv+1
  4386                           
  4387                           ;main.c: 238: int DACValue = (256L * Vdac_mv + Vdd_mv/2) / Vdd_mv;
  4388  01A8  083B               	movf	setCurrent@Vdd_mv,w
  4389  01A9  00A8               	movwf	___aldiv@divisor
  4390  01AA  083C               	movf	setCurrent@Vdd_mv+1,w
  4391  01AB  00A9               	movwf	___aldiv@divisor+1
  4392  01AC  0D89               	rlf	9,f
  4393  01AD  3B89               	subwfb	9,f
  4394  01AE  0989               	comf	9,f
  4395  01AF  00AA               	movwf	___aldiv@divisor+2
  4396  01B0  00AB               	movwf	___aldiv@divisor+3
  4397  01B1  3002               	movlw	2
  4398  01B2  00A0               	movwf	___awdiv@divisor
  4399  01B3  3000               	movlw	0
  4400  01B4  00A1               	movwf	___awdiv@divisor+1
  4401  01B5  083C               	movf	setCurrent@Vdd_mv+1,w
  4402  01B6  00A3               	movwf	___awdiv@dividend+1
  4403  01B7  083B               	movf	setCurrent@Vdd_mv,w
  4404  01B8  00A2               	movwf	___awdiv@dividend
  4405  01B9  3183  2340  3181   	fcall	___awdiv
  4406  01BC  0020               	movlb	0	; select bank0
  4407  01BD  0820               	movf	?___awdiv,w
  4408  01BE  00BD               	movwf	??_setCurrent
  4409  01BF  0821               	movf	?___awdiv+1,w
  4410  01C0  00BE               	movwf	??_setCurrent+1
  4411  01C1  3000               	movlw	0
  4412  01C2  1BBE               	btfsc	??_setCurrent+1,7
  4413  01C3  30FF               	movlw	255
  4414  01C4  00BF               	movwf	??_setCurrent+2
  4415  01C5  00C0               	movwf	??_setCurrent+3
  4416  01C6  085E               	movf	_Vdac_mv,w
  4417  01C7  00C1               	movwf	??_setCurrent+4
  4418  01C8  085F               	movf	_Vdac_mv+1,w
  4419  01C9  00C2               	movwf	??_setCurrent+5
  4420  01CA  01C3               	clrf	??_setCurrent+6
  4421  01CB  01C4               	clrf	??_setCurrent+7
  4422  01CC  3008               	movlw	8
  4423  01CD                     u1845:	
  4424  01CD  35C1               	lslf	??_setCurrent+4,f
  4425  01CE  0DC2               	rlf	??_setCurrent+5,f
  4426  01CF  0DC3               	rlf	??_setCurrent+6,f
  4427  01D0  0DC4               	rlf	??_setCurrent+7,f
  4428  01D1  0B89               	decfsz	9,f
  4429  01D2  29CD               	goto	u1845
  4430  01D3  0841               	movf	??_setCurrent+4,w
  4431  01D4  07BD               	addwf	??_setCurrent,f
  4432  01D5  0842               	movf	??_setCurrent+5,w
  4433  01D6  3DBE               	addwfc	??_setCurrent+1,f
  4434  01D7  0843               	movf	??_setCurrent+6,w
  4435  01D8  3DBF               	addwfc	??_setCurrent+2,f
  4436  01D9  0844               	movf	??_setCurrent+7,w
  4437  01DA  3DC0               	addwfc	??_setCurrent+3,f
  4438  01DB  0840               	movf	??_setCurrent+3,w
  4439  01DC  00AF               	movwf	___aldiv@dividend+3
  4440  01DD  083F               	movf	??_setCurrent+2,w
  4441  01DE  00AE               	movwf	___aldiv@dividend+2
  4442  01DF  083E               	movf	??_setCurrent+1,w
  4443  01E0  00AD               	movwf	___aldiv@dividend+1
  4444  01E1  083D               	movf	??_setCurrent,w
  4445  01E2  00AC               	movwf	___aldiv@dividend
  4446  01E3  3182  2204  3181   	fcall	___aldiv
  4447  01E6  0020               	movlb	0	; select bank0
  4448  01E7  0829               	movf	?___aldiv+1,w
  4449  01E8  00C6               	movwf	setCurrent@DACValue+1
  4450  01E9  0828               	movf	?___aldiv,w
  4451  01EA  00C5               	movwf	setCurrent@DACValue
  4452                           
  4453                           ;main.c: 239: if(DACValue > 255){DACValue = 255;}
  4454  01EB  0846               	movf	setCurrent@DACValue+1,w
  4455  01EC  3A80               	xorlw	128
  4456  01ED  00BD               	movwf	??_setCurrent
  4457  01EE  3081               	movlw	129
  4458  01EF  023D               	subwf	??_setCurrent,w
  4459  01F0  1D03               	skipz
  4460  01F1  29F4               	goto	u1855
  4461  01F2  3000               	movlw	0
  4462  01F3  0245               	subwf	setCurrent@DACValue,w
  4463  01F4                     u1855:	
  4464  01F4  1C03               	skipc
  4465  01F5  29FB               	goto	l2297
  4466  01F6  30FF               	movlw	255
  4467  01F7  0020               	movlb	0	; select bank0
  4468  01F8  00C5               	movwf	setCurrent@DACValue
  4469  01F9  3000               	movlw	0
  4470  01FA  00C6               	movwf	setCurrent@DACValue+1
  4471  01FB                     l2297:	
  4472                           
  4473                           ;main.c: 240: if(DACValue < 0){DACValue = 0;}
  4474  01FB  0020               	movlb	0	; select bank0
  4475  01FC  1FC6               	btfss	setCurrent@DACValue+1,7
  4476  01FD  2A00               	goto	l2301
  4477  01FE  01C5               	clrf	setCurrent@DACValue
  4478  01FF  01C6               	clrf	setCurrent@DACValue+1
  4479  0200                     l2301:	
  4480                           
  4481                           ;main.c: 241: DAC1CON1 = DACValue;
  4482  0200  0845               	movf	setCurrent@DACValue,w
  4483  0201  0022               	movlb	2	; select bank2
  4484  0202  0099               	movwf	25	;volatile
  4485  0203  0008               	return
  4486  0204                     __end_of_setCurrent:	
  4487                           
  4488                           	psect	text4
  4489  04D4                     __ptext4:	
  4490 ;; *************** function ___lmul *****************
  4491 ;; Defined at:
  4492 ;;		line 15 in file "/Applications/microchip/xc8/v1.45/sources/common/Umul32.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4495 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  product         4    8[BANK0 ] unsigned long 
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  4    0[BANK0 ] unsigned long 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4507 ;;      Params:         0       8       0       0       0       0       0       0
  4508 ;;      Locals:         0       4       0       0       0       0       0       0
  4509 ;;      Temps:          0       0       0       0       0       0       0       0
  4510 ;;      Totals:         0      12       0       0       0       0       0       0
  4511 ;;Total ram usage:       12 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:    4
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_setCurrent
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           
  4522                           ;psect for function ___lmul
  4523  04D4                     ___lmul:	
  4524                           
  4525                           ;incstack = 0
  4526                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4527  04D4  3000               	movlw	0
  4528  04D5  0020               	movlb	0	; select bank0
  4529  04D6  00AB               	movwf	___lmul@product+3
  4530  04D7  3000               	movlw	0
  4531  04D8  00AA               	movwf	___lmul@product+2
  4532  04D9  3000               	movlw	0
  4533  04DA  00A9               	movwf	___lmul@product+1
  4534  04DB  3000               	movlw	0
  4535  04DC  00A8               	movwf	___lmul@product
  4536  04DD                     l2055:	
  4537  04DD  1C20               	btfss	___lmul@multiplier,0
  4538  04DE  2CE7               	goto	l2059
  4539  04DF  0824               	movf	___lmul@multiplicand,w
  4540  04E0  07A8               	addwf	___lmul@product,f
  4541  04E1  0825               	movf	___lmul@multiplicand+1,w
  4542  04E2  3DA9               	addwfc	___lmul@product+1,f
  4543  04E3  0826               	movf	___lmul@multiplicand+2,w
  4544  04E4  3DAA               	addwfc	___lmul@product+2,f
  4545  04E5  0827               	movf	___lmul@multiplicand+3,w
  4546  04E6  3DAB               	addwfc	___lmul@product+3,f
  4547  04E7                     l2059:	
  4548  04E7  3001               	movlw	1
  4549  04E8                     u1525:	
  4550  04E8  35A4               	lslf	___lmul@multiplicand,f
  4551  04E9  0DA5               	rlf	___lmul@multiplicand+1,f
  4552  04EA  0DA6               	rlf	___lmul@multiplicand+2,f
  4553  04EB  0DA7               	rlf	___lmul@multiplicand+3,f
  4554  04EC  0B89               	decfsz	9,f
  4555  04ED  2CE8               	goto	u1525
  4556  04EE  3001               	movlw	1
  4557  04EF                     u1535:	
  4558  04EF  36A3               	lsrf	___lmul@multiplier+3,f
  4559  04F0  0CA2               	rrf	___lmul@multiplier+2,f
  4560  04F1  0CA1               	rrf	___lmul@multiplier+1,f
  4561  04F2  0CA0               	rrf	___lmul@multiplier,f
  4562  04F3  0B89               	decfsz	9,f
  4563  04F4  2CEF               	goto	u1535
  4564  04F5  0823               	movf	___lmul@multiplier+3,w
  4565  04F6  0422               	iorwf	___lmul@multiplier+2,w
  4566  04F7  0421               	iorwf	___lmul@multiplier+1,w
  4567  04F8  0420               	iorwf	___lmul@multiplier,w
  4568  04F9  1D03               	skipz
  4569  04FA  2CDD               	goto	l2055
  4570  04FB  082B               	movf	___lmul@product+3,w
  4571  04FC  00A3               	movwf	?___lmul+3
  4572  04FD  082A               	movf	___lmul@product+2,w
  4573  04FE  00A2               	movwf	?___lmul+2
  4574  04FF  0829               	movf	___lmul@product+1,w
  4575  0500  00A1               	movwf	?___lmul+1
  4576  0501  0828               	movf	___lmul@product,w
  4577  0502  00A0               	movwf	?___lmul
  4578  0503  0008               	return
  4579  0504                     __end_of___lmul:	
  4580                           
  4581                           	psect	text5
  4582  02ED                     __ptext5:	
  4583 ;; *************** function ___lldiv *****************
  4584 ;; Defined at:
  4585 ;;		line 6 in file "/Applications/microchip/xc8/v1.45/sources/common/lldiv.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  divisor         4   12[BANK0 ] unsigned long 
  4588 ;;  dividend        4   16[BANK0 ] unsigned long 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  quotient        4   20[BANK0 ] unsigned long 
  4591 ;;  counter         1   24[BANK0 ] unsigned char 
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  4   12[BANK0 ] unsigned long 
  4594 ;; Registers used:
  4595 ;;		wreg, status,2, status,0
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4601 ;;      Params:         0       8       0       0       0       0       0       0
  4602 ;;      Locals:         0       5       0       0       0       0       0       0
  4603 ;;      Temps:          1       0       0       0       0       0       0       0
  4604 ;;      Totals:         1      13       0       0       0       0       0       0
  4605 ;;Total ram usage:       14 bytes
  4606 ;; Hardware stack levels used:    1
  4607 ;; Hardware stack levels required when called:    4
  4608 ;; This function calls:
  4609 ;;		Nothing
  4610 ;; This function is called by:
  4611 ;;		_setCurrent
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           
  4616                           ;psect for function ___lldiv
  4617  02ED                     ___lldiv:	
  4618                           
  4619                           ;incstack = 0
  4620                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4621  02ED  3000               	movlw	0
  4622  02EE  0020               	movlb	0	; select bank0
  4623  02EF  00B7               	movwf	___lldiv@quotient+3
  4624  02F0  3000               	movlw	0
  4625  02F1  00B6               	movwf	___lldiv@quotient+2
  4626  02F2  3000               	movlw	0
  4627  02F3  00B5               	movwf	___lldiv@quotient+1
  4628  02F4  3000               	movlw	0
  4629  02F5  00B4               	movwf	___lldiv@quotient
  4630  02F6  082F               	movf	___lldiv@divisor+3,w
  4631  02F7  042E               	iorwf	___lldiv@divisor+2,w
  4632  02F8  042D               	iorwf	___lldiv@divisor+1,w
  4633  02F9  042C               	iorwf	___lldiv@divisor,w
  4634  02FA  1903               	skipnz
  4635  02FB  2B37               	goto	l2171
  4636  02FC  01B8               	clrf	___lldiv@counter
  4637  02FD  0AB8               	incf	___lldiv@counter,f
  4638  02FE                     l2157:	
  4639  02FE  1BAF               	btfsc	___lldiv@divisor+3,7
  4640  02FF  2B0C               	goto	l2159
  4641  0300  3001               	movlw	1
  4642  0301                     u1765:	
  4643  0301  35AC               	lslf	___lldiv@divisor,f
  4644  0302  0DAD               	rlf	___lldiv@divisor+1,f
  4645  0303  0DAE               	rlf	___lldiv@divisor+2,f
  4646  0304  0DAF               	rlf	___lldiv@divisor+3,f
  4647  0305  0B89               	decfsz	9,f
  4648  0306  2B01               	goto	u1765
  4649  0307  3001               	movlw	1
  4650  0308  00F3               	movwf	??___lldiv
  4651  0309  0873               	movf	??___lldiv,w
  4652  030A  07B8               	addwf	___lldiv@counter,f
  4653  030B  2AFE               	goto	l2157
  4654  030C                     l2159:	
  4655  030C  3001               	movlw	1
  4656  030D                     u1785:	
  4657  030D  35B4               	lslf	___lldiv@quotient,f
  4658  030E  0DB5               	rlf	___lldiv@quotient+1,f
  4659  030F  0DB6               	rlf	___lldiv@quotient+2,f
  4660  0310  0DB7               	rlf	___lldiv@quotient+3,f
  4661  0311  0B89               	decfsz	9,f
  4662  0312  2B0D               	goto	u1785
  4663  0313  082F               	movf	___lldiv@divisor+3,w
  4664  0314  0233               	subwf	___lldiv@dividend+3,w
  4665  0315  1D03               	skipz
  4666  0316  2B21               	goto	u1795
  4667  0317  082E               	movf	___lldiv@divisor+2,w
  4668  0318  0232               	subwf	___lldiv@dividend+2,w
  4669  0319  1D03               	skipz
  4670  031A  2B21               	goto	u1795
  4671  031B  082D               	movf	___lldiv@divisor+1,w
  4672  031C  0231               	subwf	___lldiv@dividend+1,w
  4673  031D  1D03               	skipz
  4674  031E  2B21               	goto	u1795
  4675  031F  082C               	movf	___lldiv@divisor,w
  4676  0320  0230               	subwf	___lldiv@dividend,w
  4677  0321                     u1795:	
  4678  0321  1C03               	skipc
  4679  0322  2B2C               	goto	l2167
  4680  0323  082C               	movf	___lldiv@divisor,w
  4681  0324  02B0               	subwf	___lldiv@dividend,f
  4682  0325  082D               	movf	___lldiv@divisor+1,w
  4683  0326  3BB1               	subwfb	___lldiv@dividend+1,f
  4684  0327  082E               	movf	___lldiv@divisor+2,w
  4685  0328  3BB2               	subwfb	___lldiv@dividend+2,f
  4686  0329  082F               	movf	___lldiv@divisor+3,w
  4687  032A  3BB3               	subwfb	___lldiv@dividend+3,f
  4688  032B  1434               	bsf	___lldiv@quotient,0
  4689  032C                     l2167:	
  4690  032C  3001               	movlw	1
  4691  032D                     u1805:	
  4692  032D  36AF               	lsrf	___lldiv@divisor+3,f
  4693  032E  0CAE               	rrf	___lldiv@divisor+2,f
  4694  032F  0CAD               	rrf	___lldiv@divisor+1,f
  4695  0330  0CAC               	rrf	___lldiv@divisor,f
  4696  0331  0B89               	decfsz	9,f
  4697  0332  2B2D               	goto	u1805
  4698  0333  3001               	movlw	1
  4699  0334  02B8               	subwf	___lldiv@counter,f
  4700  0335  1D03               	btfss	3,2
  4701  0336  2B0C               	goto	l2159
  4702  0337                     l2171:	
  4703  0337  0837               	movf	___lldiv@quotient+3,w
  4704  0338  00AF               	movwf	?___lldiv+3
  4705  0339  0836               	movf	___lldiv@quotient+2,w
  4706  033A  00AE               	movwf	?___lldiv+2
  4707  033B  0835               	movf	___lldiv@quotient+1,w
  4708  033C  00AD               	movwf	?___lldiv+1
  4709  033D  0834               	movf	___lldiv@quotient,w
  4710  033E  00AC               	movwf	?___lldiv
  4711  033F  0008               	return
  4712  0340                     __end_of___lldiv:	
  4713                           
  4714                           	psect	text6
  4715  0340                     __ptext6:	
  4716 ;; *************** function ___awdiv *****************
  4717 ;; Defined at:
  4718 ;;		line 6 in file "/Applications/microchip/xc8/v1.45/sources/common/awdiv.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;  divisor         2    0[BANK0 ] int 
  4721 ;;  dividend        2    2[BANK0 ] int 
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;  quotient        2    6[BANK0 ] int 
  4724 ;;  sign            1    5[BANK0 ] unsigned char 
  4725 ;;  counter         1    4[BANK0 ] unsigned char 
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  2    0[BANK0 ] int 
  4728 ;; Registers used:
  4729 ;;		wreg, status,2, status,0
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4735 ;;      Params:         0       4       0       0       0       0       0       0
  4736 ;;      Locals:         0       4       0       0       0       0       0       0
  4737 ;;      Temps:          1       0       0       0       0       0       0       0
  4738 ;;      Totals:         1       8       0       0       0       0       0       0
  4739 ;;Total ram usage:        9 bytes
  4740 ;; Hardware stack levels used:    1
  4741 ;; Hardware stack levels required when called:    4
  4742 ;; This function calls:
  4743 ;;		Nothing
  4744 ;; This function is called by:
  4745 ;;		_setCurrent
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           
  4750                           ;psect for function ___awdiv
  4751  0340                     ___awdiv:	
  4752                           
  4753                           ;incstack = 0
  4754                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4755  0340  0020               	movlb	0	; select bank0
  4756  0341  01A5               	clrf	___awdiv@sign
  4757  0342  1FA1               	btfss	___awdiv@divisor+1,7
  4758  0343  2B4B               	goto	l2115
  4759  0344  09A0               	comf	___awdiv@divisor,f
  4760  0345  09A1               	comf	___awdiv@divisor+1,f
  4761  0346  0AA0               	incf	___awdiv@divisor,f
  4762  0347  1903               	skipnz
  4763  0348  0AA1               	incf	___awdiv@divisor+1,f
  4764  0349  01A5               	clrf	___awdiv@sign
  4765  034A  0AA5               	incf	___awdiv@sign,f
  4766  034B                     l2115:	
  4767  034B  1FA3               	btfss	___awdiv@dividend+1,7
  4768  034C  2B56               	goto	l2121
  4769  034D  09A2               	comf	___awdiv@dividend,f
  4770  034E  09A3               	comf	___awdiv@dividend+1,f
  4771  034F  0AA2               	incf	___awdiv@dividend,f
  4772  0350  1903               	skipnz
  4773  0351  0AA3               	incf	___awdiv@dividend+1,f
  4774  0352  3001               	movlw	1
  4775  0353  00F3               	movwf	??___awdiv
  4776  0354  0873               	movf	??___awdiv,w
  4777  0355  06A5               	xorwf	___awdiv@sign,f
  4778  0356                     l2121:	
  4779  0356  01A6               	clrf	___awdiv@quotient
  4780  0357  01A7               	clrf	___awdiv@quotient+1
  4781  0358  0820               	movf	___awdiv@divisor,w
  4782  0359  0421               	iorwf	___awdiv@divisor+1,w
  4783  035A  1903               	btfsc	3,2
  4784  035B  2B85               	goto	l2143
  4785  035C  01A4               	clrf	___awdiv@counter
  4786  035D  0AA4               	incf	___awdiv@counter,f
  4787  035E                     l2131:	
  4788  035E  1BA1               	btfsc	___awdiv@divisor+1,7
  4789  035F  2B6A               	goto	l2133
  4790  0360  3001               	movlw	1
  4791  0361                     u1685:	
  4792  0361  35A0               	lslf	___awdiv@divisor,f
  4793  0362  0DA1               	rlf	___awdiv@divisor+1,f
  4794  0363  0B89               	decfsz	9,f
  4795  0364  2B61               	goto	u1685
  4796  0365  3001               	movlw	1
  4797  0366  00F3               	movwf	??___awdiv
  4798  0367  0873               	movf	??___awdiv,w
  4799  0368  07A4               	addwf	___awdiv@counter,f
  4800  0369  2B5E               	goto	l2131
  4801  036A                     l2133:	
  4802  036A  3001               	movlw	1
  4803  036B                     u1705:	
  4804  036B  35A6               	lslf	___awdiv@quotient,f
  4805  036C  0DA7               	rlf	___awdiv@quotient+1,f
  4806  036D  0B89               	decfsz	9,f
  4807  036E  2B6B               	goto	u1705
  4808  036F  0821               	movf	___awdiv@divisor+1,w
  4809  0370  0223               	subwf	___awdiv@dividend+1,w
  4810  0371  1D03               	skipz
  4811  0372  2B75               	goto	u1715
  4812  0373  0820               	movf	___awdiv@divisor,w
  4813  0374  0222               	subwf	___awdiv@dividend,w
  4814  0375                     u1715:	
  4815  0375  1C03               	skipc
  4816  0376  2B7C               	goto	l2139
  4817  0377  0820               	movf	___awdiv@divisor,w
  4818  0378  02A2               	subwf	___awdiv@dividend,f
  4819  0379  0821               	movf	___awdiv@divisor+1,w
  4820  037A  3BA3               	subwfb	___awdiv@dividend+1,f
  4821  037B  1426               	bsf	___awdiv@quotient,0
  4822  037C                     l2139:	
  4823  037C  3001               	movlw	1
  4824  037D                     u1725:	
  4825  037D  36A1               	lsrf	___awdiv@divisor+1,f
  4826  037E  0CA0               	rrf	___awdiv@divisor,f
  4827  037F  0B89               	decfsz	9,f
  4828  0380  2B7D               	goto	u1725
  4829  0381  3001               	movlw	1
  4830  0382  02A4               	subwf	___awdiv@counter,f
  4831  0383  1D03               	btfss	3,2
  4832  0384  2B6A               	goto	l2133
  4833  0385                     l2143:	
  4834  0385  0825               	movf	___awdiv@sign,w
  4835  0386  1903               	btfsc	3,2
  4836  0387  2B8D               	goto	l2147
  4837  0388  09A6               	comf	___awdiv@quotient,f
  4838  0389  09A7               	comf	___awdiv@quotient+1,f
  4839  038A  0AA6               	incf	___awdiv@quotient,f
  4840  038B  1903               	skipnz
  4841  038C  0AA7               	incf	___awdiv@quotient+1,f
  4842  038D                     l2147:	
  4843  038D  0827               	movf	___awdiv@quotient+1,w
  4844  038E  00A1               	movwf	?___awdiv+1
  4845  038F  0826               	movf	___awdiv@quotient,w
  4846  0390  00A0               	movwf	?___awdiv
  4847  0391  0008               	return
  4848  0392                     __end_of___awdiv:	
  4849                           
  4850                           	psect	text7
  4851  0392                     __ptext7:	
  4852 ;; *************** function _selectSomething *****************
  4853 ;; Defined at:
  4854 ;;		line 197 in file "main.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0, pclath, cstack
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4868 ;;      Params:         0       0       0       0       0       0       0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0
  4870 ;;      Temps:          0       2       0       0       0       0       0       0
  4871 ;;      Totals:         0       2       0       0       0       0       0       0
  4872 ;;Total ram usage:        2 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    5
  4875 ;; This function calls:
  4876 ;;		_setLEDColor
  4877 ;; This function is called by:
  4878 ;;		_process_remote_command
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           
  4883                           ;psect for function _selectSomething
  4884  0392                     _selectSomething:	
  4885                           
  4886                           ;main.c: 199: setLEDColor(255, 0, 0);
  4887                           
  4888                           ;incstack = 0
  4889                           ; Regs used in _selectSomething: [wreg+status,2+status,0+pclath+cstack]
  4890  0392  0020               	movlb	0	; select bank0
  4891  0393  01A0               	clrf	setLEDColor@green
  4892  0394  01A1               	clrf	setLEDColor@blue
  4893  0395  30FF               	movlw	255
  4894  0396  3186  2632  3183   	fcall	_setLEDColor
  4895                           
  4896                           ;main.c: 200: _delay((unsigned long)((500)*(4000000/4000.0)));
  4897  0399  3003               	movlw	3
  4898  039A  0020               	movlb	0	; select bank0
  4899  039B  00A3               	movwf	??_selectSomething+1
  4900  039C  308A               	movlw	138
  4901  039D  00A2               	movwf	??_selectSomething
  4902  039E  3055               	movlw	85
  4903  039F                     u2067:	
  4904  039F  0B89               	decfsz	9,f
  4905  03A0  2B9F               	goto	u2067
  4906  03A1  0BA2               	decfsz	??_selectSomething,f
  4907  03A2  2B9F               	goto	u2067
  4908  03A3  0BA3               	decfsz	??_selectSomething+1,f
  4909  03A4  2B9F               	goto	u2067
  4910  03A5  3200               	nop2
  4911                           
  4912                           ;main.c: 201: setLEDColor(0, 0, 0);
  4913  03A6  0020               	movlb	0	; select bank0
  4914  03A7  01A0               	clrf	setLEDColor@green
  4915  03A8  01A1               	clrf	setLEDColor@blue
  4916  03A9  3000               	movlw	0
  4917  03AA  3186  2632  3183   	fcall	_setLEDColor
  4918                           
  4919                           ;main.c: 202: _delay((unsigned long)((500)*(4000000/4000.0)));
  4920  03AD  3003               	movlw	3
  4921  03AE  0020               	movlb	0	; select bank0
  4922  03AF  00A3               	movwf	??_selectSomething+1
  4923  03B0  308A               	movlw	138
  4924  03B1  00A2               	movwf	??_selectSomething
  4925  03B2  3055               	movlw	85
  4926  03B3                     u2077:	
  4927  03B3  0B89               	decfsz	9,f
  4928  03B4  2BB3               	goto	u2077
  4929  03B5  0BA2               	decfsz	??_selectSomething,f
  4930  03B6  2BB3               	goto	u2077
  4931  03B7  0BA3               	decfsz	??_selectSomething+1,f
  4932  03B8  2BB3               	goto	u2077
  4933  03B9  3200               	nop2
  4934                           
  4935                           ;main.c: 203: setLEDColor(255, 0, 0);
  4936  03BA  0020               	movlb	0	; select bank0
  4937  03BB  01A0               	clrf	setLEDColor@green
  4938  03BC  01A1               	clrf	setLEDColor@blue
  4939  03BD  30FF               	movlw	255
  4940  03BE  3186  2632  3183   	fcall	_setLEDColor
  4941                           
  4942                           ;main.c: 204: _delay((unsigned long)((500)*(4000000/4000.0)));
  4943  03C1  3003               	movlw	3
  4944  03C2  0020               	movlb	0	; select bank0
  4945  03C3  00A3               	movwf	??_selectSomething+1
  4946  03C4  308A               	movlw	138
  4947  03C5  00A2               	movwf	??_selectSomething
  4948  03C6  3055               	movlw	85
  4949  03C7                     u2087:	
  4950  03C7  0B89               	decfsz	9,f
  4951  03C8  2BC7               	goto	u2087
  4952  03C9  0BA2               	decfsz	??_selectSomething,f
  4953  03CA  2BC7               	goto	u2087
  4954  03CB  0BA3               	decfsz	??_selectSomething+1,f
  4955  03CC  2BC7               	goto	u2087
  4956  03CD  3200               	nop2
  4957                           
  4958                           ;main.c: 205: setLEDColor(0, 0, 0);
  4959  03CE  0020               	movlb	0	; select bank0
  4960  03CF  01A0               	clrf	setLEDColor@green
  4961  03D0  01A1               	clrf	setLEDColor@blue
  4962  03D1  3000               	movlw	0
  4963  03D2  3186  2632  3183   	fcall	_setLEDColor
  4964                           
  4965                           ;main.c: 206: _delay((unsigned long)((500)*(4000000/4000.0)));
  4966  03D5  3003               	movlw	3
  4967  03D6  0020               	movlb	0	; select bank0
  4968  03D7  00A3               	movwf	??_selectSomething+1
  4969  03D8  308A               	movlw	138
  4970  03D9  00A2               	movwf	??_selectSomething
  4971  03DA  3055               	movlw	85
  4972  03DB                     u2097:	
  4973  03DB  0B89               	decfsz	9,f
  4974  03DC  2BDB               	goto	u2097
  4975  03DD  0BA2               	decfsz	??_selectSomething,f
  4976  03DE  2BDB               	goto	u2097
  4977  03DF  0BA3               	decfsz	??_selectSomething+1,f
  4978  03E0  2BDB               	goto	u2097
  4979  03E1  3200               	nop2
  4980  03E2  0008               	return
  4981  03E3                     __end_of_selectSomething:	
  4982                           
  4983                           	psect	text8
  4984  055F                     __ptext8:	
  4985 ;; *************** function _selectFrequency *****************
  4986 ;; Defined at:
  4987 ;;		line 209 in file "main.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;		None
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;		None
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  1    wreg      void 
  4994 ;; Registers used:
  4995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5001 ;;      Params:         0       0       0       0       0       0       0       0
  5002 ;;      Locals:         0       0       0       0       0       0       0       0
  5003 ;;      Temps:          0       2       0       0       0       0       0       0
  5004 ;;      Totals:         0       2       0       0       0       0       0       0
  5005 ;;Total ram usage:        2 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:    7
  5008 ;; This function calls:
  5009 ;;		_printf
  5010 ;;		_setLEDColor
  5011 ;; This function is called by:
  5012 ;;		_process_remote_command
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           
  5017                           ;psect for function _selectFrequency
  5018  055F                     _selectFrequency:	
  5019                           
  5020                           ;main.c: 210: interfaceState = STATE_FREQUENCY;
  5021                           
  5022                           ;incstack = 0
  5023                           ; Regs used in _selectFrequency: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5024  055F  3002               	movlw	2
  5025  0560  0020               	movlb	0	; select bank0
  5026  0561  00A7               	movwf	??_selectFrequency
  5027  0562  0827               	movf	??_selectFrequency,w
  5028  0563  00D1               	movwf	_interfaceState
  5029                           
  5030                           ;main.c: 211: setLEDColor(255, 0, 255);
  5031  0564  01A0               	clrf	setLEDColor@green
  5032  0565  30FF               	movlw	255
  5033  0566  00A7               	movwf	??_selectFrequency
  5034  0567  0827               	movf	??_selectFrequency,w
  5035  0568  00A1               	movwf	setLEDColor@blue
  5036  0569  30FF               	movlw	255
  5037  056A  3186  2632  3185   	fcall	_setLEDColor
  5038                           
  5039                           ;main.c: 212: _delay((unsigned long)((1000)*(4000000/4000.0)));
  5040  056D  3006               	movlw	6
  5041  056E  0020               	movlb	0	; select bank0
  5042  056F  00A8               	movwf	??_selectFrequency+1
  5043  0570  3013               	movlw	19
  5044  0571  00A7               	movwf	??_selectFrequency
  5045  0572  30AD               	movlw	173
  5046  0573                     u2107:	
  5047  0573  0B89               	decfsz	9,f
  5048  0574  2D73               	goto	u2107
  5049  0575  0BA7               	decfsz	??_selectFrequency,f
  5050  0576  2D73               	goto	u2107
  5051  0577  0BA8               	decfsz	??_selectFrequency+1,f
  5052  0578  2D73               	goto	u2107
  5053  0579  3200               	nop2
  5054                           
  5055                           ;main.c: 213: setLEDColor(0, 0, 0);
  5056  057A  0020               	movlb	0	; select bank0
  5057  057B  01A0               	clrf	setLEDColor@green
  5058  057C  01A1               	clrf	setLEDColor@blue
  5059  057D  3000               	movlw	0
  5060  057E  3186  2632  3185   	fcall	_setLEDColor
  5061                           
  5062                           ;main.c: 214: printf("\n Frequency selected");
  5063  0581  304D               	movlw	low (STR_1| (0+32768))
  5064  0582  0020               	movlb	0	; select bank0
  5065  0583  00A0               	movwf	printf@f
  5066  0584  3086               	movlw	high (STR_1| (0+32768))
  5067  0585  00A1               	movwf	printf@f+1
  5068  0586  3186  2615         	fcall	_printf
  5069  0588  0008               	return
  5070  0589                     __end_of_selectFrequency:	
  5071                           
  5072                           	psect	text9
  5073  0589                     __ptext9:	
  5074 ;; *************** function _selectCurrent *****************
  5075 ;; Defined at:
  5076 ;;		line 217 in file "main.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;		None
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;		None
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  1    wreg      void 
  5083 ;; Registers used:
  5084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5090 ;;      Params:         0       0       0       0       0       0       0       0
  5091 ;;      Locals:         0       0       0       0       0       0       0       0
  5092 ;;      Temps:          0       2       0       0       0       0       0       0
  5093 ;;      Totals:         0       2       0       0       0       0       0       0
  5094 ;;Total ram usage:        2 bytes
  5095 ;; Hardware stack levels used:    1
  5096 ;; Hardware stack levels required when called:    7
  5097 ;; This function calls:
  5098 ;;		_printf
  5099 ;;		_setLEDColor
  5100 ;; This function is called by:
  5101 ;;		_process_remote_command
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           
  5106                           ;psect for function _selectCurrent
  5107  0589                     _selectCurrent:	
  5108                           
  5109                           ;main.c: 218: interfaceState = STATE_CURRENT;
  5110                           
  5111                           ;incstack = 0
  5112                           ; Regs used in _selectCurrent: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5113  0589  0020               	movlb	0	; select bank0
  5114  058A  01D1               	clrf	_interfaceState
  5115  058B  0AD1               	incf	_interfaceState,f
  5116                           
  5117                           ;main.c: 219: setLEDColor(0, 0, 255);
  5118  058C  01A0               	clrf	setLEDColor@green
  5119  058D  30FF               	movlw	255
  5120  058E  00A7               	movwf	??_selectCurrent
  5121  058F  0827               	movf	??_selectCurrent,w
  5122  0590  00A1               	movwf	setLEDColor@blue
  5123  0591  3000               	movlw	0
  5124  0592  3186  2632  3185   	fcall	_setLEDColor
  5125                           
  5126                           ;main.c: 220: _delay((unsigned long)((1000)*(4000000/4000.0)));
  5127  0595  3006               	movlw	6
  5128  0596  0020               	movlb	0	; select bank0
  5129  0597  00A8               	movwf	??_selectCurrent+1
  5130  0598  3013               	movlw	19
  5131  0599  00A7               	movwf	??_selectCurrent
  5132  059A  30AD               	movlw	173
  5133  059B                     u2117:	
  5134  059B  0B89               	decfsz	9,f
  5135  059C  2D9B               	goto	u2117
  5136  059D  0BA7               	decfsz	??_selectCurrent,f
  5137  059E  2D9B               	goto	u2117
  5138  059F  0BA8               	decfsz	??_selectCurrent+1,f
  5139  05A0  2D9B               	goto	u2117
  5140  05A1  3200               	nop2
  5141                           
  5142                           ;main.c: 221: setLEDColor(0, 0, 0);
  5143  05A2  0020               	movlb	0	; select bank0
  5144  05A3  01A0               	clrf	setLEDColor@green
  5145  05A4  01A1               	clrf	setLEDColor@blue
  5146  05A5  3000               	movlw	0
  5147  05A6  3186  2632  3185   	fcall	_setLEDColor
  5148                           
  5149                           ;main.c: 222: printf("\n current selected");
  5150  05A9  3062               	movlw	low (STR_2| (0+32768))
  5151  05AA  0020               	movlb	0	; select bank0
  5152  05AB  00A0               	movwf	printf@f
  5153  05AC  3086               	movlw	high (STR_2| (0+32768))
  5154  05AD  00A1               	movwf	printf@f+1
  5155  05AE  3186  2615         	fcall	_printf
  5156  05B0  0008               	return
  5157  05B1                     __end_of_selectCurrent:	
  5158                           
  5159                           	psect	text10
  5160  0615                     __ptext10:	
  5161 ;; *************** function _printf *****************
  5162 ;; Defined at:
  5163 ;;		line 464 in file "/Applications/microchip/xc8/v1.45/sources/common/doprnt.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  5166 ;;		 -> STR_3(15), STR_2(19), STR_1(21), 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  tmpval          4    0        struct .
  5169 ;;  cp              2    0        PTR const unsigned char 
  5170 ;;  len             2    0        unsigned int 
  5171 ;;  val             2    0        unsigned int 
  5172 ;;  c               1    6[BANK0 ] char 
  5173 ;;  ap              1    5[BANK0 ] PTR void [1]
  5174 ;;		 -> ?_printf(2), 
  5175 ;;  flag            1    0        unsigned char 
  5176 ;;  prec            1    0        char 
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  2    0[BANK0 ] int 
  5179 ;; Registers used:
  5180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5186 ;;      Params:         0       2       0       0       0       0       0       0
  5187 ;;      Locals:         0       2       0       0       0       0       0       0
  5188 ;;      Temps:          0       3       0       0       0       0       0       0
  5189 ;;      Totals:         0       7       0       0       0       0       0       0
  5190 ;;Total ram usage:        7 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:    6
  5193 ;; This function calls:
  5194 ;;		_putch
  5195 ;; This function is called by:
  5196 ;;		_selectFrequency
  5197 ;;		_selectCurrent
  5198 ;;		_process_remote_command
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           
  5203                           ;psect for function _printf
  5204  0615                     _printf:	
  5205                           
  5206                           ;doprnt.c: 466: va_list ap;
  5207                           ;doprnt.c: 499: signed char c;
  5208                           ;doprnt.c: 506: signed char prec;
  5209                           ;doprnt.c: 508: unsigned char flag;
  5210                           ;doprnt.c: 523: union {
  5211                           ;doprnt.c: 524: unsigned long vd;
  5212                           ;doprnt.c: 525: double integ;
  5213                           ;doprnt.c: 526: } tmpval;
  5214                           ;doprnt.c: 528: unsigned int val;
  5215                           ;doprnt.c: 529: unsigned len;
  5216                           ;doprnt.c: 530: const char * cp;
  5217                           ;doprnt.c: 533: *ap = __va_start();
  5218                           
  5219                           ;incstack = 0
  5220                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5221  0615  3022               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5222  0616  0020               	movlb	0	; select bank0
  5223  0617  00A2               	movwf	??_printf
  5224  0618  0822               	movf	??_printf,w
  5225  0619  00A5               	movwf	printf@ap
  5226  061A                     l2051:	
  5227                           ;doprnt.c: 543: }
  5228                           ;doprnt.c: 1422: {
  5229                           
  5230                           ;doprnt.c: 542: continue;
  5231                           
  5232                           ;doprnt.c: 536: while(c = *f++) {
  5233                           
  5234  061A  0020               	movlb	0	; select bank0
  5235  061B  0821               	movf	printf@f+1,w
  5236  061C  00A3               	movwf	??_printf+1
  5237  061D  0820               	movf	printf@f,w
  5238  061E  00A2               	movwf	??_printf
  5239  061F  0AA0               	incf	printf@f,f
  5240  0620  1903               	skipnz
  5241  0621  0AA1               	incf	printf@f+1,f
  5242  0622  0822               	movf	??_printf,w
  5243  0623  0084               	movwf	4
  5244  0624  0823               	movf	??_printf+1,w
  5245  0625  0085               	movwf	5
  5246  0626  0800               	movf	0,w	;code access
  5247  0627  00A4               	movwf	??_printf+2
  5248  0628  0824               	movf	??_printf+2,w
  5249  0629  00A6               	movwf	printf@c
  5250  062A  0826               	movf	printf@c,w
  5251  062B  1903               	btfsc	3,2
  5252  062C  0008               	return
  5253                           
  5254                           ;doprnt.c: 540: {
  5255                           ;doprnt.c: 541: (putch(c) );
  5256  062D  0826               	movf	printf@c,w
  5257  062E  3186  26E7  3186   	fcall	_putch
  5258  0631  2E1A               	goto	l2051
  5259  0632                     __end_of_printf:	
  5260                           ;doprnt.c: 1469: }
  5261                           ;doprnt.c: 1533: }
  5262                           ;doprnt.c: 1540: return 0;
  5263                           ;	Return value of _printf is never used
  5264                           
  5265                           
  5266                           	psect	text11
  5267  06E7                     __ptext11:	
  5268 ;; *************** function _putch *****************
  5269 ;; Defined at:
  5270 ;;		line 146 in file "mcc_generated_files/eusart.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  txData          1    wreg     unsigned char 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  txData          1    4[COMMON] unsigned char 
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      void 
  5277 ;; Registers used:
  5278 ;;		wreg, status,2, status,0, pclath, cstack
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5284 ;;      Params:         0       0       0       0       0       0       0       0
  5285 ;;      Locals:         1       0       0       0       0       0       0       0
  5286 ;;      Temps:          0       0       0       0       0       0       0       0
  5287 ;;      Totals:         1       0       0       0       0       0       0       0
  5288 ;;Total ram usage:        1 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    5
  5291 ;; This function calls:
  5292 ;;		_EUSART_Write
  5293 ;; This function is called by:
  5294 ;;		_printf
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           
  5299                           ;psect for function _putch
  5300  06E7                     _putch:	
  5301                           
  5302                           ;incstack = 0
  5303                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  5304                           ;putch@txData stored from wreg
  5305  06E7  00F4               	movwf	putch@txData
  5306                           
  5307                           ;eusart.c: 148: EUSART_Write(txData);
  5308  06E8  0874               	movf	putch@txData,w
  5309  06E9  3186  26A5         	fcall	_EUSART_Write
  5310  06EB  0008               	return
  5311  06EC                     __end_of_putch:	
  5312                           
  5313                           	psect	text12
  5314  06A5                     __ptext12:	
  5315 ;; *************** function _EUSART_Write *****************
  5316 ;; Defined at:
  5317 ;;		line 132 in file "mcc_generated_files/eusart.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;  txData          1    wreg     unsigned char 
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;  txData          1    3[COMMON] unsigned char 
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  1    wreg      void 
  5324 ;; Registers used:
  5325 ;;		wreg
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5331 ;;      Params:         0       0       0       0       0       0       0       0
  5332 ;;      Locals:         1       0       0       0       0       0       0       0
  5333 ;;      Temps:          0       0       0       0       0       0       0       0
  5334 ;;      Totals:         1       0       0       0       0       0       0       0
  5335 ;;Total ram usage:        1 bytes
  5336 ;; Hardware stack levels used:    1
  5337 ;; Hardware stack levels required when called:    4
  5338 ;; This function calls:
  5339 ;;		Nothing
  5340 ;; This function is called by:
  5341 ;;		_putch
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           
  5346                           ;psect for function _EUSART_Write
  5347  06A5                     _EUSART_Write:	
  5348                           
  5349                           ;incstack = 0
  5350                           ; Regs used in _EUSART_Write: [wreg]
  5351                           ;EUSART_Write@txData stored from wreg
  5352  06A5  00F3               	movwf	EUSART_Write@txData
  5353  06A6                     l197:	
  5354                           ;eusart.c: 135: {
  5355                           
  5356                           ;eusart.c: 134: while(0 == PIR1bits.TXIF)
  5357                           
  5358  06A6  0020               	movlb	0	; select bank0
  5359  06A7  1E11               	btfss	17,4	;volatile
  5360  06A8  2EA6               	goto	l197
  5361                           
  5362                           ;eusart.c: 136: }
  5363                           ;eusart.c: 138: TX1REG = txData;
  5364  06A9  0873               	movf	EUSART_Write@txData,w
  5365  06AA  0023               	movlb	3	; select bank3
  5366  06AB  009A               	movwf	26	;volatile
  5367  06AC  0008               	return
  5368  06AD                     __end_of_EUSART_Write:	
  5369                           
  5370                           	psect	text13
  5371  0504                     __ptext13:	
  5372 ;; *************** function _battery_voltage *****************
  5373 ;; Defined at:
  5374 ;;		line 91 in file "main.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;		None
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;		None
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  2   22[BANK0 ] unsigned int 
  5381 ;; Registers used:
  5382 ;;		wreg, status,2, status,0, pclath, cstack
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5388 ;;      Params:         0       2       0       0       0       0       0       0
  5389 ;;      Locals:         0       0       0       0       0       0       0       0
  5390 ;;      Temps:          0       0       0       0       0       0       0       0
  5391 ;;      Totals:         0       2       0       0       0       0       0       0
  5392 ;;Total ram usage:        2 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; Hardware stack levels required when called:    5
  5395 ;; This function calls:
  5396 ;;		___aldiv
  5397 ;; This function is called by:
  5398 ;;		_process_remote_command
  5399 ;;		_main
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           
  5404                           ;psect for function _battery_voltage
  5405  0504                     _battery_voltage:	
  5406                           
  5407                           ;main.c: 93: FVRCON = 0b10000001;
  5408                           
  5409                           ;incstack = 0
  5410                           ; Regs used in _battery_voltage: [wreg+status,2+status,0+pclath+cstack]
  5411  0504  3081               	movlw	129
  5412  0505  0022               	movlb	2	; select bank2
  5413  0506  0097               	movwf	23	;volatile
  5414                           
  5415                           ;main.c: 94: ADCON0 = 0b01111101;
  5416  0507  307D               	movlw	125
  5417  0508  0021               	movlb	1	; select bank1
  5418  0509  009D               	movwf	29	;volatile
  5419                           
  5420                           ;main.c: 95: ADCON1 = 0b10010000;
  5421  050A  3090               	movlw	144
  5422  050B  009E               	movwf	30	;volatile
  5423  050C                     l432:	
  5424                           ;main.c: 96: while(!FVRCONbits.FVRRDY){ }
  5425                           
  5426  050C  0022               	movlb	2	; select bank2
  5427  050D  1F17               	btfss	23,6	;volatile
  5428  050E  2D0C               	goto	l432
  5429                           
  5430                           ;main.c: 97: __nop();
  5431  050F  0000               	nop
  5432                           
  5433                           ;main.c: 98: __nop();
  5434  0510  0000               	nop
  5435                           
  5436                           ;main.c: 99: __nop();
  5437  0511  0000               	nop
  5438                           
  5439                           ;main.c: 100: __nop();
  5440  0512  0000               	nop
  5441                           
  5442                           ;main.c: 101: __nop();
  5443  0513  0000               	nop
  5444                           
  5445                           ;main.c: 102: ADCON0bits.GO_nDONE = 1;
  5446  0514  0021               	movlb	1	; select bank1
  5447  0515  149D               	bsf	29,1	;volatile
  5448  0516                     l435:	
  5449                           ;main.c: 103: while(ADCON0bits.GO_nDONE){ }
  5450                           
  5451  0516  189D               	btfsc	29,1	;volatile
  5452  0517  2D16               	goto	l435
  5453                           
  5454                           ;main.c: 104: ADCON0bits.ADON = 0;
  5455  0518  101D               	bcf	29,0	;volatile
  5456                           
  5457                           ;main.c: 109: return 1047552L / ADRES;
  5458  0519  081B               	movf	27,w	;volatile
  5459  051A  0020               	movlb	0	; select bank0
  5460  051B  00A8               	movwf	___aldiv@divisor
  5461  051C  0021               	movlb	1	; select bank1
  5462  051D  081C               	movf	28,w	;volatile
  5463  051E  0020               	movlb	0	; select bank0
  5464  051F  00A9               	movwf	___aldiv@divisor+1
  5465  0520  01AA               	clrf	___aldiv@divisor+2
  5466  0521  01AB               	clrf	___aldiv@divisor+3
  5467  0522  3000               	movlw	0
  5468  0523  00AF               	movwf	___aldiv@dividend+3
  5469  0524  300F               	movlw	15
  5470  0525  00AE               	movwf	___aldiv@dividend+2
  5471  0526  30FC               	movlw	252
  5472  0527  00AD               	movwf	___aldiv@dividend+1
  5473  0528  3000               	movlw	0
  5474  0529  00AC               	movwf	___aldiv@dividend
  5475  052A  3182  2204         	fcall	___aldiv
  5476  052C  0020               	movlb	0	; select bank0
  5477  052D  0829               	movf	?___aldiv+1,w
  5478  052E  00B7               	movwf	?_battery_voltage+1
  5479  052F  0828               	movf	?___aldiv,w
  5480  0530  00B6               	movwf	?_battery_voltage
  5481  0531  0008               	return
  5482  0532                     __end_of_battery_voltage:	
  5483                           
  5484                           	psect	text14
  5485  0204                     __ptext14:	
  5486 ;; *************** function ___aldiv *****************
  5487 ;; Defined at:
  5488 ;;		line 6 in file "/Applications/microchip/xc8/v1.45/sources/common/aldiv.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  divisor         4    8[BANK0 ] long 
  5491 ;;  dividend        4   12[BANK0 ] long 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  quotient        4   18[BANK0 ] long 
  5494 ;;  sign            1   17[BANK0 ] unsigned char 
  5495 ;;  counter         1   16[BANK0 ] unsigned char 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  4    8[BANK0 ] long 
  5498 ;; Registers used:
  5499 ;;		wreg, status,2, status,0
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5505 ;;      Params:         0       8       0       0       0       0       0       0
  5506 ;;      Locals:         0       6       0       0       0       0       0       0
  5507 ;;      Temps:          1       0       0       0       0       0       0       0
  5508 ;;      Totals:         1      14       0       0       0       0       0       0
  5509 ;;Total ram usage:       15 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    4
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		_battery_voltage
  5516 ;;		_setCurrent
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           
  5521                           ;psect for function ___aldiv
  5522  0204                     ___aldiv:	
  5523                           
  5524                           ;incstack = 0
  5525                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5526  0204  0020               	movlb	0	; select bank0
  5527  0205  01B1               	clrf	___aldiv@sign
  5528  0206  1FAB               	btfss	___aldiv@divisor+3,7
  5529  0207  2A15               	goto	l578
  5530  0208  09A8               	comf	___aldiv@divisor,f
  5531  0209  09A9               	comf	___aldiv@divisor+1,f
  5532  020A  09AA               	comf	___aldiv@divisor+2,f
  5533  020B  09AB               	comf	___aldiv@divisor+3,f
  5534  020C  0AA8               	incf	___aldiv@divisor,f
  5535  020D  1903               	skipnz
  5536  020E  0AA9               	incf	___aldiv@divisor+1,f
  5537  020F  1903               	skipnz
  5538  0210  0AAA               	incf	___aldiv@divisor+2,f
  5539  0211  1903               	skipnz
  5540  0212  0AAB               	incf	___aldiv@divisor+3,f
  5541  0213  01B1               	clrf	___aldiv@sign
  5542  0214  0AB1               	incf	___aldiv@sign,f
  5543  0215                     l578:	
  5544  0215  1FAF               	btfss	___aldiv@dividend+3,7
  5545  0216  2A26               	goto	l2077
  5546  0217  09AC               	comf	___aldiv@dividend,f
  5547  0218  09AD               	comf	___aldiv@dividend+1,f
  5548  0219  09AE               	comf	___aldiv@dividend+2,f
  5549  021A  09AF               	comf	___aldiv@dividend+3,f
  5550  021B  0AAC               	incf	___aldiv@dividend,f
  5551  021C  1903               	skipnz
  5552  021D  0AAD               	incf	___aldiv@dividend+1,f
  5553  021E  1903               	skipnz
  5554  021F  0AAE               	incf	___aldiv@dividend+2,f
  5555  0220  1903               	skipnz
  5556  0221  0AAF               	incf	___aldiv@dividend+3,f
  5557  0222  3001               	movlw	1
  5558  0223  00F4               	movwf	??___aldiv
  5559  0224  0874               	movf	??___aldiv,w
  5560  0225  06B1               	xorwf	___aldiv@sign,f
  5561  0226                     l2077:	
  5562  0226  3000               	movlw	0
  5563  0227  00B5               	movwf	___aldiv@quotient+3
  5564  0228  3000               	movlw	0
  5565  0229  00B4               	movwf	___aldiv@quotient+2
  5566  022A  3000               	movlw	0
  5567  022B  00B3               	movwf	___aldiv@quotient+1
  5568  022C  3000               	movlw	0
  5569  022D  00B2               	movwf	___aldiv@quotient
  5570  022E  082B               	movf	___aldiv@divisor+3,w
  5571  022F  042A               	iorwf	___aldiv@divisor+2,w
  5572  0230  0429               	iorwf	___aldiv@divisor+1,w
  5573  0231  0428               	iorwf	___aldiv@divisor,w
  5574  0232  1903               	skipnz
  5575  0233  2A6F               	goto	l2099
  5576  0234  01B0               	clrf	___aldiv@counter
  5577  0235  0AB0               	incf	___aldiv@counter,f
  5578  0236                     l2085:	
  5579  0236  1BAB               	btfsc	___aldiv@divisor+3,7
  5580  0237  2A44               	goto	l2087
  5581  0238  3001               	movlw	1
  5582  0239                     u1585:	
  5583  0239  35A8               	lslf	___aldiv@divisor,f
  5584  023A  0DA9               	rlf	___aldiv@divisor+1,f
  5585  023B  0DAA               	rlf	___aldiv@divisor+2,f
  5586  023C  0DAB               	rlf	___aldiv@divisor+3,f
  5587  023D  0B89               	decfsz	9,f
  5588  023E  2A39               	goto	u1585
  5589  023F  3001               	movlw	1
  5590  0240  00F4               	movwf	??___aldiv
  5591  0241  0874               	movf	??___aldiv,w
  5592  0242  07B0               	addwf	___aldiv@counter,f
  5593  0243  2A36               	goto	l2085
  5594  0244                     l2087:	
  5595  0244  3001               	movlw	1
  5596  0245                     u1605:	
  5597  0245  35B2               	lslf	___aldiv@quotient,f
  5598  0246  0DB3               	rlf	___aldiv@quotient+1,f
  5599  0247  0DB4               	rlf	___aldiv@quotient+2,f
  5600  0248  0DB5               	rlf	___aldiv@quotient+3,f
  5601  0249  0B89               	decfsz	9,f
  5602  024A  2A45               	goto	u1605
  5603  024B  082B               	movf	___aldiv@divisor+3,w
  5604  024C  022F               	subwf	___aldiv@dividend+3,w
  5605  024D  1D03               	skipz
  5606  024E  2A59               	goto	u1615
  5607  024F  082A               	movf	___aldiv@divisor+2,w
  5608  0250  022E               	subwf	___aldiv@dividend+2,w
  5609  0251  1D03               	skipz
  5610  0252  2A59               	goto	u1615
  5611  0253  0829               	movf	___aldiv@divisor+1,w
  5612  0254  022D               	subwf	___aldiv@dividend+1,w
  5613  0255  1D03               	skipz
  5614  0256  2A59               	goto	u1615
  5615  0257  0828               	movf	___aldiv@divisor,w
  5616  0258  022C               	subwf	___aldiv@dividend,w
  5617  0259                     u1615:	
  5618  0259  1C03               	skipc
  5619  025A  2A64               	goto	l2095
  5620  025B  0828               	movf	___aldiv@divisor,w
  5621  025C  02AC               	subwf	___aldiv@dividend,f
  5622  025D  0829               	movf	___aldiv@divisor+1,w
  5623  025E  3BAD               	subwfb	___aldiv@dividend+1,f
  5624  025F  082A               	movf	___aldiv@divisor+2,w
  5625  0260  3BAE               	subwfb	___aldiv@dividend+2,f
  5626  0261  082B               	movf	___aldiv@divisor+3,w
  5627  0262  3BAF               	subwfb	___aldiv@dividend+3,f
  5628  0263  1432               	bsf	___aldiv@quotient,0
  5629  0264                     l2095:	
  5630  0264  3001               	movlw	1
  5631  0265                     u1625:	
  5632  0265  36AB               	lsrf	___aldiv@divisor+3,f
  5633  0266  0CAA               	rrf	___aldiv@divisor+2,f
  5634  0267  0CA9               	rrf	___aldiv@divisor+1,f
  5635  0268  0CA8               	rrf	___aldiv@divisor,f
  5636  0269  0B89               	decfsz	9,f
  5637  026A  2A65               	goto	u1625
  5638  026B  3001               	movlw	1
  5639  026C  02B0               	subwf	___aldiv@counter,f
  5640  026D  1D03               	btfss	3,2
  5641  026E  2A44               	goto	l2087
  5642  026F                     l2099:	
  5643  026F  0831               	movf	___aldiv@sign,w
  5644  0270  1903               	btfsc	3,2
  5645  0271  2A7D               	goto	l2103
  5646  0272  09B2               	comf	___aldiv@quotient,f
  5647  0273  09B3               	comf	___aldiv@quotient+1,f
  5648  0274  09B4               	comf	___aldiv@quotient+2,f
  5649  0275  09B5               	comf	___aldiv@quotient+3,f
  5650  0276  0AB2               	incf	___aldiv@quotient,f
  5651  0277  1903               	skipnz
  5652  0278  0AB3               	incf	___aldiv@quotient+1,f
  5653  0279  1903               	skipnz
  5654  027A  0AB4               	incf	___aldiv@quotient+2,f
  5655  027B  1903               	skipnz
  5656  027C  0AB5               	incf	___aldiv@quotient+3,f
  5657  027D                     l2103:	
  5658  027D  0835               	movf	___aldiv@quotient+3,w
  5659  027E  00AB               	movwf	?___aldiv+3
  5660  027F  0834               	movf	___aldiv@quotient+2,w
  5661  0280  00AA               	movwf	?___aldiv+2
  5662  0281  0833               	movf	___aldiv@quotient+1,w
  5663  0282  00A9               	movwf	?___aldiv+1
  5664  0283  0832               	movf	___aldiv@quotient,w
  5665  0284  00A8               	movwf	?___aldiv
  5666  0285  0008               	return
  5667  0286                     __end_of___aldiv:	
  5668                           
  5669                           	psect	text15
  5670  0532                     __ptext15:	
  5671 ;; *************** function _lowBattery *****************
  5672 ;; Defined at:
  5673 ;;		line 178 in file "main.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;		None
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;		None
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  1    wreg      void 
  5680 ;; Registers used:
  5681 ;;		wreg, status,2, status,0, pclath, cstack
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5687 ;;      Params:         0       0       0       0       0       0       0       0
  5688 ;;      Locals:         0       0       0       0       0       0       0       0
  5689 ;;      Temps:          0       2       0       0       0       0       0       0
  5690 ;;      Totals:         0       2       0       0       0       0       0       0
  5691 ;;Total ram usage:        2 bytes
  5692 ;; Hardware stack levels used:    1
  5693 ;; Hardware stack levels required when called:    5
  5694 ;; This function calls:
  5695 ;;		_setLEDColor
  5696 ;; This function is called by:
  5697 ;;		_main
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           
  5702                           ;psect for function _lowBattery
  5703  0532                     _lowBattery:	
  5704                           
  5705                           ;main.c: 179: interfaceState = STATE_LOWBATTERY;
  5706                           
  5707                           ;incstack = 0
  5708                           ; Regs used in _lowBattery: [wreg+status,2+status,0+pclath+cstack]
  5709  0532  3003               	movlw	3
  5710  0533  0020               	movlb	0	; select bank0
  5711  0534  00A2               	movwf	??_lowBattery
  5712  0535  0822               	movf	??_lowBattery,w
  5713  0536  00D1               	movwf	_interfaceState
  5714                           
  5715                           ;main.c: 180: setLEDColor(255, 0, 0);
  5716  0537  01A0               	clrf	setLEDColor@green
  5717  0538  01A1               	clrf	setLEDColor@blue
  5718  0539  30FF               	movlw	255
  5719  053A  3186  2632  3185   	fcall	_setLEDColor
  5720                           
  5721                           ;main.c: 181: _delay((unsigned long)((250)*(4000000/4000.0)));
  5722  053D  3002               	movlw	2
  5723  053E  0020               	movlb	0	; select bank0
  5724  053F  00A3               	movwf	??_lowBattery+1
  5725  0540  3045               	movlw	69
  5726  0541  00A2               	movwf	??_lowBattery
  5727  0542  30A9               	movlw	169
  5728  0543                     u2127:	
  5729  0543  0B89               	decfsz	9,f
  5730  0544  2D43               	goto	u2127
  5731  0545  0BA2               	decfsz	??_lowBattery,f
  5732  0546  2D43               	goto	u2127
  5733  0547  0BA3               	decfsz	??_lowBattery+1,f
  5734  0548  2D43               	goto	u2127
  5735  0549  3200               	nop2
  5736                           
  5737                           ;main.c: 182: setLEDColor(0, 0, 0);
  5738  054A  0020               	movlb	0	; select bank0
  5739  054B  01A0               	clrf	setLEDColor@green
  5740  054C  01A1               	clrf	setLEDColor@blue
  5741  054D  3000               	movlw	0
  5742  054E  3186  2632  3185   	fcall	_setLEDColor
  5743                           
  5744                           ;main.c: 183: _delay((unsigned long)((500)*(4000000/4000.0)));
  5745  0551  3003               	movlw	3
  5746  0552  0020               	movlb	0	; select bank0
  5747  0553  00A3               	movwf	??_lowBattery+1
  5748  0554  308A               	movlw	138
  5749  0555  00A2               	movwf	??_lowBattery
  5750  0556  3055               	movlw	85
  5751  0557                     u2137:	
  5752  0557  0B89               	decfsz	9,f
  5753  0558  2D57               	goto	u2137
  5754  0559  0BA2               	decfsz	??_lowBattery,f
  5755  055A  2D57               	goto	u2137
  5756  055B  0BA3               	decfsz	??_lowBattery+1,f
  5757  055C  2D57               	goto	u2137
  5758  055D  3200               	nop2
  5759  055E  0008               	return
  5760  055F                     __end_of_lowBattery:	
  5761                           
  5762                           	psect	text16
  5763  0632                     __ptext16:	
  5764 ;; *************** function _setLEDColor *****************
  5765 ;; Defined at:
  5766 ;;		line 157 in file "main.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;  red             1    wreg     unsigned char 
  5769 ;;  green           1    0[BANK0 ] unsigned char 
  5770 ;;  blue            1    1[BANK0 ] unsigned char 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  red             1    4[COMMON] unsigned char 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  1    wreg      void 
  5775 ;; Registers used:
  5776 ;;		wreg, status,2, status,0
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5782 ;;      Params:         0       2       0       0       0       0       0       0
  5783 ;;      Locals:         1       0       0       0       0       0       0       0
  5784 ;;      Temps:          1       0       0       0       0       0       0       0
  5785 ;;      Totals:         2       2       0       0       0       0       0       0
  5786 ;;Total ram usage:        4 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    4
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_lowBattery
  5793 ;;		_startUp
  5794 ;;		_selectSomething
  5795 ;;		_selectFrequency
  5796 ;;		_selectCurrent
  5797 ;;		_process_remote_command
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           
  5802                           ;psect for function _setLEDColor
  5803  0632                     _setLEDColor:	
  5804                           
  5805                           ;incstack = 0
  5806                           ; Regs used in _setLEDColor: [wreg+status,2+status,0]
  5807                           ;setLEDColor@red stored from wreg
  5808  0632  00F4               	movwf	setLEDColor@red
  5809                           
  5810                           ;main.c: 164: if (0 == blue){
  5811  0633  0020               	movlb	0	; select bank0
  5812  0634  0821               	movf	setLEDColor@blue,w
  5813  0635  1D03               	btfss	3,2
  5814  0636  2E3A               	goto	l2041
  5815                           
  5816                           ;main.c: 165: TRISC |= 0b00100000;
  5817  0637  0021               	movlb	1	; select bank1
  5818  0638  168E               	bsf	14,5	;volatile
  5819                           
  5820                           ;main.c: 166: } else {
  5821  0639  2E3F               	goto	l445
  5822  063A                     l2041:	
  5823                           
  5824                           ;main.c: 167: TRISC &= 0b11011111;
  5825  063A  30DF               	movlw	223
  5826  063B  00F3               	movwf	??_setLEDColor
  5827  063C  0873               	movf	??_setLEDColor,w
  5828  063D  0021               	movlb	1	; select bank1
  5829  063E  058E               	andwf	14,f	;volatile
  5830  063F                     l445:	
  5831                           
  5832                           ;main.c: 168: }
  5833                           ;main.c: 169: CCPR1L = 255 - blue;
  5834  063F  0020               	movlb	0	; select bank0
  5835  0640  0321               	decf	setLEDColor@blue,w
  5836  0641  3AFF               	xorlw	255
  5837  0642  3EFF               	addlw	255
  5838  0643  0025               	movlb	5	; select bank5
  5839  0644  0091               	movwf	17	;volatile
  5840                           
  5841                           ;main.c: 171: PWM3DCH = red;
  5842  0645  0874               	movf	setLEDColor@red,w
  5843  0646  002C               	movlb	12	; select bank12
  5844  0647  0098               	movwf	24	;volatile
  5845                           
  5846                           ;main.c: 173: PWM4DCH = green;
  5847  0648  0020               	movlb	0	; select bank0
  5848  0649  0820               	movf	setLEDColor@green,w
  5849  064A  002C               	movlb	12	; select bank12
  5850  064B  009B               	movwf	27	;volatile
  5851  064C  0008               	return
  5852  064D                     __end_of_setLEDColor:	
  5853                           
  5854                           	psect	text17
  5855  042B                     __ptext17:	
  5856 ;; *************** function _initLED *****************
  5857 ;; Defined at:
  5858 ;;		line 116 in file "main.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;		None
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;		None
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  1    wreg      void 
  5865 ;; Registers used:
  5866 ;;		wreg, status,2, status,0
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5872 ;;      Params:         0       0       0       0       0       0       0       0
  5873 ;;      Locals:         0       0       0       0       0       0       0       0
  5874 ;;      Temps:          1       0       0       0       0       0       0       0
  5875 ;;      Totals:         1       0       0       0       0       0       0       0
  5876 ;;Total ram usage:        1 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:    4
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_main
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           
  5887                           ;psect for function _initLED
  5888  042B                     _initLED:	
  5889                           
  5890                           ;main.c: 119: PR2 = 255;
  5891                           
  5892                           ;incstack = 0
  5893                           ; Regs used in _initLED: [wreg+status,2+status,0]
  5894  042B  30FF               	movlw	255
  5895  042C  0020               	movlb	0	; select bank0
  5896  042D  009B               	movwf	27	;volatile
  5897                           
  5898                           ;main.c: 120: T2CONbits.T2CKPS = 0b10;
  5899  042E  081C               	movf	28,w	;volatile
  5900  042F  39FC               	andlw	-4
  5901  0430  3802               	iorlw	2
  5902  0431  009C               	movwf	28	;volatile
  5903                           
  5904                           ;main.c: 121: T2CONbits.TMR2ON = 1;
  5905  0432  151C               	bsf	28,2	;volatile
  5906                           
  5907                           ;main.c: 125: TRISC |= 0b00010000;
  5908  0433  0021               	movlb	1	; select bank1
  5909  0434  160E               	bsf	14,4	;volatile
  5910                           
  5911                           ;main.c: 126: RC4PPS = 0b01110;
  5912  0435  300E               	movlw	14
  5913  0436  003D               	movlb	29	; select bank29
  5914  0437  00A4               	movwf	36	;volatile
  5915                           
  5916                           ;main.c: 127: CCPTMRSbits.P3TSEL = 0b00;
  5917  0438  30CF               	movlw	-49
  5918  0439  0025               	movlb	5	; select bank5
  5919  043A  059E               	andwf	30,f	;volatile
  5920                           
  5921                           ;main.c: 128: PWM3DCH = 0;
  5922  043B  002C               	movlb	12	; select bank12
  5923  043C  0198               	clrf	24	;volatile
  5924                           
  5925                           ;main.c: 129: PWM3DCLbits.PWM3DCL = 0;
  5926  043D  303F               	movlw	-193
  5927  043E  0597               	andwf	23,f	;volatile
  5928                           
  5929                           ;main.c: 130: PWM3CONbits.PWM3POL = 1;
  5930  043F  1619               	bsf	25,4	;volatile
  5931                           
  5932                           ;main.c: 131: TRISC &= 0b11101111;
  5933  0440  30EF               	movlw	239
  5934  0441  00F3               	movwf	??_initLED
  5935  0442  0873               	movf	??_initLED,w
  5936  0443  0021               	movlb	1	; select bank1
  5937  0444  058E               	andwf	14,f	;volatile
  5938                           
  5939                           ;main.c: 132: PWM3CONbits.PWM3EN = 1;
  5940  0445  002C               	movlb	12	; select bank12
  5941  0446  1799               	bsf	25,7	;volatile
  5942                           
  5943                           ;main.c: 136: TRISA |= 0b00100000;
  5944  0447  0021               	movlb	1	; select bank1
  5945  0448  168C               	bsf	12,5	;volatile
  5946                           
  5947                           ;main.c: 137: RA5PPS = 0b01111;
  5948  0449  300F               	movlw	15
  5949  044A  003D               	movlb	29	; select bank29
  5950  044B  0095               	movwf	21	;volatile
  5951                           
  5952                           ;main.c: 138: CCPTMRSbits.P4TSEL = 0b00;
  5953  044C  303F               	movlw	-193
  5954  044D  0025               	movlb	5	; select bank5
  5955  044E  059E               	andwf	30,f	;volatile
  5956                           
  5957                           ;main.c: 139: PWM4DCH = 0;
  5958  044F  002C               	movlb	12	; select bank12
  5959  0450  019B               	clrf	27	;volatile
  5960                           
  5961                           ;main.c: 140: PWM4DCLbits.PWM4DCL = 0;
  5962  0451  303F               	movlw	-193
  5963  0452  059A               	andwf	26,f	;volatile
  5964                           
  5965                           ;main.c: 141: PWM4CONbits.PWM4POL = 1;
  5966  0453  161C               	bsf	28,4	;volatile
  5967                           
  5968                           ;main.c: 142: TRISA &= 0b11011111;
  5969  0454  30DF               	movlw	223
  5970  0455  00F3               	movwf	??_initLED
  5971  0456  0873               	movf	??_initLED,w
  5972  0457  0021               	movlb	1	; select bank1
  5973  0458  058C               	andwf	12,f	;volatile
  5974                           
  5975                           ;main.c: 143: PWM4CONbits.PWM4EN = 1;
  5976  0459  002C               	movlb	12	; select bank12
  5977  045A  179C               	bsf	28,7	;volatile
  5978                           
  5979                           ;main.c: 149: TRISC |= 0b00100000;
  5980  045B  0021               	movlb	1	; select bank1
  5981  045C  168E               	bsf	14,5	;volatile
  5982                           
  5983                           ;main.c: 150: RC5PPS = 0b01100;
  5984  045D  300C               	movlw	12
  5985  045E  003D               	movlb	29	; select bank29
  5986  045F  00A5               	movwf	37	;volatile
  5987                           
  5988                           ;main.c: 151: CCP1CONbits.CCP1M = 0b1100;
  5989  0460  0025               	movlb	5	; select bank5
  5990  0461  0813               	movf	19,w	;volatile
  5991  0462  39F0               	andlw	-16
  5992  0463  380C               	iorlw	12
  5993  0464  0093               	movwf	19	;volatile
  5994                           
  5995                           ;main.c: 152: CCPR1L = 255;
  5996  0465  30FF               	movlw	255
  5997  0466  0091               	movwf	17	;volatile
  5998                           
  5999                           ;main.c: 153: CCP1CONbits.DC1B = 0x3;
  6000  0467  3030               	movlw	48
  6001  0468  0493               	iorwf	19,f	;volatile
  6002                           
  6003                           ;main.c: 154: TRISC &= 0b11011111;
  6004  0469  30DF               	movlw	223
  6005  046A  00F3               	movwf	??_initLED
  6006  046B  0873               	movf	??_initLED,w
  6007  046C  0021               	movlb	1	; select bank1
  6008  046D  058E               	andwf	14,f	;volatile
  6009  046E  0008               	return
  6010  046F                     __end_of_initLED:	
  6011                           
  6012                           	psect	text18
  6013  05F7                     __ptext18:	
  6014 ;; *************** function _SYSTEM_Initialize *****************
  6015 ;; Defined at:
  6016 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;		None
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;		None
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  1    wreg      void 
  6023 ;; Registers used:
  6024 ;;		wreg, status,2, status,0, pclath, cstack
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6030 ;;      Params:         0       0       0       0       0       0       0       0
  6031 ;;      Locals:         0       0       0       0       0       0       0       0
  6032 ;;      Temps:          0       0       0       0       0       0       0       0
  6033 ;;      Totals:         0       0       0       0       0       0       0       0
  6034 ;;Total ram usage:        0 bytes
  6035 ;; Hardware stack levels used:    1
  6036 ;; Hardware stack levels required when called:    6
  6037 ;; This function calls:
  6038 ;;		_DAC_Initialize
  6039 ;;		_EUSART_Initialize
  6040 ;;		_EXT_INT_Initialize
  6041 ;;		_OPA1_Initialize
  6042 ;;		_OPA2_Initialize
  6043 ;;		_OSCILLATOR_Initialize
  6044 ;;		_PIN_MANAGER_Initialize
  6045 ;;		_TMR0_Initialize
  6046 ;;		_TMR2_Initialize
  6047 ;;		_WDT_Initialize
  6048 ;; This function is called by:
  6049 ;;		_main
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           
  6054                           ;psect for function _SYSTEM_Initialize
  6055  05F7                     _SYSTEM_Initialize:	
  6056                           
  6057                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  6058                           
  6059                           ;incstack = 0
  6060                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6061  05F7  3184  246F  3185   	fcall	_PIN_MANAGER_Initialize
  6062                           
  6063                           ;mcc.c: 54: OSCILLATOR_Initialize();
  6064  05FA  3186  26B5  3185   	fcall	_OSCILLATOR_Initialize
  6065                           
  6066                           ;mcc.c: 55: WDT_Initialize();
  6067  05FD  3186  26F0  3185   	fcall	_WDT_Initialize
  6068                           
  6069                           ;mcc.c: 56: DAC_Initialize();
  6070  0600  3186  26E1  3185   	fcall	_DAC_Initialize
  6071                           
  6072                           ;mcc.c: 57: OPA1_Initialize();
  6073  0603  3186  26F8  3185   	fcall	_OPA1_Initialize
  6074                           
  6075                           ;mcc.c: 58: OPA2_Initialize();
  6076  0606  3186  26F4  3185   	fcall	_OPA2_Initialize
  6077                           
  6078                           ;mcc.c: 59: TMR2_Initialize();
  6079  0609  3186  26AD  3185   	fcall	_TMR2_Initialize
  6080                           
  6081                           ;mcc.c: 60: EXT_INT_Initialize();
  6082  060C  3186  2684  3185   	fcall	_EXT_INT_Initialize
  6083                           
  6084                           ;mcc.c: 61: TMR0_Initialize();
  6085  060F  3186  269B  3185   	fcall	_TMR0_Initialize
  6086                           
  6087                           ;mcc.c: 62: EUSART_Initialize();
  6088  0612  3185  25B1         	fcall	_EUSART_Initialize
  6089  0614  0008               	return
  6090  0615                     __end_of_SYSTEM_Initialize:	
  6091                           
  6092                           	psect	text19
  6093  06F0                     __ptext19:	
  6094 ;; *************** function _WDT_Initialize *****************
  6095 ;; Defined at:
  6096 ;;		line 77 in file "mcc_generated_files/mcc.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;		None
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;		None
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1    wreg      void 
  6103 ;; Registers used:
  6104 ;;		wreg
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6110 ;;      Params:         0       0       0       0       0       0       0       0
  6111 ;;      Locals:         0       0       0       0       0       0       0       0
  6112 ;;      Temps:          0       0       0       0       0       0       0       0
  6113 ;;      Totals:         0       0       0       0       0       0       0       0
  6114 ;;Total ram usage:        0 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:    4
  6117 ;; This function calls:
  6118 ;;		Nothing
  6119 ;; This function is called by:
  6120 ;;		_SYSTEM_Initialize
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           
  6125                           ;psect for function _WDT_Initialize
  6126  06F0                     _WDT_Initialize:	
  6127                           
  6128                           ;mcc.c: 80: WDTCON = 0x16;
  6129                           
  6130                           ;incstack = 0
  6131                           ; Regs used in _WDT_Initialize: [wreg]
  6132  06F0  3016               	movlw	22
  6133  06F1  0021               	movlb	1	; select bank1
  6134  06F2  0097               	movwf	23	;volatile
  6135  06F3  0008               	return
  6136  06F4                     __end_of_WDT_Initialize:	
  6137                           
  6138                           	psect	text20
  6139  06AD                     __ptext20:	
  6140 ;; *************** function _TMR2_Initialize *****************
  6141 ;; Defined at:
  6142 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;		None
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;		None
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  1    wreg      void 
  6149 ;; Registers used:
  6150 ;;		wreg, status,2
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6156 ;;      Params:         0       0       0       0       0       0       0       0
  6157 ;;      Locals:         0       0       0       0       0       0       0       0
  6158 ;;      Temps:          0       0       0       0       0       0       0       0
  6159 ;;      Totals:         0       0       0       0       0       0       0       0
  6160 ;;Total ram usage:        0 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:    4
  6163 ;; This function calls:
  6164 ;;		Nothing
  6165 ;; This function is called by:
  6166 ;;		_SYSTEM_Initialize
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           
  6171                           ;psect for function _TMR2_Initialize
  6172  06AD                     _TMR2_Initialize:	
  6173                           
  6174                           ;tmr2.c: 67: PR2 = 255;
  6175                           
  6176                           ;incstack = 0
  6177                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6178  06AD  30FF               	movlw	255
  6179  06AE  0020               	movlb	0	; select bank0
  6180  06AF  009B               	movwf	27	;volatile
  6181                           
  6182                           ;tmr2.c: 70: TMR2 = 0x00;
  6183  06B0  019A               	clrf	26	;volatile
  6184                           
  6185                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
  6186  06B1  1091               	bcf	17,1	;volatile
  6187                           
  6188                           ;tmr2.c: 76: T2CON = 0x06;
  6189  06B2  3006               	movlw	6
  6190  06B3  009C               	movwf	28	;volatile
  6191  06B4  0008               	return
  6192  06B5                     __end_of_TMR2_Initialize:	
  6193                           
  6194                           	psect	text21
  6195  069B                     __ptext21:	
  6196 ;; *************** function _TMR0_Initialize *****************
  6197 ;; Defined at:
  6198 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;		None
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;		None
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  1    wreg      void 
  6205 ;; Registers used:
  6206 ;;		wreg, status,2
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6212 ;;      Params:         0       0       0       0       0       0       0       0
  6213 ;;      Locals:         0       0       0       0       0       0       0       0
  6214 ;;      Temps:          0       0       0       0       0       0       0       0
  6215 ;;      Totals:         0       0       0       0       0       0       0       0
  6216 ;;Total ram usage:        0 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:    4
  6219 ;; This function calls:
  6220 ;;		Nothing
  6221 ;; This function is called by:
  6222 ;;		_SYSTEM_Initialize
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           
  6227                           ;psect for function _TMR0_Initialize
  6228  069B                     _TMR0_Initialize:	
  6229                           
  6230                           ;tmr0.c: 68: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD5 & 0x3F));
  6231                           
  6232                           ;incstack = 0
  6233                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  6234  069B  0021               	movlb	1	; select bank1
  6235  069C  0815               	movf	21,w	;volatile
  6236  069D  39C0               	andlw	192
  6237  069E  3815               	iorlw	21
  6238  069F  0095               	movwf	21	;volatile
  6239                           
  6240                           ;tmr0.c: 71: TMR0 = 0x00;
  6241  06A0  0020               	movlb	0	; select bank0
  6242  06A1  0195               	clrf	21	;volatile
  6243                           
  6244                           ;tmr0.c: 74: timer0ReloadVal= 0;
  6245  06A2  01FA               	clrf	_timer0ReloadVal	;volatile
  6246                           
  6247                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  6248  06A3  110B               	bcf	11,2	;volatile
  6249  06A4  0008               	return
  6250  06A5                     __end_of_TMR0_Initialize:	
  6251                           
  6252                           	psect	text22
  6253  046F                     __ptext22:	
  6254 ;; *************** function _PIN_MANAGER_Initialize *****************
  6255 ;; Defined at:
  6256 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6257 ;; Parameters:    Size  Location     Type
  6258 ;;		None
  6259 ;; Auto vars:     Size  Location     Type
  6260 ;;		None
  6261 ;; Return value:  Size  Location     Type
  6262 ;;                  1    wreg      void 
  6263 ;; Registers used:
  6264 ;;		wreg, status,2
  6265 ;; Tracked objects:
  6266 ;;		On entry : 0/0
  6267 ;;		On exit  : 0/0
  6268 ;;		Unchanged: 0/0
  6269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6270 ;;      Params:         0       0       0       0       0       0       0       0
  6271 ;;      Locals:         0       0       0       0       0       0       0       0
  6272 ;;      Temps:          0       0       0       0       0       0       0       0
  6273 ;;      Totals:         0       0       0       0       0       0       0       0
  6274 ;;Total ram usage:        0 bytes
  6275 ;; Hardware stack levels used:    1
  6276 ;; Hardware stack levels required when called:    4
  6277 ;; This function calls:
  6278 ;;		Nothing
  6279 ;; This function is called by:
  6280 ;;		_SYSTEM_Initialize
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           
  6285                           ;psect for function _PIN_MANAGER_Initialize
  6286  046F                     _PIN_MANAGER_Initialize:	
  6287                           
  6288                           ;pin_manager.c: 60: LATA = 0x00;
  6289                           
  6290                           ;incstack = 0
  6291                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6292  046F  0022               	movlb	2	; select bank2
  6293  0470  018C               	clrf	12	;volatile
  6294                           
  6295                           ;pin_manager.c: 61: LATB = 0x00;
  6296  0471  018D               	clrf	13	;volatile
  6297                           
  6298                           ;pin_manager.c: 62: LATC = 0x00;
  6299  0472  018E               	clrf	14	;volatile
  6300                           
  6301                           ;pin_manager.c: 67: TRISA = 0x04;
  6302  0473  3004               	movlw	4
  6303  0474  0021               	movlb	1	; select bank1
  6304  0475  008C               	movwf	12	;volatile
  6305                           
  6306                           ;pin_manager.c: 68: TRISB = 0x30;
  6307  0476  3030               	movlw	48
  6308  0477  008D               	movwf	13	;volatile
  6309                           
  6310                           ;pin_manager.c: 69: TRISC = 0x50;
  6311  0478  3050               	movlw	80
  6312  0479  008E               	movwf	14	;volatile
  6313                           
  6314                           ;pin_manager.c: 74: ANSELC = 0x40;
  6315  047A  3040               	movlw	64
  6316  047B  0023               	movlb	3	; select bank3
  6317  047C  008E               	movwf	14	;volatile
  6318                           
  6319                           ;pin_manager.c: 75: ANSELB = 0x10;
  6320  047D  3010               	movlw	16
  6321  047E  008D               	movwf	13	;volatile
  6322                           
  6323                           ;pin_manager.c: 76: ANSELA = 0x00;
  6324  047F  018C               	clrf	12	;volatile
  6325                           
  6326                           ;pin_manager.c: 81: WPUB = 0x00;
  6327  0480  0024               	movlb	4	; select bank4
  6328  0481  018D               	clrf	13	;volatile
  6329                           
  6330                           ;pin_manager.c: 82: WPUA = 0x00;
  6331  0482  018C               	clrf	12	;volatile
  6332                           
  6333                           ;pin_manager.c: 83: WPUC = 0x00;
  6334  0483  018E               	clrf	14	;volatile
  6335                           
  6336                           ;pin_manager.c: 84: OPTION_REGbits.nWPUEN = 0;
  6337  0484  0021               	movlb	1	; select bank1
  6338  0485  1395               	bcf	21,7	;volatile
  6339                           
  6340                           ;pin_manager.c: 89: ODCONA = 0x00;
  6341  0486  0025               	movlb	5	; select bank5
  6342  0487  018C               	clrf	12	;volatile
  6343                           
  6344                           ;pin_manager.c: 90: ODCONB = 0x00;
  6345  0488  018D               	clrf	13	;volatile
  6346                           
  6347                           ;pin_manager.c: 91: ODCONC = 0x00;
  6348  0489  018E               	clrf	14	;volatile
  6349                           
  6350                           ;pin_manager.c: 96: SLRCONA = 0x37;
  6351  048A  3037               	movlw	55
  6352  048B  0026               	movlb	6	; select bank6
  6353  048C  008C               	movwf	12	;volatile
  6354                           
  6355                           ;pin_manager.c: 97: SLRCONB = 0xF0;
  6356  048D  30F0               	movlw	240
  6357  048E  008D               	movwf	13	;volatile
  6358                           
  6359                           ;pin_manager.c: 98: SLRCONC = 0xFF;
  6360  048F  30FF               	movlw	255
  6361  0490  008E               	movwf	14	;volatile
  6362                           
  6363                           ;pin_manager.c: 103: INLVLA = 0x3F;
  6364  0491  303F               	movlw	63
  6365  0492  0027               	movlb	7	; select bank7
  6366  0493  008C               	movwf	12	;volatile
  6367                           
  6368                           ;pin_manager.c: 104: INLVLB = 0xF0;
  6369  0494  30F0               	movlw	240
  6370  0495  008D               	movwf	13	;volatile
  6371                           
  6372                           ;pin_manager.c: 105: INLVLC = 0xFF;
  6373  0496  30FF               	movlw	255
  6374  0497  008E               	movwf	14	;volatile
  6375                           
  6376                           ;pin_manager.c: 113: INTCONbits.IOCIE = 1;
  6377  0498  158B               	bsf	11,3	;volatile
  6378                           
  6379                           ;pin_manager.c: 116: INTPPS = 0x02;
  6380  0499  3002               	movlw	2
  6381  049A  003C               	movlb	28	; select bank28
  6382  049B  0090               	movwf	16	;volatile
  6383                           
  6384                           ;pin_manager.c: 117: RXPPS = 0x0D;
  6385  049C  300D               	movlw	13
  6386  049D  00A4               	movwf	36	;volatile
  6387                           
  6388                           ;pin_manager.c: 118: RB7PPS = 0x14;
  6389  049E  3014               	movlw	20
  6390  049F  003D               	movlb	29	; select bank29
  6391  04A0  009F               	movwf	31	;volatile
  6392  04A1  0008               	return
  6393  04A2                     __end_of_PIN_MANAGER_Initialize:	
  6394                           
  6395                           	psect	text23
  6396  06B5                     __ptext23:	
  6397 ;; *************** function _OSCILLATOR_Initialize *****************
  6398 ;; Defined at:
  6399 ;;		line 65 in file "mcc_generated_files/mcc.c"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;		None
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;		None
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  1    wreg      void 
  6406 ;; Registers used:
  6407 ;;		wreg, status,2
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6413 ;;      Params:         0       0       0       0       0       0       0       0
  6414 ;;      Locals:         0       0       0       0       0       0       0       0
  6415 ;;      Temps:          0       0       0       0       0       0       0       0
  6416 ;;      Totals:         0       0       0       0       0       0       0       0
  6417 ;;Total ram usage:        0 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    4
  6420 ;; This function calls:
  6421 ;;		Nothing
  6422 ;; This function is called by:
  6423 ;;		_SYSTEM_Initialize
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           
  6428                           ;psect for function _OSCILLATOR_Initialize
  6429  06B5                     _OSCILLATOR_Initialize:	
  6430                           
  6431                           ;mcc.c: 68: OSCCON = 0x6A;
  6432                           
  6433                           ;incstack = 0
  6434                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6435  06B5  306A               	movlw	106
  6436  06B6  0021               	movlb	1	; select bank1
  6437  06B7  0099               	movwf	25	;volatile
  6438                           
  6439                           ;mcc.c: 70: OSCSTAT = 0x00;
  6440  06B8  019A               	clrf	26	;volatile
  6441                           
  6442                           ;mcc.c: 72: OSCTUNE = 0x00;
  6443  06B9  0198               	clrf	24	;volatile
  6444                           
  6445                           ;mcc.c: 74: BORCON = 0x00;
  6446  06BA  0022               	movlb	2	; select bank2
  6447  06BB  0196               	clrf	22	;volatile
  6448  06BC  0008               	return
  6449  06BD                     __end_of_OSCILLATOR_Initialize:	
  6450                           
  6451                           	psect	text24
  6452  06F4                     __ptext24:	
  6453 ;; *************** function _OPA2_Initialize *****************
  6454 ;; Defined at:
  6455 ;;		line 58 in file "mcc_generated_files/opa2.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;		None
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;		None
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  1    wreg      void 
  6462 ;; Registers used:
  6463 ;;		wreg
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6469 ;;      Params:         0       0       0       0       0       0       0       0
  6470 ;;      Locals:         0       0       0       0       0       0       0       0
  6471 ;;      Temps:          0       0       0       0       0       0       0       0
  6472 ;;      Totals:         0       0       0       0       0       0       0       0
  6473 ;;Total ram usage:        0 bytes
  6474 ;; Hardware stack levels used:    1
  6475 ;; Hardware stack levels required when called:    4
  6476 ;; This function calls:
  6477 ;;		Nothing
  6478 ;; This function is called by:
  6479 ;;		_SYSTEM_Initialize
  6480 ;;		_main
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           
  6485                           ;psect for function _OPA2_Initialize
  6486  06F4                     _OPA2_Initialize:	
  6487                           
  6488                           ;opa2.c: 61: OPA2CON = 0xC2;
  6489                           
  6490                           ;incstack = 0
  6491                           ; Regs used in _OPA2_Initialize: [wreg]
  6492  06F4  30C2               	movlw	194
  6493  06F5  002A               	movlb	10	; select bank10
  6494  06F6  0095               	movwf	21	;volatile
  6495  06F7  0008               	return
  6496  06F8                     __end_of_OPA2_Initialize:	
  6497                           
  6498                           	psect	text25
  6499  06F8                     __ptext25:	
  6500 ;; *************** function _OPA1_Initialize *****************
  6501 ;; Defined at:
  6502 ;;		line 58 in file "mcc_generated_files/opa1.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;		None
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;		None
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      void 
  6509 ;; Registers used:
  6510 ;;		wreg
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6516 ;;      Params:         0       0       0       0       0       0       0       0
  6517 ;;      Locals:         0       0       0       0       0       0       0       0
  6518 ;;      Temps:          0       0       0       0       0       0       0       0
  6519 ;;      Totals:         0       0       0       0       0       0       0       0
  6520 ;;Total ram usage:        0 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; Hardware stack levels required when called:    4
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_SYSTEM_Initialize
  6527 ;;		_main
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           
  6532                           ;psect for function _OPA1_Initialize
  6533  06F8                     _OPA1_Initialize:	
  6534                           
  6535                           ;opa1.c: 61: OPA1CON = 0xC2;
  6536                           
  6537                           ;incstack = 0
  6538                           ; Regs used in _OPA1_Initialize: [wreg]
  6539  06F8  30C2               	movlw	194
  6540  06F9  002A               	movlb	10	; select bank10
  6541  06FA  0091               	movwf	17	;volatile
  6542  06FB  0008               	return
  6543  06FC                     __end_of_OPA1_Initialize:	
  6544                           
  6545                           	psect	text26
  6546  0684                     __ptext26:	
  6547 ;; *************** function _EXT_INT_Initialize *****************
  6548 ;; Defined at:
  6549 ;;		line 132 in file "mcc_generated_files/ext_int.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;		None
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;		None
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  1    wreg      void 
  6556 ;; Registers used:
  6557 ;;		wreg, status,2, status,0, pclath, cstack
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6563 ;;      Params:         0       0       0       0       0       0       0       0
  6564 ;;      Locals:         0       0       0       0       0       0       0       0
  6565 ;;      Temps:          0       0       0       0       0       0       0       0
  6566 ;;      Totals:         0       0       0       0       0       0       0       0
  6567 ;;Total ram usage:        0 bytes
  6568 ;; Hardware stack levels used:    1
  6569 ;; Hardware stack levels required when called:    5
  6570 ;; This function calls:
  6571 ;;		_INT_SetInterruptHandler
  6572 ;; This function is called by:
  6573 ;;		_SYSTEM_Initialize
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           
  6578                           ;psect for function _EXT_INT_Initialize
  6579  0684                     _EXT_INT_Initialize:	
  6580                           
  6581                           ;ext_int.c: 137: (INTCONbits.INTF = 0);
  6582                           
  6583                           ;incstack = 0
  6584                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6585  0684  108B               	bcf	11,1	;volatile
  6586                           
  6587                           ;ext_int.c: 138: (OPTION_REGbits.INTEDG = 0);
  6588  0685  0021               	movlb	1	; select bank1
  6589  0686  1315               	bcf	21,6	;volatile
  6590                           
  6591                           ;ext_int.c: 140: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
  6592  0687  3086               	movlw	low _INT_DefaultInterruptHandler
  6593  0688  0020               	movlb	0	; select bank0
  6594  0689  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler
  6595  068A  3002               	movlw	high _INT_DefaultInterruptHandler
  6596  068B  00A1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  6597  068C  3186  26C9         	fcall	_INT_SetInterruptHandler
  6598                           
  6599                           ;ext_int.c: 141: (INTCONbits.INTE = 1);
  6600  068E  160B               	bsf	11,4	;volatile
  6601  068F  0008               	return
  6602  0690                     __end_of_EXT_INT_Initialize:	
  6603                           
  6604                           	psect	text27
  6605  06C9                     __ptext27:	
  6606 ;; *************** function _INT_SetInterruptHandler *****************
  6607 ;; Defined at:
  6608 ;;		line 71 in file "mcc_generated_files/ext_int.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  6611 ;;		 -> INT_DefaultInterruptHandler(1), 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;		None
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  1    wreg      void 
  6616 ;; Registers used:
  6617 ;;		wreg
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6623 ;;      Params:         0       2       0       0       0       0       0       0
  6624 ;;      Locals:         0       0       0       0       0       0       0       0
  6625 ;;      Temps:          0       0       0       0       0       0       0       0
  6626 ;;      Totals:         0       2       0       0       0       0       0       0
  6627 ;;Total ram usage:        2 bytes
  6628 ;; Hardware stack levels used:    1
  6629 ;; Hardware stack levels required when called:    4
  6630 ;; This function calls:
  6631 ;;		Nothing
  6632 ;; This function is called by:
  6633 ;;		_EXT_INT_Initialize
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           
  6638                           ;psect for function _INT_SetInterruptHandler
  6639  06C9                     _INT_SetInterruptHandler:	
  6640                           
  6641                           ;ext_int.c: 72: INT_InterruptHandler = InterruptHandler;
  6642                           
  6643                           ;incstack = 0
  6644                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  6645  06C9  0020               	movlb	0	; select bank0
  6646  06CA  0821               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  6647  06CB  00E1               	movwf	_INT_InterruptHandler+1
  6648  06CC  0820               	movf	INT_SetInterruptHandler@InterruptHandler,w
  6649  06CD  00E0               	movwf	_INT_InterruptHandler
  6650  06CE  0008               	return
  6651  06CF                     __end_of_INT_SetInterruptHandler:	
  6652                           
  6653                           	psect	text28
  6654  05B1                     __ptext28:	
  6655 ;; *************** function _EUSART_Initialize *****************
  6656 ;; Defined at:
  6657 ;;		line 66 in file "mcc_generated_files/eusart.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;		None
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;		None
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  1    wreg      void 
  6664 ;; Registers used:
  6665 ;;		wreg, status,2, status,0, pclath, cstack
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6671 ;;      Params:         0       0       0       0       0       0       0       0
  6672 ;;      Locals:         0       0       0       0       0       0       0       0
  6673 ;;      Temps:          0       0       0       0       0       0       0       0
  6674 ;;      Totals:         0       0       0       0       0       0       0       0
  6675 ;;Total ram usage:        0 bytes
  6676 ;; Hardware stack levels used:    1
  6677 ;; Hardware stack levels required when called:    5
  6678 ;; This function calls:
  6679 ;;		_EUSART_SetErrorHandler
  6680 ;;		_EUSART_SetFramingErrorHandler
  6681 ;;		_EUSART_SetOverrunErrorHandler
  6682 ;; This function is called by:
  6683 ;;		_SYSTEM_Initialize
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           
  6688                           ;psect for function _EUSART_Initialize
  6689  05B1                     _EUSART_Initialize:	
  6690                           
  6691                           ;eusart.c: 71: BAUD1CON = 0x08;
  6692                           
  6693                           ;incstack = 0
  6694                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6695  05B1  3008               	movlw	8
  6696  05B2  0023               	movlb	3	; select bank3
  6697  05B3  009F               	movwf	31	;volatile
  6698                           
  6699                           ;eusart.c: 74: RC1STA = 0x90;
  6700  05B4  3090               	movlw	144
  6701  05B5  009D               	movwf	29	;volatile
  6702                           
  6703                           ;eusart.c: 77: TX1STA = 0x24;
  6704  05B6  3024               	movlw	36
  6705  05B7  009E               	movwf	30	;volatile
  6706                           
  6707                           ;eusart.c: 80: SP1BRGL = 0x08;
  6708  05B8  3008               	movlw	8
  6709  05B9  009B               	movwf	27	;volatile
  6710                           
  6711                           ;eusart.c: 83: SP1BRGH = 0x00;
  6712  05BA  019C               	clrf	28	;volatile
  6713                           
  6714                           ;eusart.c: 86: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  6715  05BB  3000               	movlw	0
  6716  05BC  0020               	movlb	0	; select bank0
  6717  05BD  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  6718  05BE  3000               	movlw	0
  6719  05BF  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  6720  05C0  3186  26D5  3185   	fcall	_EUSART_SetFramingErrorHandler
  6721                           
  6722                           ;eusart.c: 87: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  6723  05C3  3000               	movlw	0
  6724  05C4  0020               	movlb	0	; select bank0
  6725  05C5  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  6726  05C6  3000               	movlw	0
  6727  05C7  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  6728  05C8  3186  26CF  3185   	fcall	_EUSART_SetOverrunErrorHandler
  6729                           
  6730                           ;eusart.c: 88: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  6731  05CB  3000               	movlw	0
  6732  05CC  0020               	movlb	0	; select bank0
  6733  05CD  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  6734  05CE  3000               	movlw	0
  6735  05CF  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  6736  05D0  3186  26DB         	fcall	_EUSART_SetErrorHandler
  6737                           
  6738                           ;eusart.c: 90: eusartRxLastError.status = 0;
  6739  05D2  0020               	movlb	0	; select bank0
  6740  05D3  01D7               	clrf	_eusartRxLastError	;volatile
  6741  05D4  0008               	return
  6742  05D5                     __end_of_EUSART_Initialize:	
  6743                           
  6744                           	psect	text29
  6745  06CF                     __ptext29:	
  6746 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6747 ;; Defined at:
  6748 ;;		line 170 in file "mcc_generated_files/eusart.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6751 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6752 ;; Auto vars:     Size  Location     Type
  6753 ;;		None
  6754 ;; Return value:  Size  Location     Type
  6755 ;;                  1    wreg      void 
  6756 ;; Registers used:
  6757 ;;		wreg
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 0/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6763 ;;      Params:         0       2       0       0       0       0       0       0
  6764 ;;      Locals:         0       0       0       0       0       0       0       0
  6765 ;;      Temps:          0       0       0       0       0       0       0       0
  6766 ;;      Totals:         0       2       0       0       0       0       0       0
  6767 ;;Total ram usage:        2 bytes
  6768 ;; Hardware stack levels used:    1
  6769 ;; Hardware stack levels required when called:    4
  6770 ;; This function calls:
  6771 ;;		Nothing
  6772 ;; This function is called by:
  6773 ;;		_EUSART_Initialize
  6774 ;; This function uses a non-reentrant model
  6775 ;;
  6776                           
  6777                           
  6778                           ;psect for function _EUSART_SetOverrunErrorHandler
  6779  06CF                     _EUSART_SetOverrunErrorHandler:	
  6780                           
  6781                           ;eusart.c: 171: EUSART_OverrunErrorHandler = interruptHandler;
  6782                           
  6783                           ;incstack = 0
  6784                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6785  06CF  0020               	movlb	0	; select bank0
  6786  06D0  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  6787  06D1  00E5               	movwf	_EUSART_OverrunErrorHandler+1
  6788  06D2  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  6789  06D3  00E4               	movwf	_EUSART_OverrunErrorHandler
  6790  06D4  0008               	return
  6791  06D5                     __end_of_EUSART_SetOverrunErrorHandler:	
  6792                           
  6793                           	psect	text30
  6794  06D5                     __ptext30:	
  6795 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6796 ;; Defined at:
  6797 ;;		line 166 in file "mcc_generated_files/eusart.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6800 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		wreg
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6812 ;;      Params:         0       2       0       0       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0       0
  6815 ;;      Totals:         0       2       0       0       0       0       0       0
  6816 ;;Total ram usage:        2 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; Hardware stack levels required when called:    4
  6819 ;; This function calls:
  6820 ;;		Nothing
  6821 ;; This function is called by:
  6822 ;;		_EUSART_Initialize
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826                           
  6827                           ;psect for function _EUSART_SetFramingErrorHandler
  6828  06D5                     _EUSART_SetFramingErrorHandler:	
  6829                           
  6830                           ;eusart.c: 167: EUSART_FramingErrorHandler = interruptHandler;
  6831                           
  6832                           ;incstack = 0
  6833                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6834  06D5  0020               	movlb	0	; select bank0
  6835  06D6  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  6836  06D7  00E7               	movwf	_EUSART_FramingErrorHandler+1
  6837  06D8  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  6838  06D9  00E6               	movwf	_EUSART_FramingErrorHandler
  6839  06DA  0008               	return
  6840  06DB                     __end_of_EUSART_SetFramingErrorHandler:	
  6841                           
  6842                           	psect	text31
  6843  06DB                     __ptext31:	
  6844 ;; *************** function _EUSART_SetErrorHandler *****************
  6845 ;; Defined at:
  6846 ;;		line 174 in file "mcc_generated_files/eusart.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6849 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;		None
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  1    wreg      void 
  6854 ;; Registers used:
  6855 ;;		wreg
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6861 ;;      Params:         0       2       0       0       0       0       0       0
  6862 ;;      Locals:         0       0       0       0       0       0       0       0
  6863 ;;      Temps:          0       0       0       0       0       0       0       0
  6864 ;;      Totals:         0       2       0       0       0       0       0       0
  6865 ;;Total ram usage:        2 bytes
  6866 ;; Hardware stack levels used:    1
  6867 ;; Hardware stack levels required when called:    4
  6868 ;; This function calls:
  6869 ;;		Nothing
  6870 ;; This function is called by:
  6871 ;;		_EUSART_Initialize
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           
  6876                           ;psect for function _EUSART_SetErrorHandler
  6877  06DB                     _EUSART_SetErrorHandler:	
  6878                           
  6879                           ;eusart.c: 175: EUSART_ErrorHandler = interruptHandler;
  6880                           
  6881                           ;incstack = 0
  6882                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6883  06DB  0020               	movlb	0	; select bank0
  6884  06DC  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  6885  06DD  00E3               	movwf	_EUSART_ErrorHandler+1
  6886  06DE  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  6887  06DF  00E2               	movwf	_EUSART_ErrorHandler
  6888  06E0  0008               	return
  6889  06E1                     __end_of_EUSART_SetErrorHandler:	
  6890                           
  6891                           	psect	text32
  6892  06E1                     __ptext32:	
  6893 ;; *************** function _DAC_Initialize *****************
  6894 ;; Defined at:
  6895 ;;		line 58 in file "mcc_generated_files/dac.c"
  6896 ;; Parameters:    Size  Location     Type
  6897 ;;		None
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;		None
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  1    wreg      void 
  6902 ;; Registers used:
  6903 ;;		wreg
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6909 ;;      Params:         0       0       0       0       0       0       0       0
  6910 ;;      Locals:         0       0       0       0       0       0       0       0
  6911 ;;      Temps:          0       0       0       0       0       0       0       0
  6912 ;;      Totals:         0       0       0       0       0       0       0       0
  6913 ;;Total ram usage:        0 bytes
  6914 ;; Hardware stack levels used:    1
  6915 ;; Hardware stack levels required when called:    4
  6916 ;; This function calls:
  6917 ;;		Nothing
  6918 ;; This function is called by:
  6919 ;;		_SYSTEM_Initialize
  6920 ;;		_main
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           
  6925                           ;psect for function _DAC_Initialize
  6926  06E1                     _DAC_Initialize:	
  6927                           
  6928                           ;dac.c: 61: DAC1CON0 = 0x80;
  6929                           
  6930                           ;incstack = 0
  6931                           ; Regs used in _DAC_Initialize: [wreg]
  6932  06E1  3080               	movlw	128
  6933  06E2  0022               	movlb	2	; select bank2
  6934  06E3  0098               	movwf	24	;volatile
  6935                           
  6936                           ;dac.c: 63: DAC1CON1 = 0xFF;
  6937  06E4  30FF               	movlw	255
  6938  06E5  0099               	movwf	25	;volatile
  6939  06E6  0008               	return
  6940  06E7                     __end_of_DAC_Initialize:	
  6941                           
  6942                           	psect	intentry
  6943  0004                     __pintentry:	
  6944 ;; *************** function _INTERRUPT_InterruptManager *****************
  6945 ;; Defined at:
  6946 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;		None
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;		None
  6951 ;; Return value:  Size  Location     Type
  6952 ;;                  1    wreg      void 
  6953 ;; Registers used:
  6954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6955 ;; Tracked objects:
  6956 ;;		On entry : 0/0
  6957 ;;		On exit  : 0/0
  6958 ;;		Unchanged: 0/0
  6959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6960 ;;      Params:         0       0       0       0       0       0       0       0
  6961 ;;      Locals:         0       0       0       0       0       0       0       0
  6962 ;;      Temps:          1       0       0       0       0       0       0       0
  6963 ;;      Totals:         1       0       0       0       0       0       0       0
  6964 ;;Total ram usage:        1 bytes
  6965 ;; Hardware stack levels used:    1
  6966 ;; Hardware stack levels required when called:    3
  6967 ;; This function calls:
  6968 ;;		_INT_ISR
  6969 ;;		_PIN_MANAGER_IOC
  6970 ;; This function is called by:
  6971 ;;		Interrupt level 1
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975  0004                     _INTERRUPT_InterruptManager:	
  6976                           
  6977                           ;incstack = 0
  6978  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6979                           
  6980                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6981  0005  3180               	pagesel	$
  6982  0006  0020               	movlb	0	; select bank0
  6983  0007  087F               	movf	127,w
  6984  0008  00F2               	movwf	??_INTERRUPT_InterruptManager
  6985                           
  6986                           ;interrupt_manager.c: 55: if(INTCONbits.INTE == 1 && INTCONbits.INTF == 1)
  6987  0009  1A0B               	btfsc	11,4	;volatile
  6988  000A  1C8B               	btfss	11,1	;volatile
  6989  000B  2810               	goto	i1l126
  6990                           
  6991                           ;interrupt_manager.c: 56: {
  6992                           ;interrupt_manager.c: 57: INT_ISR();
  6993  000C  3186  26FC  3180   	fcall	_INT_ISR
  6994                           
  6995                           ;interrupt_manager.c: 58: }
  6996  000F  2815               	goto	i1l130
  6997  0010                     i1l126:	
  6998                           
  6999                           ;interrupt_manager.c: 59: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  7000  0010  198B               	btfsc	11,3	;volatile
  7001  0011  1C0B               	btfss	11,0	;volatile
  7002  0012  2815               	goto	i1l130
  7003                           
  7004                           ;interrupt_manager.c: 60: {
  7005                           ;interrupt_manager.c: 61: PIN_MANAGER_IOC();
  7006  0013  3187  2700         	fcall	_PIN_MANAGER_IOC
  7007  0015                     i1l130:	
  7008                           ;interrupt_manager.c: 63: else
  7009                           ;interrupt_manager.c: 64: {
  7010                           
  7011                           ;interrupt_manager.c: 62: }
  7012                           
  7013  0015  0872               	movf	??_INTERRUPT_InterruptManager,w
  7014  0016  0020               	movlb	0	; select bank0
  7015  0017  00FF               	movwf	127
  7016  0018  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7017  0019  0009               	retfie
  7018  001A                     __end_of_INTERRUPT_InterruptManager:	
  7019                           
  7020                           	psect	text34
  7021  0700                     __ptext34:	
  7022 ;; *************** function _PIN_MANAGER_IOC *****************
  7023 ;; Defined at:
  7024 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;		None
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;		None
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  1    wreg      void 
  7031 ;; Registers used:
  7032 ;;		None
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7038 ;;      Params:         0       0       0       0       0       0       0       0
  7039 ;;      Locals:         0       0       0       0       0       0       0       0
  7040 ;;      Temps:          0       0       0       0       0       0       0       0
  7041 ;;      Totals:         0       0       0       0       0       0       0       0
  7042 ;;Total ram usage:        0 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_INTERRUPT_InterruptManager
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           
  7052                           ;psect for function _PIN_MANAGER_IOC
  7053  0700                     _PIN_MANAGER_IOC:	
  7054                           
  7055                           ;incstack = 0
  7056                           ; Regs used in _PIN_MANAGER_IOC: []
  7057  0700  0008               	return
  7058  0701                     __end_of_PIN_MANAGER_IOC:	
  7059                           
  7060                           	psect	text35
  7061  06FC                     __ptext35:	
  7062 ;; *************** function _INT_ISR *****************
  7063 ;; Defined at:
  7064 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;		None
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;		None
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  1    wreg      void 
  7071 ;; Registers used:
  7072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7078 ;;      Params:         0       0       0       0       0       0       0       0
  7079 ;;      Locals:         0       0       0       0       0       0       0       0
  7080 ;;      Temps:          0       0       0       0       0       0       0       0
  7081 ;;      Totals:         0       0       0       0       0       0       0       0
  7082 ;;Total ram usage:        0 bytes
  7083 ;; Hardware stack levels used:    1
  7084 ;; Hardware stack levels required when called:    2
  7085 ;; This function calls:
  7086 ;;		_INT_CallBack
  7087 ;; This function is called by:
  7088 ;;		_INTERRUPT_InterruptManager
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           
  7093                           ;psect for function _INT_ISR
  7094  06FC                     _INT_ISR:	
  7095                           
  7096                           ;ext_int.c: 56: (INTCONbits.INTF = 0);
  7097                           
  7098                           ;incstack = 0
  7099                           ; Regs used in _INT_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7100  06FC  108B               	bcf	11,1	;volatile
  7101                           
  7102                           ;ext_int.c: 59: INT_CallBack();
  7103  06FD  3186  2690         	fcall	_INT_CallBack
  7104  06FF  0008               	return
  7105  0700                     __end_of_INT_ISR:	
  7106                           
  7107                           	psect	text36
  7108  0690                     __ptext36:	
  7109 ;; *************** function _INT_CallBack *****************
  7110 ;; Defined at:
  7111 ;;		line 62 in file "mcc_generated_files/ext_int.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;		None
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;		None
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  1    wreg      void 
  7118 ;; Registers used:
  7119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/0
  7122 ;;		On exit  : 0/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7125 ;;      Params:         0       0       0       0       0       0       0       0
  7126 ;;      Locals:         0       0       0       0       0       0       0       0
  7127 ;;      Temps:          0       0       0       0       0       0       0       0
  7128 ;;      Totals:         0       0       0       0       0       0       0       0
  7129 ;;Total ram usage:        0 bytes
  7130 ;; Hardware stack levels used:    1
  7131 ;; Hardware stack levels required when called:    1
  7132 ;; This function calls:
  7133 ;;		Absolute function
  7134 ;;		_INT_DefaultInterruptHandler
  7135 ;; This function is called by:
  7136 ;;		_INT_ISR
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139                           
  7140                           
  7141                           ;psect for function _INT_CallBack
  7142  0690                     _INT_CallBack:	
  7143                           
  7144                           ;ext_int.c: 65: if(INT_InterruptHandler)
  7145                           
  7146                           ;incstack = 0
  7147                           ; Regs used in _INT_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7148  0690  0020               	movlb	0	; select bank0
  7149  0691  0860               	movf	_INT_InterruptHandler,w
  7150  0692  0461               	iorwf	_INT_InterruptHandler+1,w
  7151  0693  1903               	btfsc	3,2
  7152  0694  0008               	return
  7153                           
  7154                           ;ext_int.c: 66: {
  7155                           ;ext_int.c: 67: INT_InterruptHandler();
  7156  0695  0861               	movf	_INT_InterruptHandler+1,w
  7157  0696  008A               	movwf	10
  7158  0697  0860               	movf	_INT_InterruptHandler,w
  7159  0698  000A               	callw
  7160  0699  3186               	pagesel	$
  7161  069A  0008               	return
  7162  069B                     __end_of_INT_CallBack:	
  7163                           
  7164                           	psect	text37
  7165  0286                     __ptext37:	
  7166 ;; *************** function _INT_DefaultInterruptHandler *****************
  7167 ;; Defined at:
  7168 ;;		line 75 in file "mcc_generated_files/ext_int.c"
  7169 ;; Parameters:    Size  Location     Type
  7170 ;;		None
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  time            1    1[COMMON] unsigned char 
  7173 ;; Return value:  Size  Location     Type
  7174 ;;                  1    wreg      void 
  7175 ;; Registers used:
  7176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7177 ;; Tracked objects:
  7178 ;;		On entry : 0/0
  7179 ;;		On exit  : 0/0
  7180 ;;		Unchanged: 0/0
  7181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7182 ;;      Params:         0       0       0       0       0       0       0       0
  7183 ;;      Locals:         1       0       0       0       0       0       0       0
  7184 ;;      Temps:          1       0       0       0       0       0       0       0
  7185 ;;      Totals:         2       0       0       0       0       0       0       0
  7186 ;;Total ram usage:        2 bytes
  7187 ;; Hardware stack levels used:    1
  7188 ;; This function calls:
  7189 ;;		Nothing
  7190 ;; This function is called by:
  7191 ;;		_EXT_INT_Initialize
  7192 ;;		_INT_CallBack
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           
  7197                           ;psect for function _INT_DefaultInterruptHandler
  7198  0286                     _INT_DefaultInterruptHandler:	
  7199                           
  7200                           ;ext_int.c: 77: uint8_t time = TMR0;
  7201                           
  7202                           ;incstack = 0
  7203                           ; Regs used in _INT_DefaultInterruptHandler: [wreg-fsr1h+status,2+status,0]
  7204  0286  0020               	movlb	0	; select bank0
  7205  0287  0815               	movf	21,w	;volatile
  7206  0288  00F0               	movwf	??_INT_DefaultInterruptHandler
  7207  0289  0870               	movf	??_INT_DefaultInterruptHandler,w
  7208  028A  00F1               	movwf	INT_DefaultInterruptHandler@time
  7209                           
  7210                           ;ext_int.c: 78: TMR0 = 0;
  7211  028B  0195               	clrf	21	;volatile
  7212                           
  7213                           ;ext_int.c: 81: if (INTCONbits.TMR0IF){
  7214  028C  190B               	btfsc	11,2	;volatile
  7215                           
  7216                           ;ext_int.c: 82: time = 0;
  7217  028D  01F1               	clrf	INT_DefaultInterruptHandler@time
  7218                           
  7219                           ;ext_int.c: 83: }
  7220                           ;ext_int.c: 84: INTCONbits.TMR0IF = 0;
  7221  028E  110B               	bcf	11,2	;volatile
  7222                           
  7223                           ;ext_int.c: 86: switch(ir_code.state){
  7224  028F  2AE0               	goto	i1l1563
  7225  0290                     i1l1521:	
  7226                           ;ext_int.c: 87: case STATE_RESET:
  7227                           
  7228                           
  7229                           ;ext_int.c: 89: if (time >= 180 && time <= 243){
  7230  0290  30B4               	movlw	180
  7231  0291  0271               	subwf	INT_DefaultInterruptHandler@time,w
  7232  0292  1C03               	skipc
  7233  0293  2AEB               	goto	i1l255
  7234  0294  30F4               	movlw	244
  7235  0295  0271               	subwf	INT_DefaultInterruptHandler@time,w
  7236  0296  1803               	skipnc
  7237  0297  2AEB               	goto	i1l255
  7238                           
  7239                           ;ext_int.c: 90: ir_code.n_bits = 0;
  7240  0298  01D8               	clrf	_ir_code
  7241                           
  7242                           ;ext_int.c: 91: ir_code.state = STATE_RECEIVING;
  7243  0299  01D9               	clrf	_ir_code+1
  7244  029A  0AD9               	incf	_ir_code+1,f
  7245                           
  7246                           ;ext_int.c: 92: stats[0] = time;
  7247  029B  0871               	movf	INT_DefaultInterruptHandler@time,w
  7248  029C  00F0               	movwf	??_INT_DefaultInterruptHandler
  7249  029D  0870               	movf	??_INT_DefaultInterruptHandler,w
  7250  029E  0021               	movlb	1	; select bank1
  7251  029F  00C2               	movwf	_stats^(0+128)
  7252                           
  7253                           ;ext_int.c: 93: }
  7254                           ;ext_int.c: 94: break;
  7255  02A0  2AEB               	goto	i1l255
  7256  02A1                     i1l1531:	
  7257                           ;ext_int.c: 95: case STATE_RECEIVING:
  7258                           
  7259                           
  7260                           ;ext_int.c: 97: ir_code.code <<= 1;
  7261  02A1  3001               	movlw	1
  7262  02A2                     u80_25:	
  7263  02A2  0020               	movlb	0	; select bank0
  7264  02A3  35DA               	lslf	_ir_code+2,f
  7265  02A4  0DDB               	rlf	_ir_code+3,f
  7266  02A5  0DDC               	rlf	_ir_code+4,f
  7267  02A6  0DDD               	rlf	_ir_code+5,f
  7268  02A7  0B89               	decfsz	9,f
  7269  02A8  2AA2               	goto	u80_25
  7270                           
  7271                           ;ext_int.c: 98: if (time >= 29 && time <= 41){
  7272  02A9  301D               	movlw	29
  7273  02AA  0271               	subwf	INT_DefaultInterruptHandler@time,w
  7274  02AB  1C03               	skipc
  7275  02AC  2ABC               	goto	i1l1543
  7276  02AD  302A               	movlw	42
  7277  02AE  0271               	subwf	INT_DefaultInterruptHandler@time,w
  7278  02AF  1803               	skipnc
  7279  02B0  2ABC               	goto	i1l1543
  7280                           
  7281                           ;ext_int.c: 99: stats[1+ir_code.n_bits] = time;
  7282  02B1  0871               	movf	INT_DefaultInterruptHandler@time,w
  7283  02B2  00F0               	movwf	??_INT_DefaultInterruptHandler
  7284  02B3  0858               	movf	_ir_code,w
  7285  02B4  3E01               	addlw	1
  7286  02B5  3EC2               	addlw	(low (_stats| 0))& (0+255)
  7287  02B6  0086               	movwf	6
  7288  02B7  0187               	clrf	7
  7289  02B8  0870               	movf	??_INT_DefaultInterruptHandler,w
  7290  02B9  0081               	movwf	1
  7291                           
  7292                           ;ext_int.c: 100: ir_code.code |= 1;
  7293  02BA  145A               	bsf	_ir_code+2,0
  7294  02BB  2ACD               	goto	i1l1549
  7295  02BC                     i1l1543:	
  7296                           ;ext_int.c: 102: } else if (time >= 14 && time <= 20){
  7297                           
  7298                           ;ext_int.c: 101: ir_code.n_bits++;
  7299                           
  7300  02BC  300E               	movlw	14
  7301  02BD  0271               	subwf	INT_DefaultInterruptHandler@time,w
  7302  02BE  1C03               	skipc
  7303  02BF  2ADE               	goto	i1l1561
  7304  02C0  3015               	movlw	21
  7305  02C1  0271               	subwf	INT_DefaultInterruptHandler@time,w
  7306  02C2  1803               	skipnc
  7307  02C3  2ADE               	goto	i1l1561
  7308                           
  7309                           ;ext_int.c: 103: stats[1+ir_code.n_bits] = time;
  7310  02C4  0871               	movf	INT_DefaultInterruptHandler@time,w
  7311  02C5  00F0               	movwf	??_INT_DefaultInterruptHandler
  7312  02C6  0858               	movf	_ir_code,w
  7313  02C7  3E01               	addlw	1
  7314  02C8  3EC2               	addlw	(low (_stats| 0))& (0+255)
  7315  02C9  0086               	movwf	6
  7316  02CA  0187               	clrf	7
  7317  02CB  0870               	movf	??_INT_DefaultInterruptHandler,w
  7318  02CC  0081               	movwf	1
  7319  02CD                     i1l1549:	
  7320                           
  7321                           ;ext_int.c: 104: ir_code.n_bits++;
  7322  02CD  3001               	movlw	1
  7323  02CE  00F0               	movwf	??_INT_DefaultInterruptHandler
  7324  02CF  0870               	movf	??_INT_DefaultInterruptHandler,w
  7325  02D0  07D8               	addwf	_ir_code,f
  7326                           
  7327                           ;ext_int.c: 109: }
  7328                           ;ext_int.c: 110: if (32 == ir_code.n_bits){
  7329                           
  7330                           ;ext_int.c: 108: break;
  7331                           
  7332                           ;ext_int.c: 107: ir_code.state = STATE_RESET;
  7333                           
  7334                           ;ext_int.c: 105: } else {
  7335  02D1  3020               	movlw	32
  7336  02D2  0658               	xorwf	_ir_code,w
  7337  02D3  1D03               	btfss	3,2
  7338  02D4  2AEB               	goto	i1l255
  7339                           
  7340                           ;ext_int.c: 113: if (ir_code.command == ((~ir_code.command_b) & 0xff)){
  7341  02D5  095A               	comf	_ir_code+2,w
  7342  02D6  065B               	xorwf	_ir_code+3,w
  7343  02D7  1D03               	skipz
  7344  02D8  2ADE               	goto	i1l1561
  7345                           
  7346                           ;ext_int.c: 114: ir_code.state = STATE_DONE;
  7347  02D9  3002               	movlw	2
  7348  02DA  00F0               	movwf	??_INT_DefaultInterruptHandler
  7349  02DB  0870               	movf	??_INT_DefaultInterruptHandler,w
  7350  02DC  00D9               	movwf	_ir_code+1
  7351                           
  7352                           ;ext_int.c: 115: } else {
  7353  02DD  2AEB               	goto	i1l255
  7354  02DE                     i1l1561:	
  7355                           ;ext_int.c: 124: default:
  7356                           
  7357                           ;ext_int.c: 123: break;
  7358                           
  7359                           ;ext_int.c: 120: case STATE_DONE:
  7360                           
  7361                           ;ext_int.c: 117: }
  7362                           ;ext_int.c: 118: }
  7363                           ;ext_int.c: 119: break;
  7364                           
  7365                           ;ext_int.c: 116: ir_code.state = STATE_RESET;
  7366                           
  7367                           
  7368                           ;ext_int.c: 126: ir_code.state = STATE_RESET;
  7369  02DE  01D9               	clrf	_ir_code+1
  7370                           
  7371                           ;ext_int.c: 127: }
  7372  02DF  2AEB               	goto	i1l255
  7373  02E0                     i1l1563:	
  7374  02E0  0859               	movf	_ir_code+1,w
  7375                           
  7376                           ; Switch size 1, requested type "space"
  7377                           ; Number of cases is 3, Range of values is 0 to 2
  7378                           ; switch strategies available:
  7379                           ; Name         Instructions Cycles
  7380                           ; simple_byte           10     6 (average)
  7381                           ; direct_byte           12     6 (fixed)
  7382                           ; jumptable            260     6 (fixed)
  7383                           ;	Chosen strategy is simple_byte
  7384  02E1  3A00               	xorlw	0	; case 0
  7385  02E2  1903               	skipnz
  7386  02E3  2A90               	goto	i1l1521
  7387  02E4  3A01               	xorlw	1	; case 1
  7388  02E5  1903               	skipnz
  7389  02E6  2AA1               	goto	i1l1531
  7390  02E7  3A03               	xorlw	3	; case 2
  7391  02E8  1903               	skipnz
  7392  02E9  2AEB               	goto	i1l255
  7393  02EA  2ADE               	goto	i1l1561
  7394  02EB                     i1l255:	
  7395                           
  7396                           ;ext_int.c: 129: INTCONbits.INTF = 0;
  7397  02EB  108B               	bcf	11,1	;volatile
  7398  02EC  0008               	return
  7399  02ED                     __end_of_INT_DefaultInterruptHandler:	
  7400  007E                     btemp	set	126	;btemp
  7401  007E                     int$flags	set	126
  7402  007E                     wtemp0	set	126


Data Sizes:
    Strings     55
    Constant    0
    Data        38
    BSS         59
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     43      76
    BANK1            80      0      67
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_3(CODE[15]), STR_2(CODE[19]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    process_remote_command@code	PTR struct . size(1) Largest target is 6
		 -> ir_code(BANK0[6]), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->_process_remote_command
    _startUp->_setLEDColor
    _process_remote_command->_setLEDColor
    _setCurrent->___aldiv
    _selectSomething->_setLEDColor
    _selectFrequency->_setLEDColor
    _selectCurrent->_setLEDColor
    _printf->_putch
    _putch->_EUSART_Write
    _battery_voltage->___aldiv
    ___aldiv->___awdiv
    _lowBattery->_setLEDColor

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INT_CallBack->_INT_DefaultInterruptHandler

Critical Paths under _main in BANK0

    _main->_process_remote_command
    _startUp->_setLEDColor
    _process_remote_command->_setCurrent
    _setCurrent->___lldiv
    ___lldiv->___lmul
    _selectSomething->_setLEDColor
    _selectFrequency->_printf
    _selectCurrent->_printf
    _battery_voltage->___aldiv
    ___aldiv->___awdiv
    _lowBattery->_setLEDColor
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   29367
                                             42 BANK0      1     1      0
                     _DAC_Initialize
                    _OPA1_Initialize
                    _OPA2_Initialize
                  _SYSTEM_Initialize
                    _battery_voltage
                            _initLED
                         _lowBattery
             _process_remote_command
                            _startUp
 ---------------------------------------------------------------------------------
 (1) _startUp                                              4     4      0    3762
                                              2 BANK0      4     4      0
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (1) _process_remote_command                               4     4      0   20390
                                              5 COMMON     1     1      0
                                             39 BANK0      3     3      0
                    _battery_voltage
                             _printf
                      _selectCurrent
                    _selectFrequency
                    _selectSomething
                         _setCurrent
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (2) _setCurrent                                          14    10      4    3159
                                             25 BANK0     14    10      4
                            ___aldiv
                            ___awdiv
                            ___lldiv
                             ___lmul
                    _battery_voltage (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     374
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     479
                                              3 COMMON     1     1      0
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     683
                                              3 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _selectSomething                                      2     2      0    3694
                                              2 BANK0      2     2      0
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (2) _selectFrequency                                      2     2      0    4181
                                              7 BANK0      2     2      0
                             _printf
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (2) _selectCurrent                                        2     2      0    4181
                                              7 BANK0      2     2      0
                             _printf
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (3) _printf                                              19    17      2     487
                                              0 BANK0      7     5      2
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      62
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART_Write                                         1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _battery_voltage                                      2     0      2     921
                                             22 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     921
                                              4 COMMON     1     1      0
                                              8 BANK0     14     6      8
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _lowBattery                                           2     2      0    3694
                                              2 BANK0      2     2      0
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (2) _setLEDColor                                          4     2      2    3694
                                              3 COMMON     2     2      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initLED                                              1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     600
                     _DAC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
                    _OPA1_Initialize
                    _OPA2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OPA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OPA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     150
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     150
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     450
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     150
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     150
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     150
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0     200
                                              2 COMMON     1     1      0
                            _INT_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT_ISR                                              0     0      0     200
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT_CallBack                                         0     0      0     200
                   Absolute function *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _INT_DefaultInterruptHandler                          2     2      0     200
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DAC_Initialize
   _OPA1_Initialize
   _OPA2_Initialize
   _SYSTEM_Initialize
     _DAC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OPA1_Initialize
     _OPA2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _battery_voltage
     ___aldiv
       ___awdiv (ARG)
   _initLED
   _lowBattery
     _setLEDColor
   _process_remote_command
     _battery_voltage
       ___aldiv
         ___awdiv (ARG)
     _printf
       _putch
         _EUSART_Write
     _selectCurrent
       _printf
         _putch
           _EUSART_Write
       _setLEDColor
     _selectFrequency
       _printf
         _putch
           _EUSART_Write
       _setLEDColor
     _selectSomething
       _setLEDColor
     _setCurrent
       ___aldiv
         ___awdiv (ARG)
       ___awdiv
       ___lldiv
         ___lmul (ARG)
       ___lmul
       _battery_voltage (ARG)
         ___aldiv
           ___awdiv (ARG)
     _setLEDColor
   _startUp
     _setLEDColor

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      9A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2B      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      43       8       83.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      9A      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jul 18 21:49:09 2020

                                  __CFG_CP$OFF 0000                                   ___awdiv@sign 0025  
                      __end_of_OPA1_Initialize 06FC                                _timer0ReloadVal 007A  
                                  __CFG_LVP$ON 0000                                            l432 050C  
                                          l504 04B6                                            l435 0516  
                                          l445 063F                                            l197 06A6  
                                          l475 00AC                                            l578 0215  
                                          _PR2 001B                 ?_EUSART_SetFramingErrorHandler 0020  
                              _TMR2_Initialize 06AD                                   __CFG_BORV$LO 0000  
                                          wreg 0009                       __size_of_selectFrequency 002A  
                                         l2103 027D                                           l2041 063A  
                                         l2121 0356                                           l2051 061A  
                                         l2131 035E                                           l2115 034B  
                                         l2133 036A                                           l2301 0200  
                                         l2143 0385                                           l2055 04DD  
                                         l2147 038D                                           l2139 037C  
                                         l2171 0337                                           l2059 04E7  
                                         l2403 00C8                                           l2085 0236  
                                         l2077 0226                                           l2157 02FE  
                                         l2421 00F7                                           l2413 00E8  
                                         l2405 00DB                                           l2095 0264  
                                         l2087 0244                                           l2167 032C  
                                         l2159 030C                                           l2423 00FB  
                                         l2425 00FF                                           l2417 00EE  
                                         l2441 0140                                           l2361 03F2  
                                         l2099 026F                                           l2435 0110  
                                         l2371 0055                                           l2381 008A  
                                         l2391 00B3                                           l2439 0113  
                                         l2367 0428                                           l2455 04C8  
                                         l2297 01FB                                           l2395 00BC  
                                         l2379 0076                                           STR_1 064D  
                                         STR_2 0662                                           STR_3 0675  
                                         u2015 04C3                                           u2107 0573  
                                         u2117 059B                                           u2037 0403  
                                         _LATA 010C                                           _LATB 010D  
                              __end_of_INT_ISR 0700                                           u2127 0543  
                                         u2047 0413                                           _LATC 010E  
                                         u2137 0557                                           u2057 0153  
                                         u2067 039F                                           u1605 0245  
                                         u2077 03B3                                           u1525 04E8  
                                         u1615 0259                                           u2087 03C7  
                                         u1535 04EF                                           u1625 0265  
                                         u2097 03DB                                           u1705 036B  
                                         u1715 0375                                           u1725 037D  
                                         u1805 032D                                           u1585 0239  
                                         u1905 006D                                           u1685 0361  
                                         u1765 0301                                           u1845 01CD  
                                         u1925 00A3                                           u1855 01F4  
                                         u1785 030D                                           u1795 0321  
                                         u1875 03F0                                           u1885 0426  
                                         _TMR0 0015                                           _TMR2 001A  
                      __end_of_OPA2_Initialize 06F8                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         _flag 0053                                           _main 04A2  
                                         _duty 0052                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
          __end_of_INT_DefaultInterruptHandler 02ED                    _INT_DefaultInterruptHandler 0286  
                                         start 001A                                  __CFG_IESO$OFF 0000  
              __end_of_INT_SetInterruptHandler 06CF                                  __CFG_MCLRE$ON 0000  
                      __end_of_TMR0_Initialize 06A5                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0008                  __end_of_OSCILLATOR_Initialize 06BD  
                              __end_of___aldiv 0286                                          ?_main 0070  
                              __end_of___awdiv 0392                                          _ADRES 009B  
                                __CFG_WDTE$OFF 0000                                __end_of___lldiv 0340  
                              ___awdiv@divisor 0020                                          _T2CON 001C  
                                        i1l130 0015                                          i1l126 0010  
                                        i1l255 02EB                                   ?_setLEDColor 0020  
                              ___awdiv@counter 0024                       __size_of_selectSomething 0051  
                                        u80_25 02A2                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _RXPPS 0E24                            ___lmul@multiplicand 0024  
                              __end_of_initLED 046F                        __end_of_PIN_MANAGER_IOC 0701  
                               _WDT_Initialize 06F0                                          _putch 06E7  
                                        _stats 00C2                                 __CFG_BOREN$OFF 0000  
                                        pclath 000A                                __end_of_startUp 042B  
                                        status 0003                        ?_process_remote_command 0070  
                                        wtemp0 007E                               ??_DAC_Initialize 0073  
                              __initialization 001C                                   __end_of_main 04D4  
                        __end_of_selectCurrent 05B1                                 ??_EUSART_Write 0073  
                      __end_of_TMR2_Initialize 06B5                                 __CFG_LPBOR$OFF 0000  
                  ?_INTERRUPT_InterruptManager 0070                               ?_OPA1_Initialize 0070  
                                       ??_main 004A                       __size_of_battery_voltage 002E  
                               __CFG_PLLEN$OFF 0000                         __end_of_WDT_Initialize 06F4  
                                    ??_INT_ISR 0072              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 0064                                         _CCPR1L 0291  
                             ___awdiv@dividend 0022                                 __CFG_ZCDDIS$ON 0000  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RA5PPS 0E95                                         _RC1STA 019D  
                                       _RC4PPS 0EA4                                         _RB7PPS 0E9F  
                                       _RC5PPS 0EA5                                         i1l1521 0290  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       i1l1531 02A1                                         _ODCONC 028E  
                                       i1l1543 02BC                                         i1l1561 02DE  
                                       i1l1563 02E0                 __end_of_process_remote_command 0161  
                                       i1l1549 02CD                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       _FVRCON 0117                                         _INTPPS 0E10  
                             ?_OPA2_Initialize 0070                                         _OSCCON 0099  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                              ??_selectFrequency 0027  
                               __CFG_PWRTE$OFF 0000                                         _Vdd_mv 004F  
                                       ___lmul 04D4                                      ??___aldiv 0074  
                                    ??___awdiv 0073                                 __CFG_STVREN$ON 0000  
                                    ??___lldiv 0073                               ?_TMR0_Initialize 0070  
                             ___awdiv@quotient 0026                                         _printf 0615  
                                ?_INT_CallBack 0070                                      ??_initLED 0073  
                             setCurrent@Vdd_mv 003B                                ?_WDT_Initialize 0070  
             __size_of_INT_SetInterruptHandler 0006                                      ??_startUp 0022  
      INT_SetInterruptHandler@InterruptHandler 0020                               ?_PIN_MANAGER_IOC 0070  
                            ??_selectSomething 0022                              _SYSTEM_Initialize 05F7  
                      __end_of__initialization 0048                             ?_SYSTEM_Initialize 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK0 06EC  
                                 __pidataBANK1 05D5                            ??_SYSTEM_Initialize 0073  
                                __end_of_putch 06EC                               ?_TMR2_Initialize 0070  
                               ??_INT_CallBack 0072                    __size_of_EXT_INT_Initialize 000C  
                               _OPTION_REGbits 0095                           __size_of_setLEDColor 001B  
              ??_EUSART_SetOverrunErrorHandler 0073                              ??_battery_voltage 0075  
                    __end_of_SYSTEM_Initialize 0615                                        ??_putch 0074  
                                   __pbssBANK0 004B                                     __pbssBANK1 00C2  
                         __end_of_EUSART_Write 06AD                                     __pmaintext 04A2  
                                      ?___lmul 0020                                __CFG_PPS1WAY$ON 0000  
                                   __pintentry 0004                                 ___lmul@product 0028  
                                      ?_printf 0020                                        _OPA1CON 0511  
                                      _OPA2CON 0515                                        _LED_red 0056  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                                      _INT_ISR 06FC                              _maxFrequencyIndex 0068  
                                      _OSCSTAT 009A                                        _OSCTUNE 0098  
                                      _PWM3DCH 0618                                        _PWM4DCH 061B  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                       ??_EUSART_SetErrorHandler 0073  
                              _maxCurrentIndex 006A                                        _Vdac_mv 005E  
                                      ___aldiv 0204                                        ___awdiv 0340  
                              __size_of___lmul 0030                                        ___lldiv 02ED  
                                      __ptext1 03E3                                        __ptext2 004C  
                                      __ptext3 0161                                        __ptext4 04D4  
                                      __ptext5 02ED                                        __ptext6 0340  
                                      __ptext7 0392                                        __ptext8 055F  
                                      __ptext9 0589                                __size_of_printf 001D  
                                      _initLED 042B                                        _ir_code 0058  
                                   _lowBattery 0532                          _OSCILLATOR_Initialize 06B5  
                                    _T2CONbits 001C                                        _current 0078  
                             ___aldiv@dividend 002C                       ??_PIN_MANAGER_Initialize 0073  
                      _INT_SetInterruptHandler 06C9                                _selectFrequency 055F  
                                      _startUp 03E3                     __size_of_SYSTEM_Initialize 001E  
                                      clrloop0 06C4                           end_of_initialization 0048  
                                   _setCurrent 0161          __end_of_EUSART_SetOverrunErrorHandler 06D5  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 06CF  
                                    _LED_green 0055                                        init_ram 06BD  
                                      initloop 06BE                           __end_of_INT_CallBack 069B  
                            _EUSART_Initialize 05B1                                 _frequencyIndex 004B  
                              ___lldiv@divisor 002C                               __CFG_CLKOUTEN$ON 0000  
                               _frequencyValue 00B6                                ___lldiv@counter 0038  
                           ?_EUSART_Initialize 0070                                        printf@c 0026  
                                      printf@f 0020                               ___aldiv@quotient 0032  
                              setLEDColor@blue 0021                            ??_EUSART_Initialize 0073  
                             ??_WDT_Initialize 0073                                _selectSomething 0392  
                             __CFG_FOSC$INTOSC 0000                          __size_of_EUSART_Write 0008  
                     __size_of_OPA1_Initialize 0004                __size_of_EUSART_SetErrorHandler 0006  
                       __size_of_selectCurrent 0028                      __end_of_EUSART_Initialize 05D5  
                                  _CCP1CONbits 0293                       __size_of_OPA2_Initialize 0004  
                               __end_of___lmul 0504                     _EUSART_DefaultErrorHandler 0000  
                              _battery_voltage 0504                                   _EUSART_Write 06A5  
                       ?_OSCILLATOR_Initialize 0070                        __end_of_selectFrequency 0589  
                    ??_INT_SetInterruptHandler 0073                        __size_of_DAC_Initialize 0006  
                                  ?_lowBattery 0070                                 __end_of_printf 0632  
                          start_initialization 001C                       __size_of_TMR0_Initialize 000A  
              __size_of_PIN_MANAGER_Initialize 0033                                    putch@txData 0074  
                                  ?_setCurrent 0039                       __size_of_PIN_MANAGER_IOC 0001  
                 ?_INT_DefaultInterruptHandler 0070                 ?_EUSART_SetOverrunErrorHandler 0020  
                   _EUSART_FramingErrorHandler 0066                        __end_of_selectSomething 03E3  
                                     ??___lmul 0073                         _EUSART_SetErrorHandler 06DB  
                                  _CCPTMRSbits 029E                                  _selectCurrent 0589  
                                  __pdataBANK0 0068                                    __pdataBANK1 00A0  
                   __end_of_EXT_INT_Initialize 0690                                       ??_printf 0022  
                                ??_setLEDColor 0073                                    __pbssCOMMON 0076  
                                    ___latbits 0001                       ??_process_remote_command 0047  
                                     ?_INT_ISR 0070                                  __pcstackBANK0 0020  
                     __size_of_TMR2_Initialize 0008                          __size_of_INT_CallBack 000B  
                   __size_of_EUSART_Initialize 0024                                   _currentIndex 004D  
                            ??_OPA1_Initialize 0073                                   _currentValue 00A0  
                                    __pnvBANK0 0060                            __size_of_lowBattery 002D  
                       _PIN_MANAGER_Initialize 046F                        __end_of_battery_voltage 0532  
                ??_INT_DefaultInterruptHandler 0070                                       ?___aldiv 0028  
                               ?_selectCurrent 0070                                       ?___awdiv 0020  
                                     ?___lldiv 002C                                       _DAC1CON0 0118  
                                     _DAC1CON1 0119                   ??_INTERRUPT_InterruptManager 0072  
                          __size_of_setCurrent 00A3                              ??_OPA2_Initialize 0073  
                             ?_selectFrequency 0070                                   _INT_CallBack 0690  
                                     _BAUD1CON 019F                                       ?_initLED 0070  
                                    _frequency 0079                                       ?_startUp 0070  
                          __end_of_setLEDColor 064D                                      _microamps 0076  
                               __size_of_putch 0005                                ___aldiv@divisor 0028  
                            ??_TMR0_Initialize 0073                                ___aldiv@counter 0030  
       EUSART_SetErrorHandler@interruptHandler 0020                                       _LED_blue 0054  
                                    clear_ram0 06C3                              _eusartRxLastError 0057  
          __size_of_INTERRUPT_InterruptManager 0016                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0073                               ?_selectSomething 0070  
                               setLEDColor@red 0074              _EUSART_DefaultOverrunErrorHandler 0000  
                            ??_PIN_MANAGER_IOC 0070                                     _ADCON0bits 009D  
                               _DAC_Initialize 06E1           __size_of_INT_DefaultInterruptHandler 0067  
              __size_of_process_remote_command 0115                               __size_of_INT_ISR 0004  
                            ___lmul@multiplier 0020                              ??_TMR2_Initialize 0073  
                              ??_selectCurrent 0027                               ?_battery_voltage 0036  
                      ??_OSCILLATOR_Initialize 0073                            _EUSART_ErrorHandler 0062  
                             __size_of___aldiv 0082                               __size_of___awdiv 0052  
                       __end_of_DAC_Initialize 06E7                               __size_of___lldiv 0053  
                                 ??_lowBattery 0022                                    _setLEDColor 0632  
                           setCurrent@DACValue 0045                               __size_of_initLED 0044  
                                     __ptext10 0615                                       __ptext11 06E7  
                                     __ptext20 06AD                                       __ptext12 06A5  
                                     __ptext21 069B                                       __ptext13 0504  
                                     __ptext30 06D5                                       __ptext22 046F  
                                     __ptext14 0204                                       __ptext31 06DB  
                                     __ptext23 06B5                                       __ptext15 0532  
                                     __ptext32 06E1                                       __ptext24 06F4  
                                     __ptext16 0632                                       __ptext25 06F8  
                                     __ptext17 042B                                       __ptext34 0700  
                                     __ptext26 0684                                       __ptext18 05F7  
                                     __ptext35 06FC                                       __ptext27 06C9  
                                     __ptext19 06F0                                       __ptext36 0690  
                                     __ptext28 05B1                                       __ptext37 0286  
                                     __ptext29 06CF                               __size_of_startUp 0048  
                                 ??_setCurrent 003D                                 _interfaceState 0051  
                                __size_of_main 0032                        ?_EUSART_SetErrorHandler 0020  
                       _process_remote_command 004C                                     _RC1STAbits 019D  
                           __end_of_lowBattery 055F  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 001A  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 06DB  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 06D5  
                              ?_DAC_Initialize 0070                             __end_of_setCurrent 0204  
                                   _INTCONbits 000B                INT_DefaultInterruptHandler@time 0071  
                                  _PWM3DCLbits 0617                                _OPA1_Initialize 06F8  
                                  _PWM4DCLbits 061A                                     _FVRCONbits 0117  
                         _INT_InterruptHandler 0060                                    _PWM3CONbits 0619  
                                  _PWM4CONbits 061C                             _EXT_INT_Initialize 0684  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                             ___lldiv@dividend 0030                        ?_PIN_MANAGER_Initialize 0070  
                   process_remote_command@code 0075                 __end_of_EUSART_SetErrorHandler 06E1  
                          ?_EXT_INT_Initialize 0070                                _OPA2_Initialize 06F4  
                                     printf@ap 0025  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                     ?_INT_SetInterruptHandler 0020                                       startUp@i 0024  
                                __pstringtext1 064D                                  __pstringtext2 0662  
                                __pstringtext3 0675                                  __pstringtext4 0000  
                         ??_EXT_INT_Initialize 0073                                     _OPTION_REG 0095  
                             setLEDColor@green 0020                               ___lldiv@quotient 0034  
                              _TMR0_Initialize 069B                            setCurrent@microamps 0039  
                                 ___aldiv@sign 0031                                     _TX1STAbits 019E  
                           EUSART_Write@txData 0073                 __end_of_PIN_MANAGER_Initialize 04A2  
                              _PIN_MANAGER_IOC 0700  
