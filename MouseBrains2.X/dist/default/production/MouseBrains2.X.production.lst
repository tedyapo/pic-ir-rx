

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Jul 20 22:38:50 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16LF1708
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	intentry,global,class=CODE,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2
    67                           	psect	text43,local,class=CODE,merge=1,delta=2
    68                           	psect	text44,local,class=CODE,merge=1,delta=2
    69                           	psect	text45,local,class=CODE,merge=1,delta=2
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    71                           	dabs	1,0x7E,2
    72  0000                     
    73                           ; Version 2.20
    74                           ; Generated 09/04/2020 GMT
    75                           ; 
    76                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16LF1708 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001B                     	;# 
   133  001C                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  0111                     	;# 
   156  0112                     	;# 
   157  0113                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0117                     	;# 
   162  0118                     	;# 
   163  0119                     	;# 
   164  011C                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  018E                     	;# 
   168  0191                     	;# 
   169  0191                     	;# 
   170  0192                     	;# 
   171  0193                     	;# 
   172  0193                     	;# 
   173  0194                     	;# 
   174  0195                     	;# 
   175  0196                     	;# 
   176  0199                     	;# 
   177  0199                     	;# 
   178  0199                     	;# 
   179  019A                     	;# 
   180  019A                     	;# 
   181  019A                     	;# 
   182  019B                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019C                     	;# 
   188  019C                     	;# 
   189  019C                     	;# 
   190  019D                     	;# 
   191  019D                     	;# 
   192  019D                     	;# 
   193  019E                     	;# 
   194  019E                     	;# 
   195  019E                     	;# 
   196  019F                     	;# 
   197  019F                     	;# 
   198  019F                     	;# 
   199  019F                     	;# 
   200  019F                     	;# 
   201  020C                     	;# 
   202  020D                     	;# 
   203  020E                     	;# 
   204  0211                     	;# 
   205  0211                     	;# 
   206  0212                     	;# 
   207  0212                     	;# 
   208  0213                     	;# 
   209  0213                     	;# 
   210  0214                     	;# 
   211  0214                     	;# 
   212  0215                     	;# 
   213  0215                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0216                     	;# 
   217  0216                     	;# 
   218  0217                     	;# 
   219  0217                     	;# 
   220  028C                     	;# 
   221  028D                     	;# 
   222  028E                     	;# 
   223  0291                     	;# 
   224  0291                     	;# 
   225  0292                     	;# 
   226  0293                     	;# 
   227  0293                     	;# 
   228  0298                     	;# 
   229  0298                     	;# 
   230  0299                     	;# 
   231  029A                     	;# 
   232  029A                     	;# 
   233  029E                     	;# 
   234  030C                     	;# 
   235  030D                     	;# 
   236  030E                     	;# 
   237  038C                     	;# 
   238  038D                     	;# 
   239  038E                     	;# 
   240  0391                     	;# 
   241  0392                     	;# 
   242  0393                     	;# 
   243  0394                     	;# 
   244  0395                     	;# 
   245  0396                     	;# 
   246  0397                     	;# 
   247  0398                     	;# 
   248  0399                     	;# 
   249  0415                     	;# 
   250  0416                     	;# 
   251  0417                     	;# 
   252  041C                     	;# 
   253  041D                     	;# 
   254  041E                     	;# 
   255  0511                     	;# 
   256  0515                     	;# 
   257  0617                     	;# 
   258  0618                     	;# 
   259  0619                     	;# 
   260  0619                     	;# 
   261  061A                     	;# 
   262  061B                     	;# 
   263  061C                     	;# 
   264  061C                     	;# 
   265  0691                     	;# 
   266  0692                     	;# 
   267  0693                     	;# 
   268  0694                     	;# 
   269  0695                     	;# 
   270  0696                     	;# 
   271  0697                     	;# 
   272  0698                     	;# 
   273  0699                     	;# 
   274  069A                     	;# 
   275  069B                     	;# 
   276  069C                     	;# 
   277  069D                     	;# 
   278  069E                     	;# 
   279  069F                     	;# 
   280  0E0F                     	;# 
   281  0E10                     	;# 
   282  0E11                     	;# 
   283  0E12                     	;# 
   284  0E13                     	;# 
   285  0E14                     	;# 
   286  0E15                     	;# 
   287  0E17                     	;# 
   288  0E20                     	;# 
   289  0E21                     	;# 
   290  0E22                     	;# 
   291  0E24                     	;# 
   292  0E25                     	;# 
   293  0E28                     	;# 
   294  0E29                     	;# 
   295  0E2A                     	;# 
   296  0E2B                     	;# 
   297  0E90                     	;# 
   298  0E91                     	;# 
   299  0E92                     	;# 
   300  0E94                     	;# 
   301  0E95                     	;# 
   302  0E9C                     	;# 
   303  0E9D                     	;# 
   304  0E9E                     	;# 
   305  0E9F                     	;# 
   306  0EA0                     	;# 
   307  0EA1                     	;# 
   308  0EA2                     	;# 
   309  0EA3                     	;# 
   310  0EA4                     	;# 
   311  0EA5                     	;# 
   312  0EA6                     	;# 
   313  0EA7                     	;# 
   314  0F0F                     	;# 
   315  0F10                     	;# 
   316  0F11                     	;# 
   317  0F12                     	;# 
   318  0F13                     	;# 
   319  0F14                     	;# 
   320  0F15                     	;# 
   321  0F16                     	;# 
   322  0F17                     	;# 
   323  0F18                     	;# 
   324  0F19                     	;# 
   325  0F1A                     	;# 
   326  0F1B                     	;# 
   327  0F1C                     	;# 
   328  0F1D                     	;# 
   329  0F1E                     	;# 
   330  0F1F                     	;# 
   331  0F20                     	;# 
   332  0F21                     	;# 
   333  0F22                     	;# 
   334  0F23                     	;# 
   335  0F24                     	;# 
   336  0F25                     	;# 
   337  0F26                     	;# 
   338  0F27                     	;# 
   339  0F28                     	;# 
   340  0F29                     	;# 
   341  0F2A                     	;# 
   342  0F2B                     	;# 
   343  0F2C                     	;# 
   344  0F2D                     	;# 
   345  0FE4                     	;# 
   346  0FE5                     	;# 
   347  0FE6                     	;# 
   348  0FE7                     	;# 
   349  0FE8                     	;# 
   350  0FE9                     	;# 
   351  0FEA                     	;# 
   352  0FEB                     	;# 
   353  0FED                     	;# 
   354  0FEE                     	;# 
   355  0FEF                     	;# 
   356  0000                     	;# 
   357  0001                     	;# 
   358  0002                     	;# 
   359  0003                     	;# 
   360  0004                     	;# 
   361  0005                     	;# 
   362  0006                     	;# 
   363  0007                     	;# 
   364  0008                     	;# 
   365  0009                     	;# 
   366  000A                     	;# 
   367  000B                     	;# 
   368  000C                     	;# 
   369  000D                     	;# 
   370  000E                     	;# 
   371  0011                     	;# 
   372  0012                     	;# 
   373  0013                     	;# 
   374  0015                     	;# 
   375  0016                     	;# 
   376  0016                     	;# 
   377  0017                     	;# 
   378  0018                     	;# 
   379  0019                     	;# 
   380  001A                     	;# 
   381  001B                     	;# 
   382  001C                     	;# 
   383  008C                     	;# 
   384  008D                     	;# 
   385  008E                     	;# 
   386  0091                     	;# 
   387  0092                     	;# 
   388  0093                     	;# 
   389  0095                     	;# 
   390  0096                     	;# 
   391  0097                     	;# 
   392  0098                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009B                     	;# 
   397  009C                     	;# 
   398  009D                     	;# 
   399  009E                     	;# 
   400  009F                     	;# 
   401  010C                     	;# 
   402  010D                     	;# 
   403  010E                     	;# 
   404  0111                     	;# 
   405  0112                     	;# 
   406  0113                     	;# 
   407  0114                     	;# 
   408  0115                     	;# 
   409  0116                     	;# 
   410  0117                     	;# 
   411  0118                     	;# 
   412  0119                     	;# 
   413  011C                     	;# 
   414  018C                     	;# 
   415  018D                     	;# 
   416  018E                     	;# 
   417  0191                     	;# 
   418  0191                     	;# 
   419  0192                     	;# 
   420  0193                     	;# 
   421  0193                     	;# 
   422  0194                     	;# 
   423  0195                     	;# 
   424  0196                     	;# 
   425  0199                     	;# 
   426  0199                     	;# 
   427  0199                     	;# 
   428  019A                     	;# 
   429  019A                     	;# 
   430  019A                     	;# 
   431  019B                     	;# 
   432  019B                     	;# 
   433  019B                     	;# 
   434  019B                     	;# 
   435  019B                     	;# 
   436  019C                     	;# 
   437  019C                     	;# 
   438  019C                     	;# 
   439  019D                     	;# 
   440  019D                     	;# 
   441  019D                     	;# 
   442  019E                     	;# 
   443  019E                     	;# 
   444  019E                     	;# 
   445  019F                     	;# 
   446  019F                     	;# 
   447  019F                     	;# 
   448  019F                     	;# 
   449  019F                     	;# 
   450  020C                     	;# 
   451  020D                     	;# 
   452  020E                     	;# 
   453  0211                     	;# 
   454  0211                     	;# 
   455  0212                     	;# 
   456  0212                     	;# 
   457  0213                     	;# 
   458  0213                     	;# 
   459  0214                     	;# 
   460  0214                     	;# 
   461  0215                     	;# 
   462  0215                     	;# 
   463  0215                     	;# 
   464  0215                     	;# 
   465  0216                     	;# 
   466  0216                     	;# 
   467  0217                     	;# 
   468  0217                     	;# 
   469  028C                     	;# 
   470  028D                     	;# 
   471  028E                     	;# 
   472  0291                     	;# 
   473  0291                     	;# 
   474  0292                     	;# 
   475  0293                     	;# 
   476  0293                     	;# 
   477  0298                     	;# 
   478  0298                     	;# 
   479  0299                     	;# 
   480  029A                     	;# 
   481  029A                     	;# 
   482  029E                     	;# 
   483  030C                     	;# 
   484  030D                     	;# 
   485  030E                     	;# 
   486  038C                     	;# 
   487  038D                     	;# 
   488  038E                     	;# 
   489  0391                     	;# 
   490  0392                     	;# 
   491  0393                     	;# 
   492  0394                     	;# 
   493  0395                     	;# 
   494  0396                     	;# 
   495  0397                     	;# 
   496  0398                     	;# 
   497  0399                     	;# 
   498  0415                     	;# 
   499  0416                     	;# 
   500  0417                     	;# 
   501  041C                     	;# 
   502  041D                     	;# 
   503  041E                     	;# 
   504  0511                     	;# 
   505  0515                     	;# 
   506  0617                     	;# 
   507  0618                     	;# 
   508  0619                     	;# 
   509  0619                     	;# 
   510  061A                     	;# 
   511  061B                     	;# 
   512  061C                     	;# 
   513  061C                     	;# 
   514  0691                     	;# 
   515  0692                     	;# 
   516  0693                     	;# 
   517  0694                     	;# 
   518  0695                     	;# 
   519  0696                     	;# 
   520  0697                     	;# 
   521  0698                     	;# 
   522  0699                     	;# 
   523  069A                     	;# 
   524  069B                     	;# 
   525  069C                     	;# 
   526  069D                     	;# 
   527  069E                     	;# 
   528  069F                     	;# 
   529  0E0F                     	;# 
   530  0E10                     	;# 
   531  0E11                     	;# 
   532  0E12                     	;# 
   533  0E13                     	;# 
   534  0E14                     	;# 
   535  0E15                     	;# 
   536  0E17                     	;# 
   537  0E20                     	;# 
   538  0E21                     	;# 
   539  0E22                     	;# 
   540  0E24                     	;# 
   541  0E25                     	;# 
   542  0E28                     	;# 
   543  0E29                     	;# 
   544  0E2A                     	;# 
   545  0E2B                     	;# 
   546  0E90                     	;# 
   547  0E91                     	;# 
   548  0E92                     	;# 
   549  0E94                     	;# 
   550  0E95                     	;# 
   551  0E9C                     	;# 
   552  0E9D                     	;# 
   553  0E9E                     	;# 
   554  0E9F                     	;# 
   555  0EA0                     	;# 
   556  0EA1                     	;# 
   557  0EA2                     	;# 
   558  0EA3                     	;# 
   559  0EA4                     	;# 
   560  0EA5                     	;# 
   561  0EA6                     	;# 
   562  0EA7                     	;# 
   563  0F0F                     	;# 
   564  0F10                     	;# 
   565  0F11                     	;# 
   566  0F12                     	;# 
   567  0F13                     	;# 
   568  0F14                     	;# 
   569  0F15                     	;# 
   570  0F16                     	;# 
   571  0F17                     	;# 
   572  0F18                     	;# 
   573  0F19                     	;# 
   574  0F1A                     	;# 
   575  0F1B                     	;# 
   576  0F1C                     	;# 
   577  0F1D                     	;# 
   578  0F1E                     	;# 
   579  0F1F                     	;# 
   580  0F20                     	;# 
   581  0F21                     	;# 
   582  0F22                     	;# 
   583  0F23                     	;# 
   584  0F24                     	;# 
   585  0F25                     	;# 
   586  0F26                     	;# 
   587  0F27                     	;# 
   588  0F28                     	;# 
   589  0F29                     	;# 
   590  0F2A                     	;# 
   591  0F2B                     	;# 
   592  0F2C                     	;# 
   593  0F2D                     	;# 
   594  0FE4                     	;# 
   595  0FE5                     	;# 
   596  0FE6                     	;# 
   597  0FE7                     	;# 
   598  0FE8                     	;# 
   599  0FE9                     	;# 
   600  0FEA                     	;# 
   601  0FEB                     	;# 
   602  0FED                     	;# 
   603  0FEE                     	;# 
   604  0FEF                     	;# 
   605  0000                     	;# 
   606  0001                     	;# 
   607  0002                     	;# 
   608  0003                     	;# 
   609  0004                     	;# 
   610  0005                     	;# 
   611  0006                     	;# 
   612  0007                     	;# 
   613  0008                     	;# 
   614  0009                     	;# 
   615  000A                     	;# 
   616  000B                     	;# 
   617  000C                     	;# 
   618  000D                     	;# 
   619  000E                     	;# 
   620  0011                     	;# 
   621  0012                     	;# 
   622  0013                     	;# 
   623  0015                     	;# 
   624  0016                     	;# 
   625  0016                     	;# 
   626  0017                     	;# 
   627  0018                     	;# 
   628  0019                     	;# 
   629  001A                     	;# 
   630  001B                     	;# 
   631  001C                     	;# 
   632  008C                     	;# 
   633  008D                     	;# 
   634  008E                     	;# 
   635  0091                     	;# 
   636  0092                     	;# 
   637  0093                     	;# 
   638  0095                     	;# 
   639  0096                     	;# 
   640  0097                     	;# 
   641  0098                     	;# 
   642  0099                     	;# 
   643  009A                     	;# 
   644  009B                     	;# 
   645  009B                     	;# 
   646  009C                     	;# 
   647  009D                     	;# 
   648  009E                     	;# 
   649  009F                     	;# 
   650  010C                     	;# 
   651  010D                     	;# 
   652  010E                     	;# 
   653  0111                     	;# 
   654  0112                     	;# 
   655  0113                     	;# 
   656  0114                     	;# 
   657  0115                     	;# 
   658  0116                     	;# 
   659  0117                     	;# 
   660  0118                     	;# 
   661  0119                     	;# 
   662  011C                     	;# 
   663  018C                     	;# 
   664  018D                     	;# 
   665  018E                     	;# 
   666  0191                     	;# 
   667  0191                     	;# 
   668  0192                     	;# 
   669  0193                     	;# 
   670  0193                     	;# 
   671  0194                     	;# 
   672  0195                     	;# 
   673  0196                     	;# 
   674  0199                     	;# 
   675  0199                     	;# 
   676  0199                     	;# 
   677  019A                     	;# 
   678  019A                     	;# 
   679  019A                     	;# 
   680  019B                     	;# 
   681  019B                     	;# 
   682  019B                     	;# 
   683  019B                     	;# 
   684  019B                     	;# 
   685  019C                     	;# 
   686  019C                     	;# 
   687  019C                     	;# 
   688  019D                     	;# 
   689  019D                     	;# 
   690  019D                     	;# 
   691  019E                     	;# 
   692  019E                     	;# 
   693  019E                     	;# 
   694  019F                     	;# 
   695  019F                     	;# 
   696  019F                     	;# 
   697  019F                     	;# 
   698  019F                     	;# 
   699  020C                     	;# 
   700  020D                     	;# 
   701  020E                     	;# 
   702  0211                     	;# 
   703  0211                     	;# 
   704  0212                     	;# 
   705  0212                     	;# 
   706  0213                     	;# 
   707  0213                     	;# 
   708  0214                     	;# 
   709  0214                     	;# 
   710  0215                     	;# 
   711  0215                     	;# 
   712  0215                     	;# 
   713  0215                     	;# 
   714  0216                     	;# 
   715  0216                     	;# 
   716  0217                     	;# 
   717  0217                     	;# 
   718  028C                     	;# 
   719  028D                     	;# 
   720  028E                     	;# 
   721  0291                     	;# 
   722  0291                     	;# 
   723  0292                     	;# 
   724  0293                     	;# 
   725  0293                     	;# 
   726  0298                     	;# 
   727  0298                     	;# 
   728  0299                     	;# 
   729  029A                     	;# 
   730  029A                     	;# 
   731  029E                     	;# 
   732  030C                     	;# 
   733  030D                     	;# 
   734  030E                     	;# 
   735  038C                     	;# 
   736  038D                     	;# 
   737  038E                     	;# 
   738  0391                     	;# 
   739  0392                     	;# 
   740  0393                     	;# 
   741  0394                     	;# 
   742  0395                     	;# 
   743  0396                     	;# 
   744  0397                     	;# 
   745  0398                     	;# 
   746  0399                     	;# 
   747  0415                     	;# 
   748  0416                     	;# 
   749  0417                     	;# 
   750  041C                     	;# 
   751  041D                     	;# 
   752  041E                     	;# 
   753  0511                     	;# 
   754  0515                     	;# 
   755  0617                     	;# 
   756  0618                     	;# 
   757  0619                     	;# 
   758  0619                     	;# 
   759  061A                     	;# 
   760  061B                     	;# 
   761  061C                     	;# 
   762  061C                     	;# 
   763  0691                     	;# 
   764  0692                     	;# 
   765  0693                     	;# 
   766  0694                     	;# 
   767  0695                     	;# 
   768  0696                     	;# 
   769  0697                     	;# 
   770  0698                     	;# 
   771  0699                     	;# 
   772  069A                     	;# 
   773  069B                     	;# 
   774  069C                     	;# 
   775  069D                     	;# 
   776  069E                     	;# 
   777  069F                     	;# 
   778  0E0F                     	;# 
   779  0E10                     	;# 
   780  0E11                     	;# 
   781  0E12                     	;# 
   782  0E13                     	;# 
   783  0E14                     	;# 
   784  0E15                     	;# 
   785  0E17                     	;# 
   786  0E20                     	;# 
   787  0E21                     	;# 
   788  0E22                     	;# 
   789  0E24                     	;# 
   790  0E25                     	;# 
   791  0E28                     	;# 
   792  0E29                     	;# 
   793  0E2A                     	;# 
   794  0E2B                     	;# 
   795  0E90                     	;# 
   796  0E91                     	;# 
   797  0E92                     	;# 
   798  0E94                     	;# 
   799  0E95                     	;# 
   800  0E9C                     	;# 
   801  0E9D                     	;# 
   802  0E9E                     	;# 
   803  0E9F                     	;# 
   804  0EA0                     	;# 
   805  0EA1                     	;# 
   806  0EA2                     	;# 
   807  0EA3                     	;# 
   808  0EA4                     	;# 
   809  0EA5                     	;# 
   810  0EA6                     	;# 
   811  0EA7                     	;# 
   812  0F0F                     	;# 
   813  0F10                     	;# 
   814  0F11                     	;# 
   815  0F12                     	;# 
   816  0F13                     	;# 
   817  0F14                     	;# 
   818  0F15                     	;# 
   819  0F16                     	;# 
   820  0F17                     	;# 
   821  0F18                     	;# 
   822  0F19                     	;# 
   823  0F1A                     	;# 
   824  0F1B                     	;# 
   825  0F1C                     	;# 
   826  0F1D                     	;# 
   827  0F1E                     	;# 
   828  0F1F                     	;# 
   829  0F20                     	;# 
   830  0F21                     	;# 
   831  0F22                     	;# 
   832  0F23                     	;# 
   833  0F24                     	;# 
   834  0F25                     	;# 
   835  0F26                     	;# 
   836  0F27                     	;# 
   837  0F28                     	;# 
   838  0F29                     	;# 
   839  0F2A                     	;# 
   840  0F2B                     	;# 
   841  0F2C                     	;# 
   842  0F2D                     	;# 
   843  0FE4                     	;# 
   844  0FE5                     	;# 
   845  0FE6                     	;# 
   846  0FE7                     	;# 
   847  0FE8                     	;# 
   848  0FE9                     	;# 
   849  0FEA                     	;# 
   850  0FEB                     	;# 
   851  0FED                     	;# 
   852  0FEE                     	;# 
   853  0FEF                     	;# 
   854  0000                     	;# 
   855  0001                     	;# 
   856  0002                     	;# 
   857  0003                     	;# 
   858  0004                     	;# 
   859  0005                     	;# 
   860  0006                     	;# 
   861  0007                     	;# 
   862  0008                     	;# 
   863  0009                     	;# 
   864  000A                     	;# 
   865  000B                     	;# 
   866  000C                     	;# 
   867  000D                     	;# 
   868  000E                     	;# 
   869  0011                     	;# 
   870  0012                     	;# 
   871  0013                     	;# 
   872  0015                     	;# 
   873  0016                     	;# 
   874  0016                     	;# 
   875  0017                     	;# 
   876  0018                     	;# 
   877  0019                     	;# 
   878  001A                     	;# 
   879  001B                     	;# 
   880  001C                     	;# 
   881  008C                     	;# 
   882  008D                     	;# 
   883  008E                     	;# 
   884  0091                     	;# 
   885  0092                     	;# 
   886  0093                     	;# 
   887  0095                     	;# 
   888  0096                     	;# 
   889  0097                     	;# 
   890  0098                     	;# 
   891  0099                     	;# 
   892  009A                     	;# 
   893  009B                     	;# 
   894  009B                     	;# 
   895  009C                     	;# 
   896  009D                     	;# 
   897  009E                     	;# 
   898  009F                     	;# 
   899  010C                     	;# 
   900  010D                     	;# 
   901  010E                     	;# 
   902  0111                     	;# 
   903  0112                     	;# 
   904  0113                     	;# 
   905  0114                     	;# 
   906  0115                     	;# 
   907  0116                     	;# 
   908  0117                     	;# 
   909  0118                     	;# 
   910  0119                     	;# 
   911  011C                     	;# 
   912  018C                     	;# 
   913  018D                     	;# 
   914  018E                     	;# 
   915  0191                     	;# 
   916  0191                     	;# 
   917  0192                     	;# 
   918  0193                     	;# 
   919  0193                     	;# 
   920  0194                     	;# 
   921  0195                     	;# 
   922  0196                     	;# 
   923  0199                     	;# 
   924  0199                     	;# 
   925  0199                     	;# 
   926  019A                     	;# 
   927  019A                     	;# 
   928  019A                     	;# 
   929  019B                     	;# 
   930  019B                     	;# 
   931  019B                     	;# 
   932  019B                     	;# 
   933  019B                     	;# 
   934  019C                     	;# 
   935  019C                     	;# 
   936  019C                     	;# 
   937  019D                     	;# 
   938  019D                     	;# 
   939  019D                     	;# 
   940  019E                     	;# 
   941  019E                     	;# 
   942  019E                     	;# 
   943  019F                     	;# 
   944  019F                     	;# 
   945  019F                     	;# 
   946  019F                     	;# 
   947  019F                     	;# 
   948  020C                     	;# 
   949  020D                     	;# 
   950  020E                     	;# 
   951  0211                     	;# 
   952  0211                     	;# 
   953  0212                     	;# 
   954  0212                     	;# 
   955  0213                     	;# 
   956  0213                     	;# 
   957  0214                     	;# 
   958  0214                     	;# 
   959  0215                     	;# 
   960  0215                     	;# 
   961  0215                     	;# 
   962  0215                     	;# 
   963  0216                     	;# 
   964  0216                     	;# 
   965  0217                     	;# 
   966  0217                     	;# 
   967  028C                     	;# 
   968  028D                     	;# 
   969  028E                     	;# 
   970  0291                     	;# 
   971  0291                     	;# 
   972  0292                     	;# 
   973  0293                     	;# 
   974  0293                     	;# 
   975  0298                     	;# 
   976  0298                     	;# 
   977  0299                     	;# 
   978  029A                     	;# 
   979  029A                     	;# 
   980  029E                     	;# 
   981  030C                     	;# 
   982  030D                     	;# 
   983  030E                     	;# 
   984  038C                     	;# 
   985  038D                     	;# 
   986  038E                     	;# 
   987  0391                     	;# 
   988  0392                     	;# 
   989  0393                     	;# 
   990  0394                     	;# 
   991  0395                     	;# 
   992  0396                     	;# 
   993  0397                     	;# 
   994  0398                     	;# 
   995  0399                     	;# 
   996  0415                     	;# 
   997  0416                     	;# 
   998  0417                     	;# 
   999  041C                     	;# 
  1000  041D                     	;# 
  1001  041E                     	;# 
  1002  0511                     	;# 
  1003  0515                     	;# 
  1004  0617                     	;# 
  1005  0618                     	;# 
  1006  0619                     	;# 
  1007  0619                     	;# 
  1008  061A                     	;# 
  1009  061B                     	;# 
  1010  061C                     	;# 
  1011  061C                     	;# 
  1012  0691                     	;# 
  1013  0692                     	;# 
  1014  0693                     	;# 
  1015  0694                     	;# 
  1016  0695                     	;# 
  1017  0696                     	;# 
  1018  0697                     	;# 
  1019  0698                     	;# 
  1020  0699                     	;# 
  1021  069A                     	;# 
  1022  069B                     	;# 
  1023  069C                     	;# 
  1024  069D                     	;# 
  1025  069E                     	;# 
  1026  069F                     	;# 
  1027  0E0F                     	;# 
  1028  0E10                     	;# 
  1029  0E11                     	;# 
  1030  0E12                     	;# 
  1031  0E13                     	;# 
  1032  0E14                     	;# 
  1033  0E15                     	;# 
  1034  0E17                     	;# 
  1035  0E20                     	;# 
  1036  0E21                     	;# 
  1037  0E22                     	;# 
  1038  0E24                     	;# 
  1039  0E25                     	;# 
  1040  0E28                     	;# 
  1041  0E29                     	;# 
  1042  0E2A                     	;# 
  1043  0E2B                     	;# 
  1044  0E90                     	;# 
  1045  0E91                     	;# 
  1046  0E92                     	;# 
  1047  0E94                     	;# 
  1048  0E95                     	;# 
  1049  0E9C                     	;# 
  1050  0E9D                     	;# 
  1051  0E9E                     	;# 
  1052  0E9F                     	;# 
  1053  0EA0                     	;# 
  1054  0EA1                     	;# 
  1055  0EA2                     	;# 
  1056  0EA3                     	;# 
  1057  0EA4                     	;# 
  1058  0EA5                     	;# 
  1059  0EA6                     	;# 
  1060  0EA7                     	;# 
  1061  0F0F                     	;# 
  1062  0F10                     	;# 
  1063  0F11                     	;# 
  1064  0F12                     	;# 
  1065  0F13                     	;# 
  1066  0F14                     	;# 
  1067  0F15                     	;# 
  1068  0F16                     	;# 
  1069  0F17                     	;# 
  1070  0F18                     	;# 
  1071  0F19                     	;# 
  1072  0F1A                     	;# 
  1073  0F1B                     	;# 
  1074  0F1C                     	;# 
  1075  0F1D                     	;# 
  1076  0F1E                     	;# 
  1077  0F1F                     	;# 
  1078  0F20                     	;# 
  1079  0F21                     	;# 
  1080  0F22                     	;# 
  1081  0F23                     	;# 
  1082  0F24                     	;# 
  1083  0F25                     	;# 
  1084  0F26                     	;# 
  1085  0F27                     	;# 
  1086  0F28                     	;# 
  1087  0F29                     	;# 
  1088  0F2A                     	;# 
  1089  0F2B                     	;# 
  1090  0F2C                     	;# 
  1091  0F2D                     	;# 
  1092  0FE4                     	;# 
  1093  0FE5                     	;# 
  1094  0FE6                     	;# 
  1095  0FE7                     	;# 
  1096  0FE8                     	;# 
  1097  0FE9                     	;# 
  1098  0FEA                     	;# 
  1099  0FEB                     	;# 
  1100  0FED                     	;# 
  1101  0FEE                     	;# 
  1102  0FEF                     	;# 
  1103  0000                     	;# 
  1104  0001                     	;# 
  1105  0002                     	;# 
  1106  0003                     	;# 
  1107  0004                     	;# 
  1108  0005                     	;# 
  1109  0006                     	;# 
  1110  0007                     	;# 
  1111  0008                     	;# 
  1112  0009                     	;# 
  1113  000A                     	;# 
  1114  000B                     	;# 
  1115  000C                     	;# 
  1116  000D                     	;# 
  1117  000E                     	;# 
  1118  0011                     	;# 
  1119  0012                     	;# 
  1120  0013                     	;# 
  1121  0015                     	;# 
  1122  0016                     	;# 
  1123  0016                     	;# 
  1124  0017                     	;# 
  1125  0018                     	;# 
  1126  0019                     	;# 
  1127  001A                     	;# 
  1128  001B                     	;# 
  1129  001C                     	;# 
  1130  008C                     	;# 
  1131  008D                     	;# 
  1132  008E                     	;# 
  1133  0091                     	;# 
  1134  0092                     	;# 
  1135  0093                     	;# 
  1136  0095                     	;# 
  1137  0096                     	;# 
  1138  0097                     	;# 
  1139  0098                     	;# 
  1140  0099                     	;# 
  1141  009A                     	;# 
  1142  009B                     	;# 
  1143  009B                     	;# 
  1144  009C                     	;# 
  1145  009D                     	;# 
  1146  009E                     	;# 
  1147  009F                     	;# 
  1148  010C                     	;# 
  1149  010D                     	;# 
  1150  010E                     	;# 
  1151  0111                     	;# 
  1152  0112                     	;# 
  1153  0113                     	;# 
  1154  0114                     	;# 
  1155  0115                     	;# 
  1156  0116                     	;# 
  1157  0117                     	;# 
  1158  0118                     	;# 
  1159  0119                     	;# 
  1160  011C                     	;# 
  1161  018C                     	;# 
  1162  018D                     	;# 
  1163  018E                     	;# 
  1164  0191                     	;# 
  1165  0191                     	;# 
  1166  0192                     	;# 
  1167  0193                     	;# 
  1168  0193                     	;# 
  1169  0194                     	;# 
  1170  0195                     	;# 
  1171  0196                     	;# 
  1172  0199                     	;# 
  1173  0199                     	;# 
  1174  0199                     	;# 
  1175  019A                     	;# 
  1176  019A                     	;# 
  1177  019A                     	;# 
  1178  019B                     	;# 
  1179  019B                     	;# 
  1180  019B                     	;# 
  1181  019B                     	;# 
  1182  019B                     	;# 
  1183  019C                     	;# 
  1184  019C                     	;# 
  1185  019C                     	;# 
  1186  019D                     	;# 
  1187  019D                     	;# 
  1188  019D                     	;# 
  1189  019E                     	;# 
  1190  019E                     	;# 
  1191  019E                     	;# 
  1192  019F                     	;# 
  1193  019F                     	;# 
  1194  019F                     	;# 
  1195  019F                     	;# 
  1196  019F                     	;# 
  1197  020C                     	;# 
  1198  020D                     	;# 
  1199  020E                     	;# 
  1200  0211                     	;# 
  1201  0211                     	;# 
  1202  0212                     	;# 
  1203  0212                     	;# 
  1204  0213                     	;# 
  1205  0213                     	;# 
  1206  0214                     	;# 
  1207  0214                     	;# 
  1208  0215                     	;# 
  1209  0215                     	;# 
  1210  0215                     	;# 
  1211  0215                     	;# 
  1212  0216                     	;# 
  1213  0216                     	;# 
  1214  0217                     	;# 
  1215  0217                     	;# 
  1216  028C                     	;# 
  1217  028D                     	;# 
  1218  028E                     	;# 
  1219  0291                     	;# 
  1220  0291                     	;# 
  1221  0292                     	;# 
  1222  0293                     	;# 
  1223  0293                     	;# 
  1224  0298                     	;# 
  1225  0298                     	;# 
  1226  0299                     	;# 
  1227  029A                     	;# 
  1228  029A                     	;# 
  1229  029E                     	;# 
  1230  030C                     	;# 
  1231  030D                     	;# 
  1232  030E                     	;# 
  1233  038C                     	;# 
  1234  038D                     	;# 
  1235  038E                     	;# 
  1236  0391                     	;# 
  1237  0392                     	;# 
  1238  0393                     	;# 
  1239  0394                     	;# 
  1240  0395                     	;# 
  1241  0396                     	;# 
  1242  0397                     	;# 
  1243  0398                     	;# 
  1244  0399                     	;# 
  1245  0415                     	;# 
  1246  0416                     	;# 
  1247  0417                     	;# 
  1248  041C                     	;# 
  1249  041D                     	;# 
  1250  041E                     	;# 
  1251  0511                     	;# 
  1252  0515                     	;# 
  1253  0617                     	;# 
  1254  0618                     	;# 
  1255  0619                     	;# 
  1256  0619                     	;# 
  1257  061A                     	;# 
  1258  061B                     	;# 
  1259  061C                     	;# 
  1260  061C                     	;# 
  1261  0691                     	;# 
  1262  0692                     	;# 
  1263  0693                     	;# 
  1264  0694                     	;# 
  1265  0695                     	;# 
  1266  0696                     	;# 
  1267  0697                     	;# 
  1268  0698                     	;# 
  1269  0699                     	;# 
  1270  069A                     	;# 
  1271  069B                     	;# 
  1272  069C                     	;# 
  1273  069D                     	;# 
  1274  069E                     	;# 
  1275  069F                     	;# 
  1276  0E0F                     	;# 
  1277  0E10                     	;# 
  1278  0E11                     	;# 
  1279  0E12                     	;# 
  1280  0E13                     	;# 
  1281  0E14                     	;# 
  1282  0E15                     	;# 
  1283  0E17                     	;# 
  1284  0E20                     	;# 
  1285  0E21                     	;# 
  1286  0E22                     	;# 
  1287  0E24                     	;# 
  1288  0E25                     	;# 
  1289  0E28                     	;# 
  1290  0E29                     	;# 
  1291  0E2A                     	;# 
  1292  0E2B                     	;# 
  1293  0E90                     	;# 
  1294  0E91                     	;# 
  1295  0E92                     	;# 
  1296  0E94                     	;# 
  1297  0E95                     	;# 
  1298  0E9C                     	;# 
  1299  0E9D                     	;# 
  1300  0E9E                     	;# 
  1301  0E9F                     	;# 
  1302  0EA0                     	;# 
  1303  0EA1                     	;# 
  1304  0EA2                     	;# 
  1305  0EA3                     	;# 
  1306  0EA4                     	;# 
  1307  0EA5                     	;# 
  1308  0EA6                     	;# 
  1309  0EA7                     	;# 
  1310  0F0F                     	;# 
  1311  0F10                     	;# 
  1312  0F11                     	;# 
  1313  0F12                     	;# 
  1314  0F13                     	;# 
  1315  0F14                     	;# 
  1316  0F15                     	;# 
  1317  0F16                     	;# 
  1318  0F17                     	;# 
  1319  0F18                     	;# 
  1320  0F19                     	;# 
  1321  0F1A                     	;# 
  1322  0F1B                     	;# 
  1323  0F1C                     	;# 
  1324  0F1D                     	;# 
  1325  0F1E                     	;# 
  1326  0F1F                     	;# 
  1327  0F20                     	;# 
  1328  0F21                     	;# 
  1329  0F22                     	;# 
  1330  0F23                     	;# 
  1331  0F24                     	;# 
  1332  0F25                     	;# 
  1333  0F26                     	;# 
  1334  0F27                     	;# 
  1335  0F28                     	;# 
  1336  0F29                     	;# 
  1337  0F2A                     	;# 
  1338  0F2B                     	;# 
  1339  0F2C                     	;# 
  1340  0F2D                     	;# 
  1341  0FE4                     	;# 
  1342  0FE5                     	;# 
  1343  0FE6                     	;# 
  1344  0FE7                     	;# 
  1345  0FE8                     	;# 
  1346  0FE9                     	;# 
  1347  0FEA                     	;# 
  1348  0FEB                     	;# 
  1349  0FED                     	;# 
  1350  0FEE                     	;# 
  1351  0FEF                     	;# 
  1352  0000                     	;# 
  1353  0001                     	;# 
  1354  0002                     	;# 
  1355  0003                     	;# 
  1356  0004                     	;# 
  1357  0005                     	;# 
  1358  0006                     	;# 
  1359  0007                     	;# 
  1360  0008                     	;# 
  1361  0009                     	;# 
  1362  000A                     	;# 
  1363  000B                     	;# 
  1364  000C                     	;# 
  1365  000D                     	;# 
  1366  000E                     	;# 
  1367  0011                     	;# 
  1368  0012                     	;# 
  1369  0013                     	;# 
  1370  0015                     	;# 
  1371  0016                     	;# 
  1372  0016                     	;# 
  1373  0017                     	;# 
  1374  0018                     	;# 
  1375  0019                     	;# 
  1376  001A                     	;# 
  1377  001B                     	;# 
  1378  001C                     	;# 
  1379  008C                     	;# 
  1380  008D                     	;# 
  1381  008E                     	;# 
  1382  0091                     	;# 
  1383  0092                     	;# 
  1384  0093                     	;# 
  1385  0095                     	;# 
  1386  0096                     	;# 
  1387  0097                     	;# 
  1388  0098                     	;# 
  1389  0099                     	;# 
  1390  009A                     	;# 
  1391  009B                     	;# 
  1392  009B                     	;# 
  1393  009C                     	;# 
  1394  009D                     	;# 
  1395  009E                     	;# 
  1396  009F                     	;# 
  1397  010C                     	;# 
  1398  010D                     	;# 
  1399  010E                     	;# 
  1400  0111                     	;# 
  1401  0112                     	;# 
  1402  0113                     	;# 
  1403  0114                     	;# 
  1404  0115                     	;# 
  1405  0116                     	;# 
  1406  0117                     	;# 
  1407  0118                     	;# 
  1408  0119                     	;# 
  1409  011C                     	;# 
  1410  018C                     	;# 
  1411  018D                     	;# 
  1412  018E                     	;# 
  1413  0191                     	;# 
  1414  0191                     	;# 
  1415  0192                     	;# 
  1416  0193                     	;# 
  1417  0193                     	;# 
  1418  0194                     	;# 
  1419  0195                     	;# 
  1420  0196                     	;# 
  1421  0199                     	;# 
  1422  0199                     	;# 
  1423  0199                     	;# 
  1424  019A                     	;# 
  1425  019A                     	;# 
  1426  019A                     	;# 
  1427  019B                     	;# 
  1428  019B                     	;# 
  1429  019B                     	;# 
  1430  019B                     	;# 
  1431  019B                     	;# 
  1432  019C                     	;# 
  1433  019C                     	;# 
  1434  019C                     	;# 
  1435  019D                     	;# 
  1436  019D                     	;# 
  1437  019D                     	;# 
  1438  019E                     	;# 
  1439  019E                     	;# 
  1440  019E                     	;# 
  1441  019F                     	;# 
  1442  019F                     	;# 
  1443  019F                     	;# 
  1444  019F                     	;# 
  1445  019F                     	;# 
  1446  020C                     	;# 
  1447  020D                     	;# 
  1448  020E                     	;# 
  1449  0211                     	;# 
  1450  0211                     	;# 
  1451  0212                     	;# 
  1452  0212                     	;# 
  1453  0213                     	;# 
  1454  0213                     	;# 
  1455  0214                     	;# 
  1456  0214                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0215                     	;# 
  1460  0215                     	;# 
  1461  0216                     	;# 
  1462  0216                     	;# 
  1463  0217                     	;# 
  1464  0217                     	;# 
  1465  028C                     	;# 
  1466  028D                     	;# 
  1467  028E                     	;# 
  1468  0291                     	;# 
  1469  0291                     	;# 
  1470  0292                     	;# 
  1471  0293                     	;# 
  1472  0293                     	;# 
  1473  0298                     	;# 
  1474  0298                     	;# 
  1475  0299                     	;# 
  1476  029A                     	;# 
  1477  029A                     	;# 
  1478  029E                     	;# 
  1479  030C                     	;# 
  1480  030D                     	;# 
  1481  030E                     	;# 
  1482  038C                     	;# 
  1483  038D                     	;# 
  1484  038E                     	;# 
  1485  0391                     	;# 
  1486  0392                     	;# 
  1487  0393                     	;# 
  1488  0394                     	;# 
  1489  0395                     	;# 
  1490  0396                     	;# 
  1491  0397                     	;# 
  1492  0398                     	;# 
  1493  0399                     	;# 
  1494  0415                     	;# 
  1495  0416                     	;# 
  1496  0417                     	;# 
  1497  041C                     	;# 
  1498  041D                     	;# 
  1499  041E                     	;# 
  1500  0511                     	;# 
  1501  0515                     	;# 
  1502  0617                     	;# 
  1503  0618                     	;# 
  1504  0619                     	;# 
  1505  0619                     	;# 
  1506  061A                     	;# 
  1507  061B                     	;# 
  1508  061C                     	;# 
  1509  061C                     	;# 
  1510  0691                     	;# 
  1511  0692                     	;# 
  1512  0693                     	;# 
  1513  0694                     	;# 
  1514  0695                     	;# 
  1515  0696                     	;# 
  1516  0697                     	;# 
  1517  0698                     	;# 
  1518  0699                     	;# 
  1519  069A                     	;# 
  1520  069B                     	;# 
  1521  069C                     	;# 
  1522  069D                     	;# 
  1523  069E                     	;# 
  1524  069F                     	;# 
  1525  0E0F                     	;# 
  1526  0E10                     	;# 
  1527  0E11                     	;# 
  1528  0E12                     	;# 
  1529  0E13                     	;# 
  1530  0E14                     	;# 
  1531  0E15                     	;# 
  1532  0E17                     	;# 
  1533  0E20                     	;# 
  1534  0E21                     	;# 
  1535  0E22                     	;# 
  1536  0E24                     	;# 
  1537  0E25                     	;# 
  1538  0E28                     	;# 
  1539  0E29                     	;# 
  1540  0E2A                     	;# 
  1541  0E2B                     	;# 
  1542  0E90                     	;# 
  1543  0E91                     	;# 
  1544  0E92                     	;# 
  1545  0E94                     	;# 
  1546  0E95                     	;# 
  1547  0E9C                     	;# 
  1548  0E9D                     	;# 
  1549  0E9E                     	;# 
  1550  0E9F                     	;# 
  1551  0EA0                     	;# 
  1552  0EA1                     	;# 
  1553  0EA2                     	;# 
  1554  0EA3                     	;# 
  1555  0EA4                     	;# 
  1556  0EA5                     	;# 
  1557  0EA6                     	;# 
  1558  0EA7                     	;# 
  1559  0F0F                     	;# 
  1560  0F10                     	;# 
  1561  0F11                     	;# 
  1562  0F12                     	;# 
  1563  0F13                     	;# 
  1564  0F14                     	;# 
  1565  0F15                     	;# 
  1566  0F16                     	;# 
  1567  0F17                     	;# 
  1568  0F18                     	;# 
  1569  0F19                     	;# 
  1570  0F1A                     	;# 
  1571  0F1B                     	;# 
  1572  0F1C                     	;# 
  1573  0F1D                     	;# 
  1574  0F1E                     	;# 
  1575  0F1F                     	;# 
  1576  0F20                     	;# 
  1577  0F21                     	;# 
  1578  0F22                     	;# 
  1579  0F23                     	;# 
  1580  0F24                     	;# 
  1581  0F25                     	;# 
  1582  0F26                     	;# 
  1583  0F27                     	;# 
  1584  0F28                     	;# 
  1585  0F29                     	;# 
  1586  0F2A                     	;# 
  1587  0F2B                     	;# 
  1588  0F2C                     	;# 
  1589  0F2D                     	;# 
  1590  0FE4                     	;# 
  1591  0FE5                     	;# 
  1592  0FE6                     	;# 
  1593  0FE7                     	;# 
  1594  0FE8                     	;# 
  1595  0FE9                     	;# 
  1596  0FEA                     	;# 
  1597  0FEB                     	;# 
  1598  0FED                     	;# 
  1599  0FEE                     	;# 
  1600  0FEF                     	;# 
  1601  0000                     	;# 
  1602  0001                     	;# 
  1603  0002                     	;# 
  1604  0003                     	;# 
  1605  0004                     	;# 
  1606  0005                     	;# 
  1607  0006                     	;# 
  1608  0007                     	;# 
  1609  0008                     	;# 
  1610  0009                     	;# 
  1611  000A                     	;# 
  1612  000B                     	;# 
  1613  000C                     	;# 
  1614  000D                     	;# 
  1615  000E                     	;# 
  1616  0011                     	;# 
  1617  0012                     	;# 
  1618  0013                     	;# 
  1619  0015                     	;# 
  1620  0016                     	;# 
  1621  0016                     	;# 
  1622  0017                     	;# 
  1623  0018                     	;# 
  1624  0019                     	;# 
  1625  001A                     	;# 
  1626  001B                     	;# 
  1627  001C                     	;# 
  1628  008C                     	;# 
  1629  008D                     	;# 
  1630  008E                     	;# 
  1631  0091                     	;# 
  1632  0092                     	;# 
  1633  0093                     	;# 
  1634  0095                     	;# 
  1635  0096                     	;# 
  1636  0097                     	;# 
  1637  0098                     	;# 
  1638  0099                     	;# 
  1639  009A                     	;# 
  1640  009B                     	;# 
  1641  009B                     	;# 
  1642  009C                     	;# 
  1643  009D                     	;# 
  1644  009E                     	;# 
  1645  009F                     	;# 
  1646  010C                     	;# 
  1647  010D                     	;# 
  1648  010E                     	;# 
  1649  0111                     	;# 
  1650  0112                     	;# 
  1651  0113                     	;# 
  1652  0114                     	;# 
  1653  0115                     	;# 
  1654  0116                     	;# 
  1655  0117                     	;# 
  1656  0118                     	;# 
  1657  0119                     	;# 
  1658  011C                     	;# 
  1659  018C                     	;# 
  1660  018D                     	;# 
  1661  018E                     	;# 
  1662  0191                     	;# 
  1663  0191                     	;# 
  1664  0192                     	;# 
  1665  0193                     	;# 
  1666  0193                     	;# 
  1667  0194                     	;# 
  1668  0195                     	;# 
  1669  0196                     	;# 
  1670  0199                     	;# 
  1671  0199                     	;# 
  1672  0199                     	;# 
  1673  019A                     	;# 
  1674  019A                     	;# 
  1675  019A                     	;# 
  1676  019B                     	;# 
  1677  019B                     	;# 
  1678  019B                     	;# 
  1679  019B                     	;# 
  1680  019B                     	;# 
  1681  019C                     	;# 
  1682  019C                     	;# 
  1683  019C                     	;# 
  1684  019D                     	;# 
  1685  019D                     	;# 
  1686  019D                     	;# 
  1687  019E                     	;# 
  1688  019E                     	;# 
  1689  019E                     	;# 
  1690  019F                     	;# 
  1691  019F                     	;# 
  1692  019F                     	;# 
  1693  019F                     	;# 
  1694  019F                     	;# 
  1695  020C                     	;# 
  1696  020D                     	;# 
  1697  020E                     	;# 
  1698  0211                     	;# 
  1699  0211                     	;# 
  1700  0212                     	;# 
  1701  0212                     	;# 
  1702  0213                     	;# 
  1703  0213                     	;# 
  1704  0214                     	;# 
  1705  0214                     	;# 
  1706  0215                     	;# 
  1707  0215                     	;# 
  1708  0215                     	;# 
  1709  0215                     	;# 
  1710  0216                     	;# 
  1711  0216                     	;# 
  1712  0217                     	;# 
  1713  0217                     	;# 
  1714  028C                     	;# 
  1715  028D                     	;# 
  1716  028E                     	;# 
  1717  0291                     	;# 
  1718  0291                     	;# 
  1719  0292                     	;# 
  1720  0293                     	;# 
  1721  0293                     	;# 
  1722  0298                     	;# 
  1723  0298                     	;# 
  1724  0299                     	;# 
  1725  029A                     	;# 
  1726  029A                     	;# 
  1727  029E                     	;# 
  1728  030C                     	;# 
  1729  030D                     	;# 
  1730  030E                     	;# 
  1731  038C                     	;# 
  1732  038D                     	;# 
  1733  038E                     	;# 
  1734  0391                     	;# 
  1735  0392                     	;# 
  1736  0393                     	;# 
  1737  0394                     	;# 
  1738  0395                     	;# 
  1739  0396                     	;# 
  1740  0397                     	;# 
  1741  0398                     	;# 
  1742  0399                     	;# 
  1743  0415                     	;# 
  1744  0416                     	;# 
  1745  0417                     	;# 
  1746  041C                     	;# 
  1747  041D                     	;# 
  1748  041E                     	;# 
  1749  0511                     	;# 
  1750  0515                     	;# 
  1751  0617                     	;# 
  1752  0618                     	;# 
  1753  0619                     	;# 
  1754  0619                     	;# 
  1755  061A                     	;# 
  1756  061B                     	;# 
  1757  061C                     	;# 
  1758  061C                     	;# 
  1759  0691                     	;# 
  1760  0692                     	;# 
  1761  0693                     	;# 
  1762  0694                     	;# 
  1763  0695                     	;# 
  1764  0696                     	;# 
  1765  0697                     	;# 
  1766  0698                     	;# 
  1767  0699                     	;# 
  1768  069A                     	;# 
  1769  069B                     	;# 
  1770  069C                     	;# 
  1771  069D                     	;# 
  1772  069E                     	;# 
  1773  069F                     	;# 
  1774  0E0F                     	;# 
  1775  0E10                     	;# 
  1776  0E11                     	;# 
  1777  0E12                     	;# 
  1778  0E13                     	;# 
  1779  0E14                     	;# 
  1780  0E15                     	;# 
  1781  0E17                     	;# 
  1782  0E20                     	;# 
  1783  0E21                     	;# 
  1784  0E22                     	;# 
  1785  0E24                     	;# 
  1786  0E25                     	;# 
  1787  0E28                     	;# 
  1788  0E29                     	;# 
  1789  0E2A                     	;# 
  1790  0E2B                     	;# 
  1791  0E90                     	;# 
  1792  0E91                     	;# 
  1793  0E92                     	;# 
  1794  0E94                     	;# 
  1795  0E95                     	;# 
  1796  0E9C                     	;# 
  1797  0E9D                     	;# 
  1798  0E9E                     	;# 
  1799  0E9F                     	;# 
  1800  0EA0                     	;# 
  1801  0EA1                     	;# 
  1802  0EA2                     	;# 
  1803  0EA3                     	;# 
  1804  0EA4                     	;# 
  1805  0EA5                     	;# 
  1806  0EA6                     	;# 
  1807  0EA7                     	;# 
  1808  0F0F                     	;# 
  1809  0F10                     	;# 
  1810  0F11                     	;# 
  1811  0F12                     	;# 
  1812  0F13                     	;# 
  1813  0F14                     	;# 
  1814  0F15                     	;# 
  1815  0F16                     	;# 
  1816  0F17                     	;# 
  1817  0F18                     	;# 
  1818  0F19                     	;# 
  1819  0F1A                     	;# 
  1820  0F1B                     	;# 
  1821  0F1C                     	;# 
  1822  0F1D                     	;# 
  1823  0F1E                     	;# 
  1824  0F1F                     	;# 
  1825  0F20                     	;# 
  1826  0F21                     	;# 
  1827  0F22                     	;# 
  1828  0F23                     	;# 
  1829  0F24                     	;# 
  1830  0F25                     	;# 
  1831  0F26                     	;# 
  1832  0F27                     	;# 
  1833  0F28                     	;# 
  1834  0F29                     	;# 
  1835  0F2A                     	;# 
  1836  0F2B                     	;# 
  1837  0F2C                     	;# 
  1838  0F2D                     	;# 
  1839  0FE4                     	;# 
  1840  0FE5                     	;# 
  1841  0FE6                     	;# 
  1842  0FE7                     	;# 
  1843  0FE8                     	;# 
  1844  0FE9                     	;# 
  1845  0FEA                     	;# 
  1846  0FEB                     	;# 
  1847  0FED                     	;# 
  1848  0FEE                     	;# 
  1849  0FEF                     	;# 
  1850  0000                     	;# 
  1851  0001                     	;# 
  1852  0002                     	;# 
  1853  0003                     	;# 
  1854  0004                     	;# 
  1855  0005                     	;# 
  1856  0006                     	;# 
  1857  0007                     	;# 
  1858  0008                     	;# 
  1859  0009                     	;# 
  1860  000A                     	;# 
  1861  000B                     	;# 
  1862  000C                     	;# 
  1863  000D                     	;# 
  1864  000E                     	;# 
  1865  0011                     	;# 
  1866  0012                     	;# 
  1867  0013                     	;# 
  1868  0015                     	;# 
  1869  0016                     	;# 
  1870  0016                     	;# 
  1871  0017                     	;# 
  1872  0018                     	;# 
  1873  0019                     	;# 
  1874  001A                     	;# 
  1875  001B                     	;# 
  1876  001C                     	;# 
  1877  008C                     	;# 
  1878  008D                     	;# 
  1879  008E                     	;# 
  1880  0091                     	;# 
  1881  0092                     	;# 
  1882  0093                     	;# 
  1883  0095                     	;# 
  1884  0096                     	;# 
  1885  0097                     	;# 
  1886  0098                     	;# 
  1887  0099                     	;# 
  1888  009A                     	;# 
  1889  009B                     	;# 
  1890  009B                     	;# 
  1891  009C                     	;# 
  1892  009D                     	;# 
  1893  009E                     	;# 
  1894  009F                     	;# 
  1895  010C                     	;# 
  1896  010D                     	;# 
  1897  010E                     	;# 
  1898  0111                     	;# 
  1899  0112                     	;# 
  1900  0113                     	;# 
  1901  0114                     	;# 
  1902  0115                     	;# 
  1903  0116                     	;# 
  1904  0117                     	;# 
  1905  0118                     	;# 
  1906  0119                     	;# 
  1907  011C                     	;# 
  1908  018C                     	;# 
  1909  018D                     	;# 
  1910  018E                     	;# 
  1911  0191                     	;# 
  1912  0191                     	;# 
  1913  0192                     	;# 
  1914  0193                     	;# 
  1915  0193                     	;# 
  1916  0194                     	;# 
  1917  0195                     	;# 
  1918  0196                     	;# 
  1919  0199                     	;# 
  1920  0199                     	;# 
  1921  0199                     	;# 
  1922  019A                     	;# 
  1923  019A                     	;# 
  1924  019A                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019C                     	;# 
  1931  019C                     	;# 
  1932  019C                     	;# 
  1933  019D                     	;# 
  1934  019D                     	;# 
  1935  019D                     	;# 
  1936  019E                     	;# 
  1937  019E                     	;# 
  1938  019E                     	;# 
  1939  019F                     	;# 
  1940  019F                     	;# 
  1941  019F                     	;# 
  1942  019F                     	;# 
  1943  019F                     	;# 
  1944  020C                     	;# 
  1945  020D                     	;# 
  1946  020E                     	;# 
  1947  0211                     	;# 
  1948  0211                     	;# 
  1949  0212                     	;# 
  1950  0212                     	;# 
  1951  0213                     	;# 
  1952  0213                     	;# 
  1953  0214                     	;# 
  1954  0214                     	;# 
  1955  0215                     	;# 
  1956  0215                     	;# 
  1957  0215                     	;# 
  1958  0215                     	;# 
  1959  0216                     	;# 
  1960  0216                     	;# 
  1961  0217                     	;# 
  1962  0217                     	;# 
  1963  028C                     	;# 
  1964  028D                     	;# 
  1965  028E                     	;# 
  1966  0291                     	;# 
  1967  0291                     	;# 
  1968  0292                     	;# 
  1969  0293                     	;# 
  1970  0293                     	;# 
  1971  0298                     	;# 
  1972  0298                     	;# 
  1973  0299                     	;# 
  1974  029A                     	;# 
  1975  029A                     	;# 
  1976  029E                     	;# 
  1977  030C                     	;# 
  1978  030D                     	;# 
  1979  030E                     	;# 
  1980  038C                     	;# 
  1981  038D                     	;# 
  1982  038E                     	;# 
  1983  0391                     	;# 
  1984  0392                     	;# 
  1985  0393                     	;# 
  1986  0394                     	;# 
  1987  0395                     	;# 
  1988  0396                     	;# 
  1989  0397                     	;# 
  1990  0398                     	;# 
  1991  0399                     	;# 
  1992  0415                     	;# 
  1993  0416                     	;# 
  1994  0417                     	;# 
  1995  041C                     	;# 
  1996  041D                     	;# 
  1997  041E                     	;# 
  1998  0511                     	;# 
  1999  0515                     	;# 
  2000  0617                     	;# 
  2001  0618                     	;# 
  2002  0619                     	;# 
  2003  0619                     	;# 
  2004  061A                     	;# 
  2005  061B                     	;# 
  2006  061C                     	;# 
  2007  061C                     	;# 
  2008  0691                     	;# 
  2009  0692                     	;# 
  2010  0693                     	;# 
  2011  0694                     	;# 
  2012  0695                     	;# 
  2013  0696                     	;# 
  2014  0697                     	;# 
  2015  0698                     	;# 
  2016  0699                     	;# 
  2017  069A                     	;# 
  2018  069B                     	;# 
  2019  069C                     	;# 
  2020  069D                     	;# 
  2021  069E                     	;# 
  2022  069F                     	;# 
  2023  0E0F                     	;# 
  2024  0E10                     	;# 
  2025  0E11                     	;# 
  2026  0E12                     	;# 
  2027  0E13                     	;# 
  2028  0E14                     	;# 
  2029  0E15                     	;# 
  2030  0E17                     	;# 
  2031  0E20                     	;# 
  2032  0E21                     	;# 
  2033  0E22                     	;# 
  2034  0E24                     	;# 
  2035  0E25                     	;# 
  2036  0E28                     	;# 
  2037  0E29                     	;# 
  2038  0E2A                     	;# 
  2039  0E2B                     	;# 
  2040  0E90                     	;# 
  2041  0E91                     	;# 
  2042  0E92                     	;# 
  2043  0E94                     	;# 
  2044  0E95                     	;# 
  2045  0E9C                     	;# 
  2046  0E9D                     	;# 
  2047  0E9E                     	;# 
  2048  0E9F                     	;# 
  2049  0EA0                     	;# 
  2050  0EA1                     	;# 
  2051  0EA2                     	;# 
  2052  0EA3                     	;# 
  2053  0EA4                     	;# 
  2054  0EA5                     	;# 
  2055  0EA6                     	;# 
  2056  0EA7                     	;# 
  2057  0F0F                     	;# 
  2058  0F10                     	;# 
  2059  0F11                     	;# 
  2060  0F12                     	;# 
  2061  0F13                     	;# 
  2062  0F14                     	;# 
  2063  0F15                     	;# 
  2064  0F16                     	;# 
  2065  0F17                     	;# 
  2066  0F18                     	;# 
  2067  0F19                     	;# 
  2068  0F1A                     	;# 
  2069  0F1B                     	;# 
  2070  0F1C                     	;# 
  2071  0F1D                     	;# 
  2072  0F1E                     	;# 
  2073  0F1F                     	;# 
  2074  0F20                     	;# 
  2075  0F21                     	;# 
  2076  0F22                     	;# 
  2077  0F23                     	;# 
  2078  0F24                     	;# 
  2079  0F25                     	;# 
  2080  0F26                     	;# 
  2081  0F27                     	;# 
  2082  0F28                     	;# 
  2083  0F29                     	;# 
  2084  0F2A                     	;# 
  2085  0F2B                     	;# 
  2086  0F2C                     	;# 
  2087  0F2D                     	;# 
  2088  0FE4                     	;# 
  2089  0FE5                     	;# 
  2090  0FE6                     	;# 
  2091  0FE7                     	;# 
  2092  0FE8                     	;# 
  2093  0FE9                     	;# 
  2094  0FEA                     	;# 
  2095  0FEB                     	;# 
  2096  0FED                     	;# 
  2097  0FEE                     	;# 
  2098  0FEF                     	;# 
  2099  0000                     	;# 
  2100  0001                     	;# 
  2101  0002                     	;# 
  2102  0003                     	;# 
  2103  0004                     	;# 
  2104  0005                     	;# 
  2105  0006                     	;# 
  2106  0007                     	;# 
  2107  0008                     	;# 
  2108  0009                     	;# 
  2109  000A                     	;# 
  2110  000B                     	;# 
  2111  000C                     	;# 
  2112  000D                     	;# 
  2113  000E                     	;# 
  2114  0011                     	;# 
  2115  0012                     	;# 
  2116  0013                     	;# 
  2117  0015                     	;# 
  2118  0016                     	;# 
  2119  0016                     	;# 
  2120  0017                     	;# 
  2121  0018                     	;# 
  2122  0019                     	;# 
  2123  001A                     	;# 
  2124  001B                     	;# 
  2125  001C                     	;# 
  2126  008C                     	;# 
  2127  008D                     	;# 
  2128  008E                     	;# 
  2129  0091                     	;# 
  2130  0092                     	;# 
  2131  0093                     	;# 
  2132  0095                     	;# 
  2133  0096                     	;# 
  2134  0097                     	;# 
  2135  0098                     	;# 
  2136  0099                     	;# 
  2137  009A                     	;# 
  2138  009B                     	;# 
  2139  009B                     	;# 
  2140  009C                     	;# 
  2141  009D                     	;# 
  2142  009E                     	;# 
  2143  009F                     	;# 
  2144  010C                     	;# 
  2145  010D                     	;# 
  2146  010E                     	;# 
  2147  0111                     	;# 
  2148  0112                     	;# 
  2149  0113                     	;# 
  2150  0114                     	;# 
  2151  0115                     	;# 
  2152  0116                     	;# 
  2153  0117                     	;# 
  2154  0118                     	;# 
  2155  0119                     	;# 
  2156  011C                     	;# 
  2157  018C                     	;# 
  2158  018D                     	;# 
  2159  018E                     	;# 
  2160  0191                     	;# 
  2161  0191                     	;# 
  2162  0192                     	;# 
  2163  0193                     	;# 
  2164  0193                     	;# 
  2165  0194                     	;# 
  2166  0195                     	;# 
  2167  0196                     	;# 
  2168  0199                     	;# 
  2169  0199                     	;# 
  2170  0199                     	;# 
  2171  019A                     	;# 
  2172  019A                     	;# 
  2173  019A                     	;# 
  2174  019B                     	;# 
  2175  019B                     	;# 
  2176  019B                     	;# 
  2177  019B                     	;# 
  2178  019B                     	;# 
  2179  019C                     	;# 
  2180  019C                     	;# 
  2181  019C                     	;# 
  2182  019D                     	;# 
  2183  019D                     	;# 
  2184  019D                     	;# 
  2185  019E                     	;# 
  2186  019E                     	;# 
  2187  019E                     	;# 
  2188  019F                     	;# 
  2189  019F                     	;# 
  2190  019F                     	;# 
  2191  019F                     	;# 
  2192  019F                     	;# 
  2193  020C                     	;# 
  2194  020D                     	;# 
  2195  020E                     	;# 
  2196  0211                     	;# 
  2197  0211                     	;# 
  2198  0212                     	;# 
  2199  0212                     	;# 
  2200  0213                     	;# 
  2201  0213                     	;# 
  2202  0214                     	;# 
  2203  0214                     	;# 
  2204  0215                     	;# 
  2205  0215                     	;# 
  2206  0215                     	;# 
  2207  0215                     	;# 
  2208  0216                     	;# 
  2209  0216                     	;# 
  2210  0217                     	;# 
  2211  0217                     	;# 
  2212  028C                     	;# 
  2213  028D                     	;# 
  2214  028E                     	;# 
  2215  0291                     	;# 
  2216  0291                     	;# 
  2217  0292                     	;# 
  2218  0293                     	;# 
  2219  0293                     	;# 
  2220  0298                     	;# 
  2221  0298                     	;# 
  2222  0299                     	;# 
  2223  029A                     	;# 
  2224  029A                     	;# 
  2225  029E                     	;# 
  2226  030C                     	;# 
  2227  030D                     	;# 
  2228  030E                     	;# 
  2229  038C                     	;# 
  2230  038D                     	;# 
  2231  038E                     	;# 
  2232  0391                     	;# 
  2233  0392                     	;# 
  2234  0393                     	;# 
  2235  0394                     	;# 
  2236  0395                     	;# 
  2237  0396                     	;# 
  2238  0397                     	;# 
  2239  0398                     	;# 
  2240  0399                     	;# 
  2241  0415                     	;# 
  2242  0416                     	;# 
  2243  0417                     	;# 
  2244  041C                     	;# 
  2245  041D                     	;# 
  2246  041E                     	;# 
  2247  0511                     	;# 
  2248  0515                     	;# 
  2249  0617                     	;# 
  2250  0618                     	;# 
  2251  0619                     	;# 
  2252  0619                     	;# 
  2253  061A                     	;# 
  2254  061B                     	;# 
  2255  061C                     	;# 
  2256  061C                     	;# 
  2257  0691                     	;# 
  2258  0692                     	;# 
  2259  0693                     	;# 
  2260  0694                     	;# 
  2261  0695                     	;# 
  2262  0696                     	;# 
  2263  0697                     	;# 
  2264  0698                     	;# 
  2265  0699                     	;# 
  2266  069A                     	;# 
  2267  069B                     	;# 
  2268  069C                     	;# 
  2269  069D                     	;# 
  2270  069E                     	;# 
  2271  069F                     	;# 
  2272  0E0F                     	;# 
  2273  0E10                     	;# 
  2274  0E11                     	;# 
  2275  0E12                     	;# 
  2276  0E13                     	;# 
  2277  0E14                     	;# 
  2278  0E15                     	;# 
  2279  0E17                     	;# 
  2280  0E20                     	;# 
  2281  0E21                     	;# 
  2282  0E22                     	;# 
  2283  0E24                     	;# 
  2284  0E25                     	;# 
  2285  0E28                     	;# 
  2286  0E29                     	;# 
  2287  0E2A                     	;# 
  2288  0E2B                     	;# 
  2289  0E90                     	;# 
  2290  0E91                     	;# 
  2291  0E92                     	;# 
  2292  0E94                     	;# 
  2293  0E95                     	;# 
  2294  0E9C                     	;# 
  2295  0E9D                     	;# 
  2296  0E9E                     	;# 
  2297  0E9F                     	;# 
  2298  0EA0                     	;# 
  2299  0EA1                     	;# 
  2300  0EA2                     	;# 
  2301  0EA3                     	;# 
  2302  0EA4                     	;# 
  2303  0EA5                     	;# 
  2304  0EA6                     	;# 
  2305  0EA7                     	;# 
  2306  0F0F                     	;# 
  2307  0F10                     	;# 
  2308  0F11                     	;# 
  2309  0F12                     	;# 
  2310  0F13                     	;# 
  2311  0F14                     	;# 
  2312  0F15                     	;# 
  2313  0F16                     	;# 
  2314  0F17                     	;# 
  2315  0F18                     	;# 
  2316  0F19                     	;# 
  2317  0F1A                     	;# 
  2318  0F1B                     	;# 
  2319  0F1C                     	;# 
  2320  0F1D                     	;# 
  2321  0F1E                     	;# 
  2322  0F1F                     	;# 
  2323  0F20                     	;# 
  2324  0F21                     	;# 
  2325  0F22                     	;# 
  2326  0F23                     	;# 
  2327  0F24                     	;# 
  2328  0F25                     	;# 
  2329  0F26                     	;# 
  2330  0F27                     	;# 
  2331  0F28                     	;# 
  2332  0F29                     	;# 
  2333  0F2A                     	;# 
  2334  0F2B                     	;# 
  2335  0F2C                     	;# 
  2336  0F2D                     	;# 
  2337  0FE4                     	;# 
  2338  0FE5                     	;# 
  2339  0FE6                     	;# 
  2340  0FE7                     	;# 
  2341  0FE8                     	;# 
  2342  0FE9                     	;# 
  2343  0FEA                     	;# 
  2344  0FEB                     	;# 
  2345  0FED                     	;# 
  2346  0FEE                     	;# 
  2347  0FEF                     	;# 
  2348  0000                     	;# 
  2349  0001                     	;# 
  2350  0002                     	;# 
  2351  0003                     	;# 
  2352  0004                     	;# 
  2353  0005                     	;# 
  2354  0006                     	;# 
  2355  0007                     	;# 
  2356  0008                     	;# 
  2357  0009                     	;# 
  2358  000A                     	;# 
  2359  000B                     	;# 
  2360  000C                     	;# 
  2361  000D                     	;# 
  2362  000E                     	;# 
  2363  0011                     	;# 
  2364  0012                     	;# 
  2365  0013                     	;# 
  2366  0015                     	;# 
  2367  0016                     	;# 
  2368  0016                     	;# 
  2369  0017                     	;# 
  2370  0018                     	;# 
  2371  0019                     	;# 
  2372  001A                     	;# 
  2373  001B                     	;# 
  2374  001C                     	;# 
  2375  008C                     	;# 
  2376  008D                     	;# 
  2377  008E                     	;# 
  2378  0091                     	;# 
  2379  0092                     	;# 
  2380  0093                     	;# 
  2381  0095                     	;# 
  2382  0096                     	;# 
  2383  0097                     	;# 
  2384  0098                     	;# 
  2385  0099                     	;# 
  2386  009A                     	;# 
  2387  009B                     	;# 
  2388  009B                     	;# 
  2389  009C                     	;# 
  2390  009D                     	;# 
  2391  009E                     	;# 
  2392  009F                     	;# 
  2393  010C                     	;# 
  2394  010D                     	;# 
  2395  010E                     	;# 
  2396  0111                     	;# 
  2397  0112                     	;# 
  2398  0113                     	;# 
  2399  0114                     	;# 
  2400  0115                     	;# 
  2401  0116                     	;# 
  2402  0117                     	;# 
  2403  0118                     	;# 
  2404  0119                     	;# 
  2405  011C                     	;# 
  2406  018C                     	;# 
  2407  018D                     	;# 
  2408  018E                     	;# 
  2409  0191                     	;# 
  2410  0191                     	;# 
  2411  0192                     	;# 
  2412  0193                     	;# 
  2413  0193                     	;# 
  2414  0194                     	;# 
  2415  0195                     	;# 
  2416  0196                     	;# 
  2417  0199                     	;# 
  2418  0199                     	;# 
  2419  0199                     	;# 
  2420  019A                     	;# 
  2421  019A                     	;# 
  2422  019A                     	;# 
  2423  019B                     	;# 
  2424  019B                     	;# 
  2425  019B                     	;# 
  2426  019B                     	;# 
  2427  019B                     	;# 
  2428  019C                     	;# 
  2429  019C                     	;# 
  2430  019C                     	;# 
  2431  019D                     	;# 
  2432  019D                     	;# 
  2433  019D                     	;# 
  2434  019E                     	;# 
  2435  019E                     	;# 
  2436  019E                     	;# 
  2437  019F                     	;# 
  2438  019F                     	;# 
  2439  019F                     	;# 
  2440  019F                     	;# 
  2441  019F                     	;# 
  2442  020C                     	;# 
  2443  020D                     	;# 
  2444  020E                     	;# 
  2445  0211                     	;# 
  2446  0211                     	;# 
  2447  0212                     	;# 
  2448  0212                     	;# 
  2449  0213                     	;# 
  2450  0213                     	;# 
  2451  0214                     	;# 
  2452  0214                     	;# 
  2453  0215                     	;# 
  2454  0215                     	;# 
  2455  0215                     	;# 
  2456  0215                     	;# 
  2457  0216                     	;# 
  2458  0216                     	;# 
  2459  0217                     	;# 
  2460  0217                     	;# 
  2461  028C                     	;# 
  2462  028D                     	;# 
  2463  028E                     	;# 
  2464  0291                     	;# 
  2465  0291                     	;# 
  2466  0292                     	;# 
  2467  0293                     	;# 
  2468  0293                     	;# 
  2469  0298                     	;# 
  2470  0298                     	;# 
  2471  0299                     	;# 
  2472  029A                     	;# 
  2473  029A                     	;# 
  2474  029E                     	;# 
  2475  030C                     	;# 
  2476  030D                     	;# 
  2477  030E                     	;# 
  2478  038C                     	;# 
  2479  038D                     	;# 
  2480  038E                     	;# 
  2481  0391                     	;# 
  2482  0392                     	;# 
  2483  0393                     	;# 
  2484  0394                     	;# 
  2485  0395                     	;# 
  2486  0396                     	;# 
  2487  0397                     	;# 
  2488  0398                     	;# 
  2489  0399                     	;# 
  2490  0415                     	;# 
  2491  0416                     	;# 
  2492  0417                     	;# 
  2493  041C                     	;# 
  2494  041D                     	;# 
  2495  041E                     	;# 
  2496  0511                     	;# 
  2497  0515                     	;# 
  2498  0617                     	;# 
  2499  0618                     	;# 
  2500  0619                     	;# 
  2501  0619                     	;# 
  2502  061A                     	;# 
  2503  061B                     	;# 
  2504  061C                     	;# 
  2505  061C                     	;# 
  2506  0691                     	;# 
  2507  0692                     	;# 
  2508  0693                     	;# 
  2509  0694                     	;# 
  2510  0695                     	;# 
  2511  0696                     	;# 
  2512  0697                     	;# 
  2513  0698                     	;# 
  2514  0699                     	;# 
  2515  069A                     	;# 
  2516  069B                     	;# 
  2517  069C                     	;# 
  2518  069D                     	;# 
  2519  069E                     	;# 
  2520  069F                     	;# 
  2521  0E0F                     	;# 
  2522  0E10                     	;# 
  2523  0E11                     	;# 
  2524  0E12                     	;# 
  2525  0E13                     	;# 
  2526  0E14                     	;# 
  2527  0E15                     	;# 
  2528  0E17                     	;# 
  2529  0E20                     	;# 
  2530  0E21                     	;# 
  2531  0E22                     	;# 
  2532  0E24                     	;# 
  2533  0E25                     	;# 
  2534  0E28                     	;# 
  2535  0E29                     	;# 
  2536  0E2A                     	;# 
  2537  0E2B                     	;# 
  2538  0E90                     	;# 
  2539  0E91                     	;# 
  2540  0E92                     	;# 
  2541  0E94                     	;# 
  2542  0E95                     	;# 
  2543  0E9C                     	;# 
  2544  0E9D                     	;# 
  2545  0E9E                     	;# 
  2546  0E9F                     	;# 
  2547  0EA0                     	;# 
  2548  0EA1                     	;# 
  2549  0EA2                     	;# 
  2550  0EA3                     	;# 
  2551  0EA4                     	;# 
  2552  0EA5                     	;# 
  2553  0EA6                     	;# 
  2554  0EA7                     	;# 
  2555  0F0F                     	;# 
  2556  0F10                     	;# 
  2557  0F11                     	;# 
  2558  0F12                     	;# 
  2559  0F13                     	;# 
  2560  0F14                     	;# 
  2561  0F15                     	;# 
  2562  0F16                     	;# 
  2563  0F17                     	;# 
  2564  0F18                     	;# 
  2565  0F19                     	;# 
  2566  0F1A                     	;# 
  2567  0F1B                     	;# 
  2568  0F1C                     	;# 
  2569  0F1D                     	;# 
  2570  0F1E                     	;# 
  2571  0F1F                     	;# 
  2572  0F20                     	;# 
  2573  0F21                     	;# 
  2574  0F22                     	;# 
  2575  0F23                     	;# 
  2576  0F24                     	;# 
  2577  0F25                     	;# 
  2578  0F26                     	;# 
  2579  0F27                     	;# 
  2580  0F28                     	;# 
  2581  0F29                     	;# 
  2582  0F2A                     	;# 
  2583  0F2B                     	;# 
  2584  0F2C                     	;# 
  2585  0F2D                     	;# 
  2586  0FE4                     	;# 
  2587  0FE5                     	;# 
  2588  0FE6                     	;# 
  2589  0FE7                     	;# 
  2590  0FE8                     	;# 
  2591  0FE9                     	;# 
  2592  0FEA                     	;# 
  2593  0FEB                     	;# 
  2594  0FED                     	;# 
  2595  0FEE                     	;# 
  2596  0FEF                     	;# 
  2597  0000                     	;# 
  2598  0001                     	;# 
  2599  0002                     	;# 
  2600  0003                     	;# 
  2601  0004                     	;# 
  2602  0005                     	;# 
  2603  0006                     	;# 
  2604  0007                     	;# 
  2605  0008                     	;# 
  2606  0009                     	;# 
  2607  000A                     	;# 
  2608  000B                     	;# 
  2609  000C                     	;# 
  2610  000D                     	;# 
  2611  000E                     	;# 
  2612  0011                     	;# 
  2613  0012                     	;# 
  2614  0013                     	;# 
  2615  0015                     	;# 
  2616  0016                     	;# 
  2617  0016                     	;# 
  2618  0017                     	;# 
  2619  0018                     	;# 
  2620  0019                     	;# 
  2621  001A                     	;# 
  2622  001B                     	;# 
  2623  001C                     	;# 
  2624  008C                     	;# 
  2625  008D                     	;# 
  2626  008E                     	;# 
  2627  0091                     	;# 
  2628  0092                     	;# 
  2629  0093                     	;# 
  2630  0095                     	;# 
  2631  0096                     	;# 
  2632  0097                     	;# 
  2633  0098                     	;# 
  2634  0099                     	;# 
  2635  009A                     	;# 
  2636  009B                     	;# 
  2637  009B                     	;# 
  2638  009C                     	;# 
  2639  009D                     	;# 
  2640  009E                     	;# 
  2641  009F                     	;# 
  2642  010C                     	;# 
  2643  010D                     	;# 
  2644  010E                     	;# 
  2645  0111                     	;# 
  2646  0112                     	;# 
  2647  0113                     	;# 
  2648  0114                     	;# 
  2649  0115                     	;# 
  2650  0116                     	;# 
  2651  0117                     	;# 
  2652  0118                     	;# 
  2653  0119                     	;# 
  2654  011C                     	;# 
  2655  018C                     	;# 
  2656  018D                     	;# 
  2657  018E                     	;# 
  2658  0191                     	;# 
  2659  0191                     	;# 
  2660  0192                     	;# 
  2661  0193                     	;# 
  2662  0193                     	;# 
  2663  0194                     	;# 
  2664  0195                     	;# 
  2665  0196                     	;# 
  2666  0199                     	;# 
  2667  0199                     	;# 
  2668  0199                     	;# 
  2669  019A                     	;# 
  2670  019A                     	;# 
  2671  019A                     	;# 
  2672  019B                     	;# 
  2673  019B                     	;# 
  2674  019B                     	;# 
  2675  019B                     	;# 
  2676  019B                     	;# 
  2677  019C                     	;# 
  2678  019C                     	;# 
  2679  019C                     	;# 
  2680  019D                     	;# 
  2681  019D                     	;# 
  2682  019D                     	;# 
  2683  019E                     	;# 
  2684  019E                     	;# 
  2685  019E                     	;# 
  2686  019F                     	;# 
  2687  019F                     	;# 
  2688  019F                     	;# 
  2689  019F                     	;# 
  2690  019F                     	;# 
  2691  020C                     	;# 
  2692  020D                     	;# 
  2693  020E                     	;# 
  2694  0211                     	;# 
  2695  0211                     	;# 
  2696  0212                     	;# 
  2697  0212                     	;# 
  2698  0213                     	;# 
  2699  0213                     	;# 
  2700  0214                     	;# 
  2701  0214                     	;# 
  2702  0215                     	;# 
  2703  0215                     	;# 
  2704  0215                     	;# 
  2705  0215                     	;# 
  2706  0216                     	;# 
  2707  0216                     	;# 
  2708  0217                     	;# 
  2709  0217                     	;# 
  2710  028C                     	;# 
  2711  028D                     	;# 
  2712  028E                     	;# 
  2713  0291                     	;# 
  2714  0291                     	;# 
  2715  0292                     	;# 
  2716  0293                     	;# 
  2717  0293                     	;# 
  2718  0298                     	;# 
  2719  0298                     	;# 
  2720  0299                     	;# 
  2721  029A                     	;# 
  2722  029A                     	;# 
  2723  029E                     	;# 
  2724  030C                     	;# 
  2725  030D                     	;# 
  2726  030E                     	;# 
  2727  038C                     	;# 
  2728  038D                     	;# 
  2729  038E                     	;# 
  2730  0391                     	;# 
  2731  0392                     	;# 
  2732  0393                     	;# 
  2733  0394                     	;# 
  2734  0395                     	;# 
  2735  0396                     	;# 
  2736  0397                     	;# 
  2737  0398                     	;# 
  2738  0399                     	;# 
  2739  0415                     	;# 
  2740  0416                     	;# 
  2741  0417                     	;# 
  2742  041C                     	;# 
  2743  041D                     	;# 
  2744  041E                     	;# 
  2745  0511                     	;# 
  2746  0515                     	;# 
  2747  0617                     	;# 
  2748  0618                     	;# 
  2749  0619                     	;# 
  2750  0619                     	;# 
  2751  061A                     	;# 
  2752  061B                     	;# 
  2753  061C                     	;# 
  2754  061C                     	;# 
  2755  0691                     	;# 
  2756  0692                     	;# 
  2757  0693                     	;# 
  2758  0694                     	;# 
  2759  0695                     	;# 
  2760  0696                     	;# 
  2761  0697                     	;# 
  2762  0698                     	;# 
  2763  0699                     	;# 
  2764  069A                     	;# 
  2765  069B                     	;# 
  2766  069C                     	;# 
  2767  069D                     	;# 
  2768  069E                     	;# 
  2769  069F                     	;# 
  2770  0E0F                     	;# 
  2771  0E10                     	;# 
  2772  0E11                     	;# 
  2773  0E12                     	;# 
  2774  0E13                     	;# 
  2775  0E14                     	;# 
  2776  0E15                     	;# 
  2777  0E17                     	;# 
  2778  0E20                     	;# 
  2779  0E21                     	;# 
  2780  0E22                     	;# 
  2781  0E24                     	;# 
  2782  0E25                     	;# 
  2783  0E28                     	;# 
  2784  0E29                     	;# 
  2785  0E2A                     	;# 
  2786  0E2B                     	;# 
  2787  0E90                     	;# 
  2788  0E91                     	;# 
  2789  0E92                     	;# 
  2790  0E94                     	;# 
  2791  0E95                     	;# 
  2792  0E9C                     	;# 
  2793  0E9D                     	;# 
  2794  0E9E                     	;# 
  2795  0E9F                     	;# 
  2796  0EA0                     	;# 
  2797  0EA1                     	;# 
  2798  0EA2                     	;# 
  2799  0EA3                     	;# 
  2800  0EA4                     	;# 
  2801  0EA5                     	;# 
  2802  0EA6                     	;# 
  2803  0EA7                     	;# 
  2804  0F0F                     	;# 
  2805  0F10                     	;# 
  2806  0F11                     	;# 
  2807  0F12                     	;# 
  2808  0F13                     	;# 
  2809  0F14                     	;# 
  2810  0F15                     	;# 
  2811  0F16                     	;# 
  2812  0F17                     	;# 
  2813  0F18                     	;# 
  2814  0F19                     	;# 
  2815  0F1A                     	;# 
  2816  0F1B                     	;# 
  2817  0F1C                     	;# 
  2818  0F1D                     	;# 
  2819  0F1E                     	;# 
  2820  0F1F                     	;# 
  2821  0F20                     	;# 
  2822  0F21                     	;# 
  2823  0F22                     	;# 
  2824  0F23                     	;# 
  2825  0F24                     	;# 
  2826  0F25                     	;# 
  2827  0F26                     	;# 
  2828  0F27                     	;# 
  2829  0F28                     	;# 
  2830  0F29                     	;# 
  2831  0F2A                     	;# 
  2832  0F2B                     	;# 
  2833  0F2C                     	;# 
  2834  0F2D                     	;# 
  2835  0FE4                     	;# 
  2836  0FE5                     	;# 
  2837  0FE6                     	;# 
  2838  0FE7                     	;# 
  2839  0FE8                     	;# 
  2840  0FE9                     	;# 
  2841  0FEA                     	;# 
  2842  0FEB                     	;# 
  2843  0FED                     	;# 
  2844  0FEE                     	;# 
  2845  0FEF                     	;# 
  2846  0000                     	;# 
  2847  0001                     	;# 
  2848  0002                     	;# 
  2849  0003                     	;# 
  2850  0004                     	;# 
  2851  0005                     	;# 
  2852  0006                     	;# 
  2853  0007                     	;# 
  2854  0008                     	;# 
  2855  0009                     	;# 
  2856  000A                     	;# 
  2857  000B                     	;# 
  2858  000C                     	;# 
  2859  000D                     	;# 
  2860  000E                     	;# 
  2861  0011                     	;# 
  2862  0012                     	;# 
  2863  0013                     	;# 
  2864  0015                     	;# 
  2865  0016                     	;# 
  2866  0016                     	;# 
  2867  0017                     	;# 
  2868  0018                     	;# 
  2869  0019                     	;# 
  2870  001A                     	;# 
  2871  001B                     	;# 
  2872  001C                     	;# 
  2873  008C                     	;# 
  2874  008D                     	;# 
  2875  008E                     	;# 
  2876  0091                     	;# 
  2877  0092                     	;# 
  2878  0093                     	;# 
  2879  0095                     	;# 
  2880  0096                     	;# 
  2881  0097                     	;# 
  2882  0098                     	;# 
  2883  0099                     	;# 
  2884  009A                     	;# 
  2885  009B                     	;# 
  2886  009B                     	;# 
  2887  009C                     	;# 
  2888  009D                     	;# 
  2889  009E                     	;# 
  2890  009F                     	;# 
  2891  010C                     	;# 
  2892  010D                     	;# 
  2893  010E                     	;# 
  2894  0111                     	;# 
  2895  0112                     	;# 
  2896  0113                     	;# 
  2897  0114                     	;# 
  2898  0115                     	;# 
  2899  0116                     	;# 
  2900  0117                     	;# 
  2901  0118                     	;# 
  2902  0119                     	;# 
  2903  011C                     	;# 
  2904  018C                     	;# 
  2905  018D                     	;# 
  2906  018E                     	;# 
  2907  0191                     	;# 
  2908  0191                     	;# 
  2909  0192                     	;# 
  2910  0193                     	;# 
  2911  0193                     	;# 
  2912  0194                     	;# 
  2913  0195                     	;# 
  2914  0196                     	;# 
  2915  0199                     	;# 
  2916  0199                     	;# 
  2917  0199                     	;# 
  2918  019A                     	;# 
  2919  019A                     	;# 
  2920  019A                     	;# 
  2921  019B                     	;# 
  2922  019B                     	;# 
  2923  019B                     	;# 
  2924  019B                     	;# 
  2925  019B                     	;# 
  2926  019C                     	;# 
  2927  019C                     	;# 
  2928  019C                     	;# 
  2929  019D                     	;# 
  2930  019D                     	;# 
  2931  019D                     	;# 
  2932  019E                     	;# 
  2933  019E                     	;# 
  2934  019E                     	;# 
  2935  019F                     	;# 
  2936  019F                     	;# 
  2937  019F                     	;# 
  2938  019F                     	;# 
  2939  019F                     	;# 
  2940  020C                     	;# 
  2941  020D                     	;# 
  2942  020E                     	;# 
  2943  0211                     	;# 
  2944  0211                     	;# 
  2945  0212                     	;# 
  2946  0212                     	;# 
  2947  0213                     	;# 
  2948  0213                     	;# 
  2949  0214                     	;# 
  2950  0214                     	;# 
  2951  0215                     	;# 
  2952  0215                     	;# 
  2953  0215                     	;# 
  2954  0215                     	;# 
  2955  0216                     	;# 
  2956  0216                     	;# 
  2957  0217                     	;# 
  2958  0217                     	;# 
  2959  028C                     	;# 
  2960  028D                     	;# 
  2961  028E                     	;# 
  2962  0291                     	;# 
  2963  0291                     	;# 
  2964  0292                     	;# 
  2965  0293                     	;# 
  2966  0293                     	;# 
  2967  0298                     	;# 
  2968  0298                     	;# 
  2969  0299                     	;# 
  2970  029A                     	;# 
  2971  029A                     	;# 
  2972  029E                     	;# 
  2973  030C                     	;# 
  2974  030D                     	;# 
  2975  030E                     	;# 
  2976  038C                     	;# 
  2977  038D                     	;# 
  2978  038E                     	;# 
  2979  0391                     	;# 
  2980  0392                     	;# 
  2981  0393                     	;# 
  2982  0394                     	;# 
  2983  0395                     	;# 
  2984  0396                     	;# 
  2985  0397                     	;# 
  2986  0398                     	;# 
  2987  0399                     	;# 
  2988  0415                     	;# 
  2989  0416                     	;# 
  2990  0417                     	;# 
  2991  041C                     	;# 
  2992  041D                     	;# 
  2993  041E                     	;# 
  2994  0511                     	;# 
  2995  0515                     	;# 
  2996  0617                     	;# 
  2997  0618                     	;# 
  2998  0619                     	;# 
  2999  0619                     	;# 
  3000  061A                     	;# 
  3001  061B                     	;# 
  3002  061C                     	;# 
  3003  061C                     	;# 
  3004  0691                     	;# 
  3005  0692                     	;# 
  3006  0693                     	;# 
  3007  0694                     	;# 
  3008  0695                     	;# 
  3009  0696                     	;# 
  3010  0697                     	;# 
  3011  0698                     	;# 
  3012  0699                     	;# 
  3013  069A                     	;# 
  3014  069B                     	;# 
  3015  069C                     	;# 
  3016  069D                     	;# 
  3017  069E                     	;# 
  3018  069F                     	;# 
  3019  0E0F                     	;# 
  3020  0E10                     	;# 
  3021  0E11                     	;# 
  3022  0E12                     	;# 
  3023  0E13                     	;# 
  3024  0E14                     	;# 
  3025  0E15                     	;# 
  3026  0E17                     	;# 
  3027  0E20                     	;# 
  3028  0E21                     	;# 
  3029  0E22                     	;# 
  3030  0E24                     	;# 
  3031  0E25                     	;# 
  3032  0E28                     	;# 
  3033  0E29                     	;# 
  3034  0E2A                     	;# 
  3035  0E2B                     	;# 
  3036  0E90                     	;# 
  3037  0E91                     	;# 
  3038  0E92                     	;# 
  3039  0E94                     	;# 
  3040  0E95                     	;# 
  3041  0E9C                     	;# 
  3042  0E9D                     	;# 
  3043  0E9E                     	;# 
  3044  0E9F                     	;# 
  3045  0EA0                     	;# 
  3046  0EA1                     	;# 
  3047  0EA2                     	;# 
  3048  0EA3                     	;# 
  3049  0EA4                     	;# 
  3050  0EA5                     	;# 
  3051  0EA6                     	;# 
  3052  0EA7                     	;# 
  3053  0F0F                     	;# 
  3054  0F10                     	;# 
  3055  0F11                     	;# 
  3056  0F12                     	;# 
  3057  0F13                     	;# 
  3058  0F14                     	;# 
  3059  0F15                     	;# 
  3060  0F16                     	;# 
  3061  0F17                     	;# 
  3062  0F18                     	;# 
  3063  0F19                     	;# 
  3064  0F1A                     	;# 
  3065  0F1B                     	;# 
  3066  0F1C                     	;# 
  3067  0F1D                     	;# 
  3068  0F1E                     	;# 
  3069  0F1F                     	;# 
  3070  0F20                     	;# 
  3071  0F21                     	;# 
  3072  0F22                     	;# 
  3073  0F23                     	;# 
  3074  0F24                     	;# 
  3075  0F25                     	;# 
  3076  0F26                     	;# 
  3077  0F27                     	;# 
  3078  0F28                     	;# 
  3079  0F29                     	;# 
  3080  0F2A                     	;# 
  3081  0F2B                     	;# 
  3082  0F2C                     	;# 
  3083  0F2D                     	;# 
  3084  0FE4                     	;# 
  3085  0FE5                     	;# 
  3086  0FE6                     	;# 
  3087  0FE7                     	;# 
  3088  0FE8                     	;# 
  3089  0FE9                     	;# 
  3090  0FEA                     	;# 
  3091  0FEB                     	;# 
  3092  0FED                     	;# 
  3093  0FEE                     	;# 
  3094  0FEF                     	;# 
  3095                           
  3096 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3097  0000                     
  3098 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3099  0000                     
  3100 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3101  0000                     
  3102                           	psect	idataCOMMON
  3103  078F                     __pidataCOMMON:
  3104                           
  3105                           ;initializer for _currentIsOn
  3106  078F  3401               	retlw	1
  3107                           
  3108                           	psect	idataBANK0
  3109  077B                     __pidataBANK0:
  3110                           
  3111                           ;initializer for _maxFrequencyIndex
  3112  077B  3406               	retlw	6
  3113  077C  3400               	retlw	0
  3114                           
  3115                           ;initializer for _maxCurrentIndex
  3116  077D  340B               	retlw	11
  3117  077E  3400               	retlw	0
  3118                           
  3119                           	psect	idataBANK1
  3120  0612                     __pidataBANK1:
  3121                           
  3122                           ;initializer for _currentValue
  3123  0612  3400               	retlw	0
  3124  0613  3400               	retlw	0
  3125  0614  341E               	retlw	30
  3126  0615  3400               	retlw	0
  3127  0616  3432               	retlw	50
  3128  0617  3400               	retlw	0
  3129  0618  3446               	retlw	70
  3130  0619  3400               	retlw	0
  3131  061A  345A               	retlw	90
  3132  061B  3400               	retlw	0
  3133  061C  346E               	retlw	110
  3134  061D  3400               	retlw	0
  3135  061E  3482               	retlw	130
  3136  061F  3400               	retlw	0
  3137  0620  34A0               	retlw	160
  3138  0621  3400               	retlw	0
  3139  0622  34BE               	retlw	190
  3140  0623  3400               	retlw	0
  3141  0624  34DC               	retlw	220
  3142  0625  3400               	retlw	0
  3143  0626  34FA               	retlw	250
  3144  0627  3400               	retlw	0
  3145                           
  3146                           ;initializer for _frequencyValue
  3147  0628  3400               	retlw	0
  3148  0629  3400               	retlw	0
  3149  062A  3432               	retlw	50
  3150  062B  3400               	retlw	0
  3151  062C  3464               	retlw	100
  3152  062D  3400               	retlw	0
  3153  062E  3478               	retlw	120
  3154  062F  3400               	retlw	0
  3155  0630  3482               	retlw	130
  3156  0631  3400               	retlw	0
  3157  0632  348C               	retlw	140
  3158  0633  3400               	retlw	0
  3159                           
  3160                           	psect	nvBANK0
  3161  0062                     __pnvBANK0:
  3162  0062                     _TMR4_InterruptHandler:
  3163  0062                     	ds	2
  3164  0064                     _TMR0_InterruptHandler:
  3165  0064                     	ds	2
  3166  0066                     _INT_InterruptHandler:
  3167  0066                     	ds	2
  3168                           
  3169                           	psect	nvBANK1
  3170  00E3                     __pnvBANK1:
  3171  00E3                     _EUSART_ErrorHandler:
  3172  00E3                     	ds	2
  3173  00E5                     _EUSART_OverrunErrorHandler:
  3174  00E5                     	ds	2
  3175  00E7                     _EUSART_FramingErrorHandler:
  3176  00E7                     	ds	2
  3177  001C                     _T2CONbits	set	28
  3178  001C                     _T2CON	set	28
  3179  001A                     _TMR2	set	26
  3180  001B                     _PR2	set	27
  3181  0015                     _TMR0	set	21
  3182  0011                     _PIR1bits	set	17
  3183  0012                     _PIR2bits	set	18
  3184  000B                     _INTCONbits	set	11
  3185  009D                     _ADCON0bits	set	157
  3186  009E                     _ADCON1	set	158
  3187  009D                     _ADCON0	set	157
  3188  0095                     _OPTION_REG	set	149
  3189  0092                     _PIE2bits	set	146
  3190  0095                     _OPTION_REGbits	set	149
  3191  008E                     _TRISC	set	142
  3192  008D                     _TRISB	set	141
  3193  008C                     _TRISA	set	140
  3194  0097                     _WDTCON	set	151
  3195  0098                     _OSCTUNE	set	152
  3196  009A                     _OSCSTAT	set	154
  3197  0099                     _OSCCON	set	153
  3198  009B                     _ADRES	set	155
  3199  0117                     _FVRCONbits	set	279
  3200  0117                     _FVRCON	set	279
  3201  010E                     _LATC	set	270
  3202  010D                     _LATB	set	269
  3203  010C                     _LATA	set	268
  3204  0116                     _BORCON	set	278
  3205  0119                     _DAC1CON1	set	281
  3206  0118                     _DAC1CON0	set	280
  3207  019A                     _TX1REG	set	410
  3208  0199                     _RC1REG	set	409
  3209  019D                     _RC1STAbits	set	413
  3210  019E                     _TX1STAbits	set	414
  3211  019C                     _SP1BRGH	set	412
  3212  019B                     _SP1BRGL	set	411
  3213  019E                     _TX1STA	set	414
  3214  019D                     _RC1STA	set	413
  3215  019F                     _BAUD1CON	set	415
  3216  018C                     _ANSELA	set	396
  3217  018D                     _ANSELB	set	397
  3218  018E                     _ANSELC	set	398
  3219  020E                     _WPUC	set	526
  3220  020C                     _WPUA	set	524
  3221  020D                     _WPUB	set	525
  3222  0291                     _CCPR1L	set	657
  3223  0293                     _CCP1CONbits	set	659
  3224  029E                     _CCPTMRSbits	set	670
  3225  028E                     _ODCONC	set	654
  3226  028D                     _ODCONB	set	653
  3227  028C                     _ODCONA	set	652
  3228  030E                     _SLRCONC	set	782
  3229  030D                     _SLRCONB	set	781
  3230  030C                     _SLRCONA	set	780
  3231  038E                     _INLVLC	set	910
  3232  038D                     _INLVLB	set	909
  3233  038C                     _INLVLA	set	908
  3234  0417                     _T4CONbits	set	1047
  3235  0417                     _T4CON	set	1047
  3236  0415                     _TMR4	set	1045
  3237  0416                     _PR4	set	1046
  3238  0515                     _OPA2CON	set	1301
  3239  0511                     _OPA1CON	set	1297
  3240  061C                     _PWM4CONbits	set	1564
  3241  061A                     _PWM4DCLbits	set	1562
  3242  061B                     _PWM4DCH	set	1563
  3243  0619                     _PWM3CONbits	set	1561
  3244  0617                     _PWM3DCLbits	set	1559
  3245  0618                     _PWM3DCH	set	1560
  3246  0E24                     _RXPPS	set	3620
  3247  0E10                     _INTPPS	set	3600
  3248  0EA5                     _RC5PPS	set	3749
  3249  0E95                     _RA5PPS	set	3733
  3250  0EA4                     _RC4PPS	set	3748
  3251  0E9F                     _RB7PPS	set	3743
  3252                           
  3253                           	psect	stringtext1
  3254  068B                     __pstringtext1:
  3255  068B                     STR_1:
  3256  068B  340A               	retlw	10
  3257  068C  3420               	retlw	32	;' '
  3258  068D  3446               	retlw	70	;'F'
  3259  068E  3472               	retlw	114	;'r'
  3260  068F  3465               	retlw	101	;'e'
  3261  0690  3471               	retlw	113	;'q'
  3262  0691  3475               	retlw	117	;'u'
  3263  0692  3465               	retlw	101	;'e'
  3264  0693  346E               	retlw	110	;'n'
  3265  0694  3463               	retlw	99	;'c'
  3266  0695  3479               	retlw	121	;'y'
  3267  0696  3420               	retlw	32	;' '
  3268  0697  3473               	retlw	115	;'s'
  3269  0698  3465               	retlw	101	;'e'
  3270  0699  346C               	retlw	108	;'l'
  3271  069A  3465               	retlw	101	;'e'
  3272  069B  3463               	retlw	99	;'c'
  3273  069C  3474               	retlw	116	;'t'
  3274  069D  3465               	retlw	101	;'e'
  3275  069E  3464               	retlw	100	;'d'
  3276  069F  3400               	retlw	0
  3277                           
  3278                           	psect	stringtext2
  3279  06A0                     __pstringtext2:
  3280  06A0                     STR_2:
  3281  06A0  340A               	retlw	10
  3282  06A1  3420               	retlw	32	;' '
  3283  06A2  3463               	retlw	99	;'c'
  3284  06A3  3475               	retlw	117	;'u'
  3285  06A4  3472               	retlw	114	;'r'
  3286  06A5  3472               	retlw	114	;'r'
  3287  06A6  3465               	retlw	101	;'e'
  3288  06A7  346E               	retlw	110	;'n'
  3289  06A8  3474               	retlw	116	;'t'
  3290  06A9  3420               	retlw	32	;' '
  3291  06AA  3473               	retlw	115	;'s'
  3292  06AB  3465               	retlw	101	;'e'
  3293  06AC  346C               	retlw	108	;'l'
  3294  06AD  3465               	retlw	101	;'e'
  3295  06AE  3463               	retlw	99	;'c'
  3296  06AF  3474               	retlw	116	;'t'
  3297  06B0  3465               	retlw	101	;'e'
  3298  06B1  3464               	retlw	100	;'d'
  3299  06B2  3400               	retlw	0
  3300                           
  3301                           	psect	stringtext3
  3302  06D7                     __pstringtext3:
  3303  06D7                     STR_3:
  3304  06D7  340A               	retlw	10
  3305  06D8  3420               	retlw	32	;' '
  3306  06D9  3472               	retlw	114	;'r'
  3307  06DA  3465               	retlw	101	;'e'
  3308  06DB  3473               	retlw	115	;'s'
  3309  06DC  3465               	retlw	101	;'e'
  3310  06DD  3474               	retlw	116	;'t'
  3311  06DE  3420               	retlw	32	;' '
  3312  06DF  3473               	retlw	115	;'s'
  3313  06E0  3465               	retlw	101	;'e'
  3314  06E1  346C               	retlw	108	;'l'
  3315  06E2  3465               	retlw	101	;'e'
  3316  06E3  3463               	retlw	99	;'c'
  3317  06E4  3474               	retlw	116	;'t'
  3318  06E5  3400               	retlw	0
  3319                           
  3320                           	psect	stringtext4
  3321  0000                     __pstringtext4:
  3322                           
  3323                           	psect	cinit
  3324  0029                     start_initialization:	
  3325                           ; #config settings
  3326                           
  3327  0029                     __initialization:
  3328                           
  3329                           ; Initialize objects allocated to COMMON
  3330  0029  3187  278F  3180   	fcall	__pidataCOMMON	;fetch initializer
  3331  002C  00FB               	movwf	__pdataCOMMON& (0+127)
  3332                           
  3333                           ; Initialize objects allocated to BANK0
  3334  002D  307B               	movlw	low __pidataBANK0
  3335  002E  0084               	movwf	4
  3336  002F  3087               	movlw	(high __pidataBANK0)| (0+128)
  3337  0030  0085               	movwf	5
  3338  0031  3068               	movlw	low __pdataBANK0
  3339  0032  0086               	movwf	6
  3340  0033  3000               	movlw	high __pdataBANK0
  3341  0034  0087               	movwf	7
  3342  0035  3004               	movlw	4
  3343  0036  3187  2752  3180   	fcall	init_ram
  3344                           
  3345                           ; Initialize objects allocated to BANK1
  3346  0039  3012               	movlw	low __pidataBANK1
  3347  003A  0084               	movwf	4
  3348  003B  3086               	movlw	(high __pidataBANK1)| (0+128)
  3349  003C  0085               	movwf	5
  3350  003D  30A0               	movlw	low __pdataBANK1
  3351  003E  0086               	movwf	6
  3352  003F  3000               	movlw	high __pdataBANK1
  3353  0040  0087               	movwf	7
  3354  0041  3022               	movlw	34
  3355  0042  3187  2752  3180   	fcall	init_ram
  3356                           
  3357                           ; Clear objects allocated to COMMON
  3358  0045  01F0               	clrf	__pbssCOMMON& (0+127)
  3359  0046  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  3360  0047  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  3361  0048  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  3362  0049  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  3363  004A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  3364                           
  3365                           ; Clear objects allocated to BANK0
  3366  004B  304E               	movlw	low __pbssBANK0
  3367  004C  0084               	movwf	4
  3368  004D  3000               	movlw	high __pbssBANK0
  3369  004E  0085               	movwf	5
  3370  004F  3014               	movlw	20
  3371  0050  3187  2758  3180   	fcall	clear_ram0
  3372                           
  3373                           ; Clear objects allocated to BANK1
  3374  0053  30C2               	movlw	low __pbssBANK1
  3375  0054  0084               	movwf	4
  3376  0055  3000               	movlw	high __pbssBANK1
  3377  0056  0085               	movwf	5
  3378  0057  3021               	movlw	33
  3379  0058  3187  2758         	fcall	clear_ram0
  3380  005A                     end_of_initialization:	
  3381                           ;End of C runtime variable initialization code
  3382                           
  3383  005A                     __end_of__initialization:
  3384  005A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3385  005B  0020               	movlb	0
  3386  005C  3184  2CE1         	ljmp	_main	;jump to C main() function
  3387                           
  3388                           	psect	bssCOMMON
  3389  0070                     __pbssCOMMON:
  3390  0070                     _ir_code:
  3391  0070                     	ds	6
  3392                           
  3393                           	psect	dataCOMMON
  3394  007B                     __pdataCOMMON:
  3395  007B                     _currentIsOn:
  3396  007B                     	ds	1
  3397                           
  3398                           	psect	bssBANK0
  3399  004E                     __pbssBANK0:
  3400  004E                     _frequencyIndex:
  3401  004E                     	ds	2
  3402  0050                     _currentIndex:
  3403  0050                     	ds	2
  3404  0052                     _Vdd_mv:
  3405  0052                     	ds	2
  3406  0054                     _microamps:
  3407  0054                     	ds	2
  3408  0056                     _interfaceState:
  3409  0056                     	ds	1
  3410  0057                     _current:
  3411  0057                     	ds	1
  3412  0058                     _duty:
  3413  0058                     	ds	1
  3414  0059                     _frequency:
  3415  0059                     	ds	1
  3416  005A                     _flag:
  3417  005A                     	ds	1
  3418  005B                     _LED_blue:
  3419  005B                     	ds	1
  3420  005C                     _LED_green:
  3421  005C                     	ds	1
  3422  005D                     _LED_red:
  3423  005D                     	ds	1
  3424  005E                     _timer0ReloadVal:
  3425  005E                     	ds	1
  3426  005F                     _eusartRxLastError:
  3427  005F                     	ds	1
  3428  0060                     _Vdac_mv:
  3429  0060                     	ds	2
  3430                           
  3431                           	psect	dataBANK0
  3432  0068                     __pdataBANK0:
  3433  0068                     _maxFrequencyIndex:
  3434  0068                     	ds	2
  3435  006A                     _maxCurrentIndex:
  3436  006A                     	ds	2
  3437                           
  3438                           	psect	bssBANK1
  3439  00C2                     __pbssBANK1:
  3440  00C2                     _stats:
  3441  00C2                     	ds	33
  3442                           
  3443                           	psect	dataBANK1
  3444  00A0                     __pdataBANK1:
  3445  00A0                     _currentValue:
  3446  00A0                     	ds	22
  3447  00B6                     _frequencyValue:
  3448  00B6                     	ds	12
  3449                           
  3450                           	psect	inittext
  3451  0752                     init_ram:
  3452  0752  00FE               	movwf	126
  3453  0753                     initloop:
  3454  0753  0012               	moviw fsr0++
  3455  0754  001E               	movwi fsr1++
  3456  0755  0BFE               	decfsz	126,f
  3457  0756  2F53               	goto	initloop
  3458  0757  3400               	retlw	0
  3459                           
  3460                           	psect	clrtext
  3461  0758                     clear_ram0:	
  3462                           ;	Called with FSR0 containing the base address, and
  3463                           ;	WREG with the size to clear
  3464                           
  3465  0758  0064               	clrwdt	;clear the watchdog before getting into this loop
  3466  0759                     clrloop0:
  3467  0759  0180               	clrf	0	;clear RAM location pointed to by FSR
  3468  075A  3101               	addfsr 0,1
  3469  075B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3470  075C  2F59               	goto	clrloop0	;have we reached the end yet?
  3471  075D  3400               	retlw	0	;all done for this memory range, return
  3472                           
  3473                           	psect	cstackCOMMON
  3474  0076                     __pcstackCOMMON:
  3475  0076                     ?_PIN_MANAGER_Initialize:
  3476  0076                     ?_OSCILLATOR_Initialize:	
  3477                           ; 1 bytes @ 0x0
  3478                           
  3479  0076                     ?_WDT_Initialize:	
  3480                           ; 1 bytes @ 0x0
  3481                           
  3482  0076                     ?_OPA1_Initialize:	
  3483                           ; 1 bytes @ 0x0
  3484                           
  3485  0076                     ?_TMR4_Initialize:	
  3486                           ; 1 bytes @ 0x0
  3487                           
  3488  0076                     ?_OPA2_Initialize:	
  3489                           ; 1 bytes @ 0x0
  3490                           
  3491  0076                     ?_TMR2_Initialize:	
  3492                           ; 1 bytes @ 0x0
  3493                           
  3494  0076                     ?_EXT_INT_Initialize:	
  3495                           ; 1 bytes @ 0x0
  3496                           
  3497  0076                     ?_TMR0_Initialize:	
  3498                           ; 1 bytes @ 0x0
  3499                           
  3500  0076                     ?_EUSART_Initialize:	
  3501                           ; 1 bytes @ 0x0
  3502                           
  3503  0076                     ?_TMR0_ISR:	
  3504                           ; 1 bytes @ 0x0
  3505                           
  3506  0076                     ??_TMR0_ISR:	
  3507                           ; 1 bytes @ 0x0
  3508                           
  3509  0076                     ?_INT_ISR:	
  3510                           ; 1 bytes @ 0x0
  3511                           
  3512  0076                     ?_TMR4_ISR:	
  3513                           ; 1 bytes @ 0x0
  3514                           
  3515  0076                     ??_TMR4_ISR:	
  3516                           ; 1 bytes @ 0x0
  3517                           
  3518  0076                     ?_INT_CallBack:	
  3519                           ; 1 bytes @ 0x0
  3520                           
  3521  0076                     ?_TMR0_DefaultInterruptHandler:	
  3522                           ; 1 bytes @ 0x0
  3523                           
  3524  0076                     ??_TMR0_DefaultInterruptHandler:	
  3525                           ; 1 bytes @ 0x0
  3526                           
  3527  0076                     ?_TMR4_DefaultInterruptHandler:	
  3528                           ; 1 bytes @ 0x0
  3529                           
  3530  0076                     ??_TMR4_DefaultInterruptHandler:	
  3531                           ; 1 bytes @ 0x0
  3532                           
  3533  0076                     ?_DAC_Initialize:	
  3534                           ; 1 bytes @ 0x0
  3535                           
  3536  0076                     ?_SYSTEM_Initialize:	
  3537                           ; 1 bytes @ 0x0
  3538                           
  3539  0076                     ?_PIN_MANAGER_IOC:	
  3540                           ; 1 bytes @ 0x0
  3541                           
  3542  0076                     ??_PIN_MANAGER_IOC:	
  3543                           ; 1 bytes @ 0x0
  3544                           
  3545  0076                     ?_INTERRUPT_InterruptManager:	
  3546                           ; 1 bytes @ 0x0
  3547                           
  3548  0076                     ?_EUSART_Write:	
  3549                           ; 1 bytes @ 0x0
  3550                           
  3551  0076                     ?_putch:	
  3552                           ; 1 bytes @ 0x0
  3553                           
  3554  0076                     ?_INT_DefaultInterruptHandler:	
  3555                           ; 1 bytes @ 0x0
  3556                           
  3557  0076                     ??_INT_DefaultInterruptHandler:	
  3558                           ; 1 bytes @ 0x0
  3559                           
  3560  0076                     ?_initLED:	
  3561                           ; 1 bytes @ 0x0
  3562                           
  3563  0076                     ?_lowBattery:	
  3564                           ; 1 bytes @ 0x0
  3565                           
  3566  0076                     ?_startUp:	
  3567                           ; 1 bytes @ 0x0
  3568                           
  3569  0076                     ?_selectSomething:	
  3570                           ; 1 bytes @ 0x0
  3571                           
  3572  0076                     ?_selectFrequency:	
  3573                           ; 1 bytes @ 0x0
  3574                           
  3575  0076                     ?_selectCurrent:	
  3576                           ; 1 bytes @ 0x0
  3577                           
  3578  0076                     ?_process_remote_command:	
  3579                           ; 1 bytes @ 0x0
  3580                           
  3581  0076                     ?_main:	
  3582                           ; 1 bytes @ 0x0
  3583                           
  3584                           
  3585                           ; 1 bytes @ 0x0
  3586  0076                     	ds	1
  3587  0077                     INT_DefaultInterruptHandler@time:
  3588                           
  3589                           ; 1 bytes @ 0x1
  3590  0077                     	ds	1
  3591  0078                     ??_PIN_MANAGER_Initialize:
  3592  0078                     ??_OSCILLATOR_Initialize:	
  3593                           ; 1 bytes @ 0x2
  3594                           
  3595  0078                     ??_WDT_Initialize:	
  3596                           ; 1 bytes @ 0x2
  3597                           
  3598  0078                     ??_OPA1_Initialize:	
  3599                           ; 1 bytes @ 0x2
  3600                           
  3601  0078                     ??_TMR4_Initialize:	
  3602                           ; 1 bytes @ 0x2
  3603                           
  3604  0078                     ??_OPA2_Initialize:	
  3605                           ; 1 bytes @ 0x2
  3606                           
  3607  0078                     ??_TMR2_Initialize:	
  3608                           ; 1 bytes @ 0x2
  3609                           
  3610  0078                     ??_EXT_INT_Initialize:	
  3611                           ; 1 bytes @ 0x2
  3612                           
  3613  0078                     ??_TMR0_Initialize:	
  3614                           ; 1 bytes @ 0x2
  3615                           
  3616  0078                     ??_EUSART_Initialize:	
  3617                           ; 1 bytes @ 0x2
  3618                           
  3619  0078                     ??_INT_ISR:	
  3620                           ; 1 bytes @ 0x2
  3621                           
  3622  0078                     ??_EUSART_SetFramingErrorHandler:	
  3623                           ; 1 bytes @ 0x2
  3624                           
  3625  0078                     ??_EUSART_SetOverrunErrorHandler:	
  3626                           ; 1 bytes @ 0x2
  3627                           
  3628  0078                     ??_EUSART_SetErrorHandler:	
  3629                           ; 1 bytes @ 0x2
  3630                           
  3631  0078                     ??_INT_CallBack:	
  3632                           ; 1 bytes @ 0x2
  3633                           
  3634  0078                     ??_TMR0_SetInterruptHandler:	
  3635                           ; 1 bytes @ 0x2
  3636                           
  3637  0078                     ??_TMR4_SetInterruptHandler:	
  3638                           ; 1 bytes @ 0x2
  3639                           
  3640  0078                     ??_DAC_Initialize:	
  3641                           ; 1 bytes @ 0x2
  3642                           
  3643  0078                     ??_SYSTEM_Initialize:	
  3644                           ; 1 bytes @ 0x2
  3645                           
  3646  0078                     ??_INTERRUPT_InterruptManager:	
  3647                           ; 1 bytes @ 0x2
  3648                           
  3649  0078                     ??_EUSART_Write:	
  3650                           ; 1 bytes @ 0x2
  3651                           
  3652  0078                     ??_INT_SetInterruptHandler:	
  3653                           ; 1 bytes @ 0x2
  3654                           
  3655  0078                     ??_initLED:	
  3656                           ; 1 bytes @ 0x2
  3657                           
  3658  0078                     ??_setLEDColor:	
  3659                           ; 1 bytes @ 0x2
  3660                           
  3661  0078                     ??___lmul:	
  3662                           ; 1 bytes @ 0x2
  3663                           
  3664  0078                     ??___lldiv:	
  3665                           ; 1 bytes @ 0x2
  3666                           
  3667  0078                     ??___awdiv:	
  3668                           ; 1 bytes @ 0x2
  3669                           
  3670  0078                     EUSART_Write@txData:	
  3671                           ; 1 bytes @ 0x2
  3672                           
  3673                           
  3674                           ; 1 bytes @ 0x2
  3675  0078                     	ds	1
  3676  0079                     ??_putch:
  3677  0079                     ??___aldiv:	
  3678                           ; 1 bytes @ 0x3
  3679                           
  3680  0079                     putch@txData:	
  3681                           ; 1 bytes @ 0x3
  3682                           
  3683  0079                     setLEDColor@red:	
  3684                           ; 1 bytes @ 0x3
  3685                           
  3686                           
  3687                           ; 1 bytes @ 0x3
  3688  0079                     	ds	1
  3689  007A                     ??_battery_voltage:
  3690  007A                     ??_setFrequency:	
  3691                           ; 1 bytes @ 0x4
  3692                           
  3693                           
  3694                           ; 1 bytes @ 0x4
  3695  007A                     	ds	1
  3696                           
  3697                           	psect	cstackBANK0
  3698  0020                     __pcstackBANK0:
  3699  0020                     ?_EUSART_SetFramingErrorHandler:
  3700  0020                     ?_EUSART_SetOverrunErrorHandler:	
  3701                           ; 1 bytes @ 0x0
  3702                           
  3703  0020                     ?_EUSART_SetErrorHandler:	
  3704                           ; 1 bytes @ 0x0
  3705                           
  3706  0020                     ?_TMR0_SetInterruptHandler:	
  3707                           ; 1 bytes @ 0x0
  3708                           
  3709  0020                     ?_TMR4_SetInterruptHandler:	
  3710                           ; 1 bytes @ 0x0
  3711                           
  3712  0020                     ?_INT_SetInterruptHandler:	
  3713                           ; 1 bytes @ 0x0
  3714                           
  3715  0020                     ?_setLEDColor:	
  3716                           ; 1 bytes @ 0x0
  3717                           
  3718  0020                     ?_printf:	
  3719                           ; 1 bytes @ 0x0
  3720                           
  3721  0020                     ?___awdiv:	
  3722                           ; 2 bytes @ 0x0
  3723                           
  3724  0020                     ?___lmul:	
  3725                           ; 2 bytes @ 0x0
  3726                           
  3727  0020                     setLEDColor@green:	
  3728                           ; 4 bytes @ 0x0
  3729                           
  3730  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3731                           ; 1 bytes @ 0x0
  3732                           
  3733  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3734                           ; 2 bytes @ 0x0
  3735                           
  3736  0020                     EUSART_SetErrorHandler@interruptHandler:	
  3737                           ; 2 bytes @ 0x0
  3738                           
  3739  0020                     INT_SetInterruptHandler@InterruptHandler:	
  3740                           ; 2 bytes @ 0x0
  3741                           
  3742  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  3743                           ; 2 bytes @ 0x0
  3744                           
  3745  0020                     TMR4_SetInterruptHandler@InterruptHandler:	
  3746                           ; 2 bytes @ 0x0
  3747                           
  3748  0020                     printf@f:	
  3749                           ; 2 bytes @ 0x0
  3750                           
  3751  0020                     ___awdiv@divisor:	
  3752                           ; 2 bytes @ 0x0
  3753                           
  3754  0020                     ___lmul@multiplier:	
  3755                           ; 2 bytes @ 0x0
  3756                           
  3757                           
  3758                           ; 4 bytes @ 0x0
  3759  0020                     	ds	1
  3760  0021                     setLEDColor@blue:
  3761                           
  3762                           ; 1 bytes @ 0x1
  3763  0021                     	ds	1
  3764  0022                     ??_printf:
  3765  0022                     ??_lowBattery:	
  3766                           ; 1 bytes @ 0x2
  3767                           
  3768  0022                     ??_startUp:	
  3769                           ; 1 bytes @ 0x2
  3770                           
  3771  0022                     ??_selectSomething:	
  3772                           ; 1 bytes @ 0x2
  3773                           
  3774  0022                     ___awdiv@dividend:	
  3775                           ; 1 bytes @ 0x2
  3776                           
  3777                           
  3778                           ; 2 bytes @ 0x2
  3779  0022                     	ds	2
  3780  0024                     ___awdiv@counter:
  3781  0024                     startUp@i:	
  3782                           ; 1 bytes @ 0x4
  3783                           
  3784  0024                     ___lmul@multiplicand:	
  3785                           ; 2 bytes @ 0x4
  3786                           
  3787                           
  3788                           ; 4 bytes @ 0x4
  3789  0024                     	ds	1
  3790  0025                     printf@ap:
  3791  0025                     ___awdiv@sign:	
  3792                           ; 1 bytes @ 0x5
  3793                           
  3794                           
  3795                           ; 1 bytes @ 0x5
  3796  0025                     	ds	1
  3797  0026                     printf@c:
  3798  0026                     ___awdiv@quotient:	
  3799                           ; 1 bytes @ 0x6
  3800                           
  3801                           
  3802                           ; 2 bytes @ 0x6
  3803  0026                     	ds	1
  3804  0027                     ??_selectFrequency:
  3805  0027                     ??_selectCurrent:	
  3806                           ; 1 bytes @ 0x7
  3807                           
  3808                           
  3809                           ; 1 bytes @ 0x7
  3810  0027                     	ds	1
  3811  0028                     ___lmul@product:
  3812                           
  3813                           ; 4 bytes @ 0x8
  3814  0028                     	ds	4
  3815  002C                     ?___lldiv:
  3816  002C                     ?___aldiv:	
  3817                           ; 4 bytes @ 0xC
  3818                           
  3819  002C                     ___lldiv@divisor:	
  3820                           ; 4 bytes @ 0xC
  3821                           
  3822  002C                     ___aldiv@divisor:	
  3823                           ; 4 bytes @ 0xC
  3824                           
  3825                           
  3826                           ; 4 bytes @ 0xC
  3827  002C                     	ds	4
  3828  0030                     ___lldiv@dividend:
  3829  0030                     ___aldiv@dividend:	
  3830                           ; 4 bytes @ 0x10
  3831                           
  3832                           
  3833                           ; 4 bytes @ 0x10
  3834  0030                     	ds	4
  3835  0034                     ___aldiv@counter:
  3836  0034                     ___lldiv@quotient:	
  3837                           ; 1 bytes @ 0x14
  3838                           
  3839                           
  3840                           ; 4 bytes @ 0x14
  3841  0034                     	ds	1
  3842  0035                     ___aldiv@sign:
  3843                           
  3844                           ; 1 bytes @ 0x15
  3845  0035                     	ds	1
  3846  0036                     ___aldiv@quotient:
  3847                           
  3848                           ; 4 bytes @ 0x16
  3849  0036                     	ds	2
  3850  0038                     ___lldiv@counter:
  3851                           
  3852                           ; 1 bytes @ 0x18
  3853  0038                     	ds	2
  3854  003A                     ?_setFrequency:
  3855  003A                     ?_battery_voltage:	
  3856                           ; 1 bytes @ 0x1A
  3857                           
  3858  003A                     setFrequency@frequency_hz:	
  3859                           ; 2 bytes @ 0x1A
  3860                           
  3861                           
  3862                           ; 2 bytes @ 0x1A
  3863  003A                     	ds	2
  3864  003C                     ?_setCurrent:
  3865  003C                     setCurrent@microamps:	
  3866                           ; 1 bytes @ 0x1C
  3867                           
  3868  003C                     setFrequency@pr4_val:	
  3869                           ; 2 bytes @ 0x1C
  3870                           
  3871                           
  3872                           ; 2 bytes @ 0x1C
  3873  003C                     	ds	2
  3874  003E                     setCurrent@Vdd_mv:
  3875                           
  3876                           ; 2 bytes @ 0x1E
  3877  003E                     	ds	2
  3878  0040                     ??_setCurrent:
  3879                           
  3880                           ; 1 bytes @ 0x20
  3881  0040                     	ds	8
  3882  0048                     setCurrent@DACValue:
  3883                           
  3884                           ; 2 bytes @ 0x28
  3885  0048                     	ds	2
  3886  004A                     ??_process_remote_command:
  3887                           
  3888                           ; 1 bytes @ 0x2A
  3889  004A                     	ds	2
  3890  004C                     process_remote_command@code:
  3891                           
  3892                           ; 1 bytes @ 0x2C
  3893  004C                     	ds	1
  3894  004D                     ??_main:
  3895                           
  3896                           ; 1 bytes @ 0x2D
  3897  004D                     	ds	1
  3898                           
  3899                           	psect	maintext
  3900  04E1                     __pmaintext:	
  3901 ;;
  3902 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3903 ;;
  3904 ;; *************** function _main *****************
  3905 ;; Defined at:
  3906 ;;		line 380 in file "main.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;		None
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : B1F/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3920 ;;      Params:         0       0       0       0       0       0       0       0
  3921 ;;      Locals:         0       0       0       0       0       0       0       0
  3922 ;;      Temps:          0       1       0       0       0       0       0       0
  3923 ;;      Totals:         0       1       0       0       0       0       0       0
  3924 ;;Total ram usage:        1 bytes
  3925 ;; Hardware stack levels required when called:    9
  3926 ;; This function calls:
  3927 ;;		_DAC_Initialize
  3928 ;;		_OPA1_Initialize
  3929 ;;		_OPA2_Initialize
  3930 ;;		_SYSTEM_Initialize
  3931 ;;		_battery_voltage
  3932 ;;		_initLED
  3933 ;;		_lowBattery
  3934 ;;		_process_remote_command
  3935 ;;		_startUp
  3936 ;; This function is called by:
  3937 ;;		Startup code after reset
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           
  3942                           ;psect for function _main
  3943  04E1                     _main:
  3944                           
  3945                           ;main.c: 383: SYSTEM_Initialize();
  3946                           
  3947                           ;incstack = 0
  3948                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3949  04E1  3186  2634  3184   	fcall	_SYSTEM_Initialize
  3950                           
  3951                           ;main.c: 384: DAC_Initialize();
  3952  04E4  3187  2770  3184   	fcall	_DAC_Initialize
  3953                           
  3954                           ;main.c: 385: OPA1_Initialize();
  3955  04E7  3187  2787  3184   	fcall	_OPA1_Initialize
  3956                           
  3957                           ;main.c: 386: OPA2_Initialize();
  3958  04EA  3187  2783  3184   	fcall	_OPA2_Initialize
  3959                           
  3960                           ;main.c: 387: initLED();
  3961  04ED  3184  242D  3184   	fcall	_initLED
  3962                           
  3963                           ;main.c: 388: (INTCONbits.GIE = 1);
  3964  04F0  178B               	bsf	11,7	;volatile
  3965                           
  3966                           ;main.c: 389: (INTCONbits.PEIE = 1);
  3967  04F1  170B               	bsf	11,6	;volatile
  3968                           
  3969                           ;main.c: 390: startUp();
  3970  04F2  3184  2471  3184   	fcall	_startUp
  3971  04F5                     l540:	
  3972                           ;main.c: 401: while(1){
  3973                           
  3974                           
  3975                           ;main.c: 403: if ((int)battery_voltage() < 2500)
  3976  04F5  3185  2541  3184   	fcall	_battery_voltage
  3977  04F8  0020               	movlb	0	; select bank0
  3978  04F9  083B               	movf	?_battery_voltage+1,w
  3979  04FA  3A80               	xorlw	128
  3980  04FB  00CD               	movwf	??_main
  3981  04FC  3089               	movlw	137
  3982  04FD  024D               	subwf	??_main,w
  3983  04FE  1D03               	skipz
  3984  04FF  2D02               	goto	u2165
  3985  0500  30C4               	movlw	196
  3986  0501  023A               	subwf	?_battery_voltage,w
  3987  0502                     u2165:
  3988  0502  1803               	skipnc
  3989  0503  2D07               	goto	l2672
  3990                           
  3991                           ;main.c: 404: {;main.c: 405: lowBattery();
  3992  0504  3185  256F  3184   	fcall	_lowBattery
  3993  0507                     l2672:
  3994                           
  3995                           ;main.c: 407: };main.c: 413: if (STATE_DONE == ir_code.state){
  3996  0507  3002               	movlw	2
  3997  0508  0671               	xorwf	_ir_code+1,w
  3998  0509  1D03               	btfss	3,2
  3999  050A  2CF5               	goto	l540
  4000                           
  4001                           ;main.c: 431: process_remote_command(&ir_code);
  4002  050B  3070               	movlw	(low (_ir_code| 0))& (0+255)
  4003  050C  3180  205E  3184   	fcall	_process_remote_command
  4004                           
  4005                           ;main.c: 434: ir_code.state = STATE_RESET;
  4006  050F  01F1               	clrf	_ir_code+1
  4007  0510  2CF5               	goto	l540
  4008  0511                     __end_of_main:
  4009                           
  4010                           	psect	text1
  4011  0471                     __ptext1:	
  4012 ;; *************** function _startUp *****************
  4013 ;; Defined at:
  4014 ;;		line 186 in file "main.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;		None
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  i               2    4[BANK0 ] int 
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  1    wreg      void 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0, pclath, cstack
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4028 ;;      Params:         0       0       0       0       0       0       0       0
  4029 ;;      Locals:         0       2       0       0       0       0       0       0
  4030 ;;      Temps:          0       2       0       0       0       0       0       0
  4031 ;;      Totals:         0       4       0       0       0       0       0       0
  4032 ;;Total ram usage:        4 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    5
  4035 ;; This function calls:
  4036 ;;		_setLEDColor
  4037 ;; This function is called by:
  4038 ;;		_main
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           
  4043                           ;psect for function _startUp
  4044  0471                     _startUp:
  4045                           
  4046                           ;main.c: 187: interfaceState = STATE_RUNNING;
  4047                           
  4048                           ;incstack = 0
  4049                           ; Regs used in _startUp: [wreg+status,2+status,0+pclath+cstack]
  4050  0471  0020               	movlb	0	; select bank0
  4051  0472  01D6               	clrf	_interfaceState
  4052                           
  4053                           ;main.c: 188: for (int i = 0; i < 5; i++){
  4054  0473  01A4               	clrf	startUp@i
  4055  0474  01A5               	clrf	startUp@i+1
  4056  0475                     l2576:
  4057                           
  4058                           ;main.c: 189: setLEDColor(0, 180, 230);
  4059  0475  30B4               	movlw	180
  4060  0476  0020               	movlb	0	; select bank0
  4061  0477  00A2               	movwf	??_startUp
  4062  0478  0822               	movf	??_startUp,w
  4063  0479  00A0               	movwf	setLEDColor@green
  4064  047A  30E6               	movlw	230
  4065  047B  00A3               	movwf	??_startUp+1
  4066  047C  0823               	movf	??_startUp+1,w
  4067  047D  00A1               	movwf	setLEDColor@blue
  4068  047E  3000               	movlw	0
  4069  047F  3186  2672  3184   	fcall	_setLEDColor
  4070                           
  4071                           ;main.c: 190: _delay((unsigned long)((100)*(4000000/4000.0)));
  4072  0482  3082               	movlw	130
  4073  0483  0020               	movlb	0	; select bank0
  4074  0484  00A2               	movwf	??_startUp
  4075  0485  30DD               	movlw	221
  4076  0486                     u2187:
  4077  0486  0B89               	decfsz	9,f
  4078  0487  2C86               	goto	u2187
  4079  0488  0BA2               	decfsz	??_startUp,f
  4080  0489  2C86               	goto	u2187
  4081  048A  3200               	nop2
  4082                           
  4083                           ;main.c: 191: setLEDColor(0, 0, 0);
  4084  048B  0020               	movlb	0	; select bank0
  4085  048C  01A0               	clrf	setLEDColor@green
  4086  048D  01A1               	clrf	setLEDColor@blue
  4087  048E  3000               	movlw	0
  4088  048F  3186  2672  3184   	fcall	_setLEDColor
  4089                           
  4090                           ;main.c: 192: _delay((unsigned long)((100)*(4000000/4000.0)));
  4091  0492  3082               	movlw	130
  4092  0493  0020               	movlb	0	; select bank0
  4093  0494  00A2               	movwf	??_startUp
  4094  0495  30DD               	movlw	221
  4095  0496                     u2197:
  4096  0496  0B89               	decfsz	9,f
  4097  0497  2C96               	goto	u2197
  4098  0498  0BA2               	decfsz	??_startUp,f
  4099  0499  2C96               	goto	u2197
  4100  049A  3200               	nop2
  4101  049B  3001               	movlw	1
  4102  049C  0020               	movlb	0	; select bank0
  4103  049D  07A4               	addwf	startUp@i,f
  4104  049E  3000               	movlw	0
  4105  049F  3DA5               	addwfc	startUp@i+1,f
  4106  04A0  0825               	movf	startUp@i+1,w
  4107  04A1  3A80               	xorlw	128
  4108  04A2  00A2               	movwf	??_startUp
  4109  04A3  3080               	movlw	128
  4110  04A4  0222               	subwf	??_startUp,w
  4111  04A5  1D03               	skipz
  4112  04A6  2CA9               	goto	u2035
  4113  04A7  3005               	movlw	5
  4114  04A8  0224               	subwf	startUp@i,w
  4115  04A9                     u2035:
  4116  04A9  1C03               	skipc
  4117  04AA  2C75               	goto	l2576
  4118                           
  4119                           ;main.c: 193: };main.c: 194: duty = 0;
  4120  04AB  0020               	movlb	0	; select bank0
  4121  04AC  01D8               	clrf	_duty
  4122  04AD  0008               	return
  4123  04AE                     __end_of_startUp:
  4124                           
  4125                           	psect	text2
  4126  005E                     __ptext2:	
  4127 ;; *************** function _process_remote_command *****************
  4128 ;; Defined at:
  4129 ;;		line 285 in file "main.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  code            1    wreg     PTR struct .
  4132 ;;		 -> ir_code(6), 
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;  code            1   44[BANK0 ] PTR struct .
  4135 ;;		 -> ir_code(6), 
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4145 ;;      Params:         0       0       0       0       0       0       0       0
  4146 ;;      Locals:         0       1       0       0       0       0       0       0
  4147 ;;      Temps:          0       2       0       0       0       0       0       0
  4148 ;;      Totals:         0       3       0       0       0       0       0       0
  4149 ;;Total ram usage:        3 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    8
  4152 ;; This function calls:
  4153 ;;		_battery_voltage
  4154 ;;		_printf
  4155 ;;		_selectCurrent
  4156 ;;		_selectFrequency
  4157 ;;		_selectSomething
  4158 ;;		_setCurrent
  4159 ;;		_setFrequency
  4160 ;;		_setLEDColor
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           
  4167                           ;psect for function _process_remote_command
  4168  005E                     _process_remote_command:
  4169                           
  4170                           ;incstack = 0
  4171                           ; Regs used in _process_remote_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4172                           ;process_remote_command@code stored from wreg
  4173  005E  0020               	movlb	0	; select bank0
  4174  005F  00CC               	movwf	process_remote_command@code
  4175                           
  4176                           ;main.c: 286: setLEDColor(0, 0, 0);
  4177  0060  01A0               	clrf	setLEDColor@green
  4178  0061  01A1               	clrf	setLEDColor@blue
  4179  0062  3000               	movlw	0
  4180  0063  3186  2672  3180   	fcall	_setLEDColor
  4181                           
  4182                           ;main.c: 288: switch(code->command){
  4183  0066  2914               	goto	l2656
  4184  0067                     l2586:
  4185                           
  4186                           ;main.c: 290: if(STATE_CURRENT == interfaceState){
  4187  0067  0356               	decf	_interfaceState,w
  4188  0068  1D03               	btfss	3,2
  4189  0069  2892               	goto	l2594
  4190                           
  4191                           ;main.c: 291: currentIndex++;
  4192  006A  3001               	movlw	1
  4193  006B  07D0               	addwf	_currentIndex,f
  4194  006C  3000               	movlw	0
  4195  006D  3DD1               	addwfc	_currentIndex+1,f
  4196                           
  4197                           ;main.c: 292: if (currentIndex > maxCurrentIndex - 1)
  4198  006E  0851               	movf	_currentIndex+1,w
  4199  006F  3A80               	xorlw	128
  4200  0070  00CA               	movwf	??_process_remote_command
  4201  0071  3080               	movlw	128
  4202  0072  024A               	subwf	??_process_remote_command,w
  4203  0073  1D03               	skipz
  4204  0074  2877               	goto	u2055
  4205  0075  300B               	movlw	11
  4206  0076  0250               	subwf	_currentIndex,w
  4207  0077                     u2055:
  4208  0077  1C03               	skipc
  4209  0078  287E               	goto	l2592
  4210                           
  4211                           ;main.c: 293: {;main.c: 294: currentIndex = maxCurrentIndex - 1;
  4212  0079  300A               	movlw	10
  4213  007A  0020               	movlb	0	; select bank0
  4214  007B  00D0               	movwf	_currentIndex
  4215  007C  3000               	movlw	0
  4216  007D  00D1               	movwf	_currentIndex+1
  4217  007E                     l2592:
  4218                           
  4219                           ;main.c: 295: };main.c: 296: setCurrent(currentValue[currentIndex],battery_voltage());
  4220  007E  0020               	movlb	0	; select bank0
  4221  007F  3550               	lslf	_currentIndex,w
  4222  0080  3EA0               	addlw	(low (_currentValue| 0))& (0+255)
  4223  0081  0086               	movwf	6
  4224  0082  0187               	clrf	7
  4225  0083  3F40               	moviw [0]fsr1
  4226  0084  00BC               	movwf	setCurrent@microamps
  4227  0085  3F41               	moviw [1]fsr1
  4228  0086  00BD               	movwf	setCurrent@microamps+1
  4229  0087  3185  2541  3180   	fcall	_battery_voltage
  4230  008A  0020               	movlb	0	; select bank0
  4231  008B  083B               	movf	?_battery_voltage+1,w
  4232  008C  00BF               	movwf	setCurrent@Vdd_mv+1
  4233  008D  083A               	movf	?_battery_voltage,w
  4234  008E  00BE               	movwf	setCurrent@Vdd_mv
  4235  008F  3181  2163  3180   	fcall	_setCurrent
  4236  0092                     l2594:
  4237                           
  4238                           ;main.c: 297: };main.c: 298: if(STATE_FREQUENCY == interfaceState){
  4239  0092  3002               	movlw	2
  4240  0093  0020               	movlb	0	; select bank0
  4241  0094  0656               	xorwf	_interfaceState,w
  4242  0095  1D03               	btfss	3,2
  4243  0096  28B7               	goto	l2602
  4244                           
  4245                           ;main.c: 299: frequencyIndex++;
  4246  0097  3001               	movlw	1
  4247  0098  07CE               	addwf	_frequencyIndex,f
  4248  0099  3000               	movlw	0
  4249  009A  3DCF               	addwfc	_frequencyIndex+1,f
  4250                           
  4251                           ;main.c: 300: if (frequencyIndex > maxFrequencyIndex - 1)
  4252  009B  084F               	movf	_frequencyIndex+1,w
  4253  009C  3A80               	xorlw	128
  4254  009D  00CA               	movwf	??_process_remote_command
  4255  009E  3080               	movlw	128
  4256  009F  024A               	subwf	??_process_remote_command,w
  4257  00A0  1D03               	skipz
  4258  00A1  28A4               	goto	u2075
  4259  00A2  3006               	movlw	6
  4260  00A3  024E               	subwf	_frequencyIndex,w
  4261  00A4                     u2075:
  4262  00A4  1C03               	skipc
  4263  00A5  28AB               	goto	l2600
  4264                           
  4265                           ;main.c: 301: {;main.c: 302: frequencyIndex = maxFrequencyIndex - 1;
  4266  00A6  3005               	movlw	5
  4267  00A7  0020               	movlb	0	; select bank0
  4268  00A8  00CE               	movwf	_frequencyIndex
  4269  00A9  3000               	movlw	0
  4270  00AA  00CF               	movwf	_frequencyIndex+1
  4271  00AB                     l2600:
  4272                           
  4273                           ;main.c: 303: };main.c: 304: setFrequency(frequencyValue[frequencyIndex]);
  4274  00AB  0020               	movlb	0	; select bank0
  4275  00AC  354E               	lslf	_frequencyIndex,w
  4276  00AD  3EB6               	addlw	(low (_frequencyValue| 0))& (0+255)
  4277  00AE  0086               	movwf	6
  4278  00AF  0187               	clrf	7
  4279  00B0  3F40               	moviw [0]fsr1
  4280  00B1  00BA               	movwf	setFrequency@frequency_hz
  4281  00B2  3F41               	moviw [1]fsr1
  4282  00B3                     L1:
  4283  00B3  00BB               	movwf	setFrequency@frequency_hz+1
  4284  00B4  3183  238B  3180   	fcall	_setFrequency
  4285  00B7                     l2602:
  4286                           
  4287                           ;main.c: 305: };main.c: 306: if(STATE_RUNNING == interfaceState){
  4288  00B7  0020               	movlb	0	; select bank0
  4289  00B8  0856               	movf	_interfaceState,w
  4290  00B9  1D03               	btfss	3,2
  4291  00BA  28BE               	goto	l2606
  4292                           
  4293                           ;main.c: 307: selectSomething();
  4294  00BB  3183  23DC  3180   	fcall	_selectSomething
  4295  00BE                     l2606:
  4296                           
  4297                           ;main.c: 308: };main.c: 309: if(STATE_LOWBATTERY == interfaceState){
  4298  00BE  3003               	movlw	3
  4299  00BF  0020               	movlb	0	; select bank0
  4300  00C0  0656               	xorwf	_interfaceState,w
  4301  00C1  1D03               	btfss	3,2
  4302  00C2  2942               	goto	l2658
  4303                           
  4304                           ;main.c: 310: selectSomething();
  4305  00C3  3183  23DC  3180   	fcall	_selectSomething
  4306  00C6  2942               	goto	l2658
  4307  00C7                     l2610:
  4308                           
  4309                           ;main.c: 314: if(STATE_CURRENT == interfaceState){
  4310  00C7  0356               	decf	_interfaceState,w
  4311  00C8  1D03               	btfss	3,2
  4312  00C9  28E5               	goto	l2620
  4313                           
  4314                           ;main.c: 315: currentIndex--;
  4315  00CA  30FF               	movlw	255
  4316  00CB  07D0               	addwf	_currentIndex,f
  4317  00CC  30FF               	movlw	255
  4318  00CD  3DD1               	addwfc	_currentIndex+1,f
  4319                           
  4320                           ;main.c: 316: if (currentIndex < 0)
  4321  00CE  1FD1               	btfss	_currentIndex+1,7
  4322  00CF  28D2               	goto	l2618
  4323                           
  4324                           ;main.c: 317: {;main.c: 318: currentIndex = 0;
  4325  00D0  01D0               	clrf	_currentIndex
  4326  00D1  01D1               	clrf	_currentIndex+1
  4327  00D2                     l2618:
  4328                           
  4329                           ;main.c: 319: };main.c: 320: setCurrent(currentValue[currentIndex],battery_voltage());
  4330  00D2  3550               	lslf	_currentIndex,w
  4331  00D3  3EA0               	addlw	(low (_currentValue| 0))& (0+255)
  4332  00D4  0086               	movwf	6
  4333  00D5  0187               	clrf	7
  4334  00D6  3F40               	moviw [0]fsr1
  4335  00D7  00BC               	movwf	setCurrent@microamps
  4336  00D8  3F41               	moviw [1]fsr1
  4337  00D9  00BD               	movwf	setCurrent@microamps+1
  4338  00DA  3185  2541  3180   	fcall	_battery_voltage
  4339  00DD  0020               	movlb	0	; select bank0
  4340  00DE  083B               	movf	?_battery_voltage+1,w
  4341  00DF  00BF               	movwf	setCurrent@Vdd_mv+1
  4342  00E0  083A               	movf	?_battery_voltage,w
  4343  00E1  00BE               	movwf	setCurrent@Vdd_mv
  4344  00E2  3181  2163  3180   	fcall	_setCurrent
  4345  00E5                     l2620:
  4346                           
  4347                           ;main.c: 321: };main.c: 322: if(STATE_FREQUENCY == interfaceState){
  4348  00E5  3002               	movlw	2
  4349  00E6  0020               	movlb	0	; select bank0
  4350  00E7  0656               	xorwf	_interfaceState,w
  4351  00E8  1D03               	btfss	3,2
  4352  00E9  28B7               	goto	l2602
  4353                           
  4354                           ;main.c: 323: frequencyIndex--;
  4355  00EA  30FF               	movlw	255
  4356  00EB  07CE               	addwf	_frequencyIndex,f
  4357  00EC  30FF               	movlw	255
  4358  00ED  3DCF               	addwfc	_frequencyIndex+1,f
  4359                           
  4360                           ;main.c: 324: if (frequencyIndex < 0)
  4361  00EE  1FCF               	btfss	_frequencyIndex+1,7
  4362  00EF  28F2               	goto	l2628
  4363                           
  4364                           ;main.c: 325: {;main.c: 326: frequencyIndex = 0;
  4365  00F0  01CE               	clrf	_frequencyIndex
  4366  00F1  01CF               	clrf	_frequencyIndex+1
  4367  00F2                     l2628:
  4368                           
  4369                           ;main.c: 327: };main.c: 328: setFrequency(frequencyValue[frequencyIndex]);
  4370  00F2  354E               	lslf	_frequencyIndex,w
  4371  00F3  3EB6               	addlw	(low (_frequencyValue| 0))& (0+255)
  4372  00F4  0086               	movwf	6
  4373  00F5  0187               	clrf	7
  4374  00F6  3F40               	moviw [0]fsr1
  4375  00F7  00BA               	movwf	setFrequency@frequency_hz
  4376  00F8  3F41               	moviw [1]fsr1
  4377  00F9  28B3               	goto	L1
  4378  00FA                     l2638:	
  4379                           ;main.c: 332: };main.c: 333: if(STATE_LOWBATTERY == interfaceState){
  4380                           
  4381                           ;main.c: 331: selectSomething();
  4382                           
  4383                           ;main.c: 329: };main.c: 330: if(STATE_RUNNING == interfaceState){
  4384                           
  4385                           
  4386                           ;main.c: 338: selectFrequency();
  4387  00FA  3185  259C  3180   	fcall	_selectFrequency
  4388                           
  4389                           ;main.c: 339: break;
  4390  00FD  2942               	goto	l2658
  4391  00FE                     l2640:
  4392                           
  4393                           ;main.c: 341: selectCurrent();
  4394  00FE  3185  25C6  3180   	fcall	_selectCurrent
  4395                           
  4396                           ;main.c: 342: break;
  4397  0101  2942               	goto	l2658
  4398  0102                     l2642:
  4399                           
  4400                           ;main.c: 344: LED_red = 0;
  4401  0102  01DD               	clrf	_LED_red
  4402                           
  4403                           ;main.c: 345: LED_green = 255;
  4404  0103  30FF               	movlw	255
  4405  0104  00CA               	movwf	??_process_remote_command
  4406  0105  084A               	movf	??_process_remote_command,w
  4407  0106  00DC               	movwf	_LED_green
  4408                           
  4409                           ;main.c: 346: LED_blue = 0;
  4410  0107  01DB               	clrf	_LED_blue
  4411                           
  4412                           ;main.c: 347: printf("\n reset select");
  4413  0108  30D7               	movlw	low (STR_3| (0+32768))
  4414  0109  00A0               	movwf	printf@f
  4415  010A  3086               	movlw	high (STR_3| (0+32768))
  4416  010B  00A1               	movwf	printf@f+1
  4417  010C  3186  2655  3180   	fcall	_printf
  4418                           
  4419                           ;main.c: 348: flag = 0;
  4420  010F  0020               	movlb	0	; select bank0
  4421  0110  01DA               	clrf	_flag
  4422                           
  4423                           ;main.c: 349: break;
  4424  0111  2942               	goto	l2658
  4425  0112                     l2652:
  4426                           
  4427                           ;main.c: 351: duty = 0;
  4428  0112  01D8               	clrf	_duty
  4429                           
  4430                           ;main.c: 352: break;
  4431  0113  2942               	goto	l2658
  4432  0114                     l2656:
  4433  0114  0020               	movlb	0	; select bank0
  4434  0115  084C               	movf	process_remote_command@code,w
  4435  0116  3E03               	addlw	3
  4436  0117  0086               	movwf	6
  4437  0118  0187               	clrf	7
  4438  0119  0801               	movf	1,w
  4439                           
  4440                           ; Switch size 1, requested type "simple"
  4441                           ; Number of cases is 13, Range of values is 8 to 176
  4442                           ; switch strategies available:
  4443                           ; Name         Instructions Cycles
  4444                           ; simple_byte           40    21 (average)
  4445                           ; jumptable            263     9 (fixed)
  4446                           ;	Chosen strategy is simple_byte
  4447  011A  3A08               	xorlw	8	; case 8
  4448  011B  1903               	skipnz
  4449  011C  2902               	goto	l2642
  4450  011D  3A18               	xorlw	24	; case 16
  4451  011E  1903               	skipnz
  4452  011F  28FE               	goto	l2640
  4453  0120  3A08               	xorlw	8	; case 24
  4454  0121  1903               	skipnz
  4455  0122  2942               	goto	l2658
  4456  0123  3A30               	xorlw	48	; case 40
  4457  0124  1903               	skipnz
  4458  0125  2942               	goto	l2658
  4459  0126  3A60               	xorlw	96	; case 72
  4460  0127  1903               	skipnz
  4461  0128  2942               	goto	l2658
  4462  0129  3A18               	xorlw	24	; case 80
  4463  012A  1903               	skipnz
  4464  012B  28FA               	goto	l2638
  4465  012C  3A08               	xorlw	8	; case 88
  4466  012D  1903               	skipnz
  4467  012E  2942               	goto	l2658
  4468  012F  3A30               	xorlw	48	; case 104
  4469  0130  1903               	skipnz
  4470  0131  2942               	goto	l2658
  4471  0132  3AE0               	xorlw	224	; case 136
  4472  0133  1903               	skipnz
  4473  0134  2912               	goto	l2652
  4474  0135  3A10               	xorlw	16	; case 152
  4475  0136  1903               	skipnz
  4476  0137  2942               	goto	l2658
  4477  0138  3A38               	xorlw	56	; case 160
  4478  0139  1903               	skipnz
  4479  013A  2867               	goto	l2586
  4480  013B  3A08               	xorlw	8	; case 168
  4481  013C  1903               	skipnz
  4482  013D  2942               	goto	l2658
  4483  013E  3A18               	xorlw	24	; case 176
  4484  013F  1903               	skipnz
  4485  0140  28C7               	goto	l2610
  4486  0141  2942               	goto	l2658
  4487  0142                     l2658:
  4488                           
  4489                           ;main.c: 371: setLEDColor(LED_red, LED_green, LED_blue);
  4490  0142  0020               	movlb	0	; select bank0
  4491  0143  085C               	movf	_LED_green,w
  4492  0144  00CA               	movwf	??_process_remote_command
  4493  0145  084A               	movf	??_process_remote_command,w
  4494  0146  00A0               	movwf	setLEDColor@green
  4495  0147  085B               	movf	_LED_blue,w
  4496  0148  00CB               	movwf	??_process_remote_command+1
  4497  0149  084B               	movf	??_process_remote_command+1,w
  4498  014A  00A1               	movwf	setLEDColor@blue
  4499  014B  085D               	movf	_LED_red,w
  4500  014C  3186  2672  3180   	fcall	_setLEDColor
  4501                           
  4502                           ;main.c: 372: _delay((unsigned long)((1000)*(4000000/4000.0)));
  4503  014F  3006               	movlw	6
  4504  0150  0020               	movlb	0	; select bank0
  4505  0151  00CB               	movwf	??_process_remote_command+1
  4506  0152  3013               	movlw	19
  4507  0153  00CA               	movwf	??_process_remote_command
  4508  0154  30AD               	movlw	173
  4509  0155                     u2207:
  4510  0155  0B89               	decfsz	9,f
  4511  0156  2955               	goto	u2207
  4512  0157  0BCA               	decfsz	??_process_remote_command,f
  4513  0158  2955               	goto	u2207
  4514  0159  0BCB               	decfsz	??_process_remote_command+1,f
  4515  015A  2955               	goto	u2207
  4516  015B  3200               	nop2
  4517                           
  4518                           ;main.c: 373: setLEDColor(0, 0, 0);
  4519  015C  0020               	movlb	0	; select bank0
  4520  015D  01A0               	clrf	setLEDColor@green
  4521  015E  01A1               	clrf	setLEDColor@blue
  4522  015F  3000               	movlw	0
  4523  0160  3186  2672         	fcall	_setLEDColor
  4524  0162  0008               	return
  4525  0163                     __end_of_process_remote_command:
  4526                           
  4527                           	psect	text3
  4528  038B                     __ptext3:	
  4529 ;; *************** function _setFrequency *****************
  4530 ;; Defined at:
  4531 ;;		line 246 in file "main.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;  frequency_hz    2   26[BANK0 ] unsigned int 
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;  pr4_val         2   28[BANK0 ] int 
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  1    wreg      void 
  4538 ;; Registers used:
  4539 ;;		wreg, status,2, status,0, pclath, cstack
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4545 ;;      Params:         0       2       0       0       0       0       0       0
  4546 ;;      Locals:         0       2       0       0       0       0       0       0
  4547 ;;      Temps:          1       0       0       0       0       0       0       0
  4548 ;;      Totals:         1       4       0       0       0       0       0       0
  4549 ;;Total ram usage:        5 bytes
  4550 ;; Hardware stack levels used:    1
  4551 ;; Hardware stack levels required when called:    5
  4552 ;; This function calls:
  4553 ;;		___aldiv
  4554 ;;		___lmul
  4555 ;; This function is called by:
  4556 ;;		_process_remote_command
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           
  4561                           ;psect for function _setFrequency
  4562  038B                     _setFrequency:
  4563                           
  4564                           ;main.c: 262: int16_t pr4_val = 1000000L / (96L * frequency_hz);
  4565                           
  4566                           ;incstack = 0
  4567                           ; Regs used in _setFrequency: [wreg+status,2+status,0+pclath+cstack]
  4568  038B  0020               	movlb	0	; select bank0
  4569  038C  083A               	movf	setFrequency@frequency_hz,w
  4570  038D  00A0               	movwf	___lmul@multiplier
  4571  038E  083B               	movf	setFrequency@frequency_hz+1,w
  4572  038F  00A1               	movwf	___lmul@multiplier+1
  4573  0390  01A2               	clrf	___lmul@multiplier+2
  4574  0391  01A3               	clrf	___lmul@multiplier+3
  4575  0392  3000               	movlw	0
  4576  0393  00A7               	movwf	___lmul@multiplicand+3
  4577  0394  3000               	movlw	0
  4578  0395  00A6               	movwf	___lmul@multiplicand+2
  4579  0396  3000               	movlw	0
  4580  0397  00A5               	movwf	___lmul@multiplicand+1
  4581  0398  3060               	movlw	96
  4582  0399  00A4               	movwf	___lmul@multiplicand
  4583  039A  3185  2511  3183   	fcall	___lmul
  4584  039D  0020               	movlb	0	; select bank0
  4585  039E  0823               	movf	?___lmul+3,w
  4586  039F  00AF               	movwf	___aldiv@divisor+3
  4587  03A0  0822               	movf	?___lmul+2,w
  4588  03A1  00AE               	movwf	___aldiv@divisor+2
  4589  03A2  0821               	movf	?___lmul+1,w
  4590  03A3  00AD               	movwf	___aldiv@divisor+1
  4591  03A4  0820               	movf	?___lmul,w
  4592  03A5  00AC               	movwf	___aldiv@divisor
  4593  03A6  3000               	movlw	0
  4594  03A7  00B3               	movwf	___aldiv@dividend+3
  4595  03A8  300F               	movlw	15
  4596  03A9  00B2               	movwf	___aldiv@dividend+2
  4597  03AA  3042               	movlw	66
  4598  03AB  00B1               	movwf	___aldiv@dividend+1
  4599  03AC  3040               	movlw	64
  4600  03AD  00B0               	movwf	___aldiv@dividend
  4601  03AE  3181  21FF  3183   	fcall	___aldiv
  4602  03B1  0020               	movlb	0	; select bank0
  4603  03B2  082D               	movf	?___aldiv+1,w
  4604  03B3  00BD               	movwf	setFrequency@pr4_val+1
  4605  03B4  082C               	movf	?___aldiv,w
  4606  03B5  00BC               	movwf	setFrequency@pr4_val
  4607                           
  4608                           ;main.c: 263: if (pr4_val > 255){
  4609  03B6  083D               	movf	setFrequency@pr4_val+1,w
  4610  03B7  3A80               	xorlw	128
  4611  03B8  00FA               	movwf	??_setFrequency
  4612  03B9  3081               	movlw	129
  4613  03BA  027A               	subwf	??_setFrequency,w
  4614  03BB  1D03               	skipz
  4615  03BC  2BBF               	goto	u2015
  4616  03BD  3000               	movlw	0
  4617  03BE  023C               	subwf	setFrequency@pr4_val,w
  4618  03BF                     u2015:
  4619  03BF  1C03               	skipc
  4620  03C0  2BC6               	goto	l502
  4621                           
  4622                           ;main.c: 264: pr4_val = 255;
  4623  03C1  30FF               	movlw	255
  4624  03C2  0020               	movlb	0	; select bank0
  4625  03C3  00BC               	movwf	setFrequency@pr4_val
  4626  03C4  3000               	movlw	0
  4627  03C5  00BD               	movwf	setFrequency@pr4_val+1
  4628  03C6                     l502:
  4629                           
  4630                           ;main.c: 265: };main.c: 266: if (pr4_val < 130){
  4631  03C6  0020               	movlb	0	; select bank0
  4632  03C7  083D               	movf	setFrequency@pr4_val+1,w
  4633  03C8  3A80               	xorlw	128
  4634  03C9  00FA               	movwf	??_setFrequency
  4635  03CA  3080               	movlw	128
  4636  03CB  027A               	subwf	??_setFrequency,w
  4637  03CC  1D03               	skipz
  4638  03CD  2BD0               	goto	u2025
  4639  03CE  3082               	movlw	130
  4640  03CF  023C               	subwf	setFrequency@pr4_val,w
  4641  03D0                     u2025:
  4642  03D0  1803               	skipnc
  4643  03D1  2BD7               	goto	l503
  4644                           
  4645                           ;main.c: 267: pr4_val = 130;
  4646  03D2  3082               	movlw	130
  4647  03D3  0020               	movlb	0	; select bank0
  4648  03D4  00BC               	movwf	setFrequency@pr4_val
  4649  03D5  3000               	movlw	0
  4650  03D6  00BD               	movwf	setFrequency@pr4_val+1
  4651  03D7                     l503:
  4652                           
  4653                           ;main.c: 268: };main.c: 269: PR4 = pr4_val;
  4654  03D7  0020               	movlb	0	; select bank0
  4655  03D8  083C               	movf	setFrequency@pr4_val,w
  4656  03D9  0028               	movlb	8	; select bank8
  4657  03DA  0096               	movwf	22	;volatile
  4658  03DB  0008               	return
  4659  03DC                     __end_of_setFrequency:
  4660                           
  4661                           	psect	text4
  4662  0163                     __ptext4:	
  4663 ;; *************** function _setCurrent *****************
  4664 ;; Defined at:
  4665 ;;		line 235 in file "main.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  microamps       2   28[BANK0 ] int 
  4668 ;;  Vdd_mv          2   30[BANK0 ] int 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  DACValue        2   40[BANK0 ] int 
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      void 
  4673 ;; Registers used:
  4674 ;;		wreg, status,2, status,0, pclath, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4680 ;;      Params:         0       4       0       0       0       0       0       0
  4681 ;;      Locals:         0       2       0       0       0       0       0       0
  4682 ;;      Temps:          0       8       0       0       0       0       0       0
  4683 ;;      Totals:         0      14       0       0       0       0       0       0
  4684 ;;Total ram usage:       14 bytes
  4685 ;; Hardware stack levels used:    1
  4686 ;; Hardware stack levels required when called:    5
  4687 ;; This function calls:
  4688 ;;		___aldiv
  4689 ;;		___awdiv
  4690 ;;		___lldiv
  4691 ;;		___lmul
  4692 ;; This function is called by:
  4693 ;;		_process_remote_command
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           
  4698                           ;psect for function _setCurrent
  4699  0163                     _setCurrent:
  4700                           
  4701                           ;main.c: 237: Vdac_mv = Vdd_mv - ((uint32_t)(4700) * microamps + 500) / 1000;
  4702                           
  4703                           ;incstack = 0
  4704                           ; Regs used in _setCurrent: [wreg+status,2+status,0+pclath+cstack]
  4705  0163  3000               	movlw	0
  4706  0164  0020               	movlb	0	; select bank0
  4707  0165  00AF               	movwf	___lldiv@divisor+3
  4708  0166  3000               	movlw	0
  4709  0167  00AE               	movwf	___lldiv@divisor+2
  4710  0168  3003               	movlw	3
  4711  0169  00AD               	movwf	___lldiv@divisor+1
  4712  016A  30E8               	movlw	232
  4713  016B  00AC               	movwf	___lldiv@divisor
  4714  016C  30F4               	movlw	244
  4715  016D  00C0               	movwf	??_setCurrent
  4716  016E  3001               	movlw	1
  4717  016F  00C1               	movwf	??_setCurrent+1
  4718  0170  3000               	movlw	0
  4719  0171  00C2               	movwf	??_setCurrent+2
  4720  0172  3000               	movlw	0
  4721  0173  00C3               	movwf	??_setCurrent+3
  4722  0174  083C               	movf	setCurrent@microamps,w
  4723  0175  00A0               	movwf	___lmul@multiplier
  4724  0176  083D               	movf	setCurrent@microamps+1,w
  4725  0177  00A1               	movwf	___lmul@multiplier+1
  4726  0178  0D89               	rlf	9,f
  4727  0179  3B89               	subwfb	9,f
  4728  017A  0989               	comf	9,f
  4729  017B  00A2               	movwf	___lmul@multiplier+2
  4730  017C  00A3               	movwf	___lmul@multiplier+3
  4731  017D  3000               	movlw	0
  4732  017E  00A7               	movwf	___lmul@multiplicand+3
  4733  017F  3000               	movlw	0
  4734  0180  00A6               	movwf	___lmul@multiplicand+2
  4735  0181  3012               	movlw	18
  4736  0182  00A5               	movwf	___lmul@multiplicand+1
  4737  0183  305C               	movlw	92
  4738  0184  00A4               	movwf	___lmul@multiplicand
  4739  0185  3185  2511  3181   	fcall	___lmul
  4740  0188  0020               	movlb	0	; select bank0
  4741  0189  0820               	movf	?___lmul,w
  4742  018A  07C0               	addwf	??_setCurrent,f
  4743  018B  0821               	movf	?___lmul+1,w
  4744  018C  3DC1               	addwfc	??_setCurrent+1,f
  4745  018D  0822               	movf	?___lmul+2,w
  4746  018E  3DC2               	addwfc	??_setCurrent+2,f
  4747  018F  0823               	movf	?___lmul+3,w
  4748  0190  3DC3               	addwfc	??_setCurrent+3,f
  4749  0191  0843               	movf	??_setCurrent+3,w
  4750  0192  00B3               	movwf	___lldiv@dividend+3
  4751  0193  0842               	movf	??_setCurrent+2,w
  4752  0194  00B2               	movwf	___lldiv@dividend+2
  4753  0195  0841               	movf	??_setCurrent+1,w
  4754  0196  00B1               	movwf	___lldiv@dividend+1
  4755  0197  0840               	movf	??_setCurrent,w
  4756  0198  00B0               	movwf	___lldiv@dividend
  4757  0199  3182  22E6  3181   	fcall	___lldiv
  4758  019C  0020               	movlb	0	; select bank0
  4759  019D  082C               	movf	?___lldiv,w
  4760  019E  023E               	subwf	setCurrent@Vdd_mv,w
  4761  019F  00E0               	movwf	_Vdac_mv
  4762  01A0  082D               	movf	?___lldiv+1,w
  4763  01A1  3B3F               	subwfb	setCurrent@Vdd_mv+1,w
  4764  01A2  00E1               	movwf	_Vdac_mv+1
  4765                           
  4766                           ;main.c: 238: int DACValue = (256L * Vdac_mv + Vdd_mv/2) / Vdd_mv;
  4767  01A3  083E               	movf	setCurrent@Vdd_mv,w
  4768  01A4  00AC               	movwf	___aldiv@divisor
  4769  01A5  083F               	movf	setCurrent@Vdd_mv+1,w
  4770  01A6  00AD               	movwf	___aldiv@divisor+1
  4771  01A7  0D89               	rlf	9,f
  4772  01A8  3B89               	subwfb	9,f
  4773  01A9  0989               	comf	9,f
  4774  01AA  00AE               	movwf	___aldiv@divisor+2
  4775  01AB  00AF               	movwf	___aldiv@divisor+3
  4776  01AC  3002               	movlw	2
  4777  01AD  00A0               	movwf	___awdiv@divisor
  4778  01AE  3000               	movlw	0
  4779  01AF  00A1               	movwf	___awdiv@divisor+1
  4780  01B0  083F               	movf	setCurrent@Vdd_mv+1,w
  4781  01B1  00A3               	movwf	___awdiv@dividend+1
  4782  01B2  083E               	movf	setCurrent@Vdd_mv,w
  4783  01B3  00A2               	movwf	___awdiv@dividend
  4784  01B4  3183  2339  3181   	fcall	___awdiv
  4785  01B7  0020               	movlb	0	; select bank0
  4786  01B8  0820               	movf	?___awdiv,w
  4787  01B9  00C0               	movwf	??_setCurrent
  4788  01BA  0821               	movf	?___awdiv+1,w
  4789  01BB  00C1               	movwf	??_setCurrent+1
  4790  01BC  3000               	movlw	0
  4791  01BD  1BC1               	btfsc	??_setCurrent+1,7
  4792  01BE  30FF               	movlw	255
  4793  01BF  00C2               	movwf	??_setCurrent+2
  4794  01C0  00C3               	movwf	??_setCurrent+3
  4795  01C1  0860               	movf	_Vdac_mv,w
  4796  01C2  00C4               	movwf	??_setCurrent+4
  4797  01C3  0861               	movf	_Vdac_mv+1,w
  4798  01C4  00C5               	movwf	??_setCurrent+5
  4799  01C5  01C6               	clrf	??_setCurrent+6
  4800  01C6  01C7               	clrf	??_setCurrent+7
  4801  01C7  3008               	movlw	8
  4802  01C8                     u1985:
  4803  01C8  35C4               	lslf	??_setCurrent+4,f
  4804  01C9  0DC5               	rlf	??_setCurrent+5,f
  4805  01CA  0DC6               	rlf	??_setCurrent+6,f
  4806  01CB  0DC7               	rlf	??_setCurrent+7,f
  4807  01CC  0B89               	decfsz	9,f
  4808  01CD  29C8               	goto	u1985
  4809  01CE  0844               	movf	??_setCurrent+4,w
  4810  01CF  07C0               	addwf	??_setCurrent,f
  4811  01D0  0845               	movf	??_setCurrent+5,w
  4812  01D1  3DC1               	addwfc	??_setCurrent+1,f
  4813  01D2  0846               	movf	??_setCurrent+6,w
  4814  01D3  3DC2               	addwfc	??_setCurrent+2,f
  4815  01D4  0847               	movf	??_setCurrent+7,w
  4816  01D5  3DC3               	addwfc	??_setCurrent+3,f
  4817  01D6  0843               	movf	??_setCurrent+3,w
  4818  01D7  00B3               	movwf	___aldiv@dividend+3
  4819  01D8  0842               	movf	??_setCurrent+2,w
  4820  01D9  00B2               	movwf	___aldiv@dividend+2
  4821  01DA  0841               	movf	??_setCurrent+1,w
  4822  01DB  00B1               	movwf	___aldiv@dividend+1
  4823  01DC  0840               	movf	??_setCurrent,w
  4824  01DD  00B0               	movwf	___aldiv@dividend
  4825  01DE  3181  21FF  3181   	fcall	___aldiv
  4826  01E1  0020               	movlb	0	; select bank0
  4827  01E2  082D               	movf	?___aldiv+1,w
  4828  01E3  00C9               	movwf	setCurrent@DACValue+1
  4829  01E4  082C               	movf	?___aldiv,w
  4830  01E5  00C8               	movwf	setCurrent@DACValue
  4831                           
  4832                           ;main.c: 239: if(DACValue > 255){DACValue = 255;}
  4833  01E6  0849               	movf	setCurrent@DACValue+1,w
  4834  01E7  3A80               	xorlw	128
  4835  01E8  00C0               	movwf	??_setCurrent
  4836  01E9  3081               	movlw	129
  4837  01EA  0240               	subwf	??_setCurrent,w
  4838  01EB  1D03               	skipz
  4839  01EC  29EF               	goto	u1995
  4840  01ED  3000               	movlw	0
  4841  01EE  0248               	subwf	setCurrent@DACValue,w
  4842  01EF                     u1995:
  4843  01EF  1C03               	skipc
  4844  01F0  29F6               	goto	l2506
  4845  01F1  30FF               	movlw	255
  4846  01F2  0020               	movlb	0	; select bank0
  4847  01F3  00C8               	movwf	setCurrent@DACValue
  4848  01F4  3000               	movlw	0
  4849  01F5  00C9               	movwf	setCurrent@DACValue+1
  4850  01F6                     l2506:
  4851                           
  4852                           ;main.c: 240: if(DACValue < 0){DACValue = 0;}
  4853  01F6  0020               	movlb	0	; select bank0
  4854  01F7  1FC9               	btfss	setCurrent@DACValue+1,7
  4855  01F8  29FB               	goto	l2510
  4856  01F9  01C8               	clrf	setCurrent@DACValue
  4857  01FA  01C9               	clrf	setCurrent@DACValue+1
  4858  01FB                     l2510:
  4859                           
  4860                           ;main.c: 241: DAC1CON1 = DACValue;
  4861  01FB  0848               	movf	setCurrent@DACValue,w
  4862  01FC  0022               	movlb	2	; select bank2
  4863  01FD  0099               	movwf	25	;volatile
  4864  01FE  0008               	return
  4865  01FF                     __end_of_setCurrent:
  4866                           
  4867                           	psect	text5
  4868  0511                     __ptext5:	
  4869 ;; *************** function ___lmul *****************
  4870 ;; Defined at:
  4871 ;;		line 15 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/Umul32.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4874 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  product         4    8[BANK0 ] unsigned long 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  4    0[BANK0 ] unsigned long 
  4879 ;; Registers used:
  4880 ;;		wreg, status,2, status,0
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4886 ;;      Params:         0       8       0       0       0       0       0       0
  4887 ;;      Locals:         0       4       0       0       0       0       0       0
  4888 ;;      Temps:          0       0       0       0       0       0       0       0
  4889 ;;      Totals:         0      12       0       0       0       0       0       0
  4890 ;;Total ram usage:       12 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:    4
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_setCurrent
  4897 ;;		_setFrequency
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           
  4902                           ;psect for function ___lmul
  4903  0511                     ___lmul:
  4904                           
  4905                           ;incstack = 0
  4906                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4907  0511  3000               	movlw	0
  4908  0512  0020               	movlb	0	; select bank0
  4909  0513  00AB               	movwf	___lmul@product+3
  4910  0514  3000               	movlw	0
  4911  0515  00AA               	movwf	___lmul@product+2
  4912  0516  3000               	movlw	0
  4913  0517  00A9               	movwf	___lmul@product+1
  4914  0518  3000               	movlw	0
  4915  0519  00A8               	movwf	___lmul@product
  4916  051A                     l1886:
  4917  051A  1C20               	btfss	___lmul@multiplier,0
  4918  051B  2D24               	goto	l1890
  4919  051C  0824               	movf	___lmul@multiplicand,w
  4920  051D  07A8               	addwf	___lmul@product,f
  4921  051E  0825               	movf	___lmul@multiplicand+1,w
  4922  051F  3DA9               	addwfc	___lmul@product+1,f
  4923  0520  0826               	movf	___lmul@multiplicand+2,w
  4924  0521  3DAA               	addwfc	___lmul@product+2,f
  4925  0522  0827               	movf	___lmul@multiplicand+3,w
  4926  0523  3DAB               	addwfc	___lmul@product+3,f
  4927  0524                     l1890:
  4928  0524  3001               	movlw	1
  4929  0525                     u995:
  4930  0525  35A4               	lslf	___lmul@multiplicand,f
  4931  0526  0DA5               	rlf	___lmul@multiplicand+1,f
  4932  0527  0DA6               	rlf	___lmul@multiplicand+2,f
  4933  0528  0DA7               	rlf	___lmul@multiplicand+3,f
  4934  0529  0B89               	decfsz	9,f
  4935  052A  2D25               	goto	u995
  4936  052B  3001               	movlw	1
  4937  052C                     u1005:
  4938  052C  36A3               	lsrf	___lmul@multiplier+3,f
  4939  052D  0CA2               	rrf	___lmul@multiplier+2,f
  4940  052E  0CA1               	rrf	___lmul@multiplier+1,f
  4941  052F  0CA0               	rrf	___lmul@multiplier,f
  4942  0530  0B89               	decfsz	9,f
  4943  0531  2D2C               	goto	u1005
  4944  0532  0823               	movf	___lmul@multiplier+3,w
  4945  0533  0422               	iorwf	___lmul@multiplier+2,w
  4946  0534  0421               	iorwf	___lmul@multiplier+1,w
  4947  0535  0420               	iorwf	___lmul@multiplier,w
  4948  0536  1D03               	skipz
  4949  0537  2D1A               	goto	l1886
  4950  0538  082B               	movf	___lmul@product+3,w
  4951  0539  00A3               	movwf	?___lmul+3
  4952  053A  082A               	movf	___lmul@product+2,w
  4953  053B  00A2               	movwf	?___lmul+2
  4954  053C  0829               	movf	___lmul@product+1,w
  4955  053D  00A1               	movwf	?___lmul+1
  4956  053E  0828               	movf	___lmul@product,w
  4957  053F  00A0               	movwf	?___lmul
  4958  0540  0008               	return
  4959  0541                     __end_of___lmul:
  4960                           
  4961                           	psect	text6
  4962  02E6                     __ptext6:	
  4963 ;; *************** function ___lldiv *****************
  4964 ;; Defined at:
  4965 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/__lldiv.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  divisor         4   12[BANK0 ] unsigned long 
  4968 ;;  dividend        4   16[BANK0 ] unsigned long 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  quotient        4   20[BANK0 ] unsigned long 
  4971 ;;  counter         1   24[BANK0 ] unsigned char 
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  4   12[BANK0 ] unsigned long 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4981 ;;      Params:         0       8       0       0       0       0       0       0
  4982 ;;      Locals:         0       5       0       0       0       0       0       0
  4983 ;;      Temps:          1       0       0       0       0       0       0       0
  4984 ;;      Totals:         1      13       0       0       0       0       0       0
  4985 ;;Total ram usage:       14 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    4
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		_setCurrent
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           
  4996                           ;psect for function ___lldiv
  4997  02E6                     ___lldiv:
  4998                           
  4999                           ;incstack = 0
  5000                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5001  02E6  3000               	movlw	0
  5002  02E7  0020               	movlb	0	; select bank0
  5003  02E8  00B7               	movwf	___lldiv@quotient+3
  5004  02E9  3000               	movlw	0
  5005  02EA  00B6               	movwf	___lldiv@quotient+2
  5006  02EB  3000               	movlw	0
  5007  02EC  00B5               	movwf	___lldiv@quotient+1
  5008  02ED  3000               	movlw	0
  5009  02EE  00B4               	movwf	___lldiv@quotient
  5010  02EF  082F               	movf	___lldiv@divisor+3,w
  5011  02F0  042E               	iorwf	___lldiv@divisor+2,w
  5012  02F1  042D               	iorwf	___lldiv@divisor+1,w
  5013  02F2  042C               	iorwf	___lldiv@divisor,w
  5014  02F3  1903               	skipnz
  5015  02F4  2B30               	goto	l2376
  5016  02F5  01B8               	clrf	___lldiv@counter
  5017  02F6  0AB8               	incf	___lldiv@counter,f
  5018  02F7                     l2362:
  5019  02F7  1BAF               	btfsc	___lldiv@divisor+3,7
  5020  02F8  2B05               	goto	l2364
  5021  02F9  3001               	movlw	1
  5022  02FA                     u1705:
  5023  02FA  35AC               	lslf	___lldiv@divisor,f
  5024  02FB  0DAD               	rlf	___lldiv@divisor+1,f
  5025  02FC  0DAE               	rlf	___lldiv@divisor+2,f
  5026  02FD  0DAF               	rlf	___lldiv@divisor+3,f
  5027  02FE  0B89               	decfsz	9,f
  5028  02FF  2AFA               	goto	u1705
  5029  0300  3001               	movlw	1
  5030  0301  00F8               	movwf	??___lldiv
  5031  0302  0878               	movf	??___lldiv,w
  5032  0303  07B8               	addwf	___lldiv@counter,f
  5033  0304  2AF7               	goto	l2362
  5034  0305                     l2364:
  5035  0305  3001               	movlw	1
  5036  0306                     u1725:
  5037  0306  35B4               	lslf	___lldiv@quotient,f
  5038  0307  0DB5               	rlf	___lldiv@quotient+1,f
  5039  0308  0DB6               	rlf	___lldiv@quotient+2,f
  5040  0309  0DB7               	rlf	___lldiv@quotient+3,f
  5041  030A  0B89               	decfsz	9,f
  5042  030B  2B06               	goto	u1725
  5043  030C  082F               	movf	___lldiv@divisor+3,w
  5044  030D  0233               	subwf	___lldiv@dividend+3,w
  5045  030E  1D03               	skipz
  5046  030F  2B1A               	goto	u1735
  5047  0310  082E               	movf	___lldiv@divisor+2,w
  5048  0311  0232               	subwf	___lldiv@dividend+2,w
  5049  0312  1D03               	skipz
  5050  0313  2B1A               	goto	u1735
  5051  0314  082D               	movf	___lldiv@divisor+1,w
  5052  0315  0231               	subwf	___lldiv@dividend+1,w
  5053  0316  1D03               	skipz
  5054  0317  2B1A               	goto	u1735
  5055  0318  082C               	movf	___lldiv@divisor,w
  5056  0319  0230               	subwf	___lldiv@dividend,w
  5057  031A                     u1735:
  5058  031A  1C03               	skipc
  5059  031B  2B25               	goto	l2372
  5060  031C  082C               	movf	___lldiv@divisor,w
  5061  031D  02B0               	subwf	___lldiv@dividend,f
  5062  031E  082D               	movf	___lldiv@divisor+1,w
  5063  031F  3BB1               	subwfb	___lldiv@dividend+1,f
  5064  0320  082E               	movf	___lldiv@divisor+2,w
  5065  0321  3BB2               	subwfb	___lldiv@dividend+2,f
  5066  0322  082F               	movf	___lldiv@divisor+3,w
  5067  0323  3BB3               	subwfb	___lldiv@dividend+3,f
  5068  0324  1434               	bsf	___lldiv@quotient,0
  5069  0325                     l2372:
  5070  0325  3001               	movlw	1
  5071  0326                     u1745:
  5072  0326  36AF               	lsrf	___lldiv@divisor+3,f
  5073  0327  0CAE               	rrf	___lldiv@divisor+2,f
  5074  0328  0CAD               	rrf	___lldiv@divisor+1,f
  5075  0329  0CAC               	rrf	___lldiv@divisor,f
  5076  032A  0B89               	decfsz	9,f
  5077  032B  2B26               	goto	u1745
  5078  032C  3001               	movlw	1
  5079  032D  02B8               	subwf	___lldiv@counter,f
  5080  032E  1D03               	btfss	3,2
  5081  032F  2B05               	goto	l2364
  5082  0330                     l2376:
  5083  0330  0837               	movf	___lldiv@quotient+3,w
  5084  0331  00AF               	movwf	?___lldiv+3
  5085  0332  0836               	movf	___lldiv@quotient+2,w
  5086  0333  00AE               	movwf	?___lldiv+2
  5087  0334  0835               	movf	___lldiv@quotient+1,w
  5088  0335  00AD               	movwf	?___lldiv+1
  5089  0336  0834               	movf	___lldiv@quotient,w
  5090  0337  00AC               	movwf	?___lldiv
  5091  0338  0008               	return
  5092  0339                     __end_of___lldiv:
  5093                           
  5094                           	psect	text7
  5095  0339                     __ptext7:	
  5096 ;; *************** function ___awdiv *****************
  5097 ;; Defined at:
  5098 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/awdiv.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;  divisor         2    0[BANK0 ] int 
  5101 ;;  dividend        2    2[BANK0 ] int 
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;  quotient        2    6[BANK0 ] int 
  5104 ;;  sign            1    5[BANK0 ] unsigned char 
  5105 ;;  counter         1    4[BANK0 ] unsigned char 
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  2    0[BANK0 ] int 
  5108 ;; Registers used:
  5109 ;;		wreg, status,2, status,0
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5115 ;;      Params:         0       4       0       0       0       0       0       0
  5116 ;;      Locals:         0       4       0       0       0       0       0       0
  5117 ;;      Temps:          1       0       0       0       0       0       0       0
  5118 ;;      Totals:         1       8       0       0       0       0       0       0
  5119 ;;Total ram usage:        9 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:    4
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_setCurrent
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           
  5130                           ;psect for function ___awdiv
  5131  0339                     ___awdiv:
  5132                           
  5133                           ;incstack = 0
  5134                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5135  0339  0020               	movlb	0	; select bank0
  5136  033A  01A5               	clrf	___awdiv@sign
  5137  033B  1FA1               	btfss	___awdiv@divisor+1,7
  5138  033C  2B44               	goto	l2428
  5139  033D  09A0               	comf	___awdiv@divisor,f
  5140  033E  09A1               	comf	___awdiv@divisor+1,f
  5141  033F  0AA0               	incf	___awdiv@divisor,f
  5142  0340  1903               	skipnz
  5143  0341  0AA1               	incf	___awdiv@divisor+1,f
  5144  0342  01A5               	clrf	___awdiv@sign
  5145  0343  0AA5               	incf	___awdiv@sign,f
  5146  0344                     l2428:
  5147  0344  1FA3               	btfss	___awdiv@dividend+1,7
  5148  0345  2B4F               	goto	l2434
  5149  0346  09A2               	comf	___awdiv@dividend,f
  5150  0347  09A3               	comf	___awdiv@dividend+1,f
  5151  0348  0AA2               	incf	___awdiv@dividend,f
  5152  0349  1903               	skipnz
  5153  034A  0AA3               	incf	___awdiv@dividend+1,f
  5154  034B  3001               	movlw	1
  5155  034C  00F8               	movwf	??___awdiv
  5156  034D  0878               	movf	??___awdiv,w
  5157  034E  06A5               	xorwf	___awdiv@sign,f
  5158  034F                     l2434:
  5159  034F  01A6               	clrf	___awdiv@quotient
  5160  0350  01A7               	clrf	___awdiv@quotient+1
  5161  0351  0820               	movf	___awdiv@divisor,w
  5162  0352  0421               	iorwf	___awdiv@divisor+1,w
  5163  0353  1903               	btfsc	3,2
  5164  0354  2B7E               	goto	l2456
  5165  0355  01A4               	clrf	___awdiv@counter
  5166  0356  0AA4               	incf	___awdiv@counter,f
  5167  0357                     l2444:
  5168  0357  1BA1               	btfsc	___awdiv@divisor+1,7
  5169  0358  2B63               	goto	l2446
  5170  0359  3001               	movlw	1
  5171  035A                     u1895:
  5172  035A  35A0               	lslf	___awdiv@divisor,f
  5173  035B  0DA1               	rlf	___awdiv@divisor+1,f
  5174  035C  0B89               	decfsz	9,f
  5175  035D  2B5A               	goto	u1895
  5176  035E  3001               	movlw	1
  5177  035F  00F8               	movwf	??___awdiv
  5178  0360  0878               	movf	??___awdiv,w
  5179  0361  07A4               	addwf	___awdiv@counter,f
  5180  0362  2B57               	goto	l2444
  5181  0363                     l2446:
  5182  0363  3001               	movlw	1
  5183  0364                     u1915:
  5184  0364  35A6               	lslf	___awdiv@quotient,f
  5185  0365  0DA7               	rlf	___awdiv@quotient+1,f
  5186  0366  0B89               	decfsz	9,f
  5187  0367  2B64               	goto	u1915
  5188  0368  0821               	movf	___awdiv@divisor+1,w
  5189  0369  0223               	subwf	___awdiv@dividend+1,w
  5190  036A  1D03               	skipz
  5191  036B  2B6E               	goto	u1925
  5192  036C  0820               	movf	___awdiv@divisor,w
  5193  036D  0222               	subwf	___awdiv@dividend,w
  5194  036E                     u1925:
  5195  036E  1C03               	skipc
  5196  036F  2B75               	goto	l2452
  5197  0370  0820               	movf	___awdiv@divisor,w
  5198  0371  02A2               	subwf	___awdiv@dividend,f
  5199  0372  0821               	movf	___awdiv@divisor+1,w
  5200  0373  3BA3               	subwfb	___awdiv@dividend+1,f
  5201  0374  1426               	bsf	___awdiv@quotient,0
  5202  0375                     l2452:
  5203  0375  3001               	movlw	1
  5204  0376                     u1935:
  5205  0376  36A1               	lsrf	___awdiv@divisor+1,f
  5206  0377  0CA0               	rrf	___awdiv@divisor,f
  5207  0378  0B89               	decfsz	9,f
  5208  0379  2B76               	goto	u1935
  5209  037A  3001               	movlw	1
  5210  037B  02A4               	subwf	___awdiv@counter,f
  5211  037C  1D03               	btfss	3,2
  5212  037D  2B63               	goto	l2446
  5213  037E                     l2456:
  5214  037E  0825               	movf	___awdiv@sign,w
  5215  037F  1903               	btfsc	3,2
  5216  0380  2B86               	goto	l2460
  5217  0381  09A6               	comf	___awdiv@quotient,f
  5218  0382  09A7               	comf	___awdiv@quotient+1,f
  5219  0383  0AA6               	incf	___awdiv@quotient,f
  5220  0384  1903               	skipnz
  5221  0385  0AA7               	incf	___awdiv@quotient+1,f
  5222  0386                     l2460:
  5223  0386  0827               	movf	___awdiv@quotient+1,w
  5224  0387  00A1               	movwf	?___awdiv+1
  5225  0388  0826               	movf	___awdiv@quotient,w
  5226  0389  00A0               	movwf	?___awdiv
  5227  038A  0008               	return
  5228  038B                     __end_of___awdiv:
  5229                           
  5230                           	psect	text8
  5231  03DC                     __ptext8:	
  5232 ;; *************** function _selectSomething *****************
  5233 ;; Defined at:
  5234 ;;		line 197 in file "main.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;		None
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;		None
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      void 
  5241 ;; Registers used:
  5242 ;;		wreg, status,2, status,0, pclath, cstack
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5248 ;;      Params:         0       0       0       0       0       0       0       0
  5249 ;;      Locals:         0       0       0       0       0       0       0       0
  5250 ;;      Temps:          0       2       0       0       0       0       0       0
  5251 ;;      Totals:         0       2       0       0       0       0       0       0
  5252 ;;Total ram usage:        2 bytes
  5253 ;; Hardware stack levels used:    1
  5254 ;; Hardware stack levels required when called:    5
  5255 ;; This function calls:
  5256 ;;		_setLEDColor
  5257 ;; This function is called by:
  5258 ;;		_process_remote_command
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           
  5263                           ;psect for function _selectSomething
  5264  03DC                     _selectSomething:
  5265                           
  5266                           ;main.c: 199: setLEDColor(255, 0, 0);
  5267                           
  5268                           ;incstack = 0
  5269                           ; Regs used in _selectSomething: [wreg+status,2+status,0+pclath+cstack]
  5270  03DC  0020               	movlb	0	; select bank0
  5271  03DD  01A0               	clrf	setLEDColor@green
  5272  03DE  01A1               	clrf	setLEDColor@blue
  5273  03DF  30FF               	movlw	255
  5274  03E0  3186  2672  3183   	fcall	_setLEDColor
  5275                           
  5276                           ;main.c: 200: _delay((unsigned long)((500)*(4000000/4000.0)));
  5277  03E3  3003               	movlw	3
  5278  03E4  0020               	movlb	0	; select bank0
  5279  03E5  00A3               	movwf	??_selectSomething+1
  5280  03E6  308A               	movlw	138
  5281  03E7  00A2               	movwf	??_selectSomething
  5282  03E8  3055               	movlw	85
  5283  03E9                     u2217:
  5284  03E9  0B89               	decfsz	9,f
  5285  03EA  2BE9               	goto	u2217
  5286  03EB  0BA2               	decfsz	??_selectSomething,f
  5287  03EC  2BE9               	goto	u2217
  5288  03ED  0BA3               	decfsz	??_selectSomething+1,f
  5289  03EE  2BE9               	goto	u2217
  5290  03EF  3200               	nop2
  5291                           
  5292                           ;main.c: 201: setLEDColor(0, 0, 0);
  5293  03F0  0020               	movlb	0	; select bank0
  5294  03F1  01A0               	clrf	setLEDColor@green
  5295  03F2  01A1               	clrf	setLEDColor@blue
  5296  03F3  3000               	movlw	0
  5297  03F4  3186  2672  3183   	fcall	_setLEDColor
  5298                           
  5299                           ;main.c: 202: _delay((unsigned long)((500)*(4000000/4000.0)));
  5300  03F7  3003               	movlw	3
  5301  03F8  0020               	movlb	0	; select bank0
  5302  03F9  00A3               	movwf	??_selectSomething+1
  5303  03FA  308A               	movlw	138
  5304  03FB  00A2               	movwf	??_selectSomething
  5305  03FC  3055               	movlw	85
  5306  03FD                     u2227:
  5307  03FD  0B89               	decfsz	9,f
  5308  03FE  2BFD               	goto	u2227
  5309  03FF  0BA2               	decfsz	??_selectSomething,f
  5310  0400  2BFD               	goto	u2227
  5311  0401  0BA3               	decfsz	??_selectSomething+1,f
  5312  0402  2BFD               	goto	u2227
  5313  0403  3200               	nop2
  5314                           
  5315                           ;main.c: 203: setLEDColor(255, 0, 0);
  5316  0404  0020               	movlb	0	; select bank0
  5317  0405  01A0               	clrf	setLEDColor@green
  5318  0406  01A1               	clrf	setLEDColor@blue
  5319  0407  30FF               	movlw	255
  5320  0408  3186  2672  3183   	fcall	_setLEDColor
  5321                           
  5322                           ;main.c: 204: _delay((unsigned long)((500)*(4000000/4000.0)));
  5323  040B  3003               	movlw	3
  5324  040C  0020               	movlb	0	; select bank0
  5325  040D  00A3               	movwf	??_selectSomething+1
  5326  040E  308A               	movlw	138
  5327  040F  00A2               	movwf	??_selectSomething
  5328  0410  3055               	movlw	85
  5329  0411                     u2237:
  5330  0411  0B89               	decfsz	9,f
  5331  0412  2C11               	goto	u2237
  5332  0413  0BA2               	decfsz	??_selectSomething,f
  5333  0414  2C11               	goto	u2237
  5334  0415  0BA3               	decfsz	??_selectSomething+1,f
  5335  0416  2C11               	goto	u2237
  5336  0417  3200               	nop2
  5337                           
  5338                           ;main.c: 205: setLEDColor(0, 0, 0);
  5339  0418  0020               	movlb	0	; select bank0
  5340  0419  01A0               	clrf	setLEDColor@green
  5341  041A  01A1               	clrf	setLEDColor@blue
  5342  041B  3000               	movlw	0
  5343  041C  3186  2672  3183   	fcall	_setLEDColor
  5344                           
  5345                           ;main.c: 206: _delay((unsigned long)((500)*(4000000/4000.0)));
  5346  041F  3003               	movlw	3
  5347  0420  0020               	movlb	0	; select bank0
  5348  0421  00A3               	movwf	??_selectSomething+1
  5349  0422  308A               	movlw	138
  5350  0423  00A2               	movwf	??_selectSomething
  5351  0424  3055               	movlw	85
  5352  0425                     u2247:
  5353  0425  0B89               	decfsz	9,f
  5354  0426  2C25               	goto	u2247
  5355  0427  0BA2               	decfsz	??_selectSomething,f
  5356  0428  2C25               	goto	u2247
  5357  0429  0BA3               	decfsz	??_selectSomething+1,f
  5358  042A  2C25               	goto	u2247
  5359  042B  3200               	nop2
  5360  042C  0008               	return
  5361  042D                     __end_of_selectSomething:
  5362                           
  5363                           	psect	text9
  5364  059C                     __ptext9:	
  5365 ;; *************** function _selectFrequency *****************
  5366 ;; Defined at:
  5367 ;;		line 209 in file "main.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;		None
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      void 
  5374 ;; Registers used:
  5375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5381 ;;      Params:         0       0       0       0       0       0       0       0
  5382 ;;      Locals:         0       0       0       0       0       0       0       0
  5383 ;;      Temps:          0       2       0       0       0       0       0       0
  5384 ;;      Totals:         0       2       0       0       0       0       0       0
  5385 ;;Total ram usage:        2 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    7
  5388 ;; This function calls:
  5389 ;;		_printf
  5390 ;;		_setLEDColor
  5391 ;; This function is called by:
  5392 ;;		_process_remote_command
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           
  5397                           ;psect for function _selectFrequency
  5398  059C                     _selectFrequency:
  5399                           
  5400                           ;main.c: 210: interfaceState = STATE_FREQUENCY;
  5401                           
  5402                           ;incstack = 0
  5403                           ; Regs used in _selectFrequency: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5404  059C  3002               	movlw	2
  5405  059D  0020               	movlb	0	; select bank0
  5406  059E  00A7               	movwf	??_selectFrequency
  5407  059F  0827               	movf	??_selectFrequency,w
  5408  05A0  00D6               	movwf	_interfaceState
  5409                           
  5410                           ;main.c: 211: setLEDColor(255, 0, 255);
  5411  05A1  01A0               	clrf	setLEDColor@green
  5412  05A2  30FF               	movlw	255
  5413  05A3  00A7               	movwf	??_selectFrequency
  5414  05A4  0827               	movf	??_selectFrequency,w
  5415  05A5  00A1               	movwf	setLEDColor@blue
  5416  05A6  30FF               	movlw	255
  5417  05A7  3186  2672  3185   	fcall	_setLEDColor
  5418                           
  5419                           ;main.c: 212: _delay((unsigned long)((1000)*(4000000/4000.0)));
  5420  05AA  3006               	movlw	6
  5421  05AB  0020               	movlb	0	; select bank0
  5422  05AC  00A8               	movwf	??_selectFrequency+1
  5423  05AD  3013               	movlw	19
  5424  05AE  00A7               	movwf	??_selectFrequency
  5425  05AF  30AD               	movlw	173
  5426  05B0                     u2257:
  5427  05B0  0B89               	decfsz	9,f
  5428  05B1  2DB0               	goto	u2257
  5429  05B2  0BA7               	decfsz	??_selectFrequency,f
  5430  05B3  2DB0               	goto	u2257
  5431  05B4  0BA8               	decfsz	??_selectFrequency+1,f
  5432  05B5  2DB0               	goto	u2257
  5433  05B6  3200               	nop2
  5434                           
  5435                           ;main.c: 213: setLEDColor(0, 0, 0);
  5436  05B7  0020               	movlb	0	; select bank0
  5437  05B8  01A0               	clrf	setLEDColor@green
  5438  05B9  01A1               	clrf	setLEDColor@blue
  5439  05BA  3000               	movlw	0
  5440  05BB  3186  2672  3185   	fcall	_setLEDColor
  5441                           
  5442                           ;main.c: 214: printf("\n Frequency selected");
  5443  05BE  308B               	movlw	low (STR_1| (0+32768))
  5444  05BF  0020               	movlb	0	; select bank0
  5445  05C0  00A0               	movwf	printf@f
  5446  05C1  3086               	movlw	high (STR_1| (0+32768))
  5447  05C2  00A1               	movwf	printf@f+1
  5448  05C3  3186  2655         	fcall	_printf
  5449  05C5  0008               	return
  5450  05C6                     __end_of_selectFrequency:
  5451                           
  5452                           	psect	text10
  5453  05C6                     __ptext10:	
  5454 ;; *************** function _selectCurrent *****************
  5455 ;; Defined at:
  5456 ;;		line 217 in file "main.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;		None
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;		None
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  1    wreg      void 
  5463 ;; Registers used:
  5464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5470 ;;      Params:         0       0       0       0       0       0       0       0
  5471 ;;      Locals:         0       0       0       0       0       0       0       0
  5472 ;;      Temps:          0       2       0       0       0       0       0       0
  5473 ;;      Totals:         0       2       0       0       0       0       0       0
  5474 ;;Total ram usage:        2 bytes
  5475 ;; Hardware stack levels used:    1
  5476 ;; Hardware stack levels required when called:    7
  5477 ;; This function calls:
  5478 ;;		_printf
  5479 ;;		_setLEDColor
  5480 ;; This function is called by:
  5481 ;;		_process_remote_command
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485                           
  5486                           ;psect for function _selectCurrent
  5487  05C6                     _selectCurrent:
  5488                           
  5489                           ;main.c: 218: interfaceState = STATE_CURRENT;
  5490                           
  5491                           ;incstack = 0
  5492                           ; Regs used in _selectCurrent: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5493  05C6  0020               	movlb	0	; select bank0
  5494  05C7  01D6               	clrf	_interfaceState
  5495  05C8  0AD6               	incf	_interfaceState,f
  5496                           
  5497                           ;main.c: 219: setLEDColor(0, 0, 255);
  5498  05C9  01A0               	clrf	setLEDColor@green
  5499  05CA  30FF               	movlw	255
  5500  05CB  00A7               	movwf	??_selectCurrent
  5501  05CC  0827               	movf	??_selectCurrent,w
  5502  05CD  00A1               	movwf	setLEDColor@blue
  5503  05CE  3000               	movlw	0
  5504  05CF  3186  2672  3185   	fcall	_setLEDColor
  5505                           
  5506                           ;main.c: 220: _delay((unsigned long)((1000)*(4000000/4000.0)));
  5507  05D2  3006               	movlw	6
  5508  05D3  0020               	movlb	0	; select bank0
  5509  05D4  00A8               	movwf	??_selectCurrent+1
  5510  05D5  3013               	movlw	19
  5511  05D6  00A7               	movwf	??_selectCurrent
  5512  05D7  30AD               	movlw	173
  5513  05D8                     u2267:
  5514  05D8  0B89               	decfsz	9,f
  5515  05D9  2DD8               	goto	u2267
  5516  05DA  0BA7               	decfsz	??_selectCurrent,f
  5517  05DB  2DD8               	goto	u2267
  5518  05DC  0BA8               	decfsz	??_selectCurrent+1,f
  5519  05DD  2DD8               	goto	u2267
  5520  05DE  3200               	nop2
  5521                           
  5522                           ;main.c: 221: setLEDColor(0, 0, 0);
  5523  05DF  0020               	movlb	0	; select bank0
  5524  05E0  01A0               	clrf	setLEDColor@green
  5525  05E1  01A1               	clrf	setLEDColor@blue
  5526  05E2  3000               	movlw	0
  5527  05E3  3186  2672  3185   	fcall	_setLEDColor
  5528                           
  5529                           ;main.c: 222: printf("\n current selected");
  5530  05E6  30A0               	movlw	low (STR_2| (0+32768))
  5531  05E7  0020               	movlb	0	; select bank0
  5532  05E8  00A0               	movwf	printf@f
  5533  05E9  3086               	movlw	high (STR_2| (0+32768))
  5534  05EA  00A1               	movwf	printf@f+1
  5535  05EB  3186  2655         	fcall	_printf
  5536  05ED  0008               	return
  5537  05EE                     __end_of_selectCurrent:
  5538                           
  5539                           	psect	text11
  5540  0655                     __ptext11:	
  5541 ;; *************** function _printf *****************
  5542 ;; Defined at:
  5543 ;;		line 477 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/doprnt.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  5546 ;;		 -> STR_3(15), STR_2(19), STR_1(21), 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  tmpval          4    0        struct .
  5549 ;;  cp              2    0        PTR const unsigned char 
  5550 ;;  len             2    0        unsigned int 
  5551 ;;  val             2    0        unsigned int 
  5552 ;;  c               1    6[BANK0 ] unsigned char 
  5553 ;;  ap              1    5[BANK0 ] PTR void [1]
  5554 ;;		 -> ?_printf(2), 
  5555 ;;  flag            1    0        unsigned char 
  5556 ;;  prec            1    0        char 
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  2    0[BANK0 ] int 
  5559 ;; Registers used:
  5560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5566 ;;      Params:         0       2       0       0       0       0       0       0
  5567 ;;      Locals:         0       2       0       0       0       0       0       0
  5568 ;;      Temps:          0       3       0       0       0       0       0       0
  5569 ;;      Totals:         0       7       0       0       0       0       0       0
  5570 ;;Total ram usage:        7 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    6
  5573 ;; This function calls:
  5574 ;;		_putch
  5575 ;; This function is called by:
  5576 ;;		_selectFrequency
  5577 ;;		_selectCurrent
  5578 ;;		_process_remote_command
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           
  5583                           ;psect for function _printf
  5584  0655                     _printf:
  5585                           
  5586                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  5587                           
  5588                           ;incstack = 0
  5589                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5590  0655  3022               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5591  0656  0020               	movlb	0	; select bank0
  5592  0657  00A2               	movwf	??_printf
  5593  0658  0822               	movf	??_printf,w
  5594  0659  00A5               	movwf	printf@ap
  5595  065A                     l2354:	
  5596                           ;doprnt.c: 559: continue;
  5597                           
  5598                           ;doprnt.c: 553: while((c = *f++)) {
  5599                           
  5600  065A  0020               	movlb	0	; select bank0
  5601  065B  0821               	movf	printf@f+1,w
  5602  065C  00A3               	movwf	??_printf+1
  5603  065D  0820               	movf	printf@f,w
  5604  065E  00A2               	movwf	??_printf
  5605  065F  0AA0               	incf	printf@f,f
  5606  0660  1903               	skipnz
  5607  0661  0AA1               	incf	printf@f+1,f
  5608  0662  0822               	movf	??_printf,w
  5609  0663  0084               	movwf	4
  5610  0664  0823               	movf	??_printf+1,w
  5611  0665  0085               	movwf	5
  5612  0666  0800               	movf	0,w	;code access
  5613  0667  00A4               	movwf	??_printf+2
  5614  0668  0824               	movf	??_printf+2,w
  5615  0669  00A6               	movwf	printf@c
  5616  066A  0826               	movf	printf@c,w
  5617  066B  1903               	btfsc	3,2
  5618  066C  0008               	return
  5619                           
  5620                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  5621  066D  0826               	movf	printf@c,w
  5622  066E  3187  2776  3186   	fcall	_putch
  5623  0671  2E5A               	goto	l2354
  5624  0672                     __end_of_printf:
  5625                           
  5626                           	psect	text12
  5627  0776                     __ptext12:	
  5628 ;; *************** function _putch *****************
  5629 ;; Defined at:
  5630 ;;		line 146 in file "mcc_generated_files/eusart.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  txData          1    wreg     unsigned char 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  txData          1    3[COMMON] unsigned char 
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  1    wreg      void 
  5637 ;; Registers used:
  5638 ;;		wreg, status,2, status,0, pclath, cstack
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5644 ;;      Params:         0       0       0       0       0       0       0       0
  5645 ;;      Locals:         1       0       0       0       0       0       0       0
  5646 ;;      Temps:          0       0       0       0       0       0       0       0
  5647 ;;      Totals:         1       0       0       0       0       0       0       0
  5648 ;;Total ram usage:        1 bytes
  5649 ;; Hardware stack levels used:    1
  5650 ;; Hardware stack levels required when called:    5
  5651 ;; This function calls:
  5652 ;;		_EUSART_Write
  5653 ;; This function is called by:
  5654 ;;		_printf
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           
  5659                           ;psect for function _putch
  5660  0776                     _putch:
  5661                           
  5662                           ;incstack = 0
  5663                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  5664                           ;putch@txData stored from wreg
  5665  0776  00F9               	movwf	putch@txData
  5666                           
  5667                           ;eusart.c: 148: EUSART_Write(txData);
  5668  0777  0879               	movf	putch@txData,w
  5669  0778  3187  2732         	fcall	_EUSART_Write
  5670  077A  0008               	return
  5671  077B                     __end_of_putch:
  5672                           
  5673                           	psect	text13
  5674  0732                     __ptext13:	
  5675 ;; *************** function _EUSART_Write *****************
  5676 ;; Defined at:
  5677 ;;		line 132 in file "mcc_generated_files/eusart.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;  txData          1    wreg     unsigned char 
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;  txData          1    2[COMMON] unsigned char 
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  1    wreg      void 
  5684 ;; Registers used:
  5685 ;;		wreg
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5691 ;;      Params:         0       0       0       0       0       0       0       0
  5692 ;;      Locals:         1       0       0       0       0       0       0       0
  5693 ;;      Temps:          0       0       0       0       0       0       0       0
  5694 ;;      Totals:         1       0       0       0       0       0       0       0
  5695 ;;Total ram usage:        1 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:    4
  5698 ;; This function calls:
  5699 ;;		Nothing
  5700 ;; This function is called by:
  5701 ;;		_putch
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           
  5706                           ;psect for function _EUSART_Write
  5707  0732                     _EUSART_Write:
  5708                           
  5709                           ;incstack = 0
  5710                           ; Regs used in _EUSART_Write: [wreg]
  5711                           ;EUSART_Write@txData stored from wreg
  5712  0732  00F8               	movwf	EUSART_Write@txData
  5713  0733                     l213:	
  5714                           ;eusart.c: 135: {
  5715                           
  5716  0733  0020               	movlb	0	; select bank0
  5717  0734  1E11               	btfss	17,4	;volatile
  5718  0735  2F33               	goto	l213
  5719                           
  5720                           ;eusart.c: 136: };eusart.c: 138: TX1REG = txData;
  5721  0736  0878               	movf	EUSART_Write@txData,w
  5722  0737  0023               	movlb	3	; select bank3
  5723  0738  009A               	movwf	26	;volatile
  5724  0739  0008               	return
  5725  073A                     __end_of_EUSART_Write:
  5726                           
  5727                           	psect	text14
  5728  0541                     __ptext14:	
  5729 ;; *************** function _battery_voltage *****************
  5730 ;; Defined at:
  5731 ;;		line 91 in file "main.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;		None
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;		None
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  2   26[BANK0 ] unsigned int 
  5738 ;; Registers used:
  5739 ;;		wreg, status,2, status,0, pclath, cstack
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5745 ;;      Params:         0       2       0       0       0       0       0       0
  5746 ;;      Locals:         0       0       0       0       0       0       0       0
  5747 ;;      Temps:          0       0       0       0       0       0       0       0
  5748 ;;      Totals:         0       2       0       0       0       0       0       0
  5749 ;;Total ram usage:        2 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:    5
  5752 ;; This function calls:
  5753 ;;		___aldiv
  5754 ;; This function is called by:
  5755 ;;		_process_remote_command
  5756 ;;		_main
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759                           
  5760                           
  5761                           ;psect for function _battery_voltage
  5762  0541                     _battery_voltage:
  5763                           
  5764                           ;main.c: 93: FVRCON = 0b10000001;
  5765                           
  5766                           ;incstack = 0
  5767                           ; Regs used in _battery_voltage: [wreg+status,2+status,0+pclath+cstack]
  5768  0541  3081               	movlw	129
  5769  0542  0022               	movlb	2	; select bank2
  5770  0543  0097               	movwf	23	;volatile
  5771                           
  5772                           ;main.c: 94: ADCON0 = 0b01111101;
  5773  0544  307D               	movlw	125
  5774  0545  0021               	movlb	1	; select bank1
  5775  0546  009D               	movwf	29	;volatile
  5776                           
  5777                           ;main.c: 95: ADCON1 = 0b10010000;
  5778  0547  3090               	movlw	144
  5779  0548  009E               	movwf	30	;volatile
  5780  0549                     l463:	
  5781                           ;main.c: 96: while(!FVRCONbits.FVRRDY){ }
  5782                           
  5783  0549  0022               	movlb	2	; select bank2
  5784  054A  1F17               	btfss	23,6	;volatile
  5785  054B  2D49               	goto	l463
  5786                           
  5787                           ;main.c: 97: __nop();
  5788  054C  0000               	nop
  5789                           
  5790                           ;main.c: 98: __nop();
  5791  054D  0000               	nop
  5792                           
  5793                           ;main.c: 99: __nop();
  5794  054E  0000               	nop
  5795                           
  5796                           ;main.c: 100: __nop();
  5797  054F  0000               	nop
  5798                           
  5799                           ;main.c: 101: __nop();
  5800  0550  0000               	nop
  5801                           
  5802                           ;main.c: 102: ADCON0bits.GO_nDONE = 1;
  5803  0551  0021               	movlb	1	; select bank1
  5804  0552  149D               	bsf	29,1	;volatile
  5805  0553                     l466:	
  5806                           ;main.c: 103: while(ADCON0bits.GO_nDONE){ }
  5807                           
  5808  0553  189D               	btfsc	29,1	;volatile
  5809  0554  2D53               	goto	l466
  5810                           
  5811                           ;main.c: 104: ADCON0bits.ADON = 0;
  5812  0555  101D               	bcf	29,0	;volatile
  5813                           
  5814                           ;main.c: 109: return 1047552L / ADRES;
  5815  0556  081B               	movf	27,w	;volatile
  5816  0557  0020               	movlb	0	; select bank0
  5817  0558  00AC               	movwf	___aldiv@divisor
  5818  0559  0021               	movlb	1	; select bank1
  5819  055A  081C               	movf	28,w	;volatile
  5820  055B  0020               	movlb	0	; select bank0
  5821  055C  00AD               	movwf	___aldiv@divisor+1
  5822  055D  01AE               	clrf	___aldiv@divisor+2
  5823  055E  01AF               	clrf	___aldiv@divisor+3
  5824  055F  3000               	movlw	0
  5825  0560  00B3               	movwf	___aldiv@dividend+3
  5826  0561  300F               	movlw	15
  5827  0562  00B2               	movwf	___aldiv@dividend+2
  5828  0563  30FC               	movlw	252
  5829  0564  00B1               	movwf	___aldiv@dividend+1
  5830  0565  3000               	movlw	0
  5831  0566  00B0               	movwf	___aldiv@dividend
  5832  0567  3181  21FF         	fcall	___aldiv
  5833  0569  0020               	movlb	0	; select bank0
  5834  056A  082D               	movf	?___aldiv+1,w
  5835  056B  00BB               	movwf	?_battery_voltage+1
  5836  056C  082C               	movf	?___aldiv,w
  5837  056D  00BA               	movwf	?_battery_voltage
  5838  056E  0008               	return
  5839  056F                     __end_of_battery_voltage:
  5840                           
  5841                           	psect	text15
  5842  01FF                     __ptext15:	
  5843 ;; *************** function ___aldiv *****************
  5844 ;; Defined at:
  5845 ;;		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/aldiv.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  divisor         4   12[BANK0 ] long 
  5848 ;;  dividend        4   16[BANK0 ] long 
  5849 ;; Auto vars:     Size  Location     Type
  5850 ;;  quotient        4   22[BANK0 ] long 
  5851 ;;  sign            1   21[BANK0 ] unsigned char 
  5852 ;;  counter         1   20[BANK0 ] unsigned char 
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  4   12[BANK0 ] long 
  5855 ;; Registers used:
  5856 ;;		wreg, status,2, status,0
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5862 ;;      Params:         0       8       0       0       0       0       0       0
  5863 ;;      Locals:         0       6       0       0       0       0       0       0
  5864 ;;      Temps:          1       0       0       0       0       0       0       0
  5865 ;;      Totals:         1      14       0       0       0       0       0       0
  5866 ;;Total ram usage:       15 bytes
  5867 ;; Hardware stack levels used:    1
  5868 ;; Hardware stack levels required when called:    4
  5869 ;; This function calls:
  5870 ;;		Nothing
  5871 ;; This function is called by:
  5872 ;;		_battery_voltage
  5873 ;;		_setCurrent
  5874 ;;		_setFrequency
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           
  5879                           ;psect for function ___aldiv
  5880  01FF                     ___aldiv:
  5881                           
  5882                           ;incstack = 0
  5883                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5884  01FF  0020               	movlb	0	; select bank0
  5885  0200  01B5               	clrf	___aldiv@sign
  5886  0201  1FAF               	btfss	___aldiv@divisor+3,7
  5887  0202  2A10               	goto	l750
  5888  0203  09AC               	comf	___aldiv@divisor,f
  5889  0204  09AD               	comf	___aldiv@divisor+1,f
  5890  0205  09AE               	comf	___aldiv@divisor+2,f
  5891  0206  09AF               	comf	___aldiv@divisor+3,f
  5892  0207  0AAC               	incf	___aldiv@divisor,f
  5893  0208  1903               	skipnz
  5894  0209  0AAD               	incf	___aldiv@divisor+1,f
  5895  020A  1903               	skipnz
  5896  020B  0AAE               	incf	___aldiv@divisor+2,f
  5897  020C  1903               	skipnz
  5898  020D  0AAF               	incf	___aldiv@divisor+3,f
  5899  020E  01B5               	clrf	___aldiv@sign
  5900  020F  0AB5               	incf	___aldiv@sign,f
  5901  0210                     l750:
  5902  0210  1FB3               	btfss	___aldiv@dividend+3,7
  5903  0211  2A21               	goto	l2390
  5904  0212  09B0               	comf	___aldiv@dividend,f
  5905  0213  09B1               	comf	___aldiv@dividend+1,f
  5906  0214  09B2               	comf	___aldiv@dividend+2,f
  5907  0215  09B3               	comf	___aldiv@dividend+3,f
  5908  0216  0AB0               	incf	___aldiv@dividend,f
  5909  0217  1903               	skipnz
  5910  0218  0AB1               	incf	___aldiv@dividend+1,f
  5911  0219  1903               	skipnz
  5912  021A  0AB2               	incf	___aldiv@dividend+2,f
  5913  021B  1903               	skipnz
  5914  021C  0AB3               	incf	___aldiv@dividend+3,f
  5915  021D  3001               	movlw	1
  5916  021E  00F9               	movwf	??___aldiv
  5917  021F  0879               	movf	??___aldiv,w
  5918  0220  06B5               	xorwf	___aldiv@sign,f
  5919  0221                     l2390:
  5920  0221  3000               	movlw	0
  5921  0222  00B9               	movwf	___aldiv@quotient+3
  5922  0223  3000               	movlw	0
  5923  0224  00B8               	movwf	___aldiv@quotient+2
  5924  0225  3000               	movlw	0
  5925  0226  00B7               	movwf	___aldiv@quotient+1
  5926  0227  3000               	movlw	0
  5927  0228  00B6               	movwf	___aldiv@quotient
  5928  0229  082F               	movf	___aldiv@divisor+3,w
  5929  022A  042E               	iorwf	___aldiv@divisor+2,w
  5930  022B  042D               	iorwf	___aldiv@divisor+1,w
  5931  022C  042C               	iorwf	___aldiv@divisor,w
  5932  022D  1903               	skipnz
  5933  022E  2A6A               	goto	l2412
  5934  022F  01B4               	clrf	___aldiv@counter
  5935  0230  0AB4               	incf	___aldiv@counter,f
  5936  0231                     l2398:
  5937  0231  1BAF               	btfsc	___aldiv@divisor+3,7
  5938  0232  2A3F               	goto	l2400
  5939  0233  3001               	movlw	1
  5940  0234                     u1795:
  5941  0234  35AC               	lslf	___aldiv@divisor,f
  5942  0235  0DAD               	rlf	___aldiv@divisor+1,f
  5943  0236  0DAE               	rlf	___aldiv@divisor+2,f
  5944  0237  0DAF               	rlf	___aldiv@divisor+3,f
  5945  0238  0B89               	decfsz	9,f
  5946  0239  2A34               	goto	u1795
  5947  023A  3001               	movlw	1
  5948  023B  00F9               	movwf	??___aldiv
  5949  023C  0879               	movf	??___aldiv,w
  5950  023D  07B4               	addwf	___aldiv@counter,f
  5951  023E  2A31               	goto	l2398
  5952  023F                     l2400:
  5953  023F  3001               	movlw	1
  5954  0240                     u1815:
  5955  0240  35B6               	lslf	___aldiv@quotient,f
  5956  0241  0DB7               	rlf	___aldiv@quotient+1,f
  5957  0242  0DB8               	rlf	___aldiv@quotient+2,f
  5958  0243  0DB9               	rlf	___aldiv@quotient+3,f
  5959  0244  0B89               	decfsz	9,f
  5960  0245  2A40               	goto	u1815
  5961  0246  082F               	movf	___aldiv@divisor+3,w
  5962  0247  0233               	subwf	___aldiv@dividend+3,w
  5963  0248  1D03               	skipz
  5964  0249  2A54               	goto	u1825
  5965  024A  082E               	movf	___aldiv@divisor+2,w
  5966  024B  0232               	subwf	___aldiv@dividend+2,w
  5967  024C  1D03               	skipz
  5968  024D  2A54               	goto	u1825
  5969  024E  082D               	movf	___aldiv@divisor+1,w
  5970  024F  0231               	subwf	___aldiv@dividend+1,w
  5971  0250  1D03               	skipz
  5972  0251  2A54               	goto	u1825
  5973  0252  082C               	movf	___aldiv@divisor,w
  5974  0253  0230               	subwf	___aldiv@dividend,w
  5975  0254                     u1825:
  5976  0254  1C03               	skipc
  5977  0255  2A5F               	goto	l2408
  5978  0256  082C               	movf	___aldiv@divisor,w
  5979  0257  02B0               	subwf	___aldiv@dividend,f
  5980  0258  082D               	movf	___aldiv@divisor+1,w
  5981  0259  3BB1               	subwfb	___aldiv@dividend+1,f
  5982  025A  082E               	movf	___aldiv@divisor+2,w
  5983  025B  3BB2               	subwfb	___aldiv@dividend+2,f
  5984  025C  082F               	movf	___aldiv@divisor+3,w
  5985  025D  3BB3               	subwfb	___aldiv@dividend+3,f
  5986  025E  1436               	bsf	___aldiv@quotient,0
  5987  025F                     l2408:
  5988  025F  3001               	movlw	1
  5989  0260                     u1835:
  5990  0260  36AF               	lsrf	___aldiv@divisor+3,f
  5991  0261  0CAE               	rrf	___aldiv@divisor+2,f
  5992  0262  0CAD               	rrf	___aldiv@divisor+1,f
  5993  0263  0CAC               	rrf	___aldiv@divisor,f
  5994  0264  0B89               	decfsz	9,f
  5995  0265  2A60               	goto	u1835
  5996  0266  3001               	movlw	1
  5997  0267  02B4               	subwf	___aldiv@counter,f
  5998  0268  1D03               	btfss	3,2
  5999  0269  2A3F               	goto	l2400
  6000  026A                     l2412:
  6001  026A  0835               	movf	___aldiv@sign,w
  6002  026B  1903               	btfsc	3,2
  6003  026C  2A78               	goto	l2416
  6004  026D  09B6               	comf	___aldiv@quotient,f
  6005  026E  09B7               	comf	___aldiv@quotient+1,f
  6006  026F  09B8               	comf	___aldiv@quotient+2,f
  6007  0270  09B9               	comf	___aldiv@quotient+3,f
  6008  0271  0AB6               	incf	___aldiv@quotient,f
  6009  0272  1903               	skipnz
  6010  0273  0AB7               	incf	___aldiv@quotient+1,f
  6011  0274  1903               	skipnz
  6012  0275  0AB8               	incf	___aldiv@quotient+2,f
  6013  0276  1903               	skipnz
  6014  0277  0AB9               	incf	___aldiv@quotient+3,f
  6015  0278                     l2416:
  6016  0278  0839               	movf	___aldiv@quotient+3,w
  6017  0279  00AF               	movwf	?___aldiv+3
  6018  027A  0838               	movf	___aldiv@quotient+2,w
  6019  027B  00AE               	movwf	?___aldiv+2
  6020  027C  0837               	movf	___aldiv@quotient+1,w
  6021  027D  00AD               	movwf	?___aldiv+1
  6022  027E  0836               	movf	___aldiv@quotient,w
  6023  027F  00AC               	movwf	?___aldiv
  6024  0280  0008               	return
  6025  0281                     __end_of___aldiv:
  6026                           
  6027                           	psect	text16
  6028  056F                     __ptext16:	
  6029 ;; *************** function _lowBattery *****************
  6030 ;; Defined at:
  6031 ;;		line 178 in file "main.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;		None
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;		None
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1    wreg      void 
  6038 ;; Registers used:
  6039 ;;		wreg, status,2, status,0, pclath, cstack
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6045 ;;      Params:         0       0       0       0       0       0       0       0
  6046 ;;      Locals:         0       0       0       0       0       0       0       0
  6047 ;;      Temps:          0       2       0       0       0       0       0       0
  6048 ;;      Totals:         0       2       0       0       0       0       0       0
  6049 ;;Total ram usage:        2 bytes
  6050 ;; Hardware stack levels used:    1
  6051 ;; Hardware stack levels required when called:    5
  6052 ;; This function calls:
  6053 ;;		_setLEDColor
  6054 ;; This function is called by:
  6055 ;;		_main
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           
  6060                           ;psect for function _lowBattery
  6061  056F                     _lowBattery:
  6062                           
  6063                           ;main.c: 179: interfaceState = STATE_LOWBATTERY;
  6064                           
  6065                           ;incstack = 0
  6066                           ; Regs used in _lowBattery: [wreg+status,2+status,0+pclath+cstack]
  6067  056F  3003               	movlw	3
  6068  0570  0020               	movlb	0	; select bank0
  6069  0571  00A2               	movwf	??_lowBattery
  6070  0572  0822               	movf	??_lowBattery,w
  6071  0573  00D6               	movwf	_interfaceState
  6072                           
  6073                           ;main.c: 180: setLEDColor(255, 0, 0);
  6074  0574  01A0               	clrf	setLEDColor@green
  6075  0575  01A1               	clrf	setLEDColor@blue
  6076  0576  30FF               	movlw	255
  6077  0577  3186  2672  3185   	fcall	_setLEDColor
  6078                           
  6079                           ;main.c: 181: _delay((unsigned long)((250)*(4000000/4000.0)));
  6080  057A  3002               	movlw	2
  6081  057B  0020               	movlb	0	; select bank0
  6082  057C  00A3               	movwf	??_lowBattery+1
  6083  057D  3045               	movlw	69
  6084  057E  00A2               	movwf	??_lowBattery
  6085  057F  30A9               	movlw	169
  6086  0580                     u2277:
  6087  0580  0B89               	decfsz	9,f
  6088  0581  2D80               	goto	u2277
  6089  0582  0BA2               	decfsz	??_lowBattery,f
  6090  0583  2D80               	goto	u2277
  6091  0584  0BA3               	decfsz	??_lowBattery+1,f
  6092  0585  2D80               	goto	u2277
  6093  0586  3200               	nop2
  6094                           
  6095                           ;main.c: 182: setLEDColor(0, 0, 0);
  6096  0587  0020               	movlb	0	; select bank0
  6097  0588  01A0               	clrf	setLEDColor@green
  6098  0589  01A1               	clrf	setLEDColor@blue
  6099  058A  3000               	movlw	0
  6100  058B  3186  2672  3185   	fcall	_setLEDColor
  6101                           
  6102                           ;main.c: 183: _delay((unsigned long)((500)*(4000000/4000.0)));
  6103  058E  3003               	movlw	3
  6104  058F  0020               	movlb	0	; select bank0
  6105  0590  00A3               	movwf	??_lowBattery+1
  6106  0591  308A               	movlw	138
  6107  0592  00A2               	movwf	??_lowBattery
  6108  0593  3055               	movlw	85
  6109  0594                     u2287:
  6110  0594  0B89               	decfsz	9,f
  6111  0595  2D94               	goto	u2287
  6112  0596  0BA2               	decfsz	??_lowBattery,f
  6113  0597  2D94               	goto	u2287
  6114  0598  0BA3               	decfsz	??_lowBattery+1,f
  6115  0599  2D94               	goto	u2287
  6116  059A  3200               	nop2
  6117  059B  0008               	return
  6118  059C                     __end_of_lowBattery:
  6119                           
  6120                           	psect	text17
  6121  0672                     __ptext17:	
  6122 ;; *************** function _setLEDColor *****************
  6123 ;; Defined at:
  6124 ;;		line 157 in file "main.c"
  6125 ;; Parameters:    Size  Location     Type
  6126 ;;  red             1    wreg     unsigned char 
  6127 ;;  green           1    0[BANK0 ] unsigned char 
  6128 ;;  blue            1    1[BANK0 ] unsigned char 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  red             1    3[COMMON] unsigned char 
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      void 
  6133 ;; Registers used:
  6134 ;;		wreg, status,2, status,0
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6140 ;;      Params:         0       2       0       0       0       0       0       0
  6141 ;;      Locals:         1       0       0       0       0       0       0       0
  6142 ;;      Temps:          1       0       0       0       0       0       0       0
  6143 ;;      Totals:         2       2       0       0       0       0       0       0
  6144 ;;Total ram usage:        4 bytes
  6145 ;; Hardware stack levels used:    1
  6146 ;; Hardware stack levels required when called:    4
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		_lowBattery
  6151 ;;		_startUp
  6152 ;;		_selectSomething
  6153 ;;		_selectFrequency
  6154 ;;		_selectCurrent
  6155 ;;		_process_remote_command
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           
  6159                           
  6160                           ;psect for function _setLEDColor
  6161  0672                     _setLEDColor:
  6162                           
  6163                           ;incstack = 0
  6164                           ; Regs used in _setLEDColor: [wreg+status,2+status,0]
  6165                           ;setLEDColor@red stored from wreg
  6166  0672  00F9               	movwf	setLEDColor@red
  6167                           
  6168                           ;main.c: 164: if (0 == blue){
  6169  0673  0020               	movlb	0	; select bank0
  6170  0674  0821               	movf	setLEDColor@blue,w
  6171  0675  1D03               	btfss	3,2
  6172  0676  2E7A               	goto	l2342
  6173                           
  6174                           ;main.c: 165: TRISC |= 0b00100000;
  6175  0677  0021               	movlb	1	; select bank1
  6176  0678  168E               	bsf	14,5	;volatile
  6177                           
  6178                           ;main.c: 166: } else {
  6179  0679  2E7F               	goto	l2344
  6180  067A                     l2342:
  6181                           
  6182                           ;main.c: 167: TRISC &= 0b11011111;
  6183  067A  30DF               	movlw	223
  6184  067B  00F8               	movwf	??_setLEDColor
  6185  067C  0878               	movf	??_setLEDColor,w
  6186  067D  0021               	movlb	1	; select bank1
  6187  067E  058E               	andwf	14,f	;volatile
  6188  067F                     l2344:
  6189                           
  6190                           ;main.c: 168: };main.c: 169: CCPR1L = 255 - blue;
  6191  067F  0020               	movlb	0	; select bank0
  6192  0680  0921               	comf	setLEDColor@blue,w
  6193  0681  0025               	movlb	5	; select bank5
  6194  0682  0091               	movwf	17	;volatile
  6195                           
  6196                           ;main.c: 171: PWM3DCH = red;
  6197  0683  0879               	movf	setLEDColor@red,w
  6198  0684  002C               	movlb	12	; select bank12
  6199  0685  0098               	movwf	24	;volatile
  6200                           
  6201                           ;main.c: 173: PWM4DCH = green;
  6202  0686  0020               	movlb	0	; select bank0
  6203  0687  0820               	movf	setLEDColor@green,w
  6204  0688  002C               	movlb	12	; select bank12
  6205  0689  009B               	movwf	27	;volatile
  6206  068A  0008               	return
  6207  068B                     __end_of_setLEDColor:
  6208                           
  6209                           	psect	text18
  6210  042D                     __ptext18:	
  6211 ;; *************** function _initLED *****************
  6212 ;; Defined at:
  6213 ;;		line 116 in file "main.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;		None
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;		None
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  1    wreg      void 
  6220 ;; Registers used:
  6221 ;;		wreg, status,2, status,0
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6227 ;;      Params:         0       0       0       0       0       0       0       0
  6228 ;;      Locals:         0       0       0       0       0       0       0       0
  6229 ;;      Temps:          1       0       0       0       0       0       0       0
  6230 ;;      Totals:         1       0       0       0       0       0       0       0
  6231 ;;Total ram usage:        1 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:    4
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_main
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           
  6242                           ;psect for function _initLED
  6243  042D                     _initLED:
  6244                           
  6245                           ;main.c: 119: PR2 = 255;
  6246                           
  6247                           ;incstack = 0
  6248                           ; Regs used in _initLED: [wreg+status,2+status,0]
  6249  042D  30FF               	movlw	255
  6250  042E  0020               	movlb	0	; select bank0
  6251  042F  009B               	movwf	27	;volatile
  6252                           
  6253                           ;main.c: 120: T2CONbits.T2CKPS = 0b10;
  6254  0430  081C               	movf	28,w	;volatile
  6255  0431  39FC               	andlw	-4
  6256  0432  3802               	iorlw	2
  6257  0433  009C               	movwf	28	;volatile
  6258                           
  6259                           ;main.c: 121: T2CONbits.TMR2ON = 1;
  6260  0434  151C               	bsf	28,2	;volatile
  6261                           
  6262                           ;main.c: 125: TRISC |= 0b00010000;
  6263  0435  0021               	movlb	1	; select bank1
  6264  0436  160E               	bsf	14,4	;volatile
  6265                           
  6266                           ;main.c: 126: RC4PPS = 0b01110;
  6267  0437  300E               	movlw	14
  6268  0438  003D               	movlb	29	; select bank29
  6269  0439  00A4               	movwf	36	;volatile
  6270                           
  6271                           ;main.c: 127: CCPTMRSbits.P3TSEL = 0b00;
  6272  043A  30CF               	movlw	-49
  6273  043B  0025               	movlb	5	; select bank5
  6274  043C  059E               	andwf	30,f	;volatile
  6275                           
  6276                           ;main.c: 128: PWM3DCH = 0;
  6277  043D  002C               	movlb	12	; select bank12
  6278  043E  0198               	clrf	24	;volatile
  6279                           
  6280                           ;main.c: 129: PWM3DCLbits.PWM3DCL = 0;
  6281  043F  303F               	movlw	-193
  6282  0440  0597               	andwf	23,f	;volatile
  6283                           
  6284                           ;main.c: 130: PWM3CONbits.PWM3POL = 1;
  6285  0441  1619               	bsf	25,4	;volatile
  6286                           
  6287                           ;main.c: 131: TRISC &= 0b11101111;
  6288  0442  30EF               	movlw	239
  6289  0443  00F8               	movwf	??_initLED
  6290  0444  0878               	movf	??_initLED,w
  6291  0445  0021               	movlb	1	; select bank1
  6292  0446  058E               	andwf	14,f	;volatile
  6293                           
  6294                           ;main.c: 132: PWM3CONbits.PWM3EN = 1;
  6295  0447  002C               	movlb	12	; select bank12
  6296  0448  1799               	bsf	25,7	;volatile
  6297                           
  6298                           ;main.c: 136: TRISA |= 0b00100000;
  6299  0449  0021               	movlb	1	; select bank1
  6300  044A  168C               	bsf	12,5	;volatile
  6301                           
  6302                           ;main.c: 137: RA5PPS = 0b01111;
  6303  044B  300F               	movlw	15
  6304  044C  003D               	movlb	29	; select bank29
  6305  044D  0095               	movwf	21	;volatile
  6306                           
  6307                           ;main.c: 138: CCPTMRSbits.P4TSEL = 0b00;
  6308  044E  303F               	movlw	-193
  6309  044F  0025               	movlb	5	; select bank5
  6310  0450  059E               	andwf	30,f	;volatile
  6311                           
  6312                           ;main.c: 139: PWM4DCH = 0;
  6313  0451  002C               	movlb	12	; select bank12
  6314  0452  019B               	clrf	27	;volatile
  6315                           
  6316                           ;main.c: 140: PWM4DCLbits.PWM4DCL = 0;
  6317  0453  303F               	movlw	-193
  6318  0454  059A               	andwf	26,f	;volatile
  6319                           
  6320                           ;main.c: 141: PWM4CONbits.PWM4POL = 1;
  6321  0455  161C               	bsf	28,4	;volatile
  6322                           
  6323                           ;main.c: 142: TRISA &= 0b11011111;
  6324  0456  30DF               	movlw	223
  6325  0457  00F8               	movwf	??_initLED
  6326  0458  0878               	movf	??_initLED,w
  6327  0459  0021               	movlb	1	; select bank1
  6328  045A  058C               	andwf	12,f	;volatile
  6329                           
  6330                           ;main.c: 143: PWM4CONbits.PWM4EN = 1;
  6331  045B  002C               	movlb	12	; select bank12
  6332  045C  179C               	bsf	28,7	;volatile
  6333                           
  6334                           ;main.c: 149: TRISC |= 0b00100000;
  6335  045D  0021               	movlb	1	; select bank1
  6336  045E  168E               	bsf	14,5	;volatile
  6337                           
  6338                           ;main.c: 150: RC5PPS = 0b01100;
  6339  045F  300C               	movlw	12
  6340  0460  003D               	movlb	29	; select bank29
  6341  0461  00A5               	movwf	37	;volatile
  6342                           
  6343                           ;main.c: 151: CCP1CONbits.CCP1M = 0b1100;
  6344  0462  0025               	movlb	5	; select bank5
  6345  0463  0813               	movf	19,w	;volatile
  6346  0464  39F0               	andlw	-16
  6347  0465  380C               	iorlw	12
  6348  0466  0093               	movwf	19	;volatile
  6349                           
  6350                           ;main.c: 152: CCPR1L = 255;
  6351  0467  30FF               	movlw	255
  6352  0468  0091               	movwf	17	;volatile
  6353                           
  6354                           ;main.c: 153: CCP1CONbits.DC1B = 0x3;
  6355  0469  3030               	movlw	48
  6356  046A  0493               	iorwf	19,f	;volatile
  6357                           
  6358                           ;main.c: 154: TRISC &= 0b11011111;
  6359  046B  30DF               	movlw	223
  6360  046C  00F8               	movwf	??_initLED
  6361  046D  0878               	movf	??_initLED,w
  6362  046E  0021               	movlb	1	; select bank1
  6363  046F  058E               	andwf	14,f	;volatile
  6364  0470  0008               	return
  6365  0471                     __end_of_initLED:
  6366                           
  6367                           	psect	text19
  6368  0634                     __ptext19:	
  6369 ;; *************** function _SYSTEM_Initialize *****************
  6370 ;; Defined at:
  6371 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;		None
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;		None
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  1    wreg      void 
  6378 ;; Registers used:
  6379 ;;		wreg, status,2, status,0, pclath, cstack
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6385 ;;      Params:         0       0       0       0       0       0       0       0
  6386 ;;      Locals:         0       0       0       0       0       0       0       0
  6387 ;;      Temps:          0       0       0       0       0       0       0       0
  6388 ;;      Totals:         0       0       0       0       0       0       0       0
  6389 ;;Total ram usage:        0 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:    6
  6392 ;; This function calls:
  6393 ;;		_DAC_Initialize
  6394 ;;		_EUSART_Initialize
  6395 ;;		_EXT_INT_Initialize
  6396 ;;		_OPA1_Initialize
  6397 ;;		_OPA2_Initialize
  6398 ;;		_OSCILLATOR_Initialize
  6399 ;;		_PIN_MANAGER_Initialize
  6400 ;;		_TMR0_Initialize
  6401 ;;		_TMR2_Initialize
  6402 ;;		_TMR4_Initialize
  6403 ;;		_WDT_Initialize
  6404 ;; This function is called by:
  6405 ;;		_main
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           
  6410                           ;psect for function _SYSTEM_Initialize
  6411  0634                     _SYSTEM_Initialize:
  6412                           
  6413                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  6414                           
  6415                           ;incstack = 0
  6416                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6417  0634  3184  24AE  3186   	fcall	_PIN_MANAGER_Initialize
  6418                           
  6419                           ;mcc.c: 54: OSCILLATOR_Initialize();
  6420  0637  3187  2742  3186   	fcall	_OSCILLATOR_Initialize
  6421                           
  6422                           ;mcc.c: 55: WDT_Initialize();
  6423  063A  3187  277F  3186   	fcall	_WDT_Initialize
  6424                           
  6425                           ;mcc.c: 56: DAC_Initialize();
  6426  063D  3187  2770  3186   	fcall	_DAC_Initialize
  6427                           
  6428                           ;mcc.c: 57: OPA1_Initialize();
  6429  0640  3187  2787  3186   	fcall	_OPA1_Initialize
  6430                           
  6431                           ;mcc.c: 58: TMR4_Initialize();
  6432  0643  3186  26B3  3186   	fcall	_TMR4_Initialize
  6433                           
  6434                           ;mcc.c: 59: OPA2_Initialize();
  6435  0646  3187  2783  3186   	fcall	_OPA2_Initialize
  6436                           
  6437                           ;mcc.c: 60: TMR2_Initialize();
  6438  0649  3187  273A  3186   	fcall	_TMR2_Initialize
  6439                           
  6440                           ;mcc.c: 61: EXT_INT_Initialize();
  6441  064C  3186  26F4  3186   	fcall	_EXT_INT_Initialize
  6442                           
  6443                           ;mcc.c: 62: TMR0_Initialize();
  6444  064F  3186  26C6  3186   	fcall	_TMR0_Initialize
  6445                           
  6446                           ;mcc.c: 63: EUSART_Initialize();
  6447  0652  3185  25EE         	fcall	_EUSART_Initialize
  6448  0654  0008               	return
  6449  0655                     __end_of_SYSTEM_Initialize:
  6450                           
  6451                           	psect	text20
  6452  077F                     __ptext20:	
  6453 ;; *************** function _WDT_Initialize *****************
  6454 ;; Defined at:
  6455 ;;		line 78 in file "mcc_generated_files/mcc.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;		None
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;		None
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  1    wreg      void 
  6462 ;; Registers used:
  6463 ;;		wreg
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6469 ;;      Params:         0       0       0       0       0       0       0       0
  6470 ;;      Locals:         0       0       0       0       0       0       0       0
  6471 ;;      Temps:          0       0       0       0       0       0       0       0
  6472 ;;      Totals:         0       0       0       0       0       0       0       0
  6473 ;;Total ram usage:        0 bytes
  6474 ;; Hardware stack levels used:    1
  6475 ;; Hardware stack levels required when called:    4
  6476 ;; This function calls:
  6477 ;;		Nothing
  6478 ;; This function is called by:
  6479 ;;		_SYSTEM_Initialize
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           
  6484                           ;psect for function _WDT_Initialize
  6485  077F                     _WDT_Initialize:
  6486                           
  6487                           ;mcc.c: 81: WDTCON = 0x16;
  6488                           
  6489                           ;incstack = 0
  6490                           ; Regs used in _WDT_Initialize: [wreg]
  6491  077F  3016               	movlw	22
  6492  0780  0021               	movlb	1	; select bank1
  6493  0781  0097               	movwf	23	;volatile
  6494  0782  0008               	return
  6495  0783                     __end_of_WDT_Initialize:
  6496                           
  6497                           	psect	text21
  6498  06B3                     __ptext21:	
  6499 ;; *************** function _TMR4_Initialize *****************
  6500 ;; Defined at:
  6501 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;		None
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;		None
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  1    wreg      void 
  6508 ;; Registers used:
  6509 ;;		wreg, status,2, status,0, pclath, cstack
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6515 ;;      Params:         0       0       0       0       0       0       0       0
  6516 ;;      Locals:         0       0       0       0       0       0       0       0
  6517 ;;      Temps:          0       0       0       0       0       0       0       0
  6518 ;;      Totals:         0       0       0       0       0       0       0       0
  6519 ;;Total ram usage:        0 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; Hardware stack levels required when called:    5
  6522 ;; This function calls:
  6523 ;;		_TMR4_SetInterruptHandler
  6524 ;; This function is called by:
  6525 ;;		_SYSTEM_Initialize
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           
  6530                           ;psect for function _TMR4_Initialize
  6531  06B3                     _TMR4_Initialize:
  6532                           
  6533                           ;tmr4.c: 69: PR4 = 0x04;
  6534                           
  6535                           ;incstack = 0
  6536                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6537  06B3  3004               	movlw	4
  6538  06B4  0028               	movlb	8	; select bank8
  6539  06B5  0096               	movwf	22	;volatile
  6540                           
  6541                           ;tmr4.c: 72: TMR4 = 0x00;
  6542  06B6  0195               	clrf	21	;volatile
  6543                           
  6544                           ;tmr4.c: 75: PIR2bits.TMR4IF = 0;
  6545  06B7  0020               	movlb	0	; select bank0
  6546  06B8  1092               	bcf	18,1	;volatile
  6547                           
  6548                           ;tmr4.c: 78: PIE2bits.TMR4IE = 1;
  6549  06B9  0021               	movlb	1	; select bank1
  6550  06BA  1492               	bsf	18,1	;volatile
  6551                           
  6552                           ;tmr4.c: 81: TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandler);
  6553  06BB  304A               	movlw	low _TMR4_DefaultInterruptHandler
  6554  06BC  0020               	movlb	0	; select bank0
  6555  06BD  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  6556  06BE  3007               	movlw	high _TMR4_DefaultInterruptHandler
  6557  06BF  00A1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  6558  06C0  3187  275E         	fcall	_TMR4_SetInterruptHandler
  6559                           
  6560                           ;tmr4.c: 84: T4CON = 0x16;
  6561  06C2  3016               	movlw	22
  6562  06C3  0028               	movlb	8	; select bank8
  6563  06C4  0097               	movwf	23	;volatile
  6564  06C5  0008               	return
  6565  06C6                     __end_of_TMR4_Initialize:
  6566                           
  6567                           	psect	text22
  6568  075E                     __ptext22:	
  6569 ;; *************** function _TMR4_SetInterruptHandler *****************
  6570 ;; Defined at:
  6571 ;;		line 132 in file "mcc_generated_files/tmr4.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  6574 ;;		 -> TMR4_DefaultInterruptHandler(1), 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;		None
  6577 ;; Return value:  Size  Location     Type
  6578 ;;                  1    wreg      void 
  6579 ;; Registers used:
  6580 ;;		wreg
  6581 ;; Tracked objects:
  6582 ;;		On entry : 0/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6586 ;;      Params:         0       2       0       0       0       0       0       0
  6587 ;;      Locals:         0       0       0       0       0       0       0       0
  6588 ;;      Temps:          0       0       0       0       0       0       0       0
  6589 ;;      Totals:         0       2       0       0       0       0       0       0
  6590 ;;Total ram usage:        2 bytes
  6591 ;; Hardware stack levels used:    1
  6592 ;; Hardware stack levels required when called:    4
  6593 ;; This function calls:
  6594 ;;		Nothing
  6595 ;; This function is called by:
  6596 ;;		_TMR4_Initialize
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           
  6601                           ;psect for function _TMR4_SetInterruptHandler
  6602  075E                     _TMR4_SetInterruptHandler:
  6603                           
  6604                           ;tmr4.c: 133: TMR4_InterruptHandler = InterruptHandler;
  6605                           
  6606                           ;incstack = 0
  6607                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  6608  075E  0020               	movlb	0	; select bank0
  6609  075F  0821               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
  6610  0760  00E3               	movwf	_TMR4_InterruptHandler+1
  6611  0761  0820               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
  6612  0762  00E2               	movwf	_TMR4_InterruptHandler
  6613  0763  0008               	return
  6614  0764                     __end_of_TMR4_SetInterruptHandler:
  6615                           
  6616                           	psect	text23
  6617  073A                     __ptext23:	
  6618 ;; *************** function _TMR2_Initialize *****************
  6619 ;; Defined at:
  6620 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;		None
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;		None
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  1    wreg      void 
  6627 ;; Registers used:
  6628 ;;		wreg, status,2
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6634 ;;      Params:         0       0       0       0       0       0       0       0
  6635 ;;      Locals:         0       0       0       0       0       0       0       0
  6636 ;;      Temps:          0       0       0       0       0       0       0       0
  6637 ;;      Totals:         0       0       0       0       0       0       0       0
  6638 ;;Total ram usage:        0 bytes
  6639 ;; Hardware stack levels used:    1
  6640 ;; Hardware stack levels required when called:    4
  6641 ;; This function calls:
  6642 ;;		Nothing
  6643 ;; This function is called by:
  6644 ;;		_SYSTEM_Initialize
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           
  6649                           ;psect for function _TMR2_Initialize
  6650  073A                     _TMR2_Initialize:
  6651                           
  6652                           ;tmr2.c: 67: PR2 = 255;
  6653                           
  6654                           ;incstack = 0
  6655                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6656  073A  30FF               	movlw	255
  6657  073B  0020               	movlb	0	; select bank0
  6658  073C  009B               	movwf	27	;volatile
  6659                           
  6660                           ;tmr2.c: 70: TMR2 = 0x00;
  6661  073D  019A               	clrf	26	;volatile
  6662                           
  6663                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
  6664  073E  1091               	bcf	17,1	;volatile
  6665                           
  6666                           ;tmr2.c: 76: T2CON = 0x06;
  6667  073F  3006               	movlw	6
  6668  0740  009C               	movwf	28	;volatile
  6669  0741  0008               	return
  6670  0742                     __end_of_TMR2_Initialize:
  6671                           
  6672                           	psect	text24
  6673  06C6                     __ptext24:	
  6674 ;; *************** function _TMR0_Initialize *****************
  6675 ;; Defined at:
  6676 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;		None
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;		None
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  1    wreg      void 
  6683 ;; Registers used:
  6684 ;;		wreg, status,2, status,0, pclath, cstack
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6690 ;;      Params:         0       0       0       0       0       0       0       0
  6691 ;;      Locals:         0       0       0       0       0       0       0       0
  6692 ;;      Temps:          0       0       0       0       0       0       0       0
  6693 ;;      Totals:         0       0       0       0       0       0       0       0
  6694 ;;Total ram usage:        0 bytes
  6695 ;; Hardware stack levels used:    1
  6696 ;; Hardware stack levels required when called:    5
  6697 ;; This function calls:
  6698 ;;		_TMR0_SetInterruptHandler
  6699 ;; This function is called by:
  6700 ;;		_SYSTEM_Initialize
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           
  6705                           ;psect for function _TMR0_Initialize
  6706  06C6                     _TMR0_Initialize:
  6707                           
  6708                           ;tmr0.c: 69: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD5 & 0x3F));
  6709                           
  6710                           ;incstack = 0
  6711                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6712  06C6  0021               	movlb	1	; select bank1
  6713  06C7  0815               	movf	21,w	;volatile
  6714  06C8  39C0               	andlw	192
  6715  06C9  3815               	iorlw	21
  6716  06CA  0095               	movwf	21	;volatile
  6717                           
  6718                           ;tmr0.c: 72: TMR0 = 0x00;
  6719  06CB  0020               	movlb	0	; select bank0
  6720  06CC  0195               	clrf	21	;volatile
  6721                           
  6722                           ;tmr0.c: 75: timer0ReloadVal= 0;
  6723  06CD  01DE               	clrf	_timer0ReloadVal	;volatile
  6724                           
  6725                           ;tmr0.c: 78: INTCONbits.TMR0IF = 0;
  6726  06CE  110B               	bcf	11,2	;volatile
  6727                           
  6728                           ;tmr0.c: 81: INTCONbits.TMR0IE = 1;
  6729  06CF  168B               	bsf	11,5	;volatile
  6730                           
  6731                           ;tmr0.c: 84: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  6732  06D0  3090               	movlw	low _TMR0_DefaultInterruptHandler
  6733  06D1  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  6734  06D2  3007               	movlw	high _TMR0_DefaultInterruptHandler
  6735  06D3  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  6736  06D4  3187  2764         	fcall	_TMR0_SetInterruptHandler
  6737  06D6  0008               	return
  6738  06D7                     __end_of_TMR0_Initialize:
  6739                           
  6740                           	psect	text25
  6741  0764                     __ptext25:	
  6742 ;; *************** function _TMR0_SetInterruptHandler *****************
  6743 ;; Defined at:
  6744 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  6747 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;		None
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  1    wreg      void 
  6752 ;; Registers used:
  6753 ;;		wreg
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6759 ;;      Params:         0       2       0       0       0       0       0       0
  6760 ;;      Locals:         0       0       0       0       0       0       0       0
  6761 ;;      Temps:          0       0       0       0       0       0       0       0
  6762 ;;      Totals:         0       2       0       0       0       0       0       0
  6763 ;;Total ram usage:        2 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:    4
  6766 ;; This function calls:
  6767 ;;		Nothing
  6768 ;; This function is called by:
  6769 ;;		_TMR0_Initialize
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           
  6774                           ;psect for function _TMR0_SetInterruptHandler
  6775  0764                     _TMR0_SetInterruptHandler:
  6776                           
  6777                           ;tmr0.c: 126: TMR0_InterruptHandler = InterruptHandler;
  6778                           
  6779                           ;incstack = 0
  6780                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6781  0764  0020               	movlb	0	; select bank0
  6782  0765  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  6783  0766  00E5               	movwf	_TMR0_InterruptHandler+1
  6784  0767  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  6785  0768  00E4               	movwf	_TMR0_InterruptHandler
  6786  0769  0008               	return
  6787  076A                     __end_of_TMR0_SetInterruptHandler:
  6788                           
  6789                           	psect	text26
  6790  04AE                     __ptext26:	
  6791 ;; *************** function _PIN_MANAGER_Initialize *****************
  6792 ;; Defined at:
  6793 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;		None
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;		None
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  1    wreg      void 
  6800 ;; Registers used:
  6801 ;;		wreg, status,2
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6807 ;;      Params:         0       0       0       0       0       0       0       0
  6808 ;;      Locals:         0       0       0       0       0       0       0       0
  6809 ;;      Temps:          0       0       0       0       0       0       0       0
  6810 ;;      Totals:         0       0       0       0       0       0       0       0
  6811 ;;Total ram usage:        0 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:    4
  6814 ;; This function calls:
  6815 ;;		Nothing
  6816 ;; This function is called by:
  6817 ;;		_SYSTEM_Initialize
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           
  6822                           ;psect for function _PIN_MANAGER_Initialize
  6823  04AE                     _PIN_MANAGER_Initialize:
  6824                           
  6825                           ;pin_manager.c: 60: LATA = 0x00;
  6826                           
  6827                           ;incstack = 0
  6828                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6829  04AE  0022               	movlb	2	; select bank2
  6830  04AF  018C               	clrf	12	;volatile
  6831                           
  6832                           ;pin_manager.c: 61: LATB = 0x00;
  6833  04B0  018D               	clrf	13	;volatile
  6834                           
  6835                           ;pin_manager.c: 62: LATC = 0x00;
  6836  04B1  018E               	clrf	14	;volatile
  6837                           
  6838                           ;pin_manager.c: 67: TRISA = 0x04;
  6839  04B2  3004               	movlw	4
  6840  04B3  0021               	movlb	1	; select bank1
  6841  04B4  008C               	movwf	12	;volatile
  6842                           
  6843                           ;pin_manager.c: 68: TRISB = 0x30;
  6844  04B5  3030               	movlw	48
  6845  04B6  008D               	movwf	13	;volatile
  6846                           
  6847                           ;pin_manager.c: 69: TRISC = 0x50;
  6848  04B7  3050               	movlw	80
  6849  04B8  008E               	movwf	14	;volatile
  6850                           
  6851                           ;pin_manager.c: 74: ANSELC = 0x40;
  6852  04B9  3040               	movlw	64
  6853  04BA  0023               	movlb	3	; select bank3
  6854  04BB  008E               	movwf	14	;volatile
  6855                           
  6856                           ;pin_manager.c: 75: ANSELB = 0x10;
  6857  04BC  3010               	movlw	16
  6858  04BD  008D               	movwf	13	;volatile
  6859                           
  6860                           ;pin_manager.c: 76: ANSELA = 0x00;
  6861  04BE  018C               	clrf	12	;volatile
  6862                           
  6863                           ;pin_manager.c: 81: WPUB = 0x00;
  6864  04BF  0024               	movlb	4	; select bank4
  6865  04C0  018D               	clrf	13	;volatile
  6866                           
  6867                           ;pin_manager.c: 82: WPUA = 0x00;
  6868  04C1  018C               	clrf	12	;volatile
  6869                           
  6870                           ;pin_manager.c: 83: WPUC = 0x00;
  6871  04C2  018E               	clrf	14	;volatile
  6872                           
  6873                           ;pin_manager.c: 84: OPTION_REGbits.nWPUEN = 0;
  6874  04C3  0021               	movlb	1	; select bank1
  6875  04C4  1395               	bcf	21,7	;volatile
  6876                           
  6877                           ;pin_manager.c: 89: ODCONA = 0x00;
  6878  04C5  0025               	movlb	5	; select bank5
  6879  04C6  018C               	clrf	12	;volatile
  6880                           
  6881                           ;pin_manager.c: 90: ODCONB = 0x00;
  6882  04C7  018D               	clrf	13	;volatile
  6883                           
  6884                           ;pin_manager.c: 91: ODCONC = 0x00;
  6885  04C8  018E               	clrf	14	;volatile
  6886                           
  6887                           ;pin_manager.c: 96: SLRCONA = 0x37;
  6888  04C9  3037               	movlw	55
  6889  04CA  0026               	movlb	6	; select bank6
  6890  04CB  008C               	movwf	12	;volatile
  6891                           
  6892                           ;pin_manager.c: 97: SLRCONB = 0xF0;
  6893  04CC  30F0               	movlw	240
  6894  04CD  008D               	movwf	13	;volatile
  6895                           
  6896                           ;pin_manager.c: 98: SLRCONC = 0xFF;
  6897  04CE  30FF               	movlw	255
  6898  04CF  008E               	movwf	14	;volatile
  6899                           
  6900                           ;pin_manager.c: 103: INLVLA = 0x3F;
  6901  04D0  303F               	movlw	63
  6902  04D1  0027               	movlb	7	; select bank7
  6903  04D2  008C               	movwf	12	;volatile
  6904                           
  6905                           ;pin_manager.c: 104: INLVLB = 0xF0;
  6906  04D3  30F0               	movlw	240
  6907  04D4  008D               	movwf	13	;volatile
  6908                           
  6909                           ;pin_manager.c: 105: INLVLC = 0xFF;
  6910  04D5  30FF               	movlw	255
  6911  04D6  008E               	movwf	14	;volatile
  6912                           
  6913                           ;pin_manager.c: 113: INTCONbits.IOCIE = 1;
  6914  04D7  158B               	bsf	11,3	;volatile
  6915                           
  6916                           ;pin_manager.c: 116: INTPPS = 0x02;
  6917  04D8  3002               	movlw	2
  6918  04D9  003C               	movlb	28	; select bank28
  6919  04DA  0090               	movwf	16	;volatile
  6920                           
  6921                           ;pin_manager.c: 117: RXPPS = 0x0D;
  6922  04DB  300D               	movlw	13
  6923  04DC  00A4               	movwf	36	;volatile
  6924                           
  6925                           ;pin_manager.c: 118: RB7PPS = 0x14;
  6926  04DD  3014               	movlw	20
  6927  04DE  003D               	movlb	29	; select bank29
  6928  04DF  009F               	movwf	31	;volatile
  6929  04E0  0008               	return
  6930  04E1                     __end_of_PIN_MANAGER_Initialize:
  6931                           
  6932                           	psect	text27
  6933  0742                     __ptext27:	
  6934 ;; *************** function _OSCILLATOR_Initialize *****************
  6935 ;; Defined at:
  6936 ;;		line 66 in file "mcc_generated_files/mcc.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;		None
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;		None
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  1    wreg      void 
  6943 ;; Registers used:
  6944 ;;		wreg, status,2
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6950 ;;      Params:         0       0       0       0       0       0       0       0
  6951 ;;      Locals:         0       0       0       0       0       0       0       0
  6952 ;;      Temps:          0       0       0       0       0       0       0       0
  6953 ;;      Totals:         0       0       0       0       0       0       0       0
  6954 ;;Total ram usage:        0 bytes
  6955 ;; Hardware stack levels used:    1
  6956 ;; Hardware stack levels required when called:    4
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		_SYSTEM_Initialize
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           
  6965                           ;psect for function _OSCILLATOR_Initialize
  6966  0742                     _OSCILLATOR_Initialize:
  6967                           
  6968                           ;mcc.c: 69: OSCCON = 0x6A;
  6969                           
  6970                           ;incstack = 0
  6971                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6972  0742  306A               	movlw	106
  6973  0743  0021               	movlb	1	; select bank1
  6974  0744  0099               	movwf	25	;volatile
  6975                           
  6976                           ;mcc.c: 71: OSCSTAT = 0x00;
  6977  0745  019A               	clrf	26	;volatile
  6978                           
  6979                           ;mcc.c: 73: OSCTUNE = 0x00;
  6980  0746  0198               	clrf	24	;volatile
  6981                           
  6982                           ;mcc.c: 75: BORCON = 0x00;
  6983  0747  0022               	movlb	2	; select bank2
  6984  0748  0196               	clrf	22	;volatile
  6985  0749  0008               	return
  6986  074A                     __end_of_OSCILLATOR_Initialize:
  6987                           
  6988                           	psect	text28
  6989  0783                     __ptext28:	
  6990 ;; *************** function _OPA2_Initialize *****************
  6991 ;; Defined at:
  6992 ;;		line 58 in file "mcc_generated_files/opa2.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;		None
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;		None
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  1    wreg      void 
  6999 ;; Registers used:
  7000 ;;		wreg
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7006 ;;      Params:         0       0       0       0       0       0       0       0
  7007 ;;      Locals:         0       0       0       0       0       0       0       0
  7008 ;;      Temps:          0       0       0       0       0       0       0       0
  7009 ;;      Totals:         0       0       0       0       0       0       0       0
  7010 ;;Total ram usage:        0 bytes
  7011 ;; Hardware stack levels used:    1
  7012 ;; Hardware stack levels required when called:    4
  7013 ;; This function calls:
  7014 ;;		Nothing
  7015 ;; This function is called by:
  7016 ;;		_SYSTEM_Initialize
  7017 ;;		_main
  7018 ;; This function uses a non-reentrant model
  7019 ;;
  7020                           
  7021                           
  7022                           ;psect for function _OPA2_Initialize
  7023  0783                     _OPA2_Initialize:
  7024                           
  7025                           ;opa2.c: 61: OPA2CON = 0xC2;
  7026                           
  7027                           ;incstack = 0
  7028                           ; Regs used in _OPA2_Initialize: [wreg]
  7029  0783  30C2               	movlw	194
  7030  0784  002A               	movlb	10	; select bank10
  7031  0785  0095               	movwf	21	;volatile
  7032  0786  0008               	return
  7033  0787                     __end_of_OPA2_Initialize:
  7034                           
  7035                           	psect	text29
  7036  0787                     __ptext29:	
  7037 ;; *************** function _OPA1_Initialize *****************
  7038 ;; Defined at:
  7039 ;;		line 58 in file "mcc_generated_files/opa1.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;		None
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;		None
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  1    wreg      void 
  7046 ;; Registers used:
  7047 ;;		wreg
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7053 ;;      Params:         0       0       0       0       0       0       0       0
  7054 ;;      Locals:         0       0       0       0       0       0       0       0
  7055 ;;      Temps:          0       0       0       0       0       0       0       0
  7056 ;;      Totals:         0       0       0       0       0       0       0       0
  7057 ;;Total ram usage:        0 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; Hardware stack levels required when called:    4
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_SYSTEM_Initialize
  7064 ;;		_main
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           
  7069                           ;psect for function _OPA1_Initialize
  7070  0787                     _OPA1_Initialize:
  7071                           
  7072                           ;opa1.c: 61: OPA1CON = 0xC2;
  7073                           
  7074                           ;incstack = 0
  7075                           ; Regs used in _OPA1_Initialize: [wreg]
  7076  0787  30C2               	movlw	194
  7077  0788  002A               	movlb	10	; select bank10
  7078  0789  0091               	movwf	17	;volatile
  7079  078A  0008               	return
  7080  078B                     __end_of_OPA1_Initialize:
  7081                           
  7082                           	psect	text30
  7083  06F4                     __ptext30:	
  7084 ;; *************** function _EXT_INT_Initialize *****************
  7085 ;; Defined at:
  7086 ;;		line 132 in file "mcc_generated_files/ext_int.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;		None
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;		None
  7091 ;; Return value:  Size  Location     Type
  7092 ;;                  1    wreg      void 
  7093 ;; Registers used:
  7094 ;;		wreg, status,2, status,0, pclath, cstack
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/0
  7097 ;;		On exit  : 0/0
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7100 ;;      Params:         0       0       0       0       0       0       0       0
  7101 ;;      Locals:         0       0       0       0       0       0       0       0
  7102 ;;      Temps:          0       0       0       0       0       0       0       0
  7103 ;;      Totals:         0       0       0       0       0       0       0       0
  7104 ;;Total ram usage:        0 bytes
  7105 ;; Hardware stack levels used:    1
  7106 ;; Hardware stack levels required when called:    5
  7107 ;; This function calls:
  7108 ;;		_INT_SetInterruptHandler
  7109 ;; This function is called by:
  7110 ;;		_SYSTEM_Initialize
  7111 ;; This function uses a non-reentrant model
  7112 ;;
  7113                           
  7114                           
  7115                           ;psect for function _EXT_INT_Initialize
  7116  06F4                     _EXT_INT_Initialize:
  7117                           
  7118                           ;ext_int.c: 137: (INTCONbits.INTF = 0);
  7119                           
  7120                           ;incstack = 0
  7121                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7122  06F4  108B               	bcf	11,1	;volatile
  7123                           
  7124                           ;ext_int.c: 138: (OPTION_REGbits.INTEDG = 0);
  7125  06F5  0021               	movlb	1	; select bank1
  7126  06F6  1315               	bcf	21,6	;volatile
  7127                           
  7128                           ;ext_int.c: 140: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
  7129  06F7  3081               	movlw	low _INT_DefaultInterruptHandler
  7130  06F8  0020               	movlb	0	; select bank0
  7131  06F9  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler
  7132  06FA  3002               	movlw	high _INT_DefaultInterruptHandler
  7133  06FB  00A1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  7134  06FC  3187  276A         	fcall	_INT_SetInterruptHandler
  7135                           
  7136                           ;ext_int.c: 141: (INTCONbits.INTE = 1);
  7137  06FE  160B               	bsf	11,4	;volatile
  7138  06FF  0008               	return
  7139  0700                     __end_of_EXT_INT_Initialize:
  7140                           
  7141                           	psect	text31
  7142  076A                     __ptext31:	
  7143 ;; *************** function _INT_SetInterruptHandler *****************
  7144 ;; Defined at:
  7145 ;;		line 71 in file "mcc_generated_files/ext_int.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  7148 ;;		 -> INT_DefaultInterruptHandler(1), 
  7149 ;; Auto vars:     Size  Location     Type
  7150 ;;		None
  7151 ;; Return value:  Size  Location     Type
  7152 ;;                  1    wreg      void 
  7153 ;; Registers used:
  7154 ;;		wreg
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7160 ;;      Params:         0       2       0       0       0       0       0       0
  7161 ;;      Locals:         0       0       0       0       0       0       0       0
  7162 ;;      Temps:          0       0       0       0       0       0       0       0
  7163 ;;      Totals:         0       2       0       0       0       0       0       0
  7164 ;;Total ram usage:        2 bytes
  7165 ;; Hardware stack levels used:    1
  7166 ;; Hardware stack levels required when called:    4
  7167 ;; This function calls:
  7168 ;;		Nothing
  7169 ;; This function is called by:
  7170 ;;		_EXT_INT_Initialize
  7171 ;; This function uses a non-reentrant model
  7172 ;;
  7173                           
  7174                           
  7175                           ;psect for function _INT_SetInterruptHandler
  7176  076A                     _INT_SetInterruptHandler:
  7177                           
  7178                           ;ext_int.c: 72: INT_InterruptHandler = InterruptHandler;
  7179                           
  7180                           ;incstack = 0
  7181                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  7182  076A  0020               	movlb	0	; select bank0
  7183  076B  0821               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  7184  076C  00E7               	movwf	_INT_InterruptHandler+1
  7185  076D  0820               	movf	INT_SetInterruptHandler@InterruptHandler,w
  7186  076E  00E6               	movwf	_INT_InterruptHandler
  7187  076F  0008               	return
  7188  0770                     __end_of_INT_SetInterruptHandler:
  7189                           
  7190                           	psect	text32
  7191  05EE                     __ptext32:	
  7192 ;; *************** function _EUSART_Initialize *****************
  7193 ;; Defined at:
  7194 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;		None
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;		None
  7199 ;; Return value:  Size  Location     Type
  7200 ;;                  1    wreg      void 
  7201 ;; Registers used:
  7202 ;;		wreg, status,2, status,0, pclath, cstack
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7208 ;;      Params:         0       0       0       0       0       0       0       0
  7209 ;;      Locals:         0       0       0       0       0       0       0       0
  7210 ;;      Temps:          0       0       0       0       0       0       0       0
  7211 ;;      Totals:         0       0       0       0       0       0       0       0
  7212 ;;Total ram usage:        0 bytes
  7213 ;; Hardware stack levels used:    1
  7214 ;; Hardware stack levels required when called:    5
  7215 ;; This function calls:
  7216 ;;		_EUSART_SetErrorHandler
  7217 ;;		_EUSART_SetFramingErrorHandler
  7218 ;;		_EUSART_SetOverrunErrorHandler
  7219 ;; This function is called by:
  7220 ;;		_SYSTEM_Initialize
  7221 ;; This function uses a non-reentrant model
  7222 ;;
  7223                           
  7224                           
  7225                           ;psect for function _EUSART_Initialize
  7226  05EE                     _EUSART_Initialize:
  7227                           
  7228                           ;eusart.c: 71: BAUD1CON = 0x08;
  7229                           
  7230                           ;incstack = 0
  7231                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7232  05EE  3008               	movlw	8
  7233  05EF  0023               	movlb	3	; select bank3
  7234  05F0  009F               	movwf	31	;volatile
  7235                           
  7236                           ;eusart.c: 74: RC1STA = 0x90;
  7237  05F1  3090               	movlw	144
  7238  05F2  009D               	movwf	29	;volatile
  7239                           
  7240                           ;eusart.c: 77: TX1STA = 0x24;
  7241  05F3  3024               	movlw	36
  7242  05F4  009E               	movwf	30	;volatile
  7243                           
  7244                           ;eusart.c: 80: SP1BRGL = 0x08;
  7245  05F5  3008               	movlw	8
  7246  05F6  009B               	movwf	27	;volatile
  7247                           
  7248                           ;eusart.c: 83: SP1BRGH = 0x00;
  7249  05F7  019C               	clrf	28	;volatile
  7250                           
  7251                           ;eusart.c: 86: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  7252  05F8  3000               	movlw	0
  7253  05F9  0020               	movlb	0	; select bank0
  7254  05FA  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  7255  05FB  3000               	movlw	0
  7256  05FC  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  7257  05FD  3187  2720  3185   	fcall	_EUSART_SetFramingErrorHandler
  7258                           
  7259                           ;eusart.c: 87: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  7260  0600  3000               	movlw	0
  7261  0601  0020               	movlb	0	; select bank0
  7262  0602  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  7263  0603  3000               	movlw	0
  7264  0604  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  7265  0605  3187  2717  3185   	fcall	_EUSART_SetOverrunErrorHandler
  7266                           
  7267                           ;eusart.c: 88: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  7268  0608  3000               	movlw	0
  7269  0609  0020               	movlb	0	; select bank0
  7270  060A  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  7271  060B  3000               	movlw	0
  7272  060C  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  7273  060D  3187  2729         	fcall	_EUSART_SetErrorHandler
  7274                           
  7275                           ;eusart.c: 90: eusartRxLastError.status = 0;
  7276  060F  0020               	movlb	0	; select bank0
  7277  0610  01DF               	clrf	_eusartRxLastError	;volatile
  7278  0611  0008               	return
  7279  0612                     __end_of_EUSART_Initialize:
  7280                           
  7281                           	psect	text33
  7282  0717                     __ptext33:	
  7283 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7284 ;; Defined at:
  7285 ;;		line 170 in file "mcc_generated_files/eusart.c"
  7286 ;; Parameters:    Size  Location     Type
  7287 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7288 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  1    wreg      void 
  7293 ;; Registers used:
  7294 ;;		wreg
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7300 ;;      Params:         0       2       0       0       0       0       0       0
  7301 ;;      Locals:         0       0       0       0       0       0       0       0
  7302 ;;      Temps:          0       0       0       0       0       0       0       0
  7303 ;;      Totals:         0       2       0       0       0       0       0       0
  7304 ;;Total ram usage:        2 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    4
  7307 ;; This function calls:
  7308 ;;		Nothing
  7309 ;; This function is called by:
  7310 ;;		_EUSART_Initialize
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           
  7315                           ;psect for function _EUSART_SetOverrunErrorHandler
  7316  0717                     _EUSART_SetOverrunErrorHandler:
  7317                           
  7318                           ;eusart.c: 171: EUSART_OverrunErrorHandler = interruptHandler;
  7319                           
  7320                           ;incstack = 0
  7321                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7322  0717  0020               	movlb	0	; select bank0
  7323  0718  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7324  0719  0021               	movlb	1	; select bank1
  7325  071A  00E6               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  7326  071B  0020               	movlb	0	; select bank0
  7327  071C  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7328  071D  0021               	movlb	1	; select bank1
  7329  071E  00E5               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  7330  071F  0008               	return
  7331  0720                     __end_of_EUSART_SetOverrunErrorHandler:
  7332                           
  7333                           	psect	text34
  7334  0720                     __ptext34:	
  7335 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7336 ;; Defined at:
  7337 ;;		line 166 in file "mcc_generated_files/eusart.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7340 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;		None
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  1    wreg      void 
  7345 ;; Registers used:
  7346 ;;		wreg
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7352 ;;      Params:         0       2       0       0       0       0       0       0
  7353 ;;      Locals:         0       0       0       0       0       0       0       0
  7354 ;;      Temps:          0       0       0       0       0       0       0       0
  7355 ;;      Totals:         0       2       0       0       0       0       0       0
  7356 ;;Total ram usage:        2 bytes
  7357 ;; Hardware stack levels used:    1
  7358 ;; Hardware stack levels required when called:    4
  7359 ;; This function calls:
  7360 ;;		Nothing
  7361 ;; This function is called by:
  7362 ;;		_EUSART_Initialize
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           
  7367                           ;psect for function _EUSART_SetFramingErrorHandler
  7368  0720                     _EUSART_SetFramingErrorHandler:
  7369                           
  7370                           ;eusart.c: 167: EUSART_FramingErrorHandler = interruptHandler;
  7371                           
  7372                           ;incstack = 0
  7373                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7374  0720  0020               	movlb	0	; select bank0
  7375  0721  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7376  0722  0021               	movlb	1	; select bank1
  7377  0723  00E8               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  7378  0724  0020               	movlb	0	; select bank0
  7379  0725  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7380  0726  0021               	movlb	1	; select bank1
  7381  0727  00E7               	movwf	_EUSART_FramingErrorHandler^(0+128)
  7382  0728  0008               	return
  7383  0729                     __end_of_EUSART_SetFramingErrorHandler:
  7384                           
  7385                           	psect	text35
  7386  0729                     __ptext35:	
  7387 ;; *************** function _EUSART_SetErrorHandler *****************
  7388 ;; Defined at:
  7389 ;;		line 174 in file "mcc_generated_files/eusart.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7392 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;		None
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  1    wreg      void 
  7397 ;; Registers used:
  7398 ;;		wreg
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7404 ;;      Params:         0       2       0       0       0       0       0       0
  7405 ;;      Locals:         0       0       0       0       0       0       0       0
  7406 ;;      Temps:          0       0       0       0       0       0       0       0
  7407 ;;      Totals:         0       2       0       0       0       0       0       0
  7408 ;;Total ram usage:        2 bytes
  7409 ;; Hardware stack levels used:    1
  7410 ;; Hardware stack levels required when called:    4
  7411 ;; This function calls:
  7412 ;;		Nothing
  7413 ;; This function is called by:
  7414 ;;		_EUSART_Initialize
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           
  7419                           ;psect for function _EUSART_SetErrorHandler
  7420  0729                     _EUSART_SetErrorHandler:
  7421                           
  7422                           ;eusart.c: 175: EUSART_ErrorHandler = interruptHandler;
  7423                           
  7424                           ;incstack = 0
  7425                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7426  0729  0020               	movlb	0	; select bank0
  7427  072A  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7428  072B  0021               	movlb	1	; select bank1
  7429  072C  00E4               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  7430  072D  0020               	movlb	0	; select bank0
  7431  072E  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7432  072F  0021               	movlb	1	; select bank1
  7433  0730  00E3               	movwf	_EUSART_ErrorHandler^(0+128)
  7434  0731  0008               	return
  7435  0732                     __end_of_EUSART_SetErrorHandler:
  7436                           
  7437                           	psect	text36
  7438  0770                     __ptext36:	
  7439 ;; *************** function _DAC_Initialize *****************
  7440 ;; Defined at:
  7441 ;;		line 58 in file "mcc_generated_files/dac.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;		None
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;		None
  7446 ;; Return value:  Size  Location     Type
  7447 ;;                  1    wreg      void 
  7448 ;; Registers used:
  7449 ;;		wreg
  7450 ;; Tracked objects:
  7451 ;;		On entry : 0/0
  7452 ;;		On exit  : 0/0
  7453 ;;		Unchanged: 0/0
  7454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7455 ;;      Params:         0       0       0       0       0       0       0       0
  7456 ;;      Locals:         0       0       0       0       0       0       0       0
  7457 ;;      Temps:          0       0       0       0       0       0       0       0
  7458 ;;      Totals:         0       0       0       0       0       0       0       0
  7459 ;;Total ram usage:        0 bytes
  7460 ;; Hardware stack levels used:    1
  7461 ;; Hardware stack levels required when called:    4
  7462 ;; This function calls:
  7463 ;;		Nothing
  7464 ;; This function is called by:
  7465 ;;		_SYSTEM_Initialize
  7466 ;;		_main
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           
  7471                           ;psect for function _DAC_Initialize
  7472  0770                     _DAC_Initialize:
  7473                           
  7474                           ;dac.c: 61: DAC1CON0 = 0x80;
  7475                           
  7476                           ;incstack = 0
  7477                           ; Regs used in _DAC_Initialize: [wreg]
  7478  0770  3080               	movlw	128
  7479  0771  0022               	movlb	2	; select bank2
  7480  0772  0098               	movwf	24	;volatile
  7481                           
  7482                           ;dac.c: 63: DAC1CON1 = 0xFF;
  7483  0773  30FF               	movlw	255
  7484  0774  0099               	movwf	25	;volatile
  7485  0775  0008               	return
  7486  0776                     __end_of_DAC_Initialize:
  7487                           
  7488                           	psect	intentry
  7489  0004                     __pintentry:	
  7490 ;; *************** function _INTERRUPT_InterruptManager *****************
  7491 ;; Defined at:
  7492 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;		None
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;		None
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  1    wreg      void 
  7499 ;; Registers used:
  7500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/0
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7506 ;;      Params:         0       0       0       0       0       0       0       0
  7507 ;;      Locals:         0       0       0       0       0       0       0       0
  7508 ;;      Temps:          0       0       0       0       0       0       0       0
  7509 ;;      Totals:         0       0       0       0       0       0       0       0
  7510 ;;Total ram usage:        0 bytes
  7511 ;; Hardware stack levels used:    1
  7512 ;; Hardware stack levels required when called:    3
  7513 ;; This function calls:
  7514 ;;		_INT_ISR
  7515 ;;		_PIN_MANAGER_IOC
  7516 ;;		_TMR0_ISR
  7517 ;;		_TMR4_ISR
  7518 ;; This function is called by:
  7519 ;;		Interrupt level 1
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523  0004                     _INTERRUPT_InterruptManager:
  7524                           
  7525                           ;incstack = 0
  7526  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7527                           
  7528                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7529  0005  3180               	pagesel	$
  7530                           
  7531                           ;interrupt_manager.c: 55: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  7532  0006  1A8B               	btfsc	11,5	;volatile
  7533  0007  1D0B               	btfss	11,2	;volatile
  7534  0008  280D               	goto	i1l136
  7535                           
  7536                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: TMR0_ISR();
  7537  0009  3186  26E6  3180   	fcall	_TMR0_ISR
  7538                           
  7539                           ;interrupt_manager.c: 58: }
  7540  000C  2825               	goto	i1l146
  7541  000D                     i1l136:
  7542                           
  7543                           ;interrupt_manager.c: 59: else if(INTCONbits.INTE == 1 && INTCONbits.INTF == 1)
  7544  000D  1A0B               	btfsc	11,4	;volatile
  7545  000E  1C8B               	btfss	11,1	;volatile
  7546  000F  2814               	goto	i1l138
  7547                           
  7548                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: INT_ISR();
  7549  0010  3187  278B  3180   	fcall	_INT_ISR
  7550                           
  7551                           ;interrupt_manager.c: 62: }
  7552  0013  2825               	goto	i1l146
  7553  0014                     i1l138:
  7554                           
  7555                           ;interrupt_manager.c: 63: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  7556  0014  198B               	btfsc	11,3	;volatile
  7557  0015  1C0B               	btfss	11,0	;volatile
  7558  0016  281B               	goto	i1l140
  7559                           
  7560                           ;interrupt_manager.c: 64: {;interrupt_manager.c: 65: PIN_MANAGER_IOC();
  7561  0017  3187  2791  3180   	fcall	_PIN_MANAGER_IOC
  7562                           
  7563                           ;interrupt_manager.c: 66: }
  7564  001A  2825               	goto	i1l146
  7565  001B                     i1l140:
  7566                           
  7567                           ;interrupt_manager.c: 67: else if(INTCONbits.PEIE == 1)
  7568  001B  1F0B               	btfss	11,6	;volatile
  7569  001C  2825               	goto	i1l146
  7570                           
  7571                           ;interrupt_manager.c: 68: {;interrupt_manager.c: 69: if(PIE2bits.TMR4IE == 1 && PIR2bits
      +                          .TMR4IF == 1)
  7572  001D  0021               	movlb	1	; select bank1
  7573  001E  1C92               	btfss	18,1	;volatile
  7574  001F  2825               	goto	i1l146
  7575  0020  0020               	movlb	0	; select bank0
  7576  0021  1C92               	btfss	18,1	;volatile
  7577  0022  2825               	goto	i1l146
  7578                           
  7579                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR4_ISR();
  7580  0023  3187  2700         	fcall	_TMR4_ISR
  7581  0025                     i1l146:	
  7582                           ;interrupt_manager.c: 72: }
  7583                           
  7584  0025  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7585  0026  0009               	retfie
  7586  0027                     __end_of_INTERRUPT_InterruptManager:
  7587                           
  7588                           	psect	text38
  7589  0700                     __ptext38:	
  7590 ;; *************** function _TMR4_ISR *****************
  7591 ;; Defined at:
  7592 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;		None
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;		None
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  1    wreg      void 
  7599 ;; Registers used:
  7600 ;;		wreg, status,2, status,0, pclath, cstack
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7606 ;;      Params:         0       0       0       0       0       0       0       0
  7607 ;;      Locals:         0       0       0       0       0       0       0       0
  7608 ;;      Temps:          0       0       0       0       0       0       0       0
  7609 ;;      Totals:         0       0       0       0       0       0       0       0
  7610 ;;Total ram usage:        0 bytes
  7611 ;; Hardware stack levels used:    1
  7612 ;; Hardware stack levels required when called:    1
  7613 ;; This function calls:
  7614 ;;		Absolute function
  7615 ;;		_TMR4_DefaultInterruptHandler
  7616 ;; This function is called by:
  7617 ;;		_INTERRUPT_InterruptManager
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           
  7622                           ;psect for function _TMR4_ISR
  7623  0700                     _TMR4_ISR:
  7624                           
  7625                           ;tmr4.c: 123: PIR2bits.TMR4IF = 0;
  7626                           
  7627                           ;incstack = 0
  7628                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
  7629  0700  0020               	movlb	0	; select bank0
  7630  0701  1092               	bcf	18,1	;volatile
  7631                           
  7632                           ;tmr4.c: 125: if(TMR4_InterruptHandler)
  7633  0702  0862               	movf	_TMR4_InterruptHandler,w
  7634  0703  0463               	iorwf	_TMR4_InterruptHandler+1,w
  7635  0704  1903               	btfsc	3,2
  7636  0705  0008               	return
  7637                           
  7638                           ;tmr4.c: 126: {;tmr4.c: 127: TMR4_InterruptHandler();
  7639  0706  0863               	movf	_TMR4_InterruptHandler+1,w
  7640  0707  008A               	movwf	10
  7641  0708  0862               	movf	_TMR4_InterruptHandler,w
  7642  0709  000A               	callw
  7643  070A  3187               	pagesel	$
  7644  070B  0008               	return
  7645  070C                     __end_of_TMR4_ISR:
  7646                           
  7647                           	psect	text39
  7648  074A                     __ptext39:	
  7649 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  7650 ;; Defined at:
  7651 ;;		line 148 in file "mcc_generated_files/tmr4.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;		None
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      void 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2, status,0
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7665 ;;      Params:         0       0       0       0       0       0       0       0
  7666 ;;      Locals:         0       0       0       0       0       0       0       0
  7667 ;;      Temps:          0       0       0       0       0       0       0       0
  7668 ;;      Totals:         0       0       0       0       0       0       0       0
  7669 ;;Total ram usage:        0 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; This function calls:
  7672 ;;		Nothing
  7673 ;; This function is called by:
  7674 ;;		_TMR4_Initialize
  7675 ;;		_TMR4_ISR
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           
  7680                           ;psect for function _TMR4_DefaultInterruptHandler
  7681  074A                     _TMR4_DefaultInterruptHandler:
  7682                           
  7683                           ;tmr4.c: 154: if (currentIsOn){
  7684                           
  7685                           ;incstack = 0
  7686                           ; Regs used in _TMR4_DefaultInterruptHandler: [wreg+status,2+status,0]
  7687  074A  087B               	movf	_currentIsOn,w
  7688  074B  1903               	btfsc	3,2
  7689  074C  2F4F               	goto	i1l597
  7690                           
  7691                           ;tmr4.c: 155: currentIsOn = 0;
  7692  074D  01FB               	clrf	_currentIsOn
  7693  074E  0008               	return
  7694  074F                     i1l597:
  7695                           
  7696                           ;tmr4.c: 163: currentIsOn = 1;
  7697  074F  01FB               	clrf	_currentIsOn
  7698  0750  0AFB               	incf	_currentIsOn,f
  7699  0751  0008               	return
  7700  0752                     __end_of_TMR4_DefaultInterruptHandler:
  7701                           
  7702                           	psect	text40
  7703  06E6                     __ptext40:	
  7704 ;; *************** function _TMR0_ISR *****************
  7705 ;; Defined at:
  7706 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;		None
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;		None
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  1    wreg      void 
  7713 ;; Registers used:
  7714 ;;		wreg, status,2, status,0, pclath, cstack
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7720 ;;      Params:         0       0       0       0       0       0       0       0
  7721 ;;      Locals:         0       0       0       0       0       0       0       0
  7722 ;;      Temps:          0       0       0       0       0       0       0       0
  7723 ;;      Totals:         0       0       0       0       0       0       0       0
  7724 ;;Total ram usage:        0 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:    1
  7727 ;; This function calls:
  7728 ;;		Absolute function
  7729 ;;		_TMR0_DefaultInterruptHandler
  7730 ;; This function is called by:
  7731 ;;		_INTERRUPT_InterruptManager
  7732 ;; This function uses a non-reentrant model
  7733 ;;
  7734                           
  7735                           
  7736                           ;psect for function _TMR0_ISR
  7737  06E6                     _TMR0_ISR:
  7738                           
  7739                           ;tmr0.c: 112: INTCONbits.TMR0IF = 0;
  7740                           
  7741                           ;incstack = 0
  7742                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  7743  06E6  110B               	bcf	11,2	;volatile
  7744                           
  7745                           ;tmr0.c: 114: TMR0 = timer0ReloadVal;
  7746  06E7  0020               	movlb	0	; select bank0
  7747  06E8  085E               	movf	_timer0ReloadVal,w	;volatile
  7748  06E9  0095               	movwf	21	;volatile
  7749                           
  7750                           ;tmr0.c: 116: if(TMR0_InterruptHandler)
  7751  06EA  0864               	movf	_TMR0_InterruptHandler,w
  7752  06EB  0465               	iorwf	_TMR0_InterruptHandler+1,w
  7753  06EC  1903               	btfsc	3,2
  7754  06ED  0008               	return
  7755                           
  7756                           ;tmr0.c: 117: {;tmr0.c: 118: TMR0_InterruptHandler();
  7757  06EE  0865               	movf	_TMR0_InterruptHandler+1,w
  7758  06EF  008A               	movwf	10
  7759  06F0  0864               	movf	_TMR0_InterruptHandler,w
  7760  06F1  000A               	callw
  7761  06F2  3186               	pagesel	$
  7762  06F3  0008               	return
  7763  06F4                     __end_of_TMR0_ISR:
  7764                           
  7765                           	psect	text41
  7766  0790                     __ptext41:	
  7767 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7768 ;; Defined at:
  7769 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;		None
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;		None
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  1    wreg      void 
  7776 ;; Registers used:
  7777 ;;		None
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7783 ;;      Params:         0       0       0       0       0       0       0       0
  7784 ;;      Locals:         0       0       0       0       0       0       0       0
  7785 ;;      Temps:          0       0       0       0       0       0       0       0
  7786 ;;      Totals:         0       0       0       0       0       0       0       0
  7787 ;;Total ram usage:        0 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; This function calls:
  7790 ;;		Nothing
  7791 ;; This function is called by:
  7792 ;;		_TMR0_Initialize
  7793 ;;		_TMR0_ISR
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           
  7798                           ;psect for function _TMR0_DefaultInterruptHandler
  7799  0790                     _TMR0_DefaultInterruptHandler:
  7800                           
  7801                           ;incstack = 0
  7802                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7803  0790  0008               	return
  7804  0791                     __end_of_TMR0_DefaultInterruptHandler:
  7805                           
  7806                           	psect	text42
  7807  0791                     __ptext42:	
  7808 ;; *************** function _PIN_MANAGER_IOC *****************
  7809 ;; Defined at:
  7810 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;		None
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;		None
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  1    wreg      void 
  7817 ;; Registers used:
  7818 ;;		None
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7824 ;;      Params:         0       0       0       0       0       0       0       0
  7825 ;;      Locals:         0       0       0       0       0       0       0       0
  7826 ;;      Temps:          0       0       0       0       0       0       0       0
  7827 ;;      Totals:         0       0       0       0       0       0       0       0
  7828 ;;Total ram usage:        0 bytes
  7829 ;; Hardware stack levels used:    1
  7830 ;; This function calls:
  7831 ;;		Nothing
  7832 ;; This function is called by:
  7833 ;;		_INTERRUPT_InterruptManager
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           
  7838                           ;psect for function _PIN_MANAGER_IOC
  7839  0791                     _PIN_MANAGER_IOC:
  7840                           
  7841                           ;incstack = 0
  7842                           ; Regs used in _PIN_MANAGER_IOC: []
  7843  0791  0008               	return
  7844  0792                     __end_of_PIN_MANAGER_IOC:
  7845                           
  7846                           	psect	text43
  7847  078B                     __ptext43:	
  7848 ;; *************** function _INT_ISR *****************
  7849 ;; Defined at:
  7850 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;		None
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;		None
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  1    wreg      void 
  7857 ;; Registers used:
  7858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7864 ;;      Params:         0       0       0       0       0       0       0       0
  7865 ;;      Locals:         0       0       0       0       0       0       0       0
  7866 ;;      Temps:          0       0       0       0       0       0       0       0
  7867 ;;      Totals:         0       0       0       0       0       0       0       0
  7868 ;;Total ram usage:        0 bytes
  7869 ;; Hardware stack levels used:    1
  7870 ;; Hardware stack levels required when called:    2
  7871 ;; This function calls:
  7872 ;;		_INT_CallBack
  7873 ;; This function is called by:
  7874 ;;		_INTERRUPT_InterruptManager
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           
  7879                           ;psect for function _INT_ISR
  7880  078B                     _INT_ISR:
  7881                           
  7882                           ;ext_int.c: 56: (INTCONbits.INTF = 0);
  7883                           
  7884                           ;incstack = 0
  7885                           ; Regs used in _INT_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7886  078B  108B               	bcf	11,1	;volatile
  7887                           
  7888                           ;ext_int.c: 59: INT_CallBack();
  7889  078C  3187  270C         	fcall	_INT_CallBack
  7890  078E  0008               	return
  7891  078F                     __end_of_INT_ISR:
  7892                           
  7893                           	psect	text44
  7894  070C                     __ptext44:	
  7895 ;; *************** function _INT_CallBack *****************
  7896 ;; Defined at:
  7897 ;;		line 62 in file "mcc_generated_files/ext_int.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;		None
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;		None
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  1    wreg      void 
  7904 ;; Registers used:
  7905 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7911 ;;      Params:         0       0       0       0       0       0       0       0
  7912 ;;      Locals:         0       0       0       0       0       0       0       0
  7913 ;;      Temps:          0       0       0       0       0       0       0       0
  7914 ;;      Totals:         0       0       0       0       0       0       0       0
  7915 ;;Total ram usage:        0 bytes
  7916 ;; Hardware stack levels used:    1
  7917 ;; Hardware stack levels required when called:    1
  7918 ;; This function calls:
  7919 ;;		Absolute function
  7920 ;;		_INT_DefaultInterruptHandler
  7921 ;; This function is called by:
  7922 ;;		_INT_ISR
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           
  7927                           ;psect for function _INT_CallBack
  7928  070C                     _INT_CallBack:
  7929                           
  7930                           ;ext_int.c: 65: if(INT_InterruptHandler)
  7931                           
  7932                           ;incstack = 0
  7933                           ; Regs used in _INT_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7934  070C  0020               	movlb	0	; select bank0
  7935  070D  0866               	movf	_INT_InterruptHandler,w
  7936  070E  0467               	iorwf	_INT_InterruptHandler+1,w
  7937  070F  1903               	btfsc	3,2
  7938  0710  0008               	return
  7939                           
  7940                           ;ext_int.c: 66: {;ext_int.c: 67: INT_InterruptHandler();
  7941  0711  0867               	movf	_INT_InterruptHandler+1,w
  7942  0712  008A               	movwf	10
  7943  0713  0866               	movf	_INT_InterruptHandler,w
  7944  0714  000A               	callw
  7945  0715  3187               	pagesel	$
  7946  0716  0008               	return
  7947  0717                     __end_of_INT_CallBack:
  7948                           
  7949                           	psect	text45
  7950  0281                     __ptext45:	
  7951 ;; *************** function _INT_DefaultInterruptHandler *****************
  7952 ;; Defined at:
  7953 ;;		line 75 in file "mcc_generated_files/ext_int.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;		None
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;  time            1    1[COMMON] unsigned char 
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  1    wreg      void 
  7960 ;; Registers used:
  7961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7967 ;;      Params:         0       0       0       0       0       0       0       0
  7968 ;;      Locals:         1       0       0       0       0       0       0       0
  7969 ;;      Temps:          1       0       0       0       0       0       0       0
  7970 ;;      Totals:         2       0       0       0       0       0       0       0
  7971 ;;Total ram usage:        2 bytes
  7972 ;; Hardware stack levels used:    1
  7973 ;; This function calls:
  7974 ;;		Nothing
  7975 ;; This function is called by:
  7976 ;;		_EXT_INT_Initialize
  7977 ;;		_INT_CallBack
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981                           
  7982                           ;psect for function _INT_DefaultInterruptHandler
  7983  0281                     _INT_DefaultInterruptHandler:
  7984                           
  7985                           ;ext_int.c: 77: uint8_t time = TMR0;
  7986                           
  7987                           ;incstack = 0
  7988                           ; Regs used in _INT_DefaultInterruptHandler: [wreg-fsr1h+status,2+status,0]
  7989  0281  0020               	movlb	0	; select bank0
  7990  0282  0815               	movf	21,w	;volatile
  7991  0283  00F6               	movwf	??_INT_DefaultInterruptHandler
  7992  0284  0876               	movf	??_INT_DefaultInterruptHandler,w
  7993  0285  00F7               	movwf	INT_DefaultInterruptHandler@time
  7994                           
  7995                           ;ext_int.c: 78: TMR0 = 0;
  7996  0286  0195               	clrf	21	;volatile
  7997                           
  7998                           ;ext_int.c: 81: if (INTCONbits.TMR0IF){
  7999  0287  190B               	btfsc	11,2	;volatile
  8000                           
  8001                           ;ext_int.c: 82: time = 0;
  8002  0288  01F7               	clrf	INT_DefaultInterruptHandler@time
  8003                           
  8004                           ;ext_int.c: 83: };ext_int.c: 84: INTCONbits.TMR0IF = 0;
  8005  0289  110B               	bcf	11,2	;volatile
  8006                           
  8007                           ;ext_int.c: 86: switch(ir_code.state){
  8008  028A  2AD9               	goto	i1l1860
  8009  028B                     i1l1818:
  8010                           
  8011                           ;ext_int.c: 89: if (time >= 180 && time <= 243){
  8012  028B  30B4               	movlw	180
  8013  028C  0277               	subwf	INT_DefaultInterruptHandler@time,w
  8014  028D  1C03               	skipc
  8015  028E  2AE4               	goto	i1l271
  8016  028F  30F4               	movlw	244
  8017  0290  0277               	subwf	INT_DefaultInterruptHandler@time,w
  8018  0291  1803               	skipnc
  8019  0292  2AE4               	goto	i1l271
  8020                           
  8021                           ;ext_int.c: 90: ir_code.n_bits = 0;
  8022  0293  01F0               	clrf	_ir_code
  8023                           
  8024                           ;ext_int.c: 91: ir_code.state = STATE_RECEIVING;
  8025  0294  01F1               	clrf	_ir_code+1
  8026  0295  0AF1               	incf	_ir_code+1,f
  8027                           
  8028                           ;ext_int.c: 92: stats[0] = time;
  8029  0296  0877               	movf	INT_DefaultInterruptHandler@time,w
  8030  0297  00F6               	movwf	??_INT_DefaultInterruptHandler
  8031  0298  0876               	movf	??_INT_DefaultInterruptHandler,w
  8032  0299  0021               	movlb	1	; select bank1
  8033  029A  00C2               	movwf	_stats^(0+128)
  8034  029B  2AE4               	goto	i1l271
  8035  029C                     i1l1828:
  8036                           
  8037                           ;ext_int.c: 97: ir_code.code <<= 1;
  8038  029C  3001               	movlw	1
  8039  029D                     u89_25:
  8040  029D  35F2               	lslf	_ir_code+2,f
  8041  029E  0DF3               	rlf	_ir_code+3,f
  8042  029F  0DF4               	rlf	_ir_code+4,f
  8043  02A0  0DF5               	rlf	_ir_code+5,f
  8044  02A1  0B89               	decfsz	9,f
  8045  02A2  2A9D               	goto	u89_25
  8046                           
  8047                           ;ext_int.c: 98: if (time >= 29 && time <= 41){
  8048  02A3  301D               	movlw	29
  8049  02A4  0277               	subwf	INT_DefaultInterruptHandler@time,w
  8050  02A5  1C03               	skipc
  8051  02A6  2AB9               	goto	i1l1840
  8052  02A7  302A               	movlw	42
  8053  02A8  0277               	subwf	INT_DefaultInterruptHandler@time,w
  8054  02A9  1803               	skipnc
  8055  02AA  2AB9               	goto	i1l1840
  8056                           
  8057                           ;ext_int.c: 99: stats[1+ir_code.n_bits] = time;
  8058  02AB  0877               	movf	INT_DefaultInterruptHandler@time,w
  8059  02AC  00F6               	movwf	??_INT_DefaultInterruptHandler
  8060  02AD  0870               	movf	_ir_code,w
  8061  02AE  3EC3               	addlw	(low ((_stats| 0+1)))& (0+255)
  8062  02AF  0086               	movwf	6
  8063  02B0  0187               	clrf	7
  8064  02B1  0876               	movf	??_INT_DefaultInterruptHandler,w
  8065  02B2  0081               	movwf	1
  8066                           
  8067                           ;ext_int.c: 100: ir_code.code |= 1;
  8068  02B3  1472               	bsf	_ir_code+2,0
  8069  02B4                     i1l1838:
  8070                           
  8071                           ;ext_int.c: 101: ir_code.n_bits++;
  8072  02B4  3001               	movlw	1
  8073  02B5  00F6               	movwf	??_INT_DefaultInterruptHandler
  8074  02B6  0876               	movf	??_INT_DefaultInterruptHandler,w
  8075  02B7  07F0               	addwf	_ir_code,f
  8076                           
  8077                           ;ext_int.c: 102: } else if (time >= 14 && time <= 20){
  8078  02B8  2ACC               	goto	i1l1850
  8079  02B9                     i1l1840:
  8080  02B9  300E               	movlw	14
  8081  02BA  0277               	subwf	INT_DefaultInterruptHandler@time,w
  8082  02BB  1C03               	skipc
  8083  02BC  2ACA               	goto	i1l1848
  8084  02BD  3015               	movlw	21
  8085  02BE  0277               	subwf	INT_DefaultInterruptHandler@time,w
  8086  02BF  1803               	skipnc
  8087  02C0  2ACA               	goto	i1l1848
  8088                           
  8089                           ;ext_int.c: 103: stats[1+ir_code.n_bits] = time;
  8090  02C1  0877               	movf	INT_DefaultInterruptHandler@time,w
  8091  02C2  00F6               	movwf	??_INT_DefaultInterruptHandler
  8092  02C3  0870               	movf	_ir_code,w
  8093  02C4  3EC3               	addlw	(low ((_stats| 0+1)))& (0+255)
  8094  02C5  0086               	movwf	6
  8095  02C6  0187               	clrf	7
  8096  02C7  0876               	movf	??_INT_DefaultInterruptHandler,w
  8097  02C8  0081               	movwf	1
  8098  02C9  2AB4               	goto	i1l1838
  8099  02CA                     i1l1848:
  8100                           
  8101                           ;ext_int.c: 107: ir_code.state = STATE_RESET;
  8102  02CA  01F1               	clrf	_ir_code+1
  8103                           
  8104                           ;ext_int.c: 108: break;
  8105  02CB  2AE4               	goto	i1l271
  8106  02CC                     i1l1850:
  8107                           
  8108                           ;ext_int.c: 109: };ext_int.c: 110: if (32 == ir_code.n_bits){
  8109  02CC  3020               	movlw	32
  8110  02CD  0670               	xorwf	_ir_code,w
  8111  02CE  1D03               	btfss	3,2
  8112  02CF  2AE4               	goto	i1l271
  8113                           
  8114                           ;ext_int.c: 113: if (ir_code.command == ((~ir_code.command_b) & 0xff)){
  8115  02D0  0972               	comf	_ir_code+2,w
  8116  02D1  0673               	xorwf	_ir_code+3,w
  8117  02D2  1D03               	skipz
  8118  02D3  2ACA               	goto	i1l1848
  8119                           
  8120                           ;ext_int.c: 114: ir_code.state = STATE_DONE;
  8121  02D4  3002               	movlw	2
  8122  02D5  00F6               	movwf	??_INT_DefaultInterruptHandler
  8123  02D6  0876               	movf	??_INT_DefaultInterruptHandler,w
  8124  02D7  00F1               	movwf	_ir_code+1
  8125                           
  8126                           ;ext_int.c: 115: } else {
  8127  02D8  2AE4               	goto	i1l271
  8128  02D9                     i1l1860:
  8129  02D9  0871               	movf	_ir_code+1,w
  8130                           
  8131                           ; Switch size 1, requested type "simple"
  8132                           ; Number of cases is 3, Range of values is 0 to 2
  8133                           ; switch strategies available:
  8134                           ; Name         Instructions Cycles
  8135                           ; simple_byte           10     6 (average)
  8136                           ; direct_byte           12     6 (fixed)
  8137                           ; jumptable            260     6 (fixed)
  8138                           ;	Chosen strategy is simple_byte
  8139  02DA  3A00               	xorlw	0	; case 0
  8140  02DB  1903               	skipnz
  8141  02DC  2A8B               	goto	i1l1818
  8142  02DD  3A01               	xorlw	1	; case 1
  8143  02DE  1903               	skipnz
  8144  02DF  2A9C               	goto	i1l1828
  8145  02E0  3A03               	xorlw	3	; case 2
  8146  02E1  1903               	skipnz
  8147  02E2  2AE4               	goto	i1l271
  8148  02E3  2ACA               	goto	i1l1848
  8149  02E4                     i1l271:
  8150                           
  8151                           ;ext_int.c: 129: INTCONbits.INTF = 0;
  8152  02E4  108B               	bcf	11,1	;volatile
  8153  02E5  0008               	return
  8154  02E6                     __end_of_INT_DefaultInterruptHandler:
  8155  007E                     btemp	set	126	;btemp
  8156  007E                     int$flags	set	126
  8157  007E                     wtemp0	set	126
  8158                           
  8159                           	psect	config
  8160                           
  8161                           ;Config register CONFIG1 @ 0x8007
  8162                           ;	Oscillator Selection Bits
  8163                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  8164                           ;	Watchdog Timer Enable
  8165                           ;	WDTE = OFF, WDT disabled
  8166                           ;	Power-up Timer Enable
  8167                           ;	PWRTE = OFF, PWRT disabled
  8168                           ;	MCLR Pin Function Select
  8169                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8170                           ;	Flash Program Memory Code Protection
  8171                           ;	CP = OFF, Program memory code protection is disabled
  8172                           ;	Brown-out Reset Enable
  8173                           ;	BOREN = OFF, Brown-out Reset disabled
  8174                           ;	Clock Out Enable
  8175                           ;	CLKOUTEN = ON, CLKOUT function is enabled on the CLKOUT pin
  8176                           ;	Internal/External Switchover Mode
  8177                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  8178                           ;	Fail-Safe Clock Monitor Enable
  8179                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8180  8007                     	org	32775
  8181  8007  21E4               	dw	8676
  8182                           
  8183                           ;Config register CONFIG2 @ 0x8008
  8184                           ;	Flash Memory Self-Write Protection
  8185                           ;	WRT = OFF, Write protection off
  8186                           ;	Peripheral Pin Select one-way control
  8187                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  8188                           ;	Zero-cross detect disable
  8189                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR
  8190                           ;	Phase Lock Loop enable
  8191                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  8192                           ;	Stack Overflow/Underflow Reset Enable
  8193                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8194                           ;	Brown-out Reset Voltage Selection
  8195                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8196                           ;	Low-Power Brown Out Reset
  8197                           ;	LPBOR = OFF, Low-Power BOR is disabled
  8198                           ;	Low-Voltage Programming Enable
  8199                           ;	LVP = ON, Low-voltage programming enabled
  8200  8008                     	org	32776
  8201  8008  3EFF               	dw	16127

Data Sizes:
    Strings     55
    Constant    0
    Data        39
    BSS         59
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80     46      76
    BANK1            80      0      73
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_3(CODE[15]), STR_2(CODE[19]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), Absolute function(), 

    process_remote_command@code	PTR struct . size(1) Largest target is 6
		 -> ir_code(COMMON[6]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _startUp->_setLEDColor
    _process_remote_command->_setFrequency
    _setFrequency->___aldiv
    _setCurrent->___aldiv
    _selectSomething->_setLEDColor
    _selectFrequency->_setLEDColor
    _selectCurrent->_setLEDColor
    _printf->_putch
    _putch->_EUSART_Write
    _battery_voltage->___aldiv
    ___aldiv->___awdiv
    _lowBattery->_setLEDColor

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INT_CallBack->_INT_DefaultInterruptHandler

Critical Paths under _main in BANK0

    _main->_process_remote_command
    _startUp->_setLEDColor
    _process_remote_command->_setCurrent
    _setFrequency->___aldiv
    _setCurrent->_battery_voltage
    ___lldiv->___lmul
    _selectSomething->_setLEDColor
    _selectFrequency->_printf
    _selectCurrent->_printf
    _battery_voltage->___aldiv
    ___aldiv->___lmul
    _lowBattery->_setLEDColor
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   32395
                                             45 BANK0      1     1      0
                     _DAC_Initialize
                    _OPA1_Initialize
                    _OPA2_Initialize
                  _SYSTEM_Initialize
                    _battery_voltage
                            _initLED
                         _lowBattery
             _process_remote_command
                            _startUp
 ---------------------------------------------------------------------------------
 (1) _startUp                                              4     4      0    3762
                                              2 BANK0      4     4      0
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (1) _process_remote_command                               3     3      0   23030
                                             42 BANK0      3     3      0
                    _battery_voltage
                             _printf
                      _selectCurrent
                    _selectFrequency
                    _selectSomething
                         _setCurrent
                       _setFrequency
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (2) _setFrequency                                         5     3      2    2034
                                              4 COMMON     1     1      0
                                             26 BANK0      4     2      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _setCurrent                                          14    10      4    3527
                                             28 BANK0     14    10      4
                            ___aldiv
                            ___awdiv
                            ___lldiv
                             ___lmul
                    _battery_voltage (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     504
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     479
                                              2 COMMON     1     1      0
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     683
                                              2 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _selectSomething                                      2     2      0    3694
                                              2 BANK0      2     2      0
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (2) _selectFrequency                                      2     2      0    4181
                                              7 BANK0      2     2      0
                             _printf
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (2) _selectCurrent                                        2     2      0    4181
                                              7 BANK0      2     2      0
                             _printf
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (3) _printf                                              19    17      2     487
                                              0 BANK0      7     5      2
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      62
                                              3 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART_Write                                         1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _battery_voltage                                      2     0      2    1159
                                             26 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8    1159
                                              3 COMMON     1     1      0
                                             12 BANK0     14     6      8
                            ___awdiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _lowBattery                                           2     2      0    3694
                                              2 BANK0      2     2      0
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (2) _setLEDColor                                          4     2      2    3694
                                              2 COMMON     2     2      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initLED                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     750
                     _DAC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
                    _OPA1_Initialize
                    _OPA2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     125
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     125
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OPA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OPA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     125
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     375
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     125
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     200
                            _INT_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR4_ISR                                             0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT_ISR                                              0     0      0     200
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT_CallBack                                         0     0      0     200
                   Absolute function *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _INT_DefaultInterruptHandler                          2     2      0     200
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DAC_Initialize
   _OPA1_Initialize
   _OPA2_Initialize
   _SYSTEM_Initialize
     _DAC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OPA1_Initialize
     _OPA2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _WDT_Initialize
   _battery_voltage
     ___aldiv
       ___awdiv (ARG)
       ___lmul (ARG)
   _initLED
   _lowBattery
     _setLEDColor
   _process_remote_command
     _battery_voltage
       ___aldiv
         ___awdiv (ARG)
         ___lmul (ARG)
     _printf
       _putch
         _EUSART_Write
     _selectCurrent
       _printf
         _putch
           _EUSART_Write
       _setLEDColor
     _selectFrequency
       _printf
         _putch
           _EUSART_Write
       _setLEDColor
     _selectSomething
       _setLEDColor
     _setCurrent
       ___aldiv
         ___awdiv (ARG)
         ___lmul (ARG)
       ___awdiv
       ___lldiv
         ___lmul (ARG)
       ___lmul
       _battery_voltage (ARG)
         ___aldiv
           ___awdiv (ARG)
           ___lmul (ARG)
     _setFrequency
       ___aldiv
         ___awdiv (ARG)
         ___lmul (ARG)
       ___lmul
     _setLEDColor
   _startUp
     _setLEDColor

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      A1       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2E      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      49       8       91.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      A1      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Jul 20 22:38:50 2020

                                 ___awdiv@sign 0025                        __end_of_OPA1_Initialize 078B  
                              _timer0ReloadVal 005E                                            l213 0733  
                                          l502 03C6                                            l503 03D7  
                                          l540 04F5                                            l463 0549  
                                          l466 0553                                            l750 0210  
                                          _PR2 001B                                            _PR4 0416  
                                          u995 0525                 ?_EUSART_SetFramingErrorHandler 0020  
                              _TMR2_Initialize 073A                                            wreg 0009  
                     __size_of_selectFrequency 002A                                           l2400 023F  
                                         l2412 026A                                           l2342 067A  
                                         l2510 01FB                                           l2344 067F  
                                         l2416 0278                                           l2408 025F  
                                         l2600 00AB                                           l2354 065A  
                                         l2434 034F                                           l2362 02F7  
                                         l2506 01F6                                           l2610 00C7  
                                         l2602 00B7                                           l2460 0386  
                                         l2452 0375                                           l2444 0357  
                                         l2428 0344                                           l2372 0325  
                                         l2364 0305                                           l2620 00E5  
                                         l2390 0221                                           l2446 0363  
                                         l2606 00BE                                           l2456 037E  
                                         l2376 0330                                           l2640 00FE  
                                         l2642 0102                                           l2618 00D2  
                                         l2652 0112                                           l2628 00F2  
                                         l2398 0231                                           l2638 00FA  
                                         l2592 007E                                           l2656 0114  
                                         l2576 0475                                           l2672 0507  
                                         l1890 0524                                           l2658 0142  
                                         l2594 0092                                           l2586 0067  
                                         l1886 051A                                           STR_1 068B  
                                         STR_2 06A0                                           STR_3 06D7  
                                         u1005 052C                                           u2015 03BF  
                                         u2025 03D0                                           u2035 04A9  
                                         _LATA 010C                                           _LATB 010D  
                              __end_of_INT_ISR 078F                                           u2207 0155  
                                         u2055 0077                                           _LATC 010E  
                                         u2217 03E9                                           u2227 03FD  
                                         u2075 00A4                                           u2237 0411  
                                         u2165 0502                                           u2247 0425  
                                         u2257 05B0                                           u1705 02FA  
                                         u2267 05D8                                           u2187 0486  
                                         u2277 0580                                           u1725 0306  
                                         u2197 0496                                           u2287 0594  
                                         u1815 0240                                           u1735 031A  
                                         u1825 0254                                           u1745 0326  
                                         u1835 0260                                           u1915 0364  
                                         u1925 036E                                           u1935 0376  
                                         u1795 0234                                           u1895 035A  
                                         u1985 01C8                                           u1995 01EF  
                                         _TMR0 0015                                           _TMR2 001A  
                                         _TMR4 0415                        __end_of_OPA2_Initialize 0787  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                           _flag 005A  
                                         _main 04E1                                           _duty 0058  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E            __end_of_INT_DefaultInterruptHandler 02E6  
                  _INT_DefaultInterruptHandler 0281                                           start 0027  
              __end_of_INT_SetInterruptHandler 0770                     ??_TMR4_SetInterruptHandler 0078  
                      __end_of_TMR0_Initialize 06D7                 ??_TMR0_DefaultInterruptHandler 0076  
                                ?_EUSART_Write 0076                 __size_of_OSCILLATOR_Initialize 0008  
                __end_of_OSCILLATOR_Initialize 074A                                __end_of___aldiv 0281  
                                        ?_main 0076                                __end_of___awdiv 038B  
                                        _ADRES 009B                                __end_of___lldiv 0339  
                              ___awdiv@divisor 0020                                          _T2CON 001C  
                                        _T4CON 0417                                          i1l140 001B  
                                        i1l136 000D                                          i1l138 0014  
                                        i1l146 0025                                          i1l271 02E4  
                                        i1l597 074F                                   ?_setLEDColor 0020  
                              ___awdiv@counter 0024                       __size_of_selectSomething 0051  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _RXPPS 0E24  
                                        u89_25 029D              __size_of_TMR0_SetInterruptHandler 0006  
                              _TMR4_Initialize 06B3                            ___lmul@multiplicand 0024  
                    ?_TMR0_SetInterruptHandler 0020                               __end_of_TMR0_ISR 06F4  
                             __end_of_TMR4_ISR 070C                                __end_of_initLED 0471  
                      __end_of_PIN_MANAGER_IOC 0792                                 _WDT_Initialize 077F  
                                        _putch 0776                                          _stats 00C2  
                                        pclath 000A                                __end_of_startUp 04AE  
                                        status 0003                        ?_process_remote_command 0076  
                                        wtemp0 007E                               ??_DAC_Initialize 0078  
                              __initialization 0029                                   __end_of_main 0511  
                        __end_of_selectCurrent 05EE                                 ??_EUSART_Write 0078  
                      __end_of_TMR2_Initialize 0742                    ?_INTERRUPT_InterruptManager 0076  
                             ?_OPA1_Initialize 0076                                         ??_main 004D  
                     __size_of_battery_voltage 002E                         __end_of_WDT_Initialize 0783  
                                    ??_INT_ISR 0078              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 00E5                                         _CCPR1L 0291  
                             ___awdiv@dividend 0022                                         _ANSELA 018C  
                                       ?_putch 0076                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RA5PPS 0E95  
                                       _RC1STA 019D                                         _RC4PPS 0EA4  
                                       _RB7PPS 0E9F                                         _RC5PPS 0EA5  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                 __end_of_process_remote_command 0163  
                                       i1l1840 02B9                                         i1l1850 02CC  
                                       i1l1818 028B                                         i1l1828 029C  
                                       i1l1860 02D9                                         i1l1838 02B4  
                                       i1l1848 02CA                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       _FVRCON 0117                                         _INTPPS 0E10  
                             ?_OPA2_Initialize 0076                                         _OSCCON 0099  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                              ??_selectFrequency 0027  
                                       _Vdd_mv 0052                                         ___lmul 0511  
                                    ??___aldiv 0079                                      ??___awdiv 0078  
                                    ??___lldiv 0078                               ?_TMR0_Initialize 0076  
                      __end_of_TMR4_Initialize 06C6                               ___awdiv@quotient 0026  
                                       _printf 0655                                  ?_INT_CallBack 0076  
                                    ??_initLED 0078           __end_of_TMR4_DefaultInterruptHandler 0752  
        __size_of_TMR4_DefaultInterruptHandler 0008                   _TMR4_DefaultInterruptHandler 074A  
                                 __pdataCOMMON 007B                               setCurrent@Vdd_mv 003E  
                              ?_WDT_Initialize 0076               __size_of_INT_SetInterruptHandler 0006  
                                    ??_startUp 0022       TMR4_SetInterruptHandler@InterruptHandler 0020  
     TMR0_SetInterruptHandler@InterruptHandler 0020        INT_SetInterruptHandler@InterruptHandler 0020  
                             ?_PIN_MANAGER_IOC 0076                              ??_selectSomething 0022  
                            _SYSTEM_Initialize 0634                        __end_of__initialization 005A  
                           ?_SYSTEM_Initialize 0076                                 __pcstackCOMMON 0076  
                                 __pidataBANK0 077B                                   __pidataBANK1 0612  
                          ??_SYSTEM_Initialize 0078                                      ?_TMR0_ISR 0076  
                                    ?_TMR4_ISR 0076                                  __end_of_putch 077B  
                             ?_TMR2_Initialize 0076                                 ??_INT_CallBack 0078  
                  __size_of_EXT_INT_Initialize 000C                                 _OPTION_REGbits 0095  
                ?_TMR4_DefaultInterruptHandler 0076                           __size_of_setLEDColor 0019  
              ??_EUSART_SetOverrunErrorHandler 0078                              ??_battery_voltage 007A  
                    __end_of_SYSTEM_Initialize 0655                                        ??_putch 0079  
                                ?_setFrequency 003A                                     __pbssBANK0 004E  
                                   __pbssBANK1 00C2                           __end_of_EUSART_Write 073A  
                        _TMR4_InterruptHandler 0062                                     __pmaintext 04E1  
             __end_of_TMR0_SetInterruptHandler 076A                                        ?___lmul 0020  
                                   ??_TMR0_ISR 0076                                     ??_TMR4_ISR 0076  
                                   __pintentry 0004                                 ___lmul@product 0028  
                             ?_TMR4_Initialize 0076                                        ?_printf 0020  
                                      _OPA1CON 0511                                        _OPA2CON 0515  
                                      _LED_red 005D                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                                        _INT_ISR 078B  
                            _maxFrequencyIndex 0068                                        _OSCSTAT 009A  
                                      _OSCTUNE 0098                                        _PWM3DCH 0618  
                                      _PWM4DCH 061B                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 0078                                 ??_setFrequency 007A  
                              _maxCurrentIndex 006A                                        _Vdac_mv 0060  
                                      ___aldiv 01FF                                        ___awdiv 0339  
                              __size_of___lmul 0030                                        ___lldiv 02E6  
                                      __ptext1 0471                                        __ptext2 005E  
                                      __ptext3 038B                                        __ptext4 0163  
                                      __ptext5 0511                                        __ptext6 02E6  
                                      __ptext7 0339                                        __ptext8 03DC  
                                      __ptext9 059C                                __size_of_printf 001D  
                                      _initLED 042D                                        _ir_code 0070  
                                   _lowBattery 056F                          _OSCILLATOR_Initialize 0742  
                                    _T2CONbits 001C                                        _current 0057  
                             ___aldiv@dividend 0030                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 0078              __size_of_TMR4_SetInterruptHandler 0006  
                      _INT_SetInterruptHandler 076A                      ?_TMR4_SetInterruptHandler 0020  
                              _selectFrequency 059C                                        _startUp 0471  
                   __size_of_SYSTEM_Initialize 0021                                        clrloop0 0759  
                         end_of_initialization 005A                 ??_TMR4_DefaultInterruptHandler 0076  
                                   _setCurrent 0163          __end_of_EUSART_SetOverrunErrorHandler 0720  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 0717  
                                    _LED_green 005C                                        init_ram 0752  
                                      initloop 0753                           __end_of_INT_CallBack 0717  
                            _EUSART_Initialize 05EE                                 _frequencyIndex 004E  
                              ___lldiv@divisor 002C                                 _frequencyValue 00B6  
                              ___lldiv@counter 0038                             ?_EUSART_Initialize 0076  
                                      printf@c 0026                                        printf@f 0020  
                             ___aldiv@quotient 0036                                setLEDColor@blue 0021  
                          ??_EUSART_Initialize 0078                               ??_WDT_Initialize 0078  
                     _TMR0_SetInterruptHandler 0764                                _selectSomething 03DC  
                        __size_of_EUSART_Write 0008                       __size_of_OPA1_Initialize 0004  
              __size_of_EUSART_SetErrorHandler 0009                         __size_of_selectCurrent 0028  
                    __end_of_EUSART_Initialize 0612                                    _CCP1CONbits 0293  
                     __size_of_OPA2_Initialize 0004                           __end_of_setFrequency 03DC  
                               __end_of___lmul 0541                     _EUSART_DefaultErrorHandler 0000  
                              _battery_voltage 0541                                  __pidataCOMMON 078F  
                                 _EUSART_Write 0732                              __size_of_TMR0_ISR 000E  
                            __size_of_TMR4_ISR 000C                         ?_OSCILLATOR_Initialize 0076  
                      __end_of_selectFrequency 05C6                      ??_INT_SetInterruptHandler 0078  
                      __size_of_DAC_Initialize 0006                                    ?_lowBattery 0076  
                               __end_of_printf 0672                            start_initialization 0029  
                     __size_of_TMR0_Initialize 0011                __size_of_PIN_MANAGER_Initialize 0033  
                                  putch@txData 0079                                    ?_setCurrent 003C  
                     __size_of_PIN_MANAGER_IOC 0001                   ?_INT_DefaultInterruptHandler 0076  
               ?_EUSART_SetOverrunErrorHandler 0020                     _EUSART_FramingErrorHandler 00E7  
                      __end_of_selectSomething 042D                                       ??___lmul 0078  
                       _EUSART_SetErrorHandler 0729                                    _CCPTMRSbits 029E  
                                _selectCurrent 05C6                                    __pdataBANK0 0068  
                                  __pdataBANK1 00A0                     __end_of_EXT_INT_Initialize 0700  
                                     ??_printf 0022                                  ??_setLEDColor 0078  
                                  __pbssCOMMON 0070                                      ___latbits 0001  
                     ??_process_remote_command 004A                                       ?_INT_ISR 0076  
                                __pcstackBANK0 0020                       __size_of_TMR2_Initialize 0008  
                        __size_of_INT_CallBack 000B                     __size_of_EUSART_Initialize 0024  
                                 _currentIndex 0050                              ??_OPA1_Initialize 0078  
                                 _currentValue 00A0                          _TMR0_InterruptHandler 0064  
                                    __pnvBANK0 0062                                      __pnvBANK1 00E3  
                          __size_of_lowBattery 002D                         _PIN_MANAGER_Initialize 04AE  
                      __end_of_battery_voltage 056F                  ??_INT_DefaultInterruptHandler 0076  
                                     ?___aldiv 002C               __end_of_TMR4_SetInterruptHandler 0764  
                               ?_selectCurrent 0076                                       ?___awdiv 0020  
                                     ?___lldiv 002C                                       _DAC1CON0 0118  
                                     _DAC1CON1 0119                   ??_INTERRUPT_InterruptManager 0078  
                          __size_of_setCurrent 009C                              ??_OPA2_Initialize 0078  
                             ?_selectFrequency 0076                                   _INT_CallBack 070C  
                                     _BAUD1CON 019F                                       ?_initLED 0076  
                     __size_of_TMR4_Initialize 0013                                      _frequency 0059  
                                     ?_startUp 0076                            __end_of_setLEDColor 068B  
                                    _microamps 0054                                 __size_of_putch 0005  
                              ___aldiv@divisor 002C                              ??_TMR0_Initialize 0078  
                              ___aldiv@counter 0034         EUSART_SetErrorHandler@interruptHandler 0020  
                                     _LED_blue 005B                                      clear_ram0 0758  
                                     _PIE2bits 0092                              _eusartRxLastError 005F  
                        __size_of_setFrequency 0051            __size_of_INTERRUPT_InterruptManager 0023  
                   ??_TMR0_SetInterruptHandler 0078                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0078                                       _PIR2bits 0012  
                             ?_selectSomething 0076                                 setLEDColor@red 0079  
                                     _TMR0_ISR 06E6              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR4_ISR 0700                              ??_PIN_MANAGER_IOC 0076  
                                   _ADCON0bits 009D                                 _DAC_Initialize 0770  
         __size_of_INT_DefaultInterruptHandler 0065                __size_of_process_remote_command 0105  
                             __size_of_INT_ISR 0004                              ___lmul@multiplier 0020  
                                 _setFrequency 038B                              ??_TMR2_Initialize 0078  
                              ??_selectCurrent 0027                               ?_battery_voltage 003A  
                      ??_OSCILLATOR_Initialize 0078                            _EUSART_ErrorHandler 00E3  
                             __size_of___aldiv 0082                               __size_of___awdiv 0052  
                       __end_of_DAC_Initialize 0776                               __size_of___lldiv 0053  
                     _TMR4_SetInterruptHandler 075E                                   ??_lowBattery 0022  
                                  _currentIsOn 007B                                    _setLEDColor 0672  
                           setCurrent@DACValue 0048                               __size_of_initLED 0044  
                                     __ptext10 05C6                                       __ptext11 0655  
                                     __ptext20 077F                                       __ptext12 0776  
                                     __ptext21 06B3                                       __ptext13 0732  
                                     __ptext30 06F4                                       __ptext22 075E  
                                     __ptext14 0541                                       __ptext31 076A  
                                     __ptext23 073A                                       __ptext15 01FF  
                                     __ptext40 06E6                                       __ptext32 05EE  
                                     __ptext24 06C6                                       __ptext16 056F  
                                     __ptext41 0790                                       __ptext33 0717  
                                     __ptext25 0764                                       __ptext17 0672  
                                     __ptext42 0791                                       __ptext34 0720  
                                     __ptext26 04AE                                       __ptext18 042D  
                                     __ptext43 078B                                       __ptext35 0729  
                                     __ptext27 0742                                       __ptext19 0634  
                                     __ptext44 070C                                       __ptext36 0770  
                                     __ptext28 0783                                       __ptext45 0281  
                                     __ptext29 0787                                       __ptext38 0700  
                                     __ptext39 074A                               __size_of_startUp 003D  
                                 ??_setCurrent 0040                                 _interfaceState 0056  
                            ??_TMR4_Initialize 0078                                  __size_of_main 0030  
         __end_of_TMR0_DefaultInterruptHandler 0791          __size_of_TMR0_DefaultInterruptHandler 0001  
                 _TMR0_DefaultInterruptHandler 0790                        ?_EUSART_SetErrorHandler 0020  
                       _process_remote_command 005E                                     _RC1STAbits 019D  
                           __end_of_lowBattery 059C  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
                          setFrequency@pr4_val 003C                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 0027                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0729         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 0720                                ?_DAC_Initialize 0076  
                           __end_of_setCurrent 01FF                                     _INTCONbits 000B  
              INT_DefaultInterruptHandler@time 0077                                    _PWM3DCLbits 0617  
                              _OPA1_Initialize 0787                                    _PWM4DCLbits 061A  
                                   _FVRCONbits 0117                           _INT_InterruptHandler 0066  
                                  _PWM3CONbits 0619                                    _PWM4CONbits 061C  
                           _EXT_INT_Initialize 06F4                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000                               ___lldiv@dividend 0030  
                      ?_PIN_MANAGER_Initialize 0076                     process_remote_command@code 004C  
               __end_of_EUSART_SetErrorHandler 0732                            ?_EXT_INT_Initialize 0076  
                              _OPA2_Initialize 0783                  ?_TMR0_DefaultInterruptHandler 0076  
                                     printf@ap 0025  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                     ?_INT_SetInterruptHandler 0020                                       startUp@i 0024  
                                __pstringtext1 068B                                  __pstringtext2 06A0  
                                __pstringtext3 06D7                                  __pstringtext4 0000  
                         ??_EXT_INT_Initialize 0078                                     _OPTION_REG 0095  
                             setLEDColor@green 0020                               ___lldiv@quotient 0034  
                              _TMR0_Initialize 06C6                            setCurrent@microamps 003C  
                                 ___aldiv@sign 0035                                     _TX1STAbits 019E  
                     setFrequency@frequency_hz 003A                             EUSART_Write@txData 0078  
               __end_of_PIN_MANAGER_Initialize 04E1                                _PIN_MANAGER_IOC 0791  
