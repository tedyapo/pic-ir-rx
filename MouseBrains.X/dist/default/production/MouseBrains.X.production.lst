

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jul  2 14:28:03 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16LF1708
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.10
    59                           ; Generated 31/07/2019 GMT
    60                           ; 
    61                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16LF1708 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  0111                     	;# 
   141  0112                     	;# 
   142  0113                     	;# 
   143  0114                     	;# 
   144  0115                     	;# 
   145  0116                     	;# 
   146  0117                     	;# 
   147  0118                     	;# 
   148  0119                     	;# 
   149  011C                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  018E                     	;# 
   153  0191                     	;# 
   154  0191                     	;# 
   155  0192                     	;# 
   156  0193                     	;# 
   157  0193                     	;# 
   158  0194                     	;# 
   159  0195                     	;# 
   160  0196                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019A                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019C                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019D                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  020C                     	;# 
   187  020D                     	;# 
   188  020E                     	;# 
   189  0211                     	;# 
   190  0211                     	;# 
   191  0212                     	;# 
   192  0212                     	;# 
   193  0213                     	;# 
   194  0213                     	;# 
   195  0214                     	;# 
   196  0214                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0216                     	;# 
   202  0216                     	;# 
   203  0217                     	;# 
   204  0217                     	;# 
   205  028C                     	;# 
   206  028D                     	;# 
   207  028E                     	;# 
   208  0291                     	;# 
   209  0291                     	;# 
   210  0292                     	;# 
   211  0293                     	;# 
   212  0293                     	;# 
   213  0298                     	;# 
   214  0298                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029A                     	;# 
   218  029E                     	;# 
   219  030C                     	;# 
   220  030D                     	;# 
   221  030E                     	;# 
   222  038C                     	;# 
   223  038D                     	;# 
   224  038E                     	;# 
   225  0391                     	;# 
   226  0392                     	;# 
   227  0393                     	;# 
   228  0394                     	;# 
   229  0395                     	;# 
   230  0396                     	;# 
   231  0397                     	;# 
   232  0398                     	;# 
   233  0399                     	;# 
   234  0415                     	;# 
   235  0416                     	;# 
   236  0417                     	;# 
   237  041C                     	;# 
   238  041D                     	;# 
   239  041E                     	;# 
   240  0511                     	;# 
   241  0515                     	;# 
   242  0617                     	;# 
   243  0618                     	;# 
   244  0619                     	;# 
   245  0619                     	;# 
   246  061A                     	;# 
   247  061B                     	;# 
   248  061C                     	;# 
   249  061C                     	;# 
   250  0691                     	;# 
   251  0692                     	;# 
   252  0693                     	;# 
   253  0694                     	;# 
   254  0695                     	;# 
   255  0696                     	;# 
   256  0697                     	;# 
   257  0698                     	;# 
   258  0699                     	;# 
   259  069A                     	;# 
   260  069B                     	;# 
   261  069C                     	;# 
   262  069D                     	;# 
   263  069E                     	;# 
   264  069F                     	;# 
   265  0E0F                     	;# 
   266  0E10                     	;# 
   267  0E11                     	;# 
   268  0E12                     	;# 
   269  0E13                     	;# 
   270  0E14                     	;# 
   271  0E15                     	;# 
   272  0E17                     	;# 
   273  0E20                     	;# 
   274  0E21                     	;# 
   275  0E22                     	;# 
   276  0E24                     	;# 
   277  0E25                     	;# 
   278  0E28                     	;# 
   279  0E29                     	;# 
   280  0E2A                     	;# 
   281  0E2B                     	;# 
   282  0E90                     	;# 
   283  0E91                     	;# 
   284  0E92                     	;# 
   285  0E94                     	;# 
   286  0E95                     	;# 
   287  0E9C                     	;# 
   288  0E9D                     	;# 
   289  0E9E                     	;# 
   290  0E9F                     	;# 
   291  0EA0                     	;# 
   292  0EA1                     	;# 
   293  0EA2                     	;# 
   294  0EA3                     	;# 
   295  0EA4                     	;# 
   296  0EA5                     	;# 
   297  0EA6                     	;# 
   298  0EA7                     	;# 
   299  0F0F                     	;# 
   300  0F10                     	;# 
   301  0F11                     	;# 
   302  0F12                     	;# 
   303  0F13                     	;# 
   304  0F14                     	;# 
   305  0F15                     	;# 
   306  0F16                     	;# 
   307  0F17                     	;# 
   308  0F18                     	;# 
   309  0F19                     	;# 
   310  0F1A                     	;# 
   311  0F1B                     	;# 
   312  0F1C                     	;# 
   313  0F1D                     	;# 
   314  0F1E                     	;# 
   315  0F1F                     	;# 
   316  0F20                     	;# 
   317  0F21                     	;# 
   318  0F22                     	;# 
   319  0F23                     	;# 
   320  0F24                     	;# 
   321  0F25                     	;# 
   322  0F26                     	;# 
   323  0F27                     	;# 
   324  0F28                     	;# 
   325  0F29                     	;# 
   326  0F2A                     	;# 
   327  0F2B                     	;# 
   328  0F2C                     	;# 
   329  0F2D                     	;# 
   330  0FE4                     	;# 
   331  0FE5                     	;# 
   332  0FE6                     	;# 
   333  0FE7                     	;# 
   334  0FE8                     	;# 
   335  0FE9                     	;# 
   336  0FEA                     	;# 
   337  0FEB                     	;# 
   338  0FED                     	;# 
   339  0FEE                     	;# 
   340  0FEF                     	;# 
   341  0000                     	;# 
   342  0001                     	;# 
   343  0002                     	;# 
   344  0003                     	;# 
   345  0004                     	;# 
   346  0005                     	;# 
   347  0006                     	;# 
   348  0007                     	;# 
   349  0008                     	;# 
   350  0009                     	;# 
   351  000A                     	;# 
   352  000B                     	;# 
   353  000C                     	;# 
   354  000D                     	;# 
   355  000E                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0013                     	;# 
   359  0015                     	;# 
   360  0016                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  001A                     	;# 
   366  001B                     	;# 
   367  001C                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  0091                     	;# 
   372  0092                     	;# 
   373  0093                     	;# 
   374  0095                     	;# 
   375  0096                     	;# 
   376  0097                     	;# 
   377  0098                     	;# 
   378  0099                     	;# 
   379  009A                     	;# 
   380  009B                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  010C                     	;# 
   387  010D                     	;# 
   388  010E                     	;# 
   389  0111                     	;# 
   390  0112                     	;# 
   391  0113                     	;# 
   392  0114                     	;# 
   393  0115                     	;# 
   394  0116                     	;# 
   395  0117                     	;# 
   396  0118                     	;# 
   397  0119                     	;# 
   398  011C                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401  018E                     	;# 
   402  0191                     	;# 
   403  0191                     	;# 
   404  0192                     	;# 
   405  0193                     	;# 
   406  0193                     	;# 
   407  0194                     	;# 
   408  0195                     	;# 
   409  0196                     	;# 
   410  0199                     	;# 
   411  0199                     	;# 
   412  0199                     	;# 
   413  019A                     	;# 
   414  019A                     	;# 
   415  019A                     	;# 
   416  019B                     	;# 
   417  019B                     	;# 
   418  019B                     	;# 
   419  019B                     	;# 
   420  019B                     	;# 
   421  019C                     	;# 
   422  019C                     	;# 
   423  019C                     	;# 
   424  019D                     	;# 
   425  019D                     	;# 
   426  019D                     	;# 
   427  019E                     	;# 
   428  019E                     	;# 
   429  019E                     	;# 
   430  019F                     	;# 
   431  019F                     	;# 
   432  019F                     	;# 
   433  019F                     	;# 
   434  019F                     	;# 
   435  020C                     	;# 
   436  020D                     	;# 
   437  020E                     	;# 
   438  0211                     	;# 
   439  0211                     	;# 
   440  0212                     	;# 
   441  0212                     	;# 
   442  0213                     	;# 
   443  0213                     	;# 
   444  0214                     	;# 
   445  0214                     	;# 
   446  0215                     	;# 
   447  0215                     	;# 
   448  0215                     	;# 
   449  0215                     	;# 
   450  0216                     	;# 
   451  0216                     	;# 
   452  0217                     	;# 
   453  0217                     	;# 
   454  028C                     	;# 
   455  028D                     	;# 
   456  028E                     	;# 
   457  0291                     	;# 
   458  0291                     	;# 
   459  0292                     	;# 
   460  0293                     	;# 
   461  0293                     	;# 
   462  0298                     	;# 
   463  0298                     	;# 
   464  0299                     	;# 
   465  029A                     	;# 
   466  029A                     	;# 
   467  029E                     	;# 
   468  030C                     	;# 
   469  030D                     	;# 
   470  030E                     	;# 
   471  038C                     	;# 
   472  038D                     	;# 
   473  038E                     	;# 
   474  0391                     	;# 
   475  0392                     	;# 
   476  0393                     	;# 
   477  0394                     	;# 
   478  0395                     	;# 
   479  0396                     	;# 
   480  0397                     	;# 
   481  0398                     	;# 
   482  0399                     	;# 
   483  0415                     	;# 
   484  0416                     	;# 
   485  0417                     	;# 
   486  041C                     	;# 
   487  041D                     	;# 
   488  041E                     	;# 
   489  0511                     	;# 
   490  0515                     	;# 
   491  0617                     	;# 
   492  0618                     	;# 
   493  0619                     	;# 
   494  0619                     	;# 
   495  061A                     	;# 
   496  061B                     	;# 
   497  061C                     	;# 
   498  061C                     	;# 
   499  0691                     	;# 
   500  0692                     	;# 
   501  0693                     	;# 
   502  0694                     	;# 
   503  0695                     	;# 
   504  0696                     	;# 
   505  0697                     	;# 
   506  0698                     	;# 
   507  0699                     	;# 
   508  069A                     	;# 
   509  069B                     	;# 
   510  069C                     	;# 
   511  069D                     	;# 
   512  069E                     	;# 
   513  069F                     	;# 
   514  0E0F                     	;# 
   515  0E10                     	;# 
   516  0E11                     	;# 
   517  0E12                     	;# 
   518  0E13                     	;# 
   519  0E14                     	;# 
   520  0E15                     	;# 
   521  0E17                     	;# 
   522  0E20                     	;# 
   523  0E21                     	;# 
   524  0E22                     	;# 
   525  0E24                     	;# 
   526  0E25                     	;# 
   527  0E28                     	;# 
   528  0E29                     	;# 
   529  0E2A                     	;# 
   530  0E2B                     	;# 
   531  0E90                     	;# 
   532  0E91                     	;# 
   533  0E92                     	;# 
   534  0E94                     	;# 
   535  0E95                     	;# 
   536  0E9C                     	;# 
   537  0E9D                     	;# 
   538  0E9E                     	;# 
   539  0E9F                     	;# 
   540  0EA0                     	;# 
   541  0EA1                     	;# 
   542  0EA2                     	;# 
   543  0EA3                     	;# 
   544  0EA4                     	;# 
   545  0EA5                     	;# 
   546  0EA6                     	;# 
   547  0EA7                     	;# 
   548  0F0F                     	;# 
   549  0F10                     	;# 
   550  0F11                     	;# 
   551  0F12                     	;# 
   552  0F13                     	;# 
   553  0F14                     	;# 
   554  0F15                     	;# 
   555  0F16                     	;# 
   556  0F17                     	;# 
   557  0F18                     	;# 
   558  0F19                     	;# 
   559  0F1A                     	;# 
   560  0F1B                     	;# 
   561  0F1C                     	;# 
   562  0F1D                     	;# 
   563  0F1E                     	;# 
   564  0F1F                     	;# 
   565  0F20                     	;# 
   566  0F21                     	;# 
   567  0F22                     	;# 
   568  0F23                     	;# 
   569  0F24                     	;# 
   570  0F25                     	;# 
   571  0F26                     	;# 
   572  0F27                     	;# 
   573  0F28                     	;# 
   574  0F29                     	;# 
   575  0F2A                     	;# 
   576  0F2B                     	;# 
   577  0F2C                     	;# 
   578  0F2D                     	;# 
   579  0FE4                     	;# 
   580  0FE5                     	;# 
   581  0FE6                     	;# 
   582  0FE7                     	;# 
   583  0FE8                     	;# 
   584  0FE9                     	;# 
   585  0FEA                     	;# 
   586  0FEB                     	;# 
   587  0FED                     	;# 
   588  0FEE                     	;# 
   589  0FEF                     	;# 
   590  0000                     	;# 
   591  0001                     	;# 
   592  0002                     	;# 
   593  0003                     	;# 
   594  0004                     	;# 
   595  0005                     	;# 
   596  0006                     	;# 
   597  0007                     	;# 
   598  0008                     	;# 
   599  0009                     	;# 
   600  000A                     	;# 
   601  000B                     	;# 
   602  000C                     	;# 
   603  000D                     	;# 
   604  000E                     	;# 
   605  0011                     	;# 
   606  0012                     	;# 
   607  0013                     	;# 
   608  0015                     	;# 
   609  0016                     	;# 
   610  0016                     	;# 
   611  0017                     	;# 
   612  0018                     	;# 
   613  0019                     	;# 
   614  001A                     	;# 
   615  001B                     	;# 
   616  001C                     	;# 
   617  008C                     	;# 
   618  008D                     	;# 
   619  008E                     	;# 
   620  0091                     	;# 
   621  0092                     	;# 
   622  0093                     	;# 
   623  0095                     	;# 
   624  0096                     	;# 
   625  0097                     	;# 
   626  0098                     	;# 
   627  0099                     	;# 
   628  009A                     	;# 
   629  009B                     	;# 
   630  009B                     	;# 
   631  009C                     	;# 
   632  009D                     	;# 
   633  009E                     	;# 
   634  009F                     	;# 
   635  010C                     	;# 
   636  010D                     	;# 
   637  010E                     	;# 
   638  0111                     	;# 
   639  0112                     	;# 
   640  0113                     	;# 
   641  0114                     	;# 
   642  0115                     	;# 
   643  0116                     	;# 
   644  0117                     	;# 
   645  0118                     	;# 
   646  0119                     	;# 
   647  011C                     	;# 
   648  018C                     	;# 
   649  018D                     	;# 
   650  018E                     	;# 
   651  0191                     	;# 
   652  0191                     	;# 
   653  0192                     	;# 
   654  0193                     	;# 
   655  0193                     	;# 
   656  0194                     	;# 
   657  0195                     	;# 
   658  0196                     	;# 
   659  0199                     	;# 
   660  0199                     	;# 
   661  0199                     	;# 
   662  019A                     	;# 
   663  019A                     	;# 
   664  019A                     	;# 
   665  019B                     	;# 
   666  019B                     	;# 
   667  019B                     	;# 
   668  019B                     	;# 
   669  019B                     	;# 
   670  019C                     	;# 
   671  019C                     	;# 
   672  019C                     	;# 
   673  019D                     	;# 
   674  019D                     	;# 
   675  019D                     	;# 
   676  019E                     	;# 
   677  019E                     	;# 
   678  019E                     	;# 
   679  019F                     	;# 
   680  019F                     	;# 
   681  019F                     	;# 
   682  019F                     	;# 
   683  019F                     	;# 
   684  020C                     	;# 
   685  020D                     	;# 
   686  020E                     	;# 
   687  0211                     	;# 
   688  0211                     	;# 
   689  0212                     	;# 
   690  0212                     	;# 
   691  0213                     	;# 
   692  0213                     	;# 
   693  0214                     	;# 
   694  0214                     	;# 
   695  0215                     	;# 
   696  0215                     	;# 
   697  0215                     	;# 
   698  0215                     	;# 
   699  0216                     	;# 
   700  0216                     	;# 
   701  0217                     	;# 
   702  0217                     	;# 
   703  028C                     	;# 
   704  028D                     	;# 
   705  028E                     	;# 
   706  0291                     	;# 
   707  0291                     	;# 
   708  0292                     	;# 
   709  0293                     	;# 
   710  0293                     	;# 
   711  0298                     	;# 
   712  0298                     	;# 
   713  0299                     	;# 
   714  029A                     	;# 
   715  029A                     	;# 
   716  029E                     	;# 
   717  030C                     	;# 
   718  030D                     	;# 
   719  030E                     	;# 
   720  038C                     	;# 
   721  038D                     	;# 
   722  038E                     	;# 
   723  0391                     	;# 
   724  0392                     	;# 
   725  0393                     	;# 
   726  0394                     	;# 
   727  0395                     	;# 
   728  0396                     	;# 
   729  0397                     	;# 
   730  0398                     	;# 
   731  0399                     	;# 
   732  0415                     	;# 
   733  0416                     	;# 
   734  0417                     	;# 
   735  041C                     	;# 
   736  041D                     	;# 
   737  041E                     	;# 
   738  0511                     	;# 
   739  0515                     	;# 
   740  0617                     	;# 
   741  0618                     	;# 
   742  0619                     	;# 
   743  0619                     	;# 
   744  061A                     	;# 
   745  061B                     	;# 
   746  061C                     	;# 
   747  061C                     	;# 
   748  0691                     	;# 
   749  0692                     	;# 
   750  0693                     	;# 
   751  0694                     	;# 
   752  0695                     	;# 
   753  0696                     	;# 
   754  0697                     	;# 
   755  0698                     	;# 
   756  0699                     	;# 
   757  069A                     	;# 
   758  069B                     	;# 
   759  069C                     	;# 
   760  069D                     	;# 
   761  069E                     	;# 
   762  069F                     	;# 
   763  0E0F                     	;# 
   764  0E10                     	;# 
   765  0E11                     	;# 
   766  0E12                     	;# 
   767  0E13                     	;# 
   768  0E14                     	;# 
   769  0E15                     	;# 
   770  0E17                     	;# 
   771  0E20                     	;# 
   772  0E21                     	;# 
   773  0E22                     	;# 
   774  0E24                     	;# 
   775  0E25                     	;# 
   776  0E28                     	;# 
   777  0E29                     	;# 
   778  0E2A                     	;# 
   779  0E2B                     	;# 
   780  0E90                     	;# 
   781  0E91                     	;# 
   782  0E92                     	;# 
   783  0E94                     	;# 
   784  0E95                     	;# 
   785  0E9C                     	;# 
   786  0E9D                     	;# 
   787  0E9E                     	;# 
   788  0E9F                     	;# 
   789  0EA0                     	;# 
   790  0EA1                     	;# 
   791  0EA2                     	;# 
   792  0EA3                     	;# 
   793  0EA4                     	;# 
   794  0EA5                     	;# 
   795  0EA6                     	;# 
   796  0EA7                     	;# 
   797  0F0F                     	;# 
   798  0F10                     	;# 
   799  0F11                     	;# 
   800  0F12                     	;# 
   801  0F13                     	;# 
   802  0F14                     	;# 
   803  0F15                     	;# 
   804  0F16                     	;# 
   805  0F17                     	;# 
   806  0F18                     	;# 
   807  0F19                     	;# 
   808  0F1A                     	;# 
   809  0F1B                     	;# 
   810  0F1C                     	;# 
   811  0F1D                     	;# 
   812  0F1E                     	;# 
   813  0F1F                     	;# 
   814  0F20                     	;# 
   815  0F21                     	;# 
   816  0F22                     	;# 
   817  0F23                     	;# 
   818  0F24                     	;# 
   819  0F25                     	;# 
   820  0F26                     	;# 
   821  0F27                     	;# 
   822  0F28                     	;# 
   823  0F29                     	;# 
   824  0F2A                     	;# 
   825  0F2B                     	;# 
   826  0F2C                     	;# 
   827  0F2D                     	;# 
   828  0FE4                     	;# 
   829  0FE5                     	;# 
   830  0FE6                     	;# 
   831  0FE7                     	;# 
   832  0FE8                     	;# 
   833  0FE9                     	;# 
   834  0FEA                     	;# 
   835  0FEB                     	;# 
   836  0FED                     	;# 
   837  0FEE                     	;# 
   838  0FEF                     	;# 
   839  0000                     	;# 
   840  0001                     	;# 
   841  0002                     	;# 
   842  0003                     	;# 
   843  0004                     	;# 
   844  0005                     	;# 
   845  0006                     	;# 
   846  0007                     	;# 
   847  0008                     	;# 
   848  0009                     	;# 
   849  000A                     	;# 
   850  000B                     	;# 
   851  000C                     	;# 
   852  000D                     	;# 
   853  000E                     	;# 
   854  0011                     	;# 
   855  0012                     	;# 
   856  0013                     	;# 
   857  0015                     	;# 
   858  0016                     	;# 
   859  0016                     	;# 
   860  0017                     	;# 
   861  0018                     	;# 
   862  0019                     	;# 
   863  001A                     	;# 
   864  001B                     	;# 
   865  001C                     	;# 
   866  008C                     	;# 
   867  008D                     	;# 
   868  008E                     	;# 
   869  0091                     	;# 
   870  0092                     	;# 
   871  0093                     	;# 
   872  0095                     	;# 
   873  0096                     	;# 
   874  0097                     	;# 
   875  0098                     	;# 
   876  0099                     	;# 
   877  009A                     	;# 
   878  009B                     	;# 
   879  009B                     	;# 
   880  009C                     	;# 
   881  009D                     	;# 
   882  009E                     	;# 
   883  009F                     	;# 
   884  010C                     	;# 
   885  010D                     	;# 
   886  010E                     	;# 
   887  0111                     	;# 
   888  0112                     	;# 
   889  0113                     	;# 
   890  0114                     	;# 
   891  0115                     	;# 
   892  0116                     	;# 
   893  0117                     	;# 
   894  0118                     	;# 
   895  0119                     	;# 
   896  011C                     	;# 
   897  018C                     	;# 
   898  018D                     	;# 
   899  018E                     	;# 
   900  0191                     	;# 
   901  0191                     	;# 
   902  0192                     	;# 
   903  0193                     	;# 
   904  0193                     	;# 
   905  0194                     	;# 
   906  0195                     	;# 
   907  0196                     	;# 
   908  0199                     	;# 
   909  0199                     	;# 
   910  0199                     	;# 
   911  019A                     	;# 
   912  019A                     	;# 
   913  019A                     	;# 
   914  019B                     	;# 
   915  019B                     	;# 
   916  019B                     	;# 
   917  019B                     	;# 
   918  019B                     	;# 
   919  019C                     	;# 
   920  019C                     	;# 
   921  019C                     	;# 
   922  019D                     	;# 
   923  019D                     	;# 
   924  019D                     	;# 
   925  019E                     	;# 
   926  019E                     	;# 
   927  019E                     	;# 
   928  019F                     	;# 
   929  019F                     	;# 
   930  019F                     	;# 
   931  019F                     	;# 
   932  019F                     	;# 
   933  020C                     	;# 
   934  020D                     	;# 
   935  020E                     	;# 
   936  0211                     	;# 
   937  0211                     	;# 
   938  0212                     	;# 
   939  0212                     	;# 
   940  0213                     	;# 
   941  0213                     	;# 
   942  0214                     	;# 
   943  0214                     	;# 
   944  0215                     	;# 
   945  0215                     	;# 
   946  0215                     	;# 
   947  0215                     	;# 
   948  0216                     	;# 
   949  0216                     	;# 
   950  0217                     	;# 
   951  0217                     	;# 
   952  028C                     	;# 
   953  028D                     	;# 
   954  028E                     	;# 
   955  0291                     	;# 
   956  0291                     	;# 
   957  0292                     	;# 
   958  0293                     	;# 
   959  0293                     	;# 
   960  0298                     	;# 
   961  0298                     	;# 
   962  0299                     	;# 
   963  029A                     	;# 
   964  029A                     	;# 
   965  029E                     	;# 
   966  030C                     	;# 
   967  030D                     	;# 
   968  030E                     	;# 
   969  038C                     	;# 
   970  038D                     	;# 
   971  038E                     	;# 
   972  0391                     	;# 
   973  0392                     	;# 
   974  0393                     	;# 
   975  0394                     	;# 
   976  0395                     	;# 
   977  0396                     	;# 
   978  0397                     	;# 
   979  0398                     	;# 
   980  0399                     	;# 
   981  0415                     	;# 
   982  0416                     	;# 
   983  0417                     	;# 
   984  041C                     	;# 
   985  041D                     	;# 
   986  041E                     	;# 
   987  0511                     	;# 
   988  0515                     	;# 
   989  0617                     	;# 
   990  0618                     	;# 
   991  0619                     	;# 
   992  0619                     	;# 
   993  061A                     	;# 
   994  061B                     	;# 
   995  061C                     	;# 
   996  061C                     	;# 
   997  0691                     	;# 
   998  0692                     	;# 
   999  0693                     	;# 
  1000  0694                     	;# 
  1001  0695                     	;# 
  1002  0696                     	;# 
  1003  0697                     	;# 
  1004  0698                     	;# 
  1005  0699                     	;# 
  1006  069A                     	;# 
  1007  069B                     	;# 
  1008  069C                     	;# 
  1009  069D                     	;# 
  1010  069E                     	;# 
  1011  069F                     	;# 
  1012  0E0F                     	;# 
  1013  0E10                     	;# 
  1014  0E11                     	;# 
  1015  0E12                     	;# 
  1016  0E13                     	;# 
  1017  0E14                     	;# 
  1018  0E15                     	;# 
  1019  0E17                     	;# 
  1020  0E20                     	;# 
  1021  0E21                     	;# 
  1022  0E22                     	;# 
  1023  0E24                     	;# 
  1024  0E25                     	;# 
  1025  0E28                     	;# 
  1026  0E29                     	;# 
  1027  0E2A                     	;# 
  1028  0E2B                     	;# 
  1029  0E90                     	;# 
  1030  0E91                     	;# 
  1031  0E92                     	;# 
  1032  0E94                     	;# 
  1033  0E95                     	;# 
  1034  0E9C                     	;# 
  1035  0E9D                     	;# 
  1036  0E9E                     	;# 
  1037  0E9F                     	;# 
  1038  0EA0                     	;# 
  1039  0EA1                     	;# 
  1040  0EA2                     	;# 
  1041  0EA3                     	;# 
  1042  0EA4                     	;# 
  1043  0EA5                     	;# 
  1044  0EA6                     	;# 
  1045  0EA7                     	;# 
  1046  0F0F                     	;# 
  1047  0F10                     	;# 
  1048  0F11                     	;# 
  1049  0F12                     	;# 
  1050  0F13                     	;# 
  1051  0F14                     	;# 
  1052  0F15                     	;# 
  1053  0F16                     	;# 
  1054  0F17                     	;# 
  1055  0F18                     	;# 
  1056  0F19                     	;# 
  1057  0F1A                     	;# 
  1058  0F1B                     	;# 
  1059  0F1C                     	;# 
  1060  0F1D                     	;# 
  1061  0F1E                     	;# 
  1062  0F1F                     	;# 
  1063  0F20                     	;# 
  1064  0F21                     	;# 
  1065  0F22                     	;# 
  1066  0F23                     	;# 
  1067  0F24                     	;# 
  1068  0F25                     	;# 
  1069  0F26                     	;# 
  1070  0F27                     	;# 
  1071  0F28                     	;# 
  1072  0F29                     	;# 
  1073  0F2A                     	;# 
  1074  0F2B                     	;# 
  1075  0F2C                     	;# 
  1076  0F2D                     	;# 
  1077  0FE4                     	;# 
  1078  0FE5                     	;# 
  1079  0FE6                     	;# 
  1080  0FE7                     	;# 
  1081  0FE8                     	;# 
  1082  0FE9                     	;# 
  1083  0FEA                     	;# 
  1084  0FEB                     	;# 
  1085  0FED                     	;# 
  1086  0FEE                     	;# 
  1087  0FEF                     	;# 
  1088  0000                     	;# 
  1089  0001                     	;# 
  1090  0002                     	;# 
  1091  0003                     	;# 
  1092  0004                     	;# 
  1093  0005                     	;# 
  1094  0006                     	;# 
  1095  0007                     	;# 
  1096  0008                     	;# 
  1097  0009                     	;# 
  1098  000A                     	;# 
  1099  000B                     	;# 
  1100  000C                     	;# 
  1101  000D                     	;# 
  1102  000E                     	;# 
  1103  0011                     	;# 
  1104  0012                     	;# 
  1105  0013                     	;# 
  1106  0015                     	;# 
  1107  0016                     	;# 
  1108  0016                     	;# 
  1109  0017                     	;# 
  1110  0018                     	;# 
  1111  0019                     	;# 
  1112  001A                     	;# 
  1113  001B                     	;# 
  1114  001C                     	;# 
  1115  008C                     	;# 
  1116  008D                     	;# 
  1117  008E                     	;# 
  1118  0091                     	;# 
  1119  0092                     	;# 
  1120  0093                     	;# 
  1121  0095                     	;# 
  1122  0096                     	;# 
  1123  0097                     	;# 
  1124  0098                     	;# 
  1125  0099                     	;# 
  1126  009A                     	;# 
  1127  009B                     	;# 
  1128  009B                     	;# 
  1129  009C                     	;# 
  1130  009D                     	;# 
  1131  009E                     	;# 
  1132  009F                     	;# 
  1133  010C                     	;# 
  1134  010D                     	;# 
  1135  010E                     	;# 
  1136  0111                     	;# 
  1137  0112                     	;# 
  1138  0113                     	;# 
  1139  0114                     	;# 
  1140  0115                     	;# 
  1141  0116                     	;# 
  1142  0117                     	;# 
  1143  0118                     	;# 
  1144  0119                     	;# 
  1145  011C                     	;# 
  1146  018C                     	;# 
  1147  018D                     	;# 
  1148  018E                     	;# 
  1149  0191                     	;# 
  1150  0191                     	;# 
  1151  0192                     	;# 
  1152  0193                     	;# 
  1153  0193                     	;# 
  1154  0194                     	;# 
  1155  0195                     	;# 
  1156  0196                     	;# 
  1157  0199                     	;# 
  1158  0199                     	;# 
  1159  0199                     	;# 
  1160  019A                     	;# 
  1161  019A                     	;# 
  1162  019A                     	;# 
  1163  019B                     	;# 
  1164  019B                     	;# 
  1165  019B                     	;# 
  1166  019B                     	;# 
  1167  019B                     	;# 
  1168  019C                     	;# 
  1169  019C                     	;# 
  1170  019C                     	;# 
  1171  019D                     	;# 
  1172  019D                     	;# 
  1173  019D                     	;# 
  1174  019E                     	;# 
  1175  019E                     	;# 
  1176  019E                     	;# 
  1177  019F                     	;# 
  1178  019F                     	;# 
  1179  019F                     	;# 
  1180  019F                     	;# 
  1181  019F                     	;# 
  1182  020C                     	;# 
  1183  020D                     	;# 
  1184  020E                     	;# 
  1185  0211                     	;# 
  1186  0211                     	;# 
  1187  0212                     	;# 
  1188  0212                     	;# 
  1189  0213                     	;# 
  1190  0213                     	;# 
  1191  0214                     	;# 
  1192  0214                     	;# 
  1193  0215                     	;# 
  1194  0215                     	;# 
  1195  0215                     	;# 
  1196  0215                     	;# 
  1197  0216                     	;# 
  1198  0216                     	;# 
  1199  0217                     	;# 
  1200  0217                     	;# 
  1201  028C                     	;# 
  1202  028D                     	;# 
  1203  028E                     	;# 
  1204  0291                     	;# 
  1205  0291                     	;# 
  1206  0292                     	;# 
  1207  0293                     	;# 
  1208  0293                     	;# 
  1209  0298                     	;# 
  1210  0298                     	;# 
  1211  0299                     	;# 
  1212  029A                     	;# 
  1213  029A                     	;# 
  1214  029E                     	;# 
  1215  030C                     	;# 
  1216  030D                     	;# 
  1217  030E                     	;# 
  1218  038C                     	;# 
  1219  038D                     	;# 
  1220  038E                     	;# 
  1221  0391                     	;# 
  1222  0392                     	;# 
  1223  0393                     	;# 
  1224  0394                     	;# 
  1225  0395                     	;# 
  1226  0396                     	;# 
  1227  0397                     	;# 
  1228  0398                     	;# 
  1229  0399                     	;# 
  1230  0415                     	;# 
  1231  0416                     	;# 
  1232  0417                     	;# 
  1233  041C                     	;# 
  1234  041D                     	;# 
  1235  041E                     	;# 
  1236  0511                     	;# 
  1237  0515                     	;# 
  1238  0617                     	;# 
  1239  0618                     	;# 
  1240  0619                     	;# 
  1241  0619                     	;# 
  1242  061A                     	;# 
  1243  061B                     	;# 
  1244  061C                     	;# 
  1245  061C                     	;# 
  1246  0691                     	;# 
  1247  0692                     	;# 
  1248  0693                     	;# 
  1249  0694                     	;# 
  1250  0695                     	;# 
  1251  0696                     	;# 
  1252  0697                     	;# 
  1253  0698                     	;# 
  1254  0699                     	;# 
  1255  069A                     	;# 
  1256  069B                     	;# 
  1257  069C                     	;# 
  1258  069D                     	;# 
  1259  069E                     	;# 
  1260  069F                     	;# 
  1261  0E0F                     	;# 
  1262  0E10                     	;# 
  1263  0E11                     	;# 
  1264  0E12                     	;# 
  1265  0E13                     	;# 
  1266  0E14                     	;# 
  1267  0E15                     	;# 
  1268  0E17                     	;# 
  1269  0E20                     	;# 
  1270  0E21                     	;# 
  1271  0E22                     	;# 
  1272  0E24                     	;# 
  1273  0E25                     	;# 
  1274  0E28                     	;# 
  1275  0E29                     	;# 
  1276  0E2A                     	;# 
  1277  0E2B                     	;# 
  1278  0E90                     	;# 
  1279  0E91                     	;# 
  1280  0E92                     	;# 
  1281  0E94                     	;# 
  1282  0E95                     	;# 
  1283  0E9C                     	;# 
  1284  0E9D                     	;# 
  1285  0E9E                     	;# 
  1286  0E9F                     	;# 
  1287  0EA0                     	;# 
  1288  0EA1                     	;# 
  1289  0EA2                     	;# 
  1290  0EA3                     	;# 
  1291  0EA4                     	;# 
  1292  0EA5                     	;# 
  1293  0EA6                     	;# 
  1294  0EA7                     	;# 
  1295  0F0F                     	;# 
  1296  0F10                     	;# 
  1297  0F11                     	;# 
  1298  0F12                     	;# 
  1299  0F13                     	;# 
  1300  0F14                     	;# 
  1301  0F15                     	;# 
  1302  0F16                     	;# 
  1303  0F17                     	;# 
  1304  0F18                     	;# 
  1305  0F19                     	;# 
  1306  0F1A                     	;# 
  1307  0F1B                     	;# 
  1308  0F1C                     	;# 
  1309  0F1D                     	;# 
  1310  0F1E                     	;# 
  1311  0F1F                     	;# 
  1312  0F20                     	;# 
  1313  0F21                     	;# 
  1314  0F22                     	;# 
  1315  0F23                     	;# 
  1316  0F24                     	;# 
  1317  0F25                     	;# 
  1318  0F26                     	;# 
  1319  0F27                     	;# 
  1320  0F28                     	;# 
  1321  0F29                     	;# 
  1322  0F2A                     	;# 
  1323  0F2B                     	;# 
  1324  0F2C                     	;# 
  1325  0F2D                     	;# 
  1326  0FE4                     	;# 
  1327  0FE5                     	;# 
  1328  0FE6                     	;# 
  1329  0FE7                     	;# 
  1330  0FE8                     	;# 
  1331  0FE9                     	;# 
  1332  0FEA                     	;# 
  1333  0FEB                     	;# 
  1334  0FED                     	;# 
  1335  0FEE                     	;# 
  1336  0FEF                     	;# 
  1337  0000                     	;# 
  1338  0001                     	;# 
  1339  0002                     	;# 
  1340  0003                     	;# 
  1341  0004                     	;# 
  1342  0005                     	;# 
  1343  0006                     	;# 
  1344  0007                     	;# 
  1345  0008                     	;# 
  1346  0009                     	;# 
  1347  000A                     	;# 
  1348  000B                     	;# 
  1349  000C                     	;# 
  1350  000D                     	;# 
  1351  000E                     	;# 
  1352  0011                     	;# 
  1353  0012                     	;# 
  1354  0013                     	;# 
  1355  0015                     	;# 
  1356  0016                     	;# 
  1357  0016                     	;# 
  1358  0017                     	;# 
  1359  0018                     	;# 
  1360  0019                     	;# 
  1361  001A                     	;# 
  1362  001B                     	;# 
  1363  001C                     	;# 
  1364  008C                     	;# 
  1365  008D                     	;# 
  1366  008E                     	;# 
  1367  0091                     	;# 
  1368  0092                     	;# 
  1369  0093                     	;# 
  1370  0095                     	;# 
  1371  0096                     	;# 
  1372  0097                     	;# 
  1373  0098                     	;# 
  1374  0099                     	;# 
  1375  009A                     	;# 
  1376  009B                     	;# 
  1377  009B                     	;# 
  1378  009C                     	;# 
  1379  009D                     	;# 
  1380  009E                     	;# 
  1381  009F                     	;# 
  1382  010C                     	;# 
  1383  010D                     	;# 
  1384  010E                     	;# 
  1385  0111                     	;# 
  1386  0112                     	;# 
  1387  0113                     	;# 
  1388  0114                     	;# 
  1389  0115                     	;# 
  1390  0116                     	;# 
  1391  0117                     	;# 
  1392  0118                     	;# 
  1393  0119                     	;# 
  1394  011C                     	;# 
  1395  018C                     	;# 
  1396  018D                     	;# 
  1397  018E                     	;# 
  1398  0191                     	;# 
  1399  0191                     	;# 
  1400  0192                     	;# 
  1401  0193                     	;# 
  1402  0193                     	;# 
  1403  0194                     	;# 
  1404  0195                     	;# 
  1405  0196                     	;# 
  1406  0199                     	;# 
  1407  0199                     	;# 
  1408  0199                     	;# 
  1409  019A                     	;# 
  1410  019A                     	;# 
  1411  019A                     	;# 
  1412  019B                     	;# 
  1413  019B                     	;# 
  1414  019B                     	;# 
  1415  019B                     	;# 
  1416  019B                     	;# 
  1417  019C                     	;# 
  1418  019C                     	;# 
  1419  019C                     	;# 
  1420  019D                     	;# 
  1421  019D                     	;# 
  1422  019D                     	;# 
  1423  019E                     	;# 
  1424  019E                     	;# 
  1425  019E                     	;# 
  1426  019F                     	;# 
  1427  019F                     	;# 
  1428  019F                     	;# 
  1429  019F                     	;# 
  1430  019F                     	;# 
  1431  020C                     	;# 
  1432  020D                     	;# 
  1433  020E                     	;# 
  1434  0211                     	;# 
  1435  0211                     	;# 
  1436  0212                     	;# 
  1437  0212                     	;# 
  1438  0213                     	;# 
  1439  0213                     	;# 
  1440  0214                     	;# 
  1441  0214                     	;# 
  1442  0215                     	;# 
  1443  0215                     	;# 
  1444  0215                     	;# 
  1445  0215                     	;# 
  1446  0216                     	;# 
  1447  0216                     	;# 
  1448  0217                     	;# 
  1449  0217                     	;# 
  1450  028C                     	;# 
  1451  028D                     	;# 
  1452  028E                     	;# 
  1453  0291                     	;# 
  1454  0291                     	;# 
  1455  0292                     	;# 
  1456  0293                     	;# 
  1457  0293                     	;# 
  1458  0298                     	;# 
  1459  0298                     	;# 
  1460  0299                     	;# 
  1461  029A                     	;# 
  1462  029A                     	;# 
  1463  029E                     	;# 
  1464  030C                     	;# 
  1465  030D                     	;# 
  1466  030E                     	;# 
  1467  038C                     	;# 
  1468  038D                     	;# 
  1469  038E                     	;# 
  1470  0391                     	;# 
  1471  0392                     	;# 
  1472  0393                     	;# 
  1473  0394                     	;# 
  1474  0395                     	;# 
  1475  0396                     	;# 
  1476  0397                     	;# 
  1477  0398                     	;# 
  1478  0399                     	;# 
  1479  0415                     	;# 
  1480  0416                     	;# 
  1481  0417                     	;# 
  1482  041C                     	;# 
  1483  041D                     	;# 
  1484  041E                     	;# 
  1485  0511                     	;# 
  1486  0515                     	;# 
  1487  0617                     	;# 
  1488  0618                     	;# 
  1489  0619                     	;# 
  1490  0619                     	;# 
  1491  061A                     	;# 
  1492  061B                     	;# 
  1493  061C                     	;# 
  1494  061C                     	;# 
  1495  0691                     	;# 
  1496  0692                     	;# 
  1497  0693                     	;# 
  1498  0694                     	;# 
  1499  0695                     	;# 
  1500  0696                     	;# 
  1501  0697                     	;# 
  1502  0698                     	;# 
  1503  0699                     	;# 
  1504  069A                     	;# 
  1505  069B                     	;# 
  1506  069C                     	;# 
  1507  069D                     	;# 
  1508  069E                     	;# 
  1509  069F                     	;# 
  1510  0E0F                     	;# 
  1511  0E10                     	;# 
  1512  0E11                     	;# 
  1513  0E12                     	;# 
  1514  0E13                     	;# 
  1515  0E14                     	;# 
  1516  0E15                     	;# 
  1517  0E17                     	;# 
  1518  0E20                     	;# 
  1519  0E21                     	;# 
  1520  0E22                     	;# 
  1521  0E24                     	;# 
  1522  0E25                     	;# 
  1523  0E28                     	;# 
  1524  0E29                     	;# 
  1525  0E2A                     	;# 
  1526  0E2B                     	;# 
  1527  0E90                     	;# 
  1528  0E91                     	;# 
  1529  0E92                     	;# 
  1530  0E94                     	;# 
  1531  0E95                     	;# 
  1532  0E9C                     	;# 
  1533  0E9D                     	;# 
  1534  0E9E                     	;# 
  1535  0E9F                     	;# 
  1536  0EA0                     	;# 
  1537  0EA1                     	;# 
  1538  0EA2                     	;# 
  1539  0EA3                     	;# 
  1540  0EA4                     	;# 
  1541  0EA5                     	;# 
  1542  0EA6                     	;# 
  1543  0EA7                     	;# 
  1544  0F0F                     	;# 
  1545  0F10                     	;# 
  1546  0F11                     	;# 
  1547  0F12                     	;# 
  1548  0F13                     	;# 
  1549  0F14                     	;# 
  1550  0F15                     	;# 
  1551  0F16                     	;# 
  1552  0F17                     	;# 
  1553  0F18                     	;# 
  1554  0F19                     	;# 
  1555  0F1A                     	;# 
  1556  0F1B                     	;# 
  1557  0F1C                     	;# 
  1558  0F1D                     	;# 
  1559  0F1E                     	;# 
  1560  0F1F                     	;# 
  1561  0F20                     	;# 
  1562  0F21                     	;# 
  1563  0F22                     	;# 
  1564  0F23                     	;# 
  1565  0F24                     	;# 
  1566  0F25                     	;# 
  1567  0F26                     	;# 
  1568  0F27                     	;# 
  1569  0F28                     	;# 
  1570  0F29                     	;# 
  1571  0F2A                     	;# 
  1572  0F2B                     	;# 
  1573  0F2C                     	;# 
  1574  0F2D                     	;# 
  1575  0FE4                     	;# 
  1576  0FE5                     	;# 
  1577  0FE6                     	;# 
  1578  0FE7                     	;# 
  1579  0FE8                     	;# 
  1580  0FE9                     	;# 
  1581  0FEA                     	;# 
  1582  0FEB                     	;# 
  1583  0FED                     	;# 
  1584  0FEE                     	;# 
  1585  0FEF                     	;# 
  1586  0000                     	;# 
  1587  0001                     	;# 
  1588  0002                     	;# 
  1589  0003                     	;# 
  1590  0004                     	;# 
  1591  0005                     	;# 
  1592  0006                     	;# 
  1593  0007                     	;# 
  1594  0008                     	;# 
  1595  0009                     	;# 
  1596  000A                     	;# 
  1597  000B                     	;# 
  1598  000C                     	;# 
  1599  000D                     	;# 
  1600  000E                     	;# 
  1601  0011                     	;# 
  1602  0012                     	;# 
  1603  0013                     	;# 
  1604  0015                     	;# 
  1605  0016                     	;# 
  1606  0016                     	;# 
  1607  0017                     	;# 
  1608  0018                     	;# 
  1609  0019                     	;# 
  1610  001A                     	;# 
  1611  001B                     	;# 
  1612  001C                     	;# 
  1613  008C                     	;# 
  1614  008D                     	;# 
  1615  008E                     	;# 
  1616  0091                     	;# 
  1617  0092                     	;# 
  1618  0093                     	;# 
  1619  0095                     	;# 
  1620  0096                     	;# 
  1621  0097                     	;# 
  1622  0098                     	;# 
  1623  0099                     	;# 
  1624  009A                     	;# 
  1625  009B                     	;# 
  1626  009B                     	;# 
  1627  009C                     	;# 
  1628  009D                     	;# 
  1629  009E                     	;# 
  1630  009F                     	;# 
  1631  010C                     	;# 
  1632  010D                     	;# 
  1633  010E                     	;# 
  1634  0111                     	;# 
  1635  0112                     	;# 
  1636  0113                     	;# 
  1637  0114                     	;# 
  1638  0115                     	;# 
  1639  0116                     	;# 
  1640  0117                     	;# 
  1641  0118                     	;# 
  1642  0119                     	;# 
  1643  011C                     	;# 
  1644  018C                     	;# 
  1645  018D                     	;# 
  1646  018E                     	;# 
  1647  0191                     	;# 
  1648  0191                     	;# 
  1649  0192                     	;# 
  1650  0193                     	;# 
  1651  0193                     	;# 
  1652  0194                     	;# 
  1653  0195                     	;# 
  1654  0196                     	;# 
  1655  0199                     	;# 
  1656  0199                     	;# 
  1657  0199                     	;# 
  1658  019A                     	;# 
  1659  019A                     	;# 
  1660  019A                     	;# 
  1661  019B                     	;# 
  1662  019B                     	;# 
  1663  019B                     	;# 
  1664  019B                     	;# 
  1665  019B                     	;# 
  1666  019C                     	;# 
  1667  019C                     	;# 
  1668  019C                     	;# 
  1669  019D                     	;# 
  1670  019D                     	;# 
  1671  019D                     	;# 
  1672  019E                     	;# 
  1673  019E                     	;# 
  1674  019E                     	;# 
  1675  019F                     	;# 
  1676  019F                     	;# 
  1677  019F                     	;# 
  1678  019F                     	;# 
  1679  019F                     	;# 
  1680  020C                     	;# 
  1681  020D                     	;# 
  1682  020E                     	;# 
  1683  0211                     	;# 
  1684  0211                     	;# 
  1685  0212                     	;# 
  1686  0212                     	;# 
  1687  0213                     	;# 
  1688  0213                     	;# 
  1689  0214                     	;# 
  1690  0214                     	;# 
  1691  0215                     	;# 
  1692  0215                     	;# 
  1693  0215                     	;# 
  1694  0215                     	;# 
  1695  0216                     	;# 
  1696  0216                     	;# 
  1697  0217                     	;# 
  1698  0217                     	;# 
  1699  028C                     	;# 
  1700  028D                     	;# 
  1701  028E                     	;# 
  1702  0291                     	;# 
  1703  0291                     	;# 
  1704  0292                     	;# 
  1705  0293                     	;# 
  1706  0293                     	;# 
  1707  0298                     	;# 
  1708  0298                     	;# 
  1709  0299                     	;# 
  1710  029A                     	;# 
  1711  029A                     	;# 
  1712  029E                     	;# 
  1713  030C                     	;# 
  1714  030D                     	;# 
  1715  030E                     	;# 
  1716  038C                     	;# 
  1717  038D                     	;# 
  1718  038E                     	;# 
  1719  0391                     	;# 
  1720  0392                     	;# 
  1721  0393                     	;# 
  1722  0394                     	;# 
  1723  0395                     	;# 
  1724  0396                     	;# 
  1725  0397                     	;# 
  1726  0398                     	;# 
  1727  0399                     	;# 
  1728  0415                     	;# 
  1729  0416                     	;# 
  1730  0417                     	;# 
  1731  041C                     	;# 
  1732  041D                     	;# 
  1733  041E                     	;# 
  1734  0511                     	;# 
  1735  0515                     	;# 
  1736  0617                     	;# 
  1737  0618                     	;# 
  1738  0619                     	;# 
  1739  0619                     	;# 
  1740  061A                     	;# 
  1741  061B                     	;# 
  1742  061C                     	;# 
  1743  061C                     	;# 
  1744  0691                     	;# 
  1745  0692                     	;# 
  1746  0693                     	;# 
  1747  0694                     	;# 
  1748  0695                     	;# 
  1749  0696                     	;# 
  1750  0697                     	;# 
  1751  0698                     	;# 
  1752  0699                     	;# 
  1753  069A                     	;# 
  1754  069B                     	;# 
  1755  069C                     	;# 
  1756  069D                     	;# 
  1757  069E                     	;# 
  1758  069F                     	;# 
  1759  0E0F                     	;# 
  1760  0E10                     	;# 
  1761  0E11                     	;# 
  1762  0E12                     	;# 
  1763  0E13                     	;# 
  1764  0E14                     	;# 
  1765  0E15                     	;# 
  1766  0E17                     	;# 
  1767  0E20                     	;# 
  1768  0E21                     	;# 
  1769  0E22                     	;# 
  1770  0E24                     	;# 
  1771  0E25                     	;# 
  1772  0E28                     	;# 
  1773  0E29                     	;# 
  1774  0E2A                     	;# 
  1775  0E2B                     	;# 
  1776  0E90                     	;# 
  1777  0E91                     	;# 
  1778  0E92                     	;# 
  1779  0E94                     	;# 
  1780  0E95                     	;# 
  1781  0E9C                     	;# 
  1782  0E9D                     	;# 
  1783  0E9E                     	;# 
  1784  0E9F                     	;# 
  1785  0EA0                     	;# 
  1786  0EA1                     	;# 
  1787  0EA2                     	;# 
  1788  0EA3                     	;# 
  1789  0EA4                     	;# 
  1790  0EA5                     	;# 
  1791  0EA6                     	;# 
  1792  0EA7                     	;# 
  1793  0F0F                     	;# 
  1794  0F10                     	;# 
  1795  0F11                     	;# 
  1796  0F12                     	;# 
  1797  0F13                     	;# 
  1798  0F14                     	;# 
  1799  0F15                     	;# 
  1800  0F16                     	;# 
  1801  0F17                     	;# 
  1802  0F18                     	;# 
  1803  0F19                     	;# 
  1804  0F1A                     	;# 
  1805  0F1B                     	;# 
  1806  0F1C                     	;# 
  1807  0F1D                     	;# 
  1808  0F1E                     	;# 
  1809  0F1F                     	;# 
  1810  0F20                     	;# 
  1811  0F21                     	;# 
  1812  0F22                     	;# 
  1813  0F23                     	;# 
  1814  0F24                     	;# 
  1815  0F25                     	;# 
  1816  0F26                     	;# 
  1817  0F27                     	;# 
  1818  0F28                     	;# 
  1819  0F29                     	;# 
  1820  0F2A                     	;# 
  1821  0F2B                     	;# 
  1822  0F2C                     	;# 
  1823  0F2D                     	;# 
  1824  0FE4                     	;# 
  1825  0FE5                     	;# 
  1826  0FE6                     	;# 
  1827  0FE7                     	;# 
  1828  0FE8                     	;# 
  1829  0FE9                     	;# 
  1830  0FEA                     	;# 
  1831  0FEB                     	;# 
  1832  0FED                     	;# 
  1833  0FEE                     	;# 
  1834  0FEF                     	;# 
  1835  0000                     	;# 
  1836  0001                     	;# 
  1837  0002                     	;# 
  1838  0003                     	;# 
  1839  0004                     	;# 
  1840  0005                     	;# 
  1841  0006                     	;# 
  1842  0007                     	;# 
  1843  0008                     	;# 
  1844  0009                     	;# 
  1845  000A                     	;# 
  1846  000B                     	;# 
  1847  000C                     	;# 
  1848  000D                     	;# 
  1849  000E                     	;# 
  1850  0011                     	;# 
  1851  0012                     	;# 
  1852  0013                     	;# 
  1853  0015                     	;# 
  1854  0016                     	;# 
  1855  0016                     	;# 
  1856  0017                     	;# 
  1857  0018                     	;# 
  1858  0019                     	;# 
  1859  001A                     	;# 
  1860  001B                     	;# 
  1861  001C                     	;# 
  1862  008C                     	;# 
  1863  008D                     	;# 
  1864  008E                     	;# 
  1865  0091                     	;# 
  1866  0092                     	;# 
  1867  0093                     	;# 
  1868  0095                     	;# 
  1869  0096                     	;# 
  1870  0097                     	;# 
  1871  0098                     	;# 
  1872  0099                     	;# 
  1873  009A                     	;# 
  1874  009B                     	;# 
  1875  009B                     	;# 
  1876  009C                     	;# 
  1877  009D                     	;# 
  1878  009E                     	;# 
  1879  009F                     	;# 
  1880  010C                     	;# 
  1881  010D                     	;# 
  1882  010E                     	;# 
  1883  0111                     	;# 
  1884  0112                     	;# 
  1885  0113                     	;# 
  1886  0114                     	;# 
  1887  0115                     	;# 
  1888  0116                     	;# 
  1889  0117                     	;# 
  1890  0118                     	;# 
  1891  0119                     	;# 
  1892  011C                     	;# 
  1893  018C                     	;# 
  1894  018D                     	;# 
  1895  018E                     	;# 
  1896  0191                     	;# 
  1897  0191                     	;# 
  1898  0192                     	;# 
  1899  0193                     	;# 
  1900  0193                     	;# 
  1901  0194                     	;# 
  1902  0195                     	;# 
  1903  0196                     	;# 
  1904  0199                     	;# 
  1905  0199                     	;# 
  1906  0199                     	;# 
  1907  019A                     	;# 
  1908  019A                     	;# 
  1909  019A                     	;# 
  1910  019B                     	;# 
  1911  019B                     	;# 
  1912  019B                     	;# 
  1913  019B                     	;# 
  1914  019B                     	;# 
  1915  019C                     	;# 
  1916  019C                     	;# 
  1917  019C                     	;# 
  1918  019D                     	;# 
  1919  019D                     	;# 
  1920  019D                     	;# 
  1921  019E                     	;# 
  1922  019E                     	;# 
  1923  019E                     	;# 
  1924  019F                     	;# 
  1925  019F                     	;# 
  1926  019F                     	;# 
  1927  019F                     	;# 
  1928  019F                     	;# 
  1929  020C                     	;# 
  1930  020D                     	;# 
  1931  020E                     	;# 
  1932  0211                     	;# 
  1933  0211                     	;# 
  1934  0212                     	;# 
  1935  0212                     	;# 
  1936  0213                     	;# 
  1937  0213                     	;# 
  1938  0214                     	;# 
  1939  0214                     	;# 
  1940  0215                     	;# 
  1941  0215                     	;# 
  1942  0215                     	;# 
  1943  0215                     	;# 
  1944  0216                     	;# 
  1945  0216                     	;# 
  1946  0217                     	;# 
  1947  0217                     	;# 
  1948  028C                     	;# 
  1949  028D                     	;# 
  1950  028E                     	;# 
  1951  0291                     	;# 
  1952  0291                     	;# 
  1953  0292                     	;# 
  1954  0293                     	;# 
  1955  0293                     	;# 
  1956  0298                     	;# 
  1957  0298                     	;# 
  1958  0299                     	;# 
  1959  029A                     	;# 
  1960  029A                     	;# 
  1961  029E                     	;# 
  1962  030C                     	;# 
  1963  030D                     	;# 
  1964  030E                     	;# 
  1965  038C                     	;# 
  1966  038D                     	;# 
  1967  038E                     	;# 
  1968  0391                     	;# 
  1969  0392                     	;# 
  1970  0393                     	;# 
  1971  0394                     	;# 
  1972  0395                     	;# 
  1973  0396                     	;# 
  1974  0397                     	;# 
  1975  0398                     	;# 
  1976  0399                     	;# 
  1977  0415                     	;# 
  1978  0416                     	;# 
  1979  0417                     	;# 
  1980  041C                     	;# 
  1981  041D                     	;# 
  1982  041E                     	;# 
  1983  0511                     	;# 
  1984  0515                     	;# 
  1985  0617                     	;# 
  1986  0618                     	;# 
  1987  0619                     	;# 
  1988  0619                     	;# 
  1989  061A                     	;# 
  1990  061B                     	;# 
  1991  061C                     	;# 
  1992  061C                     	;# 
  1993  0691                     	;# 
  1994  0692                     	;# 
  1995  0693                     	;# 
  1996  0694                     	;# 
  1997  0695                     	;# 
  1998  0696                     	;# 
  1999  0697                     	;# 
  2000  0698                     	;# 
  2001  0699                     	;# 
  2002  069A                     	;# 
  2003  069B                     	;# 
  2004  069C                     	;# 
  2005  069D                     	;# 
  2006  069E                     	;# 
  2007  069F                     	;# 
  2008  0E0F                     	;# 
  2009  0E10                     	;# 
  2010  0E11                     	;# 
  2011  0E12                     	;# 
  2012  0E13                     	;# 
  2013  0E14                     	;# 
  2014  0E15                     	;# 
  2015  0E17                     	;# 
  2016  0E20                     	;# 
  2017  0E21                     	;# 
  2018  0E22                     	;# 
  2019  0E24                     	;# 
  2020  0E25                     	;# 
  2021  0E28                     	;# 
  2022  0E29                     	;# 
  2023  0E2A                     	;# 
  2024  0E2B                     	;# 
  2025  0E90                     	;# 
  2026  0E91                     	;# 
  2027  0E92                     	;# 
  2028  0E94                     	;# 
  2029  0E95                     	;# 
  2030  0E9C                     	;# 
  2031  0E9D                     	;# 
  2032  0E9E                     	;# 
  2033  0E9F                     	;# 
  2034  0EA0                     	;# 
  2035  0EA1                     	;# 
  2036  0EA2                     	;# 
  2037  0EA3                     	;# 
  2038  0EA4                     	;# 
  2039  0EA5                     	;# 
  2040  0EA6                     	;# 
  2041  0EA7                     	;# 
  2042  0F0F                     	;# 
  2043  0F10                     	;# 
  2044  0F11                     	;# 
  2045  0F12                     	;# 
  2046  0F13                     	;# 
  2047  0F14                     	;# 
  2048  0F15                     	;# 
  2049  0F16                     	;# 
  2050  0F17                     	;# 
  2051  0F18                     	;# 
  2052  0F19                     	;# 
  2053  0F1A                     	;# 
  2054  0F1B                     	;# 
  2055  0F1C                     	;# 
  2056  0F1D                     	;# 
  2057  0F1E                     	;# 
  2058  0F1F                     	;# 
  2059  0F20                     	;# 
  2060  0F21                     	;# 
  2061  0F22                     	;# 
  2062  0F23                     	;# 
  2063  0F24                     	;# 
  2064  0F25                     	;# 
  2065  0F26                     	;# 
  2066  0F27                     	;# 
  2067  0F28                     	;# 
  2068  0F29                     	;# 
  2069  0F2A                     	;# 
  2070  0F2B                     	;# 
  2071  0F2C                     	;# 
  2072  0F2D                     	;# 
  2073  0FE4                     	;# 
  2074  0FE5                     	;# 
  2075  0FE6                     	;# 
  2076  0FE7                     	;# 
  2077  0FE8                     	;# 
  2078  0FE9                     	;# 
  2079  0FEA                     	;# 
  2080  0FEB                     	;# 
  2081  0FED                     	;# 
  2082  0FEE                     	;# 
  2083  0FEF                     	;# 
  2084  0000                     	;# 
  2085  0001                     	;# 
  2086  0002                     	;# 
  2087  0003                     	;# 
  2088  0004                     	;# 
  2089  0005                     	;# 
  2090  0006                     	;# 
  2091  0007                     	;# 
  2092  0008                     	;# 
  2093  0009                     	;# 
  2094  000A                     	;# 
  2095  000B                     	;# 
  2096  000C                     	;# 
  2097  000D                     	;# 
  2098  000E                     	;# 
  2099  0011                     	;# 
  2100  0012                     	;# 
  2101  0013                     	;# 
  2102  0015                     	;# 
  2103  0016                     	;# 
  2104  0016                     	;# 
  2105  0017                     	;# 
  2106  0018                     	;# 
  2107  0019                     	;# 
  2108  001A                     	;# 
  2109  001B                     	;# 
  2110  001C                     	;# 
  2111  008C                     	;# 
  2112  008D                     	;# 
  2113  008E                     	;# 
  2114  0091                     	;# 
  2115  0092                     	;# 
  2116  0093                     	;# 
  2117  0095                     	;# 
  2118  0096                     	;# 
  2119  0097                     	;# 
  2120  0098                     	;# 
  2121  0099                     	;# 
  2122  009A                     	;# 
  2123  009B                     	;# 
  2124  009B                     	;# 
  2125  009C                     	;# 
  2126  009D                     	;# 
  2127  009E                     	;# 
  2128  009F                     	;# 
  2129  010C                     	;# 
  2130  010D                     	;# 
  2131  010E                     	;# 
  2132  0111                     	;# 
  2133  0112                     	;# 
  2134  0113                     	;# 
  2135  0114                     	;# 
  2136  0115                     	;# 
  2137  0116                     	;# 
  2138  0117                     	;# 
  2139  0118                     	;# 
  2140  0119                     	;# 
  2141  011C                     	;# 
  2142  018C                     	;# 
  2143  018D                     	;# 
  2144  018E                     	;# 
  2145  0191                     	;# 
  2146  0191                     	;# 
  2147  0192                     	;# 
  2148  0193                     	;# 
  2149  0193                     	;# 
  2150  0194                     	;# 
  2151  0195                     	;# 
  2152  0196                     	;# 
  2153  0199                     	;# 
  2154  0199                     	;# 
  2155  0199                     	;# 
  2156  019A                     	;# 
  2157  019A                     	;# 
  2158  019A                     	;# 
  2159  019B                     	;# 
  2160  019B                     	;# 
  2161  019B                     	;# 
  2162  019B                     	;# 
  2163  019B                     	;# 
  2164  019C                     	;# 
  2165  019C                     	;# 
  2166  019C                     	;# 
  2167  019D                     	;# 
  2168  019D                     	;# 
  2169  019D                     	;# 
  2170  019E                     	;# 
  2171  019E                     	;# 
  2172  019E                     	;# 
  2173  019F                     	;# 
  2174  019F                     	;# 
  2175  019F                     	;# 
  2176  019F                     	;# 
  2177  019F                     	;# 
  2178  020C                     	;# 
  2179  020D                     	;# 
  2180  020E                     	;# 
  2181  0211                     	;# 
  2182  0211                     	;# 
  2183  0212                     	;# 
  2184  0212                     	;# 
  2185  0213                     	;# 
  2186  0213                     	;# 
  2187  0214                     	;# 
  2188  0214                     	;# 
  2189  0215                     	;# 
  2190  0215                     	;# 
  2191  0215                     	;# 
  2192  0215                     	;# 
  2193  0216                     	;# 
  2194  0216                     	;# 
  2195  0217                     	;# 
  2196  0217                     	;# 
  2197  028C                     	;# 
  2198  028D                     	;# 
  2199  028E                     	;# 
  2200  0291                     	;# 
  2201  0291                     	;# 
  2202  0292                     	;# 
  2203  0293                     	;# 
  2204  0293                     	;# 
  2205  0298                     	;# 
  2206  0298                     	;# 
  2207  0299                     	;# 
  2208  029A                     	;# 
  2209  029A                     	;# 
  2210  029E                     	;# 
  2211  030C                     	;# 
  2212  030D                     	;# 
  2213  030E                     	;# 
  2214  038C                     	;# 
  2215  038D                     	;# 
  2216  038E                     	;# 
  2217  0391                     	;# 
  2218  0392                     	;# 
  2219  0393                     	;# 
  2220  0394                     	;# 
  2221  0395                     	;# 
  2222  0396                     	;# 
  2223  0397                     	;# 
  2224  0398                     	;# 
  2225  0399                     	;# 
  2226  0415                     	;# 
  2227  0416                     	;# 
  2228  0417                     	;# 
  2229  041C                     	;# 
  2230  041D                     	;# 
  2231  041E                     	;# 
  2232  0511                     	;# 
  2233  0515                     	;# 
  2234  0617                     	;# 
  2235  0618                     	;# 
  2236  0619                     	;# 
  2237  0619                     	;# 
  2238  061A                     	;# 
  2239  061B                     	;# 
  2240  061C                     	;# 
  2241  061C                     	;# 
  2242  0691                     	;# 
  2243  0692                     	;# 
  2244  0693                     	;# 
  2245  0694                     	;# 
  2246  0695                     	;# 
  2247  0696                     	;# 
  2248  0697                     	;# 
  2249  0698                     	;# 
  2250  0699                     	;# 
  2251  069A                     	;# 
  2252  069B                     	;# 
  2253  069C                     	;# 
  2254  069D                     	;# 
  2255  069E                     	;# 
  2256  069F                     	;# 
  2257  0E0F                     	;# 
  2258  0E10                     	;# 
  2259  0E11                     	;# 
  2260  0E12                     	;# 
  2261  0E13                     	;# 
  2262  0E14                     	;# 
  2263  0E15                     	;# 
  2264  0E17                     	;# 
  2265  0E20                     	;# 
  2266  0E21                     	;# 
  2267  0E22                     	;# 
  2268  0E24                     	;# 
  2269  0E25                     	;# 
  2270  0E28                     	;# 
  2271  0E29                     	;# 
  2272  0E2A                     	;# 
  2273  0E2B                     	;# 
  2274  0E90                     	;# 
  2275  0E91                     	;# 
  2276  0E92                     	;# 
  2277  0E94                     	;# 
  2278  0E95                     	;# 
  2279  0E9C                     	;# 
  2280  0E9D                     	;# 
  2281  0E9E                     	;# 
  2282  0E9F                     	;# 
  2283  0EA0                     	;# 
  2284  0EA1                     	;# 
  2285  0EA2                     	;# 
  2286  0EA3                     	;# 
  2287  0EA4                     	;# 
  2288  0EA5                     	;# 
  2289  0EA6                     	;# 
  2290  0EA7                     	;# 
  2291  0F0F                     	;# 
  2292  0F10                     	;# 
  2293  0F11                     	;# 
  2294  0F12                     	;# 
  2295  0F13                     	;# 
  2296  0F14                     	;# 
  2297  0F15                     	;# 
  2298  0F16                     	;# 
  2299  0F17                     	;# 
  2300  0F18                     	;# 
  2301  0F19                     	;# 
  2302  0F1A                     	;# 
  2303  0F1B                     	;# 
  2304  0F1C                     	;# 
  2305  0F1D                     	;# 
  2306  0F1E                     	;# 
  2307  0F1F                     	;# 
  2308  0F20                     	;# 
  2309  0F21                     	;# 
  2310  0F22                     	;# 
  2311  0F23                     	;# 
  2312  0F24                     	;# 
  2313  0F25                     	;# 
  2314  0F26                     	;# 
  2315  0F27                     	;# 
  2316  0F28                     	;# 
  2317  0F29                     	;# 
  2318  0F2A                     	;# 
  2319  0F2B                     	;# 
  2320  0F2C                     	;# 
  2321  0F2D                     	;# 
  2322  0FE4                     	;# 
  2323  0FE5                     	;# 
  2324  0FE6                     	;# 
  2325  0FE7                     	;# 
  2326  0FE8                     	;# 
  2327  0FE9                     	;# 
  2328  0FEA                     	;# 
  2329  0FEB                     	;# 
  2330  0FED                     	;# 
  2331  0FEE                     	;# 
  2332  0FEF                     	;# 
  2333  0000                     	;# 
  2334  0001                     	;# 
  2335  0002                     	;# 
  2336  0003                     	;# 
  2337  0004                     	;# 
  2338  0005                     	;# 
  2339  0006                     	;# 
  2340  0007                     	;# 
  2341  0008                     	;# 
  2342  0009                     	;# 
  2343  000A                     	;# 
  2344  000B                     	;# 
  2345  000C                     	;# 
  2346  000D                     	;# 
  2347  000E                     	;# 
  2348  0011                     	;# 
  2349  0012                     	;# 
  2350  0013                     	;# 
  2351  0015                     	;# 
  2352  0016                     	;# 
  2353  0016                     	;# 
  2354  0017                     	;# 
  2355  0018                     	;# 
  2356  0019                     	;# 
  2357  001A                     	;# 
  2358  001B                     	;# 
  2359  001C                     	;# 
  2360  008C                     	;# 
  2361  008D                     	;# 
  2362  008E                     	;# 
  2363  0091                     	;# 
  2364  0092                     	;# 
  2365  0093                     	;# 
  2366  0095                     	;# 
  2367  0096                     	;# 
  2368  0097                     	;# 
  2369  0098                     	;# 
  2370  0099                     	;# 
  2371  009A                     	;# 
  2372  009B                     	;# 
  2373  009B                     	;# 
  2374  009C                     	;# 
  2375  009D                     	;# 
  2376  009E                     	;# 
  2377  009F                     	;# 
  2378  010C                     	;# 
  2379  010D                     	;# 
  2380  010E                     	;# 
  2381  0111                     	;# 
  2382  0112                     	;# 
  2383  0113                     	;# 
  2384  0114                     	;# 
  2385  0115                     	;# 
  2386  0116                     	;# 
  2387  0117                     	;# 
  2388  0118                     	;# 
  2389  0119                     	;# 
  2390  011C                     	;# 
  2391  018C                     	;# 
  2392  018D                     	;# 
  2393  018E                     	;# 
  2394  0191                     	;# 
  2395  0191                     	;# 
  2396  0192                     	;# 
  2397  0193                     	;# 
  2398  0193                     	;# 
  2399  0194                     	;# 
  2400  0195                     	;# 
  2401  0196                     	;# 
  2402  0199                     	;# 
  2403  0199                     	;# 
  2404  0199                     	;# 
  2405  019A                     	;# 
  2406  019A                     	;# 
  2407  019A                     	;# 
  2408  019B                     	;# 
  2409  019B                     	;# 
  2410  019B                     	;# 
  2411  019B                     	;# 
  2412  019B                     	;# 
  2413  019C                     	;# 
  2414  019C                     	;# 
  2415  019C                     	;# 
  2416  019D                     	;# 
  2417  019D                     	;# 
  2418  019D                     	;# 
  2419  019E                     	;# 
  2420  019E                     	;# 
  2421  019E                     	;# 
  2422  019F                     	;# 
  2423  019F                     	;# 
  2424  019F                     	;# 
  2425  019F                     	;# 
  2426  019F                     	;# 
  2427  020C                     	;# 
  2428  020D                     	;# 
  2429  020E                     	;# 
  2430  0211                     	;# 
  2431  0211                     	;# 
  2432  0212                     	;# 
  2433  0212                     	;# 
  2434  0213                     	;# 
  2435  0213                     	;# 
  2436  0214                     	;# 
  2437  0214                     	;# 
  2438  0215                     	;# 
  2439  0215                     	;# 
  2440  0215                     	;# 
  2441  0215                     	;# 
  2442  0216                     	;# 
  2443  0216                     	;# 
  2444  0217                     	;# 
  2445  0217                     	;# 
  2446  028C                     	;# 
  2447  028D                     	;# 
  2448  028E                     	;# 
  2449  0291                     	;# 
  2450  0291                     	;# 
  2451  0292                     	;# 
  2452  0293                     	;# 
  2453  0293                     	;# 
  2454  0298                     	;# 
  2455  0298                     	;# 
  2456  0299                     	;# 
  2457  029A                     	;# 
  2458  029A                     	;# 
  2459  029E                     	;# 
  2460  030C                     	;# 
  2461  030D                     	;# 
  2462  030E                     	;# 
  2463  038C                     	;# 
  2464  038D                     	;# 
  2465  038E                     	;# 
  2466  0391                     	;# 
  2467  0392                     	;# 
  2468  0393                     	;# 
  2469  0394                     	;# 
  2470  0395                     	;# 
  2471  0396                     	;# 
  2472  0397                     	;# 
  2473  0398                     	;# 
  2474  0399                     	;# 
  2475  0415                     	;# 
  2476  0416                     	;# 
  2477  0417                     	;# 
  2478  041C                     	;# 
  2479  041D                     	;# 
  2480  041E                     	;# 
  2481  0511                     	;# 
  2482  0515                     	;# 
  2483  0617                     	;# 
  2484  0618                     	;# 
  2485  0619                     	;# 
  2486  0619                     	;# 
  2487  061A                     	;# 
  2488  061B                     	;# 
  2489  061C                     	;# 
  2490  061C                     	;# 
  2491  0691                     	;# 
  2492  0692                     	;# 
  2493  0693                     	;# 
  2494  0694                     	;# 
  2495  0695                     	;# 
  2496  0696                     	;# 
  2497  0697                     	;# 
  2498  0698                     	;# 
  2499  0699                     	;# 
  2500  069A                     	;# 
  2501  069B                     	;# 
  2502  069C                     	;# 
  2503  069D                     	;# 
  2504  069E                     	;# 
  2505  069F                     	;# 
  2506  0E0F                     	;# 
  2507  0E10                     	;# 
  2508  0E11                     	;# 
  2509  0E12                     	;# 
  2510  0E13                     	;# 
  2511  0E14                     	;# 
  2512  0E15                     	;# 
  2513  0E17                     	;# 
  2514  0E20                     	;# 
  2515  0E21                     	;# 
  2516  0E22                     	;# 
  2517  0E24                     	;# 
  2518  0E25                     	;# 
  2519  0E28                     	;# 
  2520  0E29                     	;# 
  2521  0E2A                     	;# 
  2522  0E2B                     	;# 
  2523  0E90                     	;# 
  2524  0E91                     	;# 
  2525  0E92                     	;# 
  2526  0E94                     	;# 
  2527  0E95                     	;# 
  2528  0E9C                     	;# 
  2529  0E9D                     	;# 
  2530  0E9E                     	;# 
  2531  0E9F                     	;# 
  2532  0EA0                     	;# 
  2533  0EA1                     	;# 
  2534  0EA2                     	;# 
  2535  0EA3                     	;# 
  2536  0EA4                     	;# 
  2537  0EA5                     	;# 
  2538  0EA6                     	;# 
  2539  0EA7                     	;# 
  2540  0F0F                     	;# 
  2541  0F10                     	;# 
  2542  0F11                     	;# 
  2543  0F12                     	;# 
  2544  0F13                     	;# 
  2545  0F14                     	;# 
  2546  0F15                     	;# 
  2547  0F16                     	;# 
  2548  0F17                     	;# 
  2549  0F18                     	;# 
  2550  0F19                     	;# 
  2551  0F1A                     	;# 
  2552  0F1B                     	;# 
  2553  0F1C                     	;# 
  2554  0F1D                     	;# 
  2555  0F1E                     	;# 
  2556  0F1F                     	;# 
  2557  0F20                     	;# 
  2558  0F21                     	;# 
  2559  0F22                     	;# 
  2560  0F23                     	;# 
  2561  0F24                     	;# 
  2562  0F25                     	;# 
  2563  0F26                     	;# 
  2564  0F27                     	;# 
  2565  0F28                     	;# 
  2566  0F29                     	;# 
  2567  0F2A                     	;# 
  2568  0F2B                     	;# 
  2569  0F2C                     	;# 
  2570  0F2D                     	;# 
  2571  0FE4                     	;# 
  2572  0FE5                     	;# 
  2573  0FE6                     	;# 
  2574  0FE7                     	;# 
  2575  0FE8                     	;# 
  2576  0FE9                     	;# 
  2577  0FEA                     	;# 
  2578  0FEB                     	;# 
  2579  0FED                     	;# 
  2580  0FEE                     	;# 
  2581  0FEF                     	;# 
  2582  0000                     	;# 
  2583  0001                     	;# 
  2584  0002                     	;# 
  2585  0003                     	;# 
  2586  0004                     	;# 
  2587  0005                     	;# 
  2588  0006                     	;# 
  2589  0007                     	;# 
  2590  0008                     	;# 
  2591  0009                     	;# 
  2592  000A                     	;# 
  2593  000B                     	;# 
  2594  000C                     	;# 
  2595  000D                     	;# 
  2596  000E                     	;# 
  2597  0011                     	;# 
  2598  0012                     	;# 
  2599  0013                     	;# 
  2600  0015                     	;# 
  2601  0016                     	;# 
  2602  0016                     	;# 
  2603  0017                     	;# 
  2604  0018                     	;# 
  2605  0019                     	;# 
  2606  001A                     	;# 
  2607  001B                     	;# 
  2608  001C                     	;# 
  2609  008C                     	;# 
  2610  008D                     	;# 
  2611  008E                     	;# 
  2612  0091                     	;# 
  2613  0092                     	;# 
  2614  0093                     	;# 
  2615  0095                     	;# 
  2616  0096                     	;# 
  2617  0097                     	;# 
  2618  0098                     	;# 
  2619  0099                     	;# 
  2620  009A                     	;# 
  2621  009B                     	;# 
  2622  009B                     	;# 
  2623  009C                     	;# 
  2624  009D                     	;# 
  2625  009E                     	;# 
  2626  009F                     	;# 
  2627  010C                     	;# 
  2628  010D                     	;# 
  2629  010E                     	;# 
  2630  0111                     	;# 
  2631  0112                     	;# 
  2632  0113                     	;# 
  2633  0114                     	;# 
  2634  0115                     	;# 
  2635  0116                     	;# 
  2636  0117                     	;# 
  2637  0118                     	;# 
  2638  0119                     	;# 
  2639  011C                     	;# 
  2640  018C                     	;# 
  2641  018D                     	;# 
  2642  018E                     	;# 
  2643  0191                     	;# 
  2644  0191                     	;# 
  2645  0192                     	;# 
  2646  0193                     	;# 
  2647  0193                     	;# 
  2648  0194                     	;# 
  2649  0195                     	;# 
  2650  0196                     	;# 
  2651  0199                     	;# 
  2652  0199                     	;# 
  2653  0199                     	;# 
  2654  019A                     	;# 
  2655  019A                     	;# 
  2656  019A                     	;# 
  2657  019B                     	;# 
  2658  019B                     	;# 
  2659  019B                     	;# 
  2660  019B                     	;# 
  2661  019B                     	;# 
  2662  019C                     	;# 
  2663  019C                     	;# 
  2664  019C                     	;# 
  2665  019D                     	;# 
  2666  019D                     	;# 
  2667  019D                     	;# 
  2668  019E                     	;# 
  2669  019E                     	;# 
  2670  019E                     	;# 
  2671  019F                     	;# 
  2672  019F                     	;# 
  2673  019F                     	;# 
  2674  019F                     	;# 
  2675  019F                     	;# 
  2676  020C                     	;# 
  2677  020D                     	;# 
  2678  020E                     	;# 
  2679  0211                     	;# 
  2680  0211                     	;# 
  2681  0212                     	;# 
  2682  0212                     	;# 
  2683  0213                     	;# 
  2684  0213                     	;# 
  2685  0214                     	;# 
  2686  0214                     	;# 
  2687  0215                     	;# 
  2688  0215                     	;# 
  2689  0215                     	;# 
  2690  0215                     	;# 
  2691  0216                     	;# 
  2692  0216                     	;# 
  2693  0217                     	;# 
  2694  0217                     	;# 
  2695  028C                     	;# 
  2696  028D                     	;# 
  2697  028E                     	;# 
  2698  0291                     	;# 
  2699  0291                     	;# 
  2700  0292                     	;# 
  2701  0293                     	;# 
  2702  0293                     	;# 
  2703  0298                     	;# 
  2704  0298                     	;# 
  2705  0299                     	;# 
  2706  029A                     	;# 
  2707  029A                     	;# 
  2708  029E                     	;# 
  2709  030C                     	;# 
  2710  030D                     	;# 
  2711  030E                     	;# 
  2712  038C                     	;# 
  2713  038D                     	;# 
  2714  038E                     	;# 
  2715  0391                     	;# 
  2716  0392                     	;# 
  2717  0393                     	;# 
  2718  0394                     	;# 
  2719  0395                     	;# 
  2720  0396                     	;# 
  2721  0397                     	;# 
  2722  0398                     	;# 
  2723  0399                     	;# 
  2724  0415                     	;# 
  2725  0416                     	;# 
  2726  0417                     	;# 
  2727  041C                     	;# 
  2728  041D                     	;# 
  2729  041E                     	;# 
  2730  0511                     	;# 
  2731  0515                     	;# 
  2732  0617                     	;# 
  2733  0618                     	;# 
  2734  0619                     	;# 
  2735  0619                     	;# 
  2736  061A                     	;# 
  2737  061B                     	;# 
  2738  061C                     	;# 
  2739  061C                     	;# 
  2740  0691                     	;# 
  2741  0692                     	;# 
  2742  0693                     	;# 
  2743  0694                     	;# 
  2744  0695                     	;# 
  2745  0696                     	;# 
  2746  0697                     	;# 
  2747  0698                     	;# 
  2748  0699                     	;# 
  2749  069A                     	;# 
  2750  069B                     	;# 
  2751  069C                     	;# 
  2752  069D                     	;# 
  2753  069E                     	;# 
  2754  069F                     	;# 
  2755  0E0F                     	;# 
  2756  0E10                     	;# 
  2757  0E11                     	;# 
  2758  0E12                     	;# 
  2759  0E13                     	;# 
  2760  0E14                     	;# 
  2761  0E15                     	;# 
  2762  0E17                     	;# 
  2763  0E20                     	;# 
  2764  0E21                     	;# 
  2765  0E22                     	;# 
  2766  0E24                     	;# 
  2767  0E25                     	;# 
  2768  0E28                     	;# 
  2769  0E29                     	;# 
  2770  0E2A                     	;# 
  2771  0E2B                     	;# 
  2772  0E90                     	;# 
  2773  0E91                     	;# 
  2774  0E92                     	;# 
  2775  0E94                     	;# 
  2776  0E95                     	;# 
  2777  0E9C                     	;# 
  2778  0E9D                     	;# 
  2779  0E9E                     	;# 
  2780  0E9F                     	;# 
  2781  0EA0                     	;# 
  2782  0EA1                     	;# 
  2783  0EA2                     	;# 
  2784  0EA3                     	;# 
  2785  0EA4                     	;# 
  2786  0EA5                     	;# 
  2787  0EA6                     	;# 
  2788  0EA7                     	;# 
  2789  0F0F                     	;# 
  2790  0F10                     	;# 
  2791  0F11                     	;# 
  2792  0F12                     	;# 
  2793  0F13                     	;# 
  2794  0F14                     	;# 
  2795  0F15                     	;# 
  2796  0F16                     	;# 
  2797  0F17                     	;# 
  2798  0F18                     	;# 
  2799  0F19                     	;# 
  2800  0F1A                     	;# 
  2801  0F1B                     	;# 
  2802  0F1C                     	;# 
  2803  0F1D                     	;# 
  2804  0F1E                     	;# 
  2805  0F1F                     	;# 
  2806  0F20                     	;# 
  2807  0F21                     	;# 
  2808  0F22                     	;# 
  2809  0F23                     	;# 
  2810  0F24                     	;# 
  2811  0F25                     	;# 
  2812  0F26                     	;# 
  2813  0F27                     	;# 
  2814  0F28                     	;# 
  2815  0F29                     	;# 
  2816  0F2A                     	;# 
  2817  0F2B                     	;# 
  2818  0F2C                     	;# 
  2819  0F2D                     	;# 
  2820  0FE4                     	;# 
  2821  0FE5                     	;# 
  2822  0FE6                     	;# 
  2823  0FE7                     	;# 
  2824  0FE8                     	;# 
  2825  0FE9                     	;# 
  2826  0FEA                     	;# 
  2827  0FEB                     	;# 
  2828  0FED                     	;# 
  2829  0FEE                     	;# 
  2830  0FEF                     	;# 
  2831                           
  2832 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2833  0000                     
  2834 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2835  0000                     
  2836 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2837  0000                     
  2838                           	psect	stringtext1
  2839  04C5                     __pstringtext1:	
  2840  04C5                     _dpowers:	
  2841  04C5  3401               	retlw	1
  2842  04C6  3400               	retlw	0
  2843  04C7  3400               	retlw	0
  2844  04C8  3400               	retlw	0
  2845  04C9  340A               	retlw	10
  2846  04CA  3400               	retlw	0
  2847  04CB  3400               	retlw	0
  2848  04CC  3400               	retlw	0
  2849  04CD  3464               	retlw	100
  2850  04CE  3400               	retlw	0
  2851  04CF  3400               	retlw	0
  2852  04D0  3400               	retlw	0
  2853  04D1  34E8               	retlw	232
  2854  04D2  3403               	retlw	3
  2855  04D3  3400               	retlw	0
  2856  04D4  3400               	retlw	0
  2857  04D5  3410               	retlw	16
  2858  04D6  3427               	retlw	39
  2859  04D7  3400               	retlw	0
  2860  04D8  3400               	retlw	0
  2861  04D9  34A0               	retlw	160
  2862  04DA  3486               	retlw	134
  2863  04DB  3401               	retlw	1
  2864  04DC  3400               	retlw	0
  2865  04DD  3440               	retlw	64
  2866  04DE  3442               	retlw	66
  2867  04DF  340F               	retlw	15
  2868  04E0  3400               	retlw	0
  2869  04E1  3480               	retlw	128
  2870  04E2  3496               	retlw	150
  2871  04E3  3498               	retlw	152
  2872  04E4  3400               	retlw	0
  2873  04E5  3400               	retlw	0
  2874  04E6  34E1               	retlw	225
  2875  04E7  34F5               	retlw	245
  2876  04E8  3405               	retlw	5
  2877  04E9  3400               	retlw	0
  2878  04EA  34CA               	retlw	202
  2879  04EB  349A               	retlw	154
  2880  04EC  343B               	retlw	59
  2881  04ED                     __end_of_dpowers:	
  2882                           
  2883                           	psect	stringtext2
  2884  050E                     __pstringtext2:	
  2885  050E                     _hexpowers:	
  2886  050E  3401               	retlw	1
  2887  050F  3400               	retlw	0
  2888  0510  3400               	retlw	0
  2889  0511  3400               	retlw	0
  2890  0512  3410               	retlw	16
  2891  0513  3400               	retlw	0
  2892  0514  3400               	retlw	0
  2893  0515  3400               	retlw	0
  2894  0516  3400               	retlw	0
  2895  0517  3401               	retlw	1
  2896  0518  3400               	retlw	0
  2897  0519  3400               	retlw	0
  2898  051A  3400               	retlw	0
  2899  051B  3410               	retlw	16
  2900  051C  3400               	retlw	0
  2901  051D  3400               	retlw	0
  2902  051E  3400               	retlw	0
  2903  051F  3400               	retlw	0
  2904  0520  3401               	retlw	1
  2905  0521  3400               	retlw	0
  2906  0522  3400               	retlw	0
  2907  0523  3400               	retlw	0
  2908  0524  3410               	retlw	16
  2909  0525  3400               	retlw	0
  2910  0526  3400               	retlw	0
  2911  0527  3400               	retlw	0
  2912  0528  3400               	retlw	0
  2913  0529  3401               	retlw	1
  2914  052A  3400               	retlw	0
  2915  052B  3400               	retlw	0
  2916  052C  3400               	retlw	0
  2917  052D  3410               	retlw	16
  2918  052E                     __end_of_hexpowers:	
  2919                           
  2920                           	psect	nvBANK0
  2921  0047                     __pnvBANK0:	
  2922  0047                     _TMR0_InterruptHandler:	
  2923  0047                     	ds	2
  2924  0049                     _INT_InterruptHandler:	
  2925  0049                     	ds	2
  2926  004B                     _EUSART_ErrorHandler:	
  2927  004B                     	ds	2
  2928  004D                     _EUSART_OverrunErrorHandler:	
  2929  004D                     	ds	2
  2930  004F                     _EUSART_FramingErrorHandler:	
  2931  004F                     	ds	2
  2932  0051                     _timer0ReloadVal:	
  2933  0051                     	ds	1
  2934  0015                     _TMR0	set	21
  2935  001C                     _T2CONbits	set	28
  2936  001C                     _T2CON	set	28
  2937  001A                     _TMR2	set	26
  2938  001B                     _PR2	set	27
  2939  0011                     _PIR1bits	set	17
  2940  000B                     _INTCONbits	set	11
  2941  009D                     _ADCON0bits	set	157
  2942  009E                     _ADCON1	set	158
  2943  009D                     _ADCON0	set	157
  2944  0095                     _OPTION_REG	set	149
  2945  0095                     _OPTION_REGbits	set	149
  2946  008E                     _TRISC	set	142
  2947  008D                     _TRISB	set	141
  2948  008C                     _TRISA	set	140
  2949  0097                     _WDTCON	set	151
  2950  0098                     _OSCTUNE	set	152
  2951  009A                     _OSCSTAT	set	154
  2952  0099                     _OSCCON	set	153
  2953  009B                     _ADRES	set	155
  2954  010E                     _LATCbits	set	270
  2955  010C                     _LATAbits	set	268
  2956  0117                     _FVRCONbits	set	279
  2957  0117                     _FVRCON	set	279
  2958  010E                     _LATC	set	270
  2959  010D                     _LATB	set	269
  2960  010C                     _LATA	set	268
  2961  0116                     _BORCON	set	278
  2962  0119                     _DAC1CON1	set	281
  2963  0118                     _DAC1CON0	set	280
  2964  019A                     _TXREG	set	410
  2965  019A                     _TX1REG	set	410
  2966  0199                     _RC1REG	set	409
  2967  019D                     _RC1STAbits	set	413
  2968  019E                     _TX1STAbits	set	414
  2969  019C                     _SP1BRGH	set	412
  2970  019B                     _SP1BRGL	set	411
  2971  019E                     _TX1STA	set	414
  2972  019D                     _RC1STA	set	413
  2973  019F                     _BAUD1CON	set	415
  2974  018C                     _ANSELA	set	396
  2975  018D                     _ANSELB	set	397
  2976  018E                     _ANSELC	set	398
  2977  020E                     _WPUC	set	526
  2978  020C                     _WPUA	set	524
  2979  020D                     _WPUB	set	525
  2980  0291                     _CCPR1L	set	657
  2981  0293                     _CCP1CONbits	set	659
  2982  029E                     _CCPTMRSbits	set	670
  2983  028E                     _ODCONC	set	654
  2984  028D                     _ODCONB	set	653
  2985  028C                     _ODCONA	set	652
  2986  030E                     _SLRCONC	set	782
  2987  030D                     _SLRCONB	set	781
  2988  030C                     _SLRCONA	set	780
  2989  038E                     _INLVLC	set	910
  2990  038D                     _INLVLB	set	909
  2991  038C                     _INLVLA	set	908
  2992  0515                     _OPA2CON	set	1301
  2993  0511                     _OPA1CON	set	1297
  2994  061C                     _PWM4CONbits	set	1564
  2995  061A                     _PWM4DCLbits	set	1562
  2996  061B                     _PWM4DCH	set	1563
  2997  0619                     _PWM3CONbits	set	1561
  2998  0617                     _PWM3DCLbits	set	1559
  2999  0618                     _PWM3DCH	set	1560
  3000  0E24                     _RXPPS	set	3620
  3001  0E10                     _INTPPS	set	3600
  3002  0EA5                     _RC5PPS	set	3749
  3003  0E95                     _RA5PPS	set	3733
  3004  0EA4                     _RC4PPS	set	3748
  3005  0E9F                     _RB7PPS	set	3743
  3006                           
  3007                           	psect	stringtext3
  3008  054C                     __pstringtext3:	
  3009  054C                     STR_4:	
  3010  054C  3463               	retlw	99	;'c'
  3011  054D  346F               	retlw	111	;'o'
  3012  054E  346D               	retlw	109	;'m'
  3013  054F  346D               	retlw	109	;'m'
  3014  0550  3461               	retlw	97	;'a'
  3015  0551  346E               	retlw	110	;'n'
  3016  0552  3464               	retlw	100	;'d'
  3017  0553  343A               	retlw	58	;':'
  3018  0554  3420               	retlw	32	;' '
  3019  0555  3420               	retlw	32	;' '
  3020  0556  3420               	retlw	32	;' '
  3021  0557  3420               	retlw	32	;' '
  3022  0558  3420               	retlw	32	;' '
  3023  0559  3420               	retlw	32	;' '
  3024  055A  3420               	retlw	32	;' '
  3025  055B  3420               	retlw	32	;' '
  3026  055C  3420               	retlw	32	;' '
  3027  055D  3420               	retlw	32	;' '
  3028  055E  3430               	retlw	48	;'0'
  3029  055F  3478               	retlw	120	;'x'
  3030  0560  3425               	retlw	37	;'%'
  3031  0561  3430               	retlw	48	;'0'
  3032  0562  3432               	retlw	50	;'2'
  3033  0563  3478               	retlw	120	;'x'
  3034  0564  340D               	retlw	13
  3035  0565  340A               	retlw	10
  3036  0566  3400               	retlw	0
  3037                           
  3038                           	psect	stringtext4
  3039  0567                     __pstringtext4:	
  3040  0567                     STR_6:	
  3041  0567  3461               	retlw	97	;'a'
  3042  0568  3464               	retlw	100	;'d'
  3043  0569  3464               	retlw	100	;'d'
  3044  056A  3472               	retlw	114	;'r'
  3045  056B  3465               	retlw	101	;'e'
  3046  056C  3473               	retlw	115	;'s'
  3047  056D  3473               	retlw	115	;'s'
  3048  056E  343A               	retlw	58	;':'
  3049  056F  3420               	retlw	32	;' '
  3050  0570  3420               	retlw	32	;' '
  3051  0571  3420               	retlw	32	;' '
  3052  0572  3420               	retlw	32	;' '
  3053  0573  3420               	retlw	32	;' '
  3054  0574  3420               	retlw	32	;' '
  3055  0575  3420               	retlw	32	;' '
  3056  0576  3420               	retlw	32	;' '
  3057  0577  3420               	retlw	32	;' '
  3058  0578  3420               	retlw	32	;' '
  3059  0579  3430               	retlw	48	;'0'
  3060  057A  3478               	retlw	120	;'x'
  3061  057B  3425               	retlw	37	;'%'
  3062  057C  3430               	retlw	48	;'0'
  3063  057D  3432               	retlw	50	;'2'
  3064  057E  3478               	retlw	120	;'x'
  3065  057F  340D               	retlw	13
  3066  0580  340A               	retlw	10
  3067  0581  3400               	retlw	0
  3068                           
  3069                           	psect	stringtext5
  3070  0582                     __pstringtext5:	
  3071  0582                     STR_5:	
  3072  0582  3463               	retlw	99	;'c'
  3073  0583  346F               	retlw	111	;'o'
  3074  0584  346D               	retlw	109	;'m'
  3075  0585  346D               	retlw	109	;'m'
  3076  0586  3461               	retlw	97	;'a'
  3077  0587  346E               	retlw	110	;'n'
  3078  0588  3464               	retlw	100	;'d'
  3079  0589  345F               	retlw	95	;'_'
  3080  058A  3462               	retlw	98	;'b'
  3081  058B  343A               	retlw	58	;':'
  3082  058C  3420               	retlw	32	;' '
  3083  058D  3420               	retlw	32	;' '
  3084  058E  3420               	retlw	32	;' '
  3085  058F  3420               	retlw	32	;' '
  3086  0590  3420               	retlw	32	;' '
  3087  0591  3420               	retlw	32	;' '
  3088  0592  3420               	retlw	32	;' '
  3089  0593  3420               	retlw	32	;' '
  3090  0594  3430               	retlw	48	;'0'
  3091  0595  3478               	retlw	120	;'x'
  3092  0596  3425               	retlw	37	;'%'
  3093  0597  3430               	retlw	48	;'0'
  3094  0598  3432               	retlw	50	;'2'
  3095  0599  3478               	retlw	120	;'x'
  3096  059A  340D               	retlw	13
  3097  059B  340A               	retlw	10
  3098  059C  3400               	retlw	0
  3099                           
  3100                           	psect	stringtext6
  3101  059D                     __pstringtext6:	
  3102  059D                     STR_7:	
  3103  059D  3461               	retlw	97	;'a'
  3104  059E  3464               	retlw	100	;'d'
  3105  059F  3464               	retlw	100	;'d'
  3106  05A0  3472               	retlw	114	;'r'
  3107  05A1  3465               	retlw	101	;'e'
  3108  05A2  3473               	retlw	115	;'s'
  3109  05A3  3473               	retlw	115	;'s'
  3110  05A4  345F               	retlw	95	;'_'
  3111  05A5  3462               	retlw	98	;'b'
  3112  05A6  343A               	retlw	58	;':'
  3113  05A7  3420               	retlw	32	;' '
  3114  05A8  3420               	retlw	32	;' '
  3115  05A9  3420               	retlw	32	;' '
  3116  05AA  3420               	retlw	32	;' '
  3117  05AB  3420               	retlw	32	;' '
  3118  05AC  3420               	retlw	32	;' '
  3119  05AD  3420               	retlw	32	;' '
  3120  05AE  3420               	retlw	32	;' '
  3121  05AF  3430               	retlw	48	;'0'
  3122  05B0  3478               	retlw	120	;'x'
  3123  05B1  3425               	retlw	37	;'%'
  3124  05B2  3430               	retlw	48	;'0'
  3125  05B3  3432               	retlw	50	;'2'
  3126  05B4  3478               	retlw	120	;'x'
  3127  05B5  340D               	retlw	13
  3128  05B6  340A               	retlw	10
  3129  05B7  3400               	retlw	0
  3130                           
  3131                           	psect	stringtext7
  3132  05B8                     __pstringtext7:	
  3133  05B8                     STR_8:	
  3134  05B8  3465               	retlw	101	;'e'
  3135  05B9  3478               	retlw	120	;'x'
  3136  05BA  3474               	retlw	116	;'t'
  3137  05BB  3465               	retlw	101	;'e'
  3138  05BC  346E               	retlw	110	;'n'
  3139  05BD  3464               	retlw	100	;'d'
  3140  05BE  3465               	retlw	101	;'e'
  3141  05BF  3464               	retlw	100	;'d'
  3142  05C0  3420               	retlw	32	;' '
  3143  05C1  3461               	retlw	97	;'a'
  3144  05C2  3464               	retlw	100	;'d'
  3145  05C3  3464               	retlw	100	;'d'
  3146  05C4  3472               	retlw	114	;'r'
  3147  05C5  3465               	retlw	101	;'e'
  3148  05C6  3473               	retlw	115	;'s'
  3149  05C7  3473               	retlw	115	;'s'
  3150  05C8  343A               	retlw	58	;':'
  3151  05C9  3420               	retlw	32	;' '
  3152  05CA  3430               	retlw	48	;'0'
  3153  05CB  3478               	retlw	120	;'x'
  3154  05CC  3425               	retlw	37	;'%'
  3155  05CD  3430               	retlw	48	;'0'
  3156  05CE  3434               	retlw	52	;'4'
  3157  05CF  3478               	retlw	120	;'x'
  3158  05D0  340D               	retlw	13
  3159  05D1  340A               	retlw	10
  3160  05D2  3400               	retlw	0
  3161                           
  3162                           	psect	stringtext8
  3163  05EE                     __pstringtext8:	
  3164  05EE                     STR_3:	
  3165  05EE  340D               	retlw	13
  3166  05EF  340A               	retlw	10
  3167  05F0  3463               	retlw	99	;'c'
  3168  05F1  346F               	retlw	111	;'o'
  3169  05F2  3464               	retlw	100	;'d'
  3170  05F3  3465               	retlw	101	;'e'
  3171  05F4  343A               	retlw	58	;':'
  3172  05F5  3420               	retlw	32	;' '
  3173  05F6  3420               	retlw	32	;' '
  3174  05F7  3420               	retlw	32	;' '
  3175  05F8  3420               	retlw	32	;' '
  3176  05F9  3420               	retlw	32	;' '
  3177  05FA  3420               	retlw	32	;' '
  3178  05FB  3420               	retlw	32	;' '
  3179  05FC  3420               	retlw	32	;' '
  3180  05FD  3420               	retlw	32	;' '
  3181  05FE  3430               	retlw	48	;'0'
  3182  05FF  3478               	retlw	120	;'x'
  3183  0600  3425               	retlw	37	;'%'
  3184  0601  3430               	retlw	48	;'0'
  3185  0602  3438               	retlw	56	;'8'
  3186  0603  346C               	retlw	108	;'l'
  3187  0604  3478               	retlw	120	;'x'
  3188  0605  340D               	retlw	13
  3189  0606  340A               	retlw	10
  3190  0607  3400               	retlw	0
  3191                           
  3192                           	psect	stringtext9
  3193  061D                     __pstringtext9:	
  3194  061D                     STR_9:	
  3195  061D  3430               	retlw	48	;'0'
  3196  061E  3431               	retlw	49	;'1'
  3197  061F  3432               	retlw	50	;'2'
  3198  0620  3433               	retlw	51	;'3'
  3199  0621  3434               	retlw	52	;'4'
  3200  0622  3435               	retlw	53	;'5'
  3201  0623  3436               	retlw	54	;'6'
  3202  0624  3437               	retlw	55	;'7'
  3203  0625  3438               	retlw	56	;'8'
  3204  0626  3439               	retlw	57	;'9'
  3205  0627  3461               	retlw	97	;'a'
  3206  0628  3462               	retlw	98	;'b'
  3207  0629  3463               	retlw	99	;'c'
  3208  062A  3464               	retlw	100	;'d'
  3209  062B  3465               	retlw	101	;'e'
  3210  062C  3466               	retlw	102	;'f'
  3211  062D  3400               	retlw	0
  3212                           
  3213                           	psect	stringtext10
  3214  06B1                     __pstringtext10:	
  3215  06B1                     STR_1:	
  3216  06B1  3425               	retlw	37	;'%'
  3217  06B2  3464               	retlw	100	;'d'
  3218  06B3  340A               	retlw	10
  3219  06B4  3400               	retlw	0
  3220                           
  3221                           	psect	stringtext11
  3222  0000                     __pstringtext11:	
  3223  06B1                     
  3224                           ; #config settings
  3225  0000                     
  3226                           	psect	cinit
  3227  0016                     start_initialization:	
  3228  0016                     __initialization:	
  3229                           
  3230                           ; Clear objects allocated to BANK0
  3231  0016  3052               	movlw	low __pbssBANK0
  3232  0017  0084               	movwf	4
  3233  0018  3000               	movlw	high __pbssBANK0
  3234  0019  0085               	movwf	5
  3235  001A  300A               	movlw	10
  3236  001B  3186  2682  3180   	fcall	clear_ram0
  3237                           
  3238                           ; Clear objects allocated to BANK1
  3239  001E  30A0               	movlw	low __pbssBANK1
  3240  001F  0084               	movwf	4
  3241  0020  3000               	movlw	high __pbssBANK1
  3242  0021  0085               	movwf	5
  3243  0022  3021               	movlw	33
  3244  0023  3186  2682         	fcall	clear_ram0
  3245  0025                     end_of_initialization:	
  3246                           ;End of C runtime variable initialization code
  3247                           
  3248  0025                     __end_of__initialization:	
  3249  0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3250  0026  0020               	movlb	0
  3251  0027  3182  2A57         	ljmp	_main	;jump to C main() function
  3252                           
  3253                           	psect	bssBANK0
  3254  0052                     __pbssBANK0:	
  3255  0052                     _LED_blue:	
  3256  0052                     	ds	1
  3257  0053                     _LED_green:	
  3258  0053                     	ds	1
  3259  0054                     _LED_red:	
  3260  0054                     	ds	1
  3261  0055                     _eusartRxLastError:	
  3262  0055                     	ds	1
  3263  0056                     _ir_code:	
  3264  0056                     	ds	6
  3265                           
  3266                           	psect	bssBANK1
  3267  00A0                     __pbssBANK1:	
  3268  00A0                     _stats:	
  3269  00A0                     	ds	33
  3270                           
  3271                           	psect	clrtext
  3272  0682                     clear_ram0:	
  3273                           ;	Called with FSR0 containing the base address, and
  3274                           ;	WREG with the size to clear
  3275                           
  3276  0682  0064               	clrwdt	;clear the watchdog before getting into this loop
  3277  0683                     clrloop0:	
  3278  0683  0180               	clrf	0	;clear RAM location pointed to by FSR
  3279  0684  3101               	addfsr 0,1
  3280  0685  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3281  0686  2E83               	goto	clrloop0	;have we reached the end yet?
  3282  0687  3400               	retlw	0	;all done for this memory range, return
  3283                           
  3284                           	psect	cstackCOMMON
  3285  0070                     __pcstackCOMMON:	
  3286  0070                     ?_isdigit:	
  3287  0070                     ?_PIN_MANAGER_Initialize:	
  3288                           ; 1 bit 
  3289                           
  3290  0070                     ??_PIN_MANAGER_Initialize:	
  3291                           ; 1 bytes @ 0x0
  3292                           
  3293  0070                     ?_OSCILLATOR_Initialize:	
  3294                           ; 1 bytes @ 0x0
  3295                           
  3296  0070                     ??_OSCILLATOR_Initialize:	
  3297                           ; 1 bytes @ 0x0
  3298                           
  3299  0070                     ?_WDT_Initialize:	
  3300                           ; 1 bytes @ 0x0
  3301                           
  3302  0070                     ??_WDT_Initialize:	
  3303                           ; 1 bytes @ 0x0
  3304                           
  3305  0070                     ?_OPA1_Initialize:	
  3306                           ; 1 bytes @ 0x0
  3307                           
  3308  0070                     ??_OPA1_Initialize:	
  3309                           ; 1 bytes @ 0x0
  3310                           
  3311  0070                     ?_OPA2_Initialize:	
  3312                           ; 1 bytes @ 0x0
  3313                           
  3314  0070                     ??_OPA2_Initialize:	
  3315                           ; 1 bytes @ 0x0
  3316                           
  3317  0070                     ?_TMR2_Initialize:	
  3318                           ; 1 bytes @ 0x0
  3319                           
  3320  0070                     ??_TMR2_Initialize:	
  3321                           ; 1 bytes @ 0x0
  3322                           
  3323  0070                     ?_EXT_INT_Initialize:	
  3324                           ; 1 bytes @ 0x0
  3325                           
  3326  0070                     ?_TMR0_Initialize:	
  3327                           ; 1 bytes @ 0x0
  3328                           
  3329  0070                     ?_EUSART_Initialize:	
  3330                           ; 1 bytes @ 0x0
  3331                           
  3332  0070                     ?_TMR0_ISR:	
  3333                           ; 1 bytes @ 0x0
  3334                           
  3335  0070                     ??_TMR0_ISR:	
  3336                           ; 1 bytes @ 0x0
  3337                           
  3338  0070                     ?_INT_ISR:	
  3339                           ; 1 bytes @ 0x0
  3340                           
  3341  0070                     ??_INT_ISR:	
  3342                           ; 1 bytes @ 0x0
  3343                           
  3344  0070                     ?_EUSART_SetFramingErrorHandler:	
  3345                           ; 1 bytes @ 0x0
  3346                           
  3347  0070                     ?_EUSART_SetOverrunErrorHandler:	
  3348                           ; 1 bytes @ 0x0
  3349                           
  3350  0070                     ?_EUSART_SetErrorHandler:	
  3351                           ; 1 bytes @ 0x0
  3352                           
  3353  0070                     ?_INT_CallBack:	
  3354                           ; 1 bytes @ 0x0
  3355                           
  3356  0070                     ??_INT_CallBack:	
  3357                           ; 1 bytes @ 0x0
  3358                           
  3359  0070                     ?_TMR0_SetInterruptHandler:	
  3360                           ; 1 bytes @ 0x0
  3361                           
  3362  0070                     ?_TMR0_DefaultInterruptHandler:	
  3363                           ; 1 bytes @ 0x0
  3364                           
  3365  0070                     ??_TMR0_DefaultInterruptHandler:	
  3366                           ; 1 bytes @ 0x0
  3367                           
  3368  0070                     ??_isdigit:	
  3369                           ; 1 bytes @ 0x0
  3370                           
  3371  0070                     ?_DAC_Initialize:	
  3372                           ; 1 bytes @ 0x0
  3373                           
  3374  0070                     ??_DAC_Initialize:	
  3375                           ; 1 bytes @ 0x0
  3376                           
  3377  0070                     ?_SYSTEM_Initialize:	
  3378                           ; 1 bytes @ 0x0
  3379                           
  3380  0070                     ?_INTERRUPT_InterruptManager:	
  3381                           ; 1 bytes @ 0x0
  3382                           
  3383  0070                     ??_INTERRUPT_InterruptManager:	
  3384                           ; 1 bytes @ 0x0
  3385                           
  3386  0070                     ?_EUSART_Write:	
  3387                           ; 1 bytes @ 0x0
  3388                           
  3389  0070                     ??_EUSART_Write:	
  3390                           ; 1 bytes @ 0x0
  3391                           
  3392  0070                     ?_putch:	
  3393                           ; 1 bytes @ 0x0
  3394                           
  3395  0070                     ?_INT_SetInterruptHandler:	
  3396                           ; 1 bytes @ 0x0
  3397                           
  3398  0070                     ?_INT_DefaultInterruptHandler:	
  3399                           ; 1 bytes @ 0x0
  3400                           
  3401  0070                     ??_INT_DefaultInterruptHandler:	
  3402                           ; 1 bytes @ 0x0
  3403                           
  3404  0070                     ?_setLEDColor:	
  3405                           ; 1 bytes @ 0x0
  3406                           
  3407  0070                     ?_process_remote_command:	
  3408                           ; 1 bytes @ 0x0
  3409                           
  3410  0070                     ?_main:	
  3411                           ; 1 bytes @ 0x0
  3412                           
  3413  0070                     ?___wmul:	
  3414                           ; 1 bytes @ 0x0
  3415                           
  3416  0070                     ?___lldiv:	
  3417                           ; 2 bytes @ 0x0
  3418                           
  3419  0070                     ?___aldiv:	
  3420                           ; 4 bytes @ 0x0
  3421                           
  3422  0070                     EUSART_Write@txData:	
  3423                           ; 4 bytes @ 0x0
  3424                           
  3425  0070                     setLEDColor@green:	
  3426                           ; 1 bytes @ 0x0
  3427                           
  3428  0070                     _isdigit$1248:	
  3429                           ; 1 bytes @ 0x0
  3430                           
  3431  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3432                           ; 1 bytes @ 0x0
  3433                           
  3434  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3435                           ; 2 bytes @ 0x0
  3436                           
  3437  0070                     EUSART_SetErrorHandler@interruptHandler:	
  3438                           ; 2 bytes @ 0x0
  3439                           
  3440  0070                     INT_SetInterruptHandler@InterruptHandler:	
  3441                           ; 2 bytes @ 0x0
  3442                           
  3443  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  3444                           ; 2 bytes @ 0x0
  3445                           
  3446  0070                     ___wmul@multiplier:	
  3447                           ; 2 bytes @ 0x0
  3448                           
  3449  0070                     ___lldiv@divisor:	
  3450                           ; 2 bytes @ 0x0
  3451                           
  3452  0070                     ___aldiv@divisor:	
  3453                           ; 4 bytes @ 0x0
  3454                           
  3455                           
  3456                           ; 4 bytes @ 0x0
  3457  0070                     	ds	1
  3458  0071                     ??_putch:	
  3459  0071                     putch@txData:	
  3460                           ; 1 bytes @ 0x1
  3461                           
  3462  0071                     setLEDColor@blue:	
  3463                           ; 1 bytes @ 0x1
  3464                           
  3465  0071                     isdigit@c:	
  3466                           ; 1 bytes @ 0x1
  3467                           
  3468                           
  3469                           ; 1 bytes @ 0x1
  3470  0071                     	ds	1
  3471  0072                     ??_EXT_INT_Initialize:	
  3472  0072                     ??_TMR0_Initialize:	
  3473                           ; 1 bytes @ 0x2
  3474                           
  3475  0072                     ??_EUSART_Initialize:	
  3476                           ; 1 bytes @ 0x2
  3477                           
  3478  0072                     ??_EUSART_SetFramingErrorHandler:	
  3479                           ; 1 bytes @ 0x2
  3480                           
  3481  0072                     ??_EUSART_SetOverrunErrorHandler:	
  3482                           ; 1 bytes @ 0x2
  3483                           
  3484  0072                     ??_EUSART_SetErrorHandler:	
  3485                           ; 1 bytes @ 0x2
  3486                           
  3487  0072                     ??_TMR0_SetInterruptHandler:	
  3488                           ; 1 bytes @ 0x2
  3489                           
  3490  0072                     ??_INT_SetInterruptHandler:	
  3491                           ; 1 bytes @ 0x2
  3492                           
  3493  0072                     ??_setLEDColor:	
  3494                           ; 1 bytes @ 0x2
  3495                           
  3496  0072                     setLEDColor@red:	
  3497                           ; 1 bytes @ 0x2
  3498                           
  3499  0072                     ___wmul@multiplicand:	
  3500                           ; 1 bytes @ 0x2
  3501                           
  3502                           
  3503                           ; 2 bytes @ 0x2
  3504  0072                     	ds	1
  3505  0073                     ??_SYSTEM_Initialize:	
  3506                           
  3507                           ; 1 bytes @ 0x3
  3508  0073                     	ds	1
  3509  0074                     ??___wmul:	
  3510  0074                     ___wmul@product:	
  3511                           ; 1 bytes @ 0x4
  3512                           
  3513  0074                     ___lldiv@dividend:	
  3514                           ; 2 bytes @ 0x4
  3515                           
  3516  0074                     ___aldiv@dividend:	
  3517                           ; 4 bytes @ 0x4
  3518                           
  3519                           
  3520                           ; 4 bytes @ 0x4
  3521  0074                     	ds	4
  3522  0078                     ??___lldiv:	
  3523  0078                     ??___aldiv:	
  3524                           ; 1 bytes @ 0x8
  3525                           
  3526                           
  3527                           ; 1 bytes @ 0x8
  3528  0078                     	ds	1
  3529  0079                     ??_battery_voltage:	
  3530  0079                     ___lldiv@quotient:	
  3531                           ; 1 bytes @ 0x9
  3532                           
  3533                           
  3534                           ; 4 bytes @ 0x9
  3535  0079                     	ds	4
  3536  007D                     ___lldiv@counter:	
  3537                           
  3538                           ; 1 bytes @ 0xD
  3539  007D                     	ds	1
  3540                           
  3541                           	psect	cstackBANK0
  3542  0020                     __pcstackBANK0:	
  3543  0020                     ?___llmod:	
  3544  0020                     ___aldiv@counter:	
  3545                           ; 4 bytes @ 0x0
  3546                           
  3547  0020                     ___llmod@divisor:	
  3548                           ; 1 bytes @ 0x0
  3549                           
  3550                           
  3551                           ; 4 bytes @ 0x0
  3552  0020                     	ds	1
  3553  0021                     ___aldiv@sign:	
  3554                           
  3555                           ; 1 bytes @ 0x1
  3556  0021                     	ds	1
  3557  0022                     ___aldiv@quotient:	
  3558                           
  3559                           ; 4 bytes @ 0x2
  3560  0022                     	ds	2
  3561  0024                     ___llmod@dividend:	
  3562                           
  3563                           ; 4 bytes @ 0x4
  3564  0024                     	ds	2
  3565  0026                     ?_battery_voltage:	
  3566                           
  3567                           ; 2 bytes @ 0x6
  3568  0026                     	ds	2
  3569  0028                     ??___llmod:	
  3570                           
  3571                           ; 1 bytes @ 0x8
  3572  0028                     	ds	1
  3573  0029                     ___llmod@counter:	
  3574                           
  3575                           ; 1 bytes @ 0x9
  3576  0029                     	ds	1
  3577  002A                     ?_printf:	
  3578  002A                     printf@f:	
  3579                           ; 2 bytes @ 0xA
  3580                           
  3581                           
  3582                           ; 2 bytes @ 0xA
  3583  002A                     	ds	6
  3584  0030                     ??_printf:	
  3585                           
  3586                           ; 1 bytes @ 0x10
  3587  0030                     	ds	6
  3588  0036                     printf@idx:	
  3589                           
  3590                           ; 1 bytes @ 0x16
  3591  0036                     	ds	1
  3592  0037                     printf@prec:	
  3593                           
  3594                           ; 2 bytes @ 0x17
  3595  0037                     	ds	2
  3596  0039                     printf@ap:	
  3597                           
  3598                           ; 1 bytes @ 0x19
  3599  0039                     	ds	1
  3600  003A                     printf@val:	
  3601                           
  3602                           ; 4 bytes @ 0x1A
  3603  003A                     	ds	4
  3604  003E                     printf@width:	
  3605                           
  3606                           ; 2 bytes @ 0x1E
  3607  003E                     	ds	2
  3608  0040                     printf@flag:	
  3609                           
  3610                           ; 1 bytes @ 0x20
  3611  0040                     	ds	1
  3612  0041                     printf@c:	
  3613                           
  3614                           ; 1 bytes @ 0x21
  3615  0041                     	ds	1
  3616  0042                     ??_process_remote_command:	
  3617                           
  3618                           ; 1 bytes @ 0x22
  3619  0042                     	ds	2
  3620  0044                     process_remote_command@code:	
  3621                           
  3622                           ; 1 bytes @ 0x24
  3623  0044                     	ds	1
  3624  0045                     ??_main:	
  3625                           
  3626                           ; 1 bytes @ 0x25
  3627  0045                     	ds	2
  3628                           
  3629                           	psect	maintext
  3630  0257                     __pmaintext:	
  3631 ;;
  3632 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3633 ;;
  3634 ;; *************** function _main *****************
  3635 ;; Defined at:
  3636 ;;		line 229 in file "main.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;		None
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;		None
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      void 
  3643 ;; Registers used:
  3644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3645 ;; Tracked objects:
  3646 ;;		On entry : B1F/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3650 ;;      Params:         0       0       0       0       0       0       0       0
  3651 ;;      Locals:         0       0       0       0       0       0       0       0
  3652 ;;      Temps:          0       2       0       0       0       0       0       0
  3653 ;;      Totals:         0       2       0       0       0       0       0       0
  3654 ;;Total ram usage:        2 bytes
  3655 ;; Hardware stack levels required when called:    8
  3656 ;; This function calls:
  3657 ;;		_DAC_Initialize
  3658 ;;		_OPA1_Initialize
  3659 ;;		_OPA2_Initialize
  3660 ;;		_SYSTEM_Initialize
  3661 ;;		_battery_voltage
  3662 ;;		_printf
  3663 ;;		_process_remote_command
  3664 ;; This function is called by:
  3665 ;;		Startup code after reset
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           
  3670                           ;psect for function _main
  3671  0257                     _main:	
  3672                           
  3673                           ;main.c: 232: SYSTEM_Initialize();
  3674                           
  3675                           ;incstack = 0
  3676                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3677  0257  3185  252E  3182   	fcall	_SYSTEM_Initialize
  3678                           
  3679                           ;main.c: 233: DAC_Initialize();
  3680  025A  3186  26A6  3182   	fcall	_DAC_Initialize
  3681                           
  3682                           ;main.c: 234: OPA1_Initialize();
  3683  025D  3186  26BD  3182   	fcall	_OPA1_Initialize
  3684                           
  3685                           ;main.c: 235: OPA2_Initialize();
  3686  0260  3186  26B9  3182   	fcall	_OPA2_Initialize
  3687  0263                     l1998:	
  3688  0263  0022               	movlb	2	; select bank2
  3689  0264  168C               	bsf	12,5	;volatile
  3690  0265  168E               	bsf	14,5	;volatile
  3691  0266  160E               	bsf	14,4	;volatile
  3692                           
  3693                           ;main.c: 242: if ((int)battery_voltage() < 2500)
  3694  0267  3184  249A  3182   	fcall	_battery_voltage
  3695  026A  0020               	movlb	0	; select bank0
  3696  026B  0827               	movf	?_battery_voltage+1,w
  3697  026C  3A80               	xorlw	128
  3698  026D  00C5               	movwf	??_main
  3699  026E  3089               	movlw	137
  3700  026F  0245               	subwf	??_main,w
  3701  0270  1D03               	skipz
  3702  0271  2A74               	goto	u1335
  3703  0272  30C4               	movlw	196
  3704  0273  0226               	subwf	?_battery_voltage,w
  3705  0274                     u1335:	
  3706  0274  1803               	skipnc
  3707  0275  2A88               	goto	l2006
  3708                           
  3709                           ;main.c: 243: {;main.c: 244: do { LATCbits.LATC5 = 0; } while(0);
  3710  0276  0022               	movlb	2	; select bank2
  3711  0277  128E               	bcf	14,5	;volatile
  3712                           
  3713                           ;main.c: 245: printf("%d\n", (int)battery_voltage());
  3714  0278  30B1               	movlw	low (STR_1| (0+32768))
  3715  0279  0020               	movlb	0	; select bank0
  3716  027A  00AA               	movwf	printf@f
  3717  027B  3086               	movlw	high (STR_1| (0+32768))
  3718  027C  00AB               	movwf	printf@f+1
  3719  027D  3184  249A  3182   	fcall	_battery_voltage
  3720  0280  0020               	movlb	0	; select bank0
  3721  0281  0827               	movf	?_battery_voltage+1,w
  3722  0282  00AD               	movwf	?_printf+3
  3723  0283  0826               	movf	?_battery_voltage,w
  3724  0284  00AC               	movwf	?_printf+2
  3725  0285  3180  2029  3182   	fcall	_printf
  3726  0288                     l2006:	
  3727                           
  3728                           ;main.c: 246: };main.c: 253: if (STATE_DONE == ir_code.state){
  3729  0288  3002               	movlw	2
  3730  0289  0020               	movlb	0	; select bank0
  3731  028A  0657               	xorwf	_ir_code+1,w
  3732  028B  1D03               	btfss	3,2
  3733  028C  2A63               	goto	l1998
  3734                           
  3735                           ;main.c: 255: printf("\r\ncode:         0x%08lx\r\n", (unsigned long)ir_code.code);
  3736  028D  30EE               	movlw	low (STR_3| (0+32768))
  3737  028E  00AA               	movwf	printf@f
  3738  028F  3085               	movlw	high (STR_3| (0+32768))
  3739  0290  00AB               	movwf	printf@f+1
  3740  0291  3002               	movlw	2
  3741  0292  3E56               	addlw	(low (_ir_code| 0))& (0+255)
  3742  0293  0086               	movwf	6
  3743  0294  0187               	clrf	7
  3744  0295  3F40               	moviw [0]fsr1
  3745  0296  00AC               	movwf	?_printf+2
  3746  0297  3F41               	moviw [1]fsr1
  3747  0298  00AD               	movwf	?_printf+3
  3748  0299  3F42               	moviw [2]fsr1
  3749  029A  00AE               	movwf	?_printf+4
  3750  029B  3F43               	moviw [3]fsr1
  3751  029C  00AF               	movwf	?_printf+5
  3752  029D  3180  2029  3182   	fcall	_printf
  3753                           
  3754                           ;main.c: 256: printf("command:          0x%02x\r\n", ir_code.command);
  3755  02A0  304C               	movlw	low (STR_4| (0+32768))
  3756  02A1  0020               	movlb	0	; select bank0
  3757  02A2  00AA               	movwf	printf@f
  3758  02A3  3085               	movlw	high (STR_4| (0+32768))
  3759  02A4  00AB               	movwf	printf@f+1
  3760  02A5  0859               	movf	_ir_code+3,w
  3761  02A6  00C5               	movwf	??_main
  3762  02A7  01C6               	clrf	??_main+1
  3763  02A8  0845               	movf	??_main,w
  3764  02A9  00AC               	movwf	?_printf+2
  3765  02AA  0846               	movf	??_main+1,w
  3766  02AB  00AD               	movwf	?_printf+3
  3767  02AC  3180  2029  3182   	fcall	_printf
  3768                           
  3769                           ;main.c: 257: printf("command_b:        0x%02x\r\n", ir_code.command_b);
  3770  02AF  3082               	movlw	low (STR_5| (0+32768))
  3771  02B0  0020               	movlb	0	; select bank0
  3772  02B1  00AA               	movwf	printf@f
  3773  02B2  3085               	movlw	high (STR_5| (0+32768))
  3774  02B3  00AB               	movwf	printf@f+1
  3775  02B4  0858               	movf	_ir_code+2,w
  3776  02B5  00C5               	movwf	??_main
  3777  02B6  01C6               	clrf	??_main+1
  3778  02B7  0845               	movf	??_main,w
  3779  02B8  00AC               	movwf	?_printf+2
  3780  02B9  0846               	movf	??_main+1,w
  3781  02BA  00AD               	movwf	?_printf+3
  3782  02BB  3180  2029  3182   	fcall	_printf
  3783                           
  3784                           ;main.c: 258: printf("address:          0x%02x\r\n", ir_code.address);
  3785  02BE  3067               	movlw	low (STR_6| (0+32768))
  3786  02BF  0020               	movlb	0	; select bank0
  3787  02C0  00AA               	movwf	printf@f
  3788  02C1  3085               	movlw	high (STR_6| (0+32768))
  3789  02C2  00AB               	movwf	printf@f+1
  3790  02C3  085B               	movf	_ir_code+5,w
  3791  02C4  00C5               	movwf	??_main
  3792  02C5  01C6               	clrf	??_main+1
  3793  02C6  0845               	movf	??_main,w
  3794  02C7  00AC               	movwf	?_printf+2
  3795  02C8  0846               	movf	??_main+1,w
  3796  02C9  00AD               	movwf	?_printf+3
  3797  02CA  3180  2029  3182   	fcall	_printf
  3798                           
  3799                           ;main.c: 259: printf("address_b:        0x%02x\r\n", ir_code.address_b);
  3800  02CD  309D               	movlw	low (STR_7| (0+32768))
  3801  02CE  0020               	movlb	0	; select bank0
  3802  02CF  00AA               	movwf	printf@f
  3803  02D0  3085               	movlw	high (STR_7| (0+32768))
  3804  02D1  00AB               	movwf	printf@f+1
  3805  02D2  085A               	movf	_ir_code+4,w
  3806  02D3  00C5               	movwf	??_main
  3807  02D4  01C6               	clrf	??_main+1
  3808  02D5  0845               	movf	??_main,w
  3809  02D6  00AC               	movwf	?_printf+2
  3810  02D7  0846               	movf	??_main+1,w
  3811  02D8  00AD               	movwf	?_printf+3
  3812  02D9  3180  2029  3182   	fcall	_printf
  3813                           
  3814                           ;main.c: 260: printf("extended address: 0x%04x\r\n", (unsigned int)ir_code.extended_addr
      +                          ess);
  3815  02DC  30B8               	movlw	low (STR_8| (0+32768))
  3816  02DD  0020               	movlb	0	; select bank0
  3817  02DE  00AA               	movwf	printf@f
  3818  02DF  3085               	movlw	high (STR_8| (0+32768))
  3819  02E0  00AB               	movwf	printf@f+1
  3820  02E1  085B               	movf	_ir_code+5,w
  3821  02E2  00AD               	movwf	?_printf+3
  3822  02E3  085A               	movf	_ir_code+4,w
  3823  02E4  00AC               	movwf	?_printf+2
  3824  02E5  3180  2029  3182   	fcall	_printf
  3825                           
  3826                           ;main.c: 271: process_remote_command(&ir_code);
  3827  02E8  3056               	movlw	(low (_ir_code| 0))& (0+255)
  3828  02E9  3183  2371  3182   	fcall	_process_remote_command
  3829                           
  3830                           ;main.c: 274: ir_code.state = STATE_RESET;
  3831  02EC  0020               	movlb	0	; select bank0
  3832  02ED  01D7               	clrf	_ir_code+1
  3833  02EE  2A63               	goto	l1998
  3834  02EF                     __end_of_main:	
  3835                           
  3836                           	psect	text1
  3837  0371                     __ptext1:	
  3838 ;; *************** function _process_remote_command *****************
  3839 ;; Defined at:
  3840 ;;		line 184 in file "main.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;  code            1    wreg     PTR struct .
  3843 ;;		 -> ir_code(6), 
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;  code            1   36[BANK0 ] PTR struct .
  3846 ;;		 -> ir_code(6), 
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  1    wreg      void 
  3849 ;; Registers used:
  3850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3856 ;;      Params:         0       0       0       0       0       0       0       0
  3857 ;;      Locals:         0       1       0       0       0       0       0       0
  3858 ;;      Temps:          0       2       0       0       0       0       0       0
  3859 ;;      Totals:         0       3       0       0       0       0       0       0
  3860 ;;Total ram usage:        3 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; Hardware stack levels required when called:    7
  3863 ;; This function calls:
  3864 ;;		_battery_voltage
  3865 ;;		_printf
  3866 ;;		_setLEDColor
  3867 ;; This function is called by:
  3868 ;;		_main
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           
  3873                           ;psect for function _process_remote_command
  3874  0371                     _process_remote_command:	
  3875                           
  3876                           ;incstack = 0
  3877                           ; Regs used in _process_remote_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3878                           ;process_remote_command@code stored from wreg
  3879  0371  0020               	movlb	0	; select bank0
  3880  0372  00C4               	movwf	process_remote_command@code
  3881                           
  3882                           ;main.c: 185: switch(code->command){
  3883  0373  2B9C               	goto	l1976
  3884  0374                     l1960:	
  3885                           
  3886                           ;main.c: 187: LED_red += 10;
  3887  0374  300A               	movlw	10
  3888  0375  00C2               	movwf	??_process_remote_command
  3889  0376  0842               	movf	??_process_remote_command,w
  3890  0377  07D4               	addwf	_LED_red,f
  3891                           
  3892                           ;main.c: 188: break;
  3893  0378  2BC9               	goto	l1978
  3894  0379                     l1962:	
  3895                           
  3896                           ;main.c: 190: LED_red -= 10;
  3897  0379  300A               	movlw	10
  3898  037A  02D4               	subwf	_LED_red,f
  3899                           
  3900                           ;main.c: 191: break;
  3901  037B  2BC9               	goto	l1978
  3902  037C                     l1964:	
  3903                           
  3904                           ;main.c: 193: LED_green += 10;
  3905  037C  300A               	movlw	10
  3906  037D  00C2               	movwf	??_process_remote_command
  3907  037E  0842               	movf	??_process_remote_command,w
  3908  037F  07D3               	addwf	_LED_green,f
  3909                           
  3910                           ;main.c: 194: break;
  3911  0380  2BC9               	goto	l1978
  3912  0381                     l1966:	
  3913                           
  3914                           ;main.c: 196: LED_green -= 10;
  3915  0381  300A               	movlw	10
  3916  0382  02D3               	subwf	_LED_green,f
  3917                           
  3918                           ;main.c: 197: break;
  3919  0383  2BC9               	goto	l1978
  3920  0384                     l1968:	
  3921                           
  3922                           ;main.c: 199: LED_blue += 10;
  3923  0384  300A               	movlw	10
  3924  0385  00C2               	movwf	??_process_remote_command
  3925  0386  0842               	movf	??_process_remote_command,w
  3926  0387  07D2               	addwf	_LED_blue,f
  3927                           
  3928                           ;main.c: 200: break;
  3929  0388  2BC9               	goto	l1978
  3930  0389                     l1970:	
  3931                           
  3932                           ;main.c: 202: LED_blue -= 10;
  3933  0389  300A               	movlw	10
  3934  038A  02D2               	subwf	_LED_blue,f
  3935                           
  3936                           ;main.c: 203: break;
  3937  038B  2BC9               	goto	l1978
  3938  038C                     l1972:	
  3939                           
  3940                           ;main.c: 205: printf("%d\n", (int)battery_voltage());
  3941  038C  30B1               	movlw	low (STR_1| (0+32768))
  3942  038D  00AA               	movwf	printf@f
  3943  038E  3086               	movlw	high (STR_1| (0+32768))
  3944  038F  00AB               	movwf	printf@f+1
  3945  0390  3184  249A  3183   	fcall	_battery_voltage
  3946  0393  0020               	movlb	0	; select bank0
  3947  0394  0827               	movf	?_battery_voltage+1,w
  3948  0395  00AD               	movwf	?_printf+3
  3949  0396  0826               	movf	?_battery_voltage,w
  3950  0397  00AC               	movwf	?_printf+2
  3951  0398  3180  2029  3183   	fcall	_printf
  3952                           
  3953                           ;main.c: 206: break;
  3954  039B  2BC9               	goto	l1978
  3955  039C                     l1976:	
  3956  039C  0844               	movf	process_remote_command@code,w
  3957  039D  3E03               	addlw	3
  3958  039E  0086               	movwf	6
  3959  039F  0187               	clrf	7
  3960  03A0  0801               	movf	1,w
  3961                           
  3962                           ; Switch size 1, requested type "simple"
  3963                           ; Number of cases is 13, Range of values is 8 to 176
  3964                           ; switch strategies available:
  3965                           ; Name         Instructions Cycles
  3966                           ; simple_byte           40    21 (average)
  3967                           ; jumptable            263     9 (fixed)
  3968                           ;	Chosen strategy is simple_byte
  3969  03A1  3A08               	xorlw	8	; case 8
  3970  03A2  1903               	skipnz
  3971  03A3  2B84               	goto	l1968
  3972  03A4  3A18               	xorlw	24	; case 16
  3973  03A5  1903               	skipnz
  3974  03A6  2B81               	goto	l1966
  3975  03A7  3A08               	xorlw	8	; case 24
  3976  03A8  1903               	skipnz
  3977  03A9  2BC9               	goto	l1978
  3978  03AA  3A30               	xorlw	48	; case 40
  3979  03AB  1903               	skipnz
  3980  03AC  2BC9               	goto	l1978
  3981  03AD  3A60               	xorlw	96	; case 72
  3982  03AE  1903               	skipnz
  3983  03AF  2B8C               	goto	l1972
  3984  03B0  3A18               	xorlw	24	; case 80
  3985  03B1  1903               	skipnz
  3986  03B2  2B7C               	goto	l1964
  3987  03B3  3A08               	xorlw	8	; case 88
  3988  03B4  1903               	skipnz
  3989  03B5  2BC9               	goto	l1978
  3990  03B6  3A30               	xorlw	48	; case 104
  3991  03B7  1903               	skipnz
  3992  03B8  2BC9               	goto	l1978
  3993  03B9  3AE0               	xorlw	224	; case 136
  3994  03BA  1903               	skipnz
  3995  03BB  2B89               	goto	l1970
  3996  03BC  3A10               	xorlw	16	; case 152
  3997  03BD  1903               	skipnz
  3998  03BE  2BC9               	goto	l1978
  3999  03BF  3A38               	xorlw	56	; case 160
  4000  03C0  1903               	skipnz
  4001  03C1  2B74               	goto	l1960
  4002  03C2  3A08               	xorlw	8	; case 168
  4003  03C3  1903               	skipnz
  4004  03C4  2BC9               	goto	l1978
  4005  03C5  3A18               	xorlw	24	; case 176
  4006  03C6  1903               	skipnz
  4007  03C7  2B79               	goto	l1962
  4008  03C8  2BC9               	goto	l1978
  4009  03C9                     l1978:	
  4010                           
  4011                           ;main.c: 222: setLEDColor(LED_red, LED_green, LED_blue);
  4012  03C9  0020               	movlb	0	; select bank0
  4013  03CA  0853               	movf	_LED_green,w
  4014  03CB  00C2               	movwf	??_process_remote_command
  4015  03CC  0842               	movf	??_process_remote_command,w
  4016  03CD  00F0               	movwf	setLEDColor@green
  4017  03CE  0852               	movf	_LED_blue,w
  4018  03CF  00C3               	movwf	??_process_remote_command+1
  4019  03D0  0843               	movf	??_process_remote_command+1,w
  4020  03D1  00F1               	movwf	setLEDColor@blue
  4021  03D2  0854               	movf	_LED_red,w
  4022  03D3  3186  2660         	fcall	_setLEDColor
  4023  03D5  0008               	return
  4024  03D6                     __end_of_process_remote_command:	
  4025                           
  4026                           	psect	text2
  4027  0660                     __ptext2:	
  4028 ;; *************** function _setLEDColor *****************
  4029 ;; Defined at:
  4030 ;;		line 166 in file "main.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  red             1    wreg     unsigned char 
  4033 ;;  green           1    0[COMMON] unsigned char 
  4034 ;;  blue            1    1[COMMON] unsigned char 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  red             1    2[COMMON] unsigned char 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      void 
  4039 ;; Registers used:
  4040 ;;		wreg
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4046 ;;      Params:         2       0       0       0       0       0       0       0
  4047 ;;      Locals:         1       0       0       0       0       0       0       0
  4048 ;;      Temps:          0       0       0       0       0       0       0       0
  4049 ;;      Totals:         3       0       0       0       0       0       0       0
  4050 ;;Total ram usage:        3 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    4
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_process_remote_command
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           
  4061                           ;psect for function _setLEDColor
  4062  0660                     _setLEDColor:	
  4063                           
  4064                           ;incstack = 0
  4065                           ; Regs used in _setLEDColor: [wreg]
  4066                           ;setLEDColor@red stored from wreg
  4067  0660  00F2               	movwf	setLEDColor@red
  4068                           
  4069                           ;main.c: 172: CCPR1L = red;
  4070  0661  0872               	movf	setLEDColor@red,w
  4071  0662  0025               	movlb	5	; select bank5
  4072  0663  0091               	movwf	17	;volatile
  4073                           
  4074                           ;main.c: 174: PWM3DCH = green;
  4075  0664  0870               	movf	setLEDColor@green,w
  4076  0665  002C               	movlb	12	; select bank12
  4077  0666  0098               	movwf	24	;volatile
  4078                           
  4079                           ;main.c: 176: PWM4DCH = blue;
  4080  0667  0871               	movf	setLEDColor@blue,w
  4081  0668  009B               	movwf	27	;volatile
  4082  0669  0008               	return
  4083  066A                     __end_of_setLEDColor:	
  4084                           
  4085                           	psect	text3
  4086  0029                     __ptext3:	
  4087 ;; *************** function _printf *****************
  4088 ;; Defined at:
  4089 ;;		line 477 in file "/Applications/microchip/xc8/v2.10/pic/sources/c90/common/doprnt.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;  f               2   10[BANK0 ] PTR const unsigned char 
  4092 ;;		 -> STR_8(27), STR_7(27), STR_6(27), STR_5(27), 
  4093 ;;		 -> STR_4(27), STR_3(26), STR_2(4), STR_1(4), 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  idx             1   22[BANK0 ] unsigned char 
  4096 ;;  val             4   26[BANK0 ] unsigned long 
  4097 ;;  tmpval          4    0        struct .
  4098 ;;  width           2   30[BANK0 ] int 
  4099 ;;  prec            2   23[BANK0 ] int 
  4100 ;;  cp              2    0        PTR const unsigned char 
  4101 ;;  len             2    0        unsigned int 
  4102 ;;  c               1   33[BANK0 ] unsigned char 
  4103 ;;  flag            1   32[BANK0 ] unsigned char 
  4104 ;;  ap              1   25[BANK0 ] PTR void [1]
  4105 ;;		 -> ?_printf(2), 
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  2   10[BANK0 ] int 
  4108 ;; Registers used:
  4109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4115 ;;      Params:         0       6       0       0       0       0       0       0
  4116 ;;      Locals:         0      12       0       0       0       0       0       0
  4117 ;;      Temps:          0       6       0       0       0       0       0       0
  4118 ;;      Totals:         0      24       0       0       0       0       0       0
  4119 ;;Total ram usage:       24 bytes
  4120 ;; Hardware stack levels used:    1
  4121 ;; Hardware stack levels required when called:    6
  4122 ;; This function calls:
  4123 ;;		___lldiv
  4124 ;;		___llmod
  4125 ;;		___wmul
  4126 ;;		_isdigit
  4127 ;;		_putch
  4128 ;; This function is called by:
  4129 ;;		_process_remote_command
  4130 ;;		_main
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           
  4135                           ;psect for function _printf
  4136  0029                     _printf:	
  4137                           
  4138                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: u
      +                          nsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: un
      +                          signed long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 
      +                          550: *ap = __va_start();
  4139                           
  4140                           ;incstack = 0
  4141                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4142  0029  302C               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4143  002A  0020               	movlb	0	; select bank0
  4144  002B  00B0               	movwf	??_printf
  4145  002C  0830               	movf	??_printf,w
  4146  002D  00B9               	movwf	printf@ap
  4147  002E                     l1930:	
  4148                           ;doprnt.c: 553: while((c = *f++)) {
  4149                           
  4150  002E  0020               	movlb	0	; select bank0
  4151  002F  082B               	movf	printf@f+1,w
  4152  0030  00B1               	movwf	??_printf+1
  4153  0031  082A               	movf	printf@f,w
  4154  0032  00B0               	movwf	??_printf
  4155  0033  0AAA               	incf	printf@f,f
  4156  0034  1903               	skipnz
  4157  0035  0AAB               	incf	printf@f+1,f
  4158  0036  0830               	movf	??_printf,w
  4159  0037  0084               	movwf	4
  4160  0038  0831               	movf	??_printf+1,w
  4161  0039  0085               	movwf	5
  4162  003A  0800               	movf	0,w	;code access
  4163  003B  00B2               	movwf	??_printf+2
  4164  003C  0832               	movf	??_printf+2,w
  4165  003D  00C1               	movwf	printf@c
  4166  003E  0841               	movf	printf@c,w
  4167  003F  1903               	btfsc	3,2
  4168  0040  0008               	return
  4169                           
  4170                           ;doprnt.c: 555: if(c != '%')
  4171  0041  3025               	movlw	37
  4172  0042  0641               	xorwf	printf@c,w
  4173  0043  1903               	btfsc	3,2
  4174  0044  284A               	goto	l1810
  4175                           
  4176                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  4177  0045  0841               	movf	printf@c,w
  4178  0046  3186  26AC  3180   	fcall	_putch
  4179                           
  4180                           ;doprnt.c: 559: continue;
  4181  0049  282E               	goto	l1930
  4182  004A                     l1810:	
  4183                           
  4184                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  4185  004A  01BE               	clrf	printf@width
  4186  004B  01BF               	clrf	printf@width+1
  4187                           
  4188                           ;doprnt.c: 565: flag = 0;
  4189  004C  01C0               	clrf	printf@flag
  4190  004D  2853               	goto	l1816
  4191  004E                     l535:	
  4192                           ;doprnt.c: 596: case '0':
  4193                           
  4194                           
  4195                           ;doprnt.c: 597: flag |= 0x04;
  4196  004E  1540               	bsf	printf@flag,2
  4197                           
  4198                           ;doprnt.c: 598: f++;
  4199  004F  3001               	movlw	1
  4200  0050  07AA               	addwf	printf@f,f
  4201  0051  3000               	movlw	0
  4202  0052  3DAB               	addwfc	printf@f+1,f
  4203  0053                     l1816:	
  4204                           ;doprnt.c: 599: continue;
  4205                           
  4206  0053  082A               	movf	printf@f,w
  4207  0054  0084               	movwf	4
  4208  0055  082B               	movf	printf@f+1,w
  4209  0056  0085               	movwf	5
  4210  0057  0800               	movf	0,w	;code access
  4211                           
  4212                           ; Switch size 1, requested type "simple"
  4213                           ; Number of cases is 1, Range of values is 48 to 48
  4214                           ; switch strategies available:
  4215                           ; Name         Instructions Cycles
  4216                           ; simple_byte            4     3 (average)
  4217                           ; direct_byte           11     9 (fixed)
  4218                           ; jumptable            263     9 (fixed)
  4219                           ;	Chosen strategy is simple_byte
  4220  0058  3A30               	xorlw	48	; case 48
  4221  0059  1903               	skipnz
  4222  005A  284E               	goto	l535
  4223  005B  285C               	goto	l1818
  4224  005C                     l1818:	
  4225                           
  4226                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  4227  005C  082A               	movf	printf@f,w
  4228  005D  0084               	movwf	4
  4229  005E  082B               	movf	printf@f+1,w
  4230  005F  0085               	movwf	5
  4231  0060  0800               	movf	0,w	;code access
  4232  0061  3186  262E  3180   	fcall	_isdigit
  4233  0064  1C03               	btfss	3,0
  4234  0065  289C               	goto	l1832
  4235                           
  4236                           ;doprnt.c: 615: width = 0;
  4237  0066  0020               	movlb	0	; select bank0
  4238  0067  01BE               	clrf	printf@width
  4239  0068  01BF               	clrf	printf@width+1
  4240  0069                     l1822:	
  4241                           
  4242                           ;doprnt.c: 617: width *= 10;
  4243  0069  300A               	movlw	10
  4244  006A  00F0               	movwf	___wmul@multiplier
  4245  006B  3000               	movlw	0
  4246  006C  00F1               	movwf	___wmul@multiplier+1
  4247  006D  0020               	movlb	0	; select bank0
  4248  006E  083F               	movf	printf@width+1,w
  4249  006F  00F3               	movwf	___wmul@multiplicand+1
  4250  0070  083E               	movf	printf@width,w
  4251  0071  00F2               	movwf	___wmul@multiplicand
  4252  0072  3185  25D3  3180   	fcall	___wmul
  4253  0075  0871               	movf	?___wmul+1,w
  4254  0076  0020               	movlb	0	; select bank0
  4255  0077  00BF               	movwf	printf@width+1
  4256  0078  0870               	movf	?___wmul,w
  4257  0079  00BE               	movwf	printf@width
  4258                           
  4259                           ;doprnt.c: 618: width += *f++ - '0';
  4260  007A  082A               	movf	printf@f,w
  4261  007B  0084               	movwf	4
  4262  007C  082B               	movf	printf@f+1,w
  4263  007D  0085               	movwf	5
  4264  007E  0800               	movf	0,w	;code access
  4265  007F  3ED0               	addlw	208
  4266  0080  00B0               	movwf	??_printf
  4267  0081  30FF               	movlw	255
  4268  0082  1803               	skipnc
  4269  0083  3000               	movlw	0
  4270  0084  00B1               	movwf	??_printf+1
  4271  0085  0830               	movf	??_printf,w
  4272  0086  07BE               	addwf	printf@width,f
  4273  0087  0831               	movf	??_printf+1,w
  4274  0088  3DBF               	addwfc	printf@width+1,f
  4275  0089  3001               	movlw	1
  4276  008A  07AA               	addwf	printf@f,f
  4277  008B  3000               	movlw	0
  4278  008C  3DAB               	addwfc	printf@f+1,f
  4279                           
  4280                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  4281  008D  082A               	movf	printf@f,w
  4282  008E  0084               	movwf	4
  4283  008F  082B               	movf	printf@f+1,w
  4284  0090  0085               	movwf	5
  4285  0091  0800               	movf	0,w	;code access
  4286  0092  3186  262E  3180   	fcall	_isdigit
  4287  0095  1C03               	btfss	3,0
  4288  0096  289C               	goto	l1832
  4289  0097  2869               	goto	l1822
  4290  0098                     l546:	
  4291                           ;doprnt.c: 667: case 'l':
  4292                           
  4293                           
  4294                           ;doprnt.c: 669: flag |= 0x10;
  4295  0098  1640               	bsf	printf@flag,4
  4296                           
  4297                           ;doprnt.c: 670: goto loop;
  4298  0099  289C               	goto	l1832
  4299  009A                     l550:	
  4300                           ;doprnt.c: 744: case 'x':
  4301                           
  4302                           
  4303                           ;doprnt.c: 747: flag |= 0x80;
  4304  009A  17C0               	bsf	printf@flag,7
  4305                           
  4306                           ;doprnt.c: 749: break;
  4307  009B  28BA               	goto	l549
  4308  009C                     l1832:	
  4309  009C  0020               	movlb	0	; select bank0
  4310  009D  082B               	movf	printf@f+1,w
  4311  009E  00B1               	movwf	??_printf+1
  4312  009F  082A               	movf	printf@f,w
  4313  00A0  00B0               	movwf	??_printf
  4314  00A1  0AAA               	incf	printf@f,f
  4315  00A2  1903               	skipnz
  4316  00A3  0AAB               	incf	printf@f+1,f
  4317  00A4  0830               	movf	??_printf,w
  4318  00A5  0084               	movwf	4
  4319  00A6  0831               	movf	??_printf+1,w
  4320  00A7  0085               	movwf	5
  4321  00A8  0800               	movf	0,w	;code access
  4322  00A9  00C1               	movwf	printf@c
  4323                           
  4324                           ; Switch size 1, requested type "simple"
  4325                           ; Number of cases is 5, Range of values is 0 to 120
  4326                           ; switch strategies available:
  4327                           ; Name         Instructions Cycles
  4328                           ; simple_byte           16     9 (average)
  4329                           ; direct_byte          248     6 (fixed)
  4330                           ; jumptable            260     6 (fixed)
  4331                           ;	Chosen strategy is simple_byte
  4332  00AA  3A00               	xorlw	0	; case 0
  4333  00AB  1903               	skipnz
  4334  00AC  2A56               	goto	l590
  4335  00AD  3A64               	xorlw	100	; case 100
  4336  00AE  1903               	skipnz
  4337  00AF  28BA               	goto	l549
  4338  00B0  3A0D               	xorlw	13	; case 105
  4339  00B1  1903               	skipnz
  4340  00B2  28BA               	goto	l549
  4341  00B3  3A05               	xorlw	5	; case 108
  4342  00B4  1903               	skipnz
  4343  00B5  2898               	goto	l546
  4344  00B6  3A14               	xorlw	20	; case 120
  4345  00B7  1903               	skipnz
  4346  00B8  289A               	goto	l550
  4347  00B9  282E               	goto	l1930
  4348  00BA                     l549:	
  4349                           
  4350                           ;doprnt.c: 1277: if((flag & 0x80) == 0x00)
  4351  00BA  1BC0               	btfsc	printf@flag,7
  4352  00BB  28F1               	goto	l552
  4353                           
  4354                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  4355  00BC  1E40               	btfss	printf@flag,4
  4356  00BD  28CB               	goto	l1840
  4357                           
  4358                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  4359  00BE  0839               	movf	printf@ap,w
  4360  00BF  0086               	movwf	6
  4361  00C0  0187               	clrf	7
  4362  00C1  3F40               	moviw [0]fsr1
  4363  00C2  00BA               	movwf	printf@val
  4364  00C3  3F41               	moviw [1]fsr1
  4365  00C4  00BB               	movwf	printf@val+1
  4366  00C5  3F42               	moviw [2]fsr1
  4367  00C6  00BC               	movwf	printf@val+2
  4368  00C7  3F43               	moviw [3]fsr1
  4369  00C8  00BD               	movwf	printf@val+3
  4370  00C9  3004               	movlw	4
  4371  00CA  28DC               	goto	L1
  4372  00CB                     l1840:	
  4373                           
  4374                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  4375  00CB  0839               	movf	printf@ap,w
  4376  00CC  0086               	movwf	6
  4377  00CD  0187               	clrf	7
  4378  00CE  3F40               	moviw [0]fsr1
  4379  00CF  00B0               	movwf	??_printf
  4380  00D0  3F41               	moviw [1]fsr1
  4381  00D1  00B1               	movwf	??_printf+1
  4382  00D2  0830               	movf	??_printf,w
  4383  00D3  00BA               	movwf	printf@val
  4384  00D4  0831               	movf	??_printf+1,w
  4385  00D5  00BB               	movwf	printf@val+1
  4386  00D6  0D89               	rlf	9,f
  4387  00D7  3B89               	subwfb	9,f
  4388  00D8  0989               	comf	9,f
  4389  00D9  00BC               	movwf	printf@val+2
  4390  00DA  00BD               	movwf	printf@val+3
  4391  00DB  3002               	movlw	2
  4392  00DC                     L1:	
  4393  00DC  00B0               	movwf	??_printf
  4394  00DD  0830               	movf	??_printf,w
  4395  00DE  07B9               	addwf	printf@ap,f
  4396                           
  4397                           ;doprnt.c: 1287: if((long)val < 0) {
  4398  00DF  1FBD               	btfss	printf@val+3,7
  4399  00E0  2972               	goto	l1880
  4400                           
  4401                           ;doprnt.c: 1288: flag |= 0x03;
  4402  00E1  3003               	movlw	3
  4403  00E2  00B0               	movwf	??_printf
  4404  00E3  0830               	movf	??_printf,w
  4405  00E4  04C0               	iorwf	printf@flag,f
  4406                           
  4407                           ;doprnt.c: 1289: val = -val;
  4408  00E5  09BA               	comf	printf@val,f
  4409  00E6  09BB               	comf	printf@val+1,f
  4410  00E7  09BC               	comf	printf@val+2,f
  4411  00E8  09BD               	comf	printf@val+3,f
  4412  00E9  0ABA               	incf	printf@val,f
  4413  00EA  1903               	skipnz
  4414  00EB  0ABB               	incf	printf@val+1,f
  4415  00EC  1903               	skipnz
  4416  00ED  0ABC               	incf	printf@val+2,f
  4417  00EE  1903               	skipnz
  4418  00EF  0ABD               	incf	printf@val+3,f
  4419  00F0  2972               	goto	l1880
  4420  00F1                     l552:	
  4421                           
  4422                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  4423  00F1  1E40               	btfss	printf@flag,4
  4424  00F2  2900               	goto	l1854
  4425                           
  4426                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  4427  00F3  0839               	movf	printf@ap,w
  4428  00F4  0086               	movwf	6
  4429  00F5  0187               	clrf	7
  4430  00F6  3F40               	moviw [0]fsr1
  4431  00F7  00BA               	movwf	printf@val
  4432  00F8  3F41               	moviw [1]fsr1
  4433  00F9  00BB               	movwf	printf@val+1
  4434  00FA  3F42               	moviw [2]fsr1
  4435  00FB  00BC               	movwf	printf@val+2
  4436  00FC  3F43               	moviw [3]fsr1
  4437  00FD  00BD               	movwf	printf@val+3
  4438  00FE  3004               	movlw	4
  4439  00FF  290E               	goto	L2
  4440  0100                     l1854:	
  4441                           
  4442                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  4443  0100  0839               	movf	printf@ap,w
  4444  0101  0086               	movwf	6
  4445  0102  0187               	clrf	7
  4446  0103  3F40               	moviw [0]fsr1
  4447  0104  00B0               	movwf	??_printf
  4448  0105  3F41               	moviw [1]fsr1
  4449  0106  00B1               	movwf	??_printf+1
  4450  0107  0830               	movf	??_printf,w
  4451  0108  00BA               	movwf	printf@val
  4452  0109  0831               	movf	??_printf+1,w
  4453  010A  00BB               	movwf	printf@val+1
  4454  010B  01BC               	clrf	printf@val+2
  4455  010C  01BD               	clrf	printf@val+3
  4456  010D  3002               	movlw	2
  4457  010E                     L2:	
  4458  010E  00B0               	movwf	??_printf
  4459  010F  0830               	movf	??_printf,w
  4460  0110  07B9               	addwf	printf@ap,f
  4461  0111  2972               	goto	l1880
  4462  0112                     l560:	
  4463                           ;doprnt.c: 1325: case 0x00:
  4464                           
  4465                           
  4466                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4467  0112  01C1               	clrf	printf@c
  4468  0113  0AC1               	incf	printf@c,f
  4469  0114                     l1862:	
  4470                           
  4471                           ;doprnt.c: 1332: if(val < dpowers[c])
  4472  0114  0841               	movf	printf@c,w
  4473  0115  00B0               	movwf	??_printf
  4474  0116  01B1               	clrf	??_printf+1
  4475  0117  35B0               	lslf	??_printf,f
  4476  0118  0DB1               	rlf	??_printf+1,f
  4477  0119  35B0               	lslf	??_printf,f
  4478  011A  0DB1               	rlf	??_printf+1,f
  4479  011B  30C5               	movlw	low (_dpowers| (0+32768))
  4480  011C  0730               	addwf	??_printf,w
  4481  011D  0084               	movwf	4
  4482  011E  3084               	movlw	high (_dpowers| (0+32768))
  4483  011F  3D31               	addwfc	??_printf+1,w
  4484  0120  0085               	movwf	5
  4485  0121  3F00               	moviw [0]fsr0
  4486  0122  00B2               	movwf	??_printf+2
  4487  0123  3F01               	moviw [1]fsr0
  4488  0124  00B3               	movwf	??_printf+3
  4489  0125  3F02               	moviw [2]fsr0
  4490  0126  00B4               	movwf	??_printf+4
  4491  0127  3F03               	moviw [3]fsr0
  4492  0128  00B5               	movwf	??_printf+5
  4493  0129  0835               	movf	??_printf+5,w
  4494  012A  023D               	subwf	printf@val+3,w
  4495  012B  1D03               	skipz
  4496  012C  2937               	goto	u1105
  4497  012D  0834               	movf	??_printf+4,w
  4498  012E  023C               	subwf	printf@val+2,w
  4499  012F  1D03               	skipz
  4500  0130  2937               	goto	u1105
  4501  0131  0833               	movf	??_printf+3,w
  4502  0132  023B               	subwf	printf@val+1,w
  4503  0133  1D03               	skipz
  4504  0134  2937               	goto	u1105
  4505  0135  0832               	movf	??_printf+2,w
  4506  0136  023A               	subwf	printf@val,w
  4507  0137                     u1105:	
  4508  0137  1C03               	btfss	3,0
  4509  0138  297B               	goto	l1882
  4510  0139  3001               	movlw	1
  4511  013A  00B0               	movwf	??_printf
  4512  013B  0830               	movf	??_printf,w
  4513  013C  07C1               	addwf	printf@c,f
  4514  013D  300A               	movlw	10
  4515  013E  0641               	xorwf	printf@c,w
  4516  013F  1903               	btfsc	3,2
  4517  0140  297B               	goto	l1882
  4518  0141  2914               	goto	l1862
  4519  0142                     l565:	
  4520                           ;doprnt.c: 1340: case 0x80:
  4521                           
  4522                           
  4523                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4524  0142  01C1               	clrf	printf@c
  4525  0143  0AC1               	incf	printf@c,f
  4526  0144                     l1872:	
  4527                           
  4528                           ;doprnt.c: 1343: if(val < hexpowers[c])
  4529  0144  0841               	movf	printf@c,w
  4530  0145  00B0               	movwf	??_printf
  4531  0146  01B1               	clrf	??_printf+1
  4532  0147  35B0               	lslf	??_printf,f
  4533  0148  0DB1               	rlf	??_printf+1,f
  4534  0149  35B0               	lslf	??_printf,f
  4535  014A  0DB1               	rlf	??_printf+1,f
  4536  014B  300E               	movlw	low (_hexpowers| (0+32768))
  4537  014C  0730               	addwf	??_printf,w
  4538  014D  0084               	movwf	4
  4539  014E  3085               	movlw	high (_hexpowers| (0+32768))
  4540  014F  3D31               	addwfc	??_printf+1,w
  4541  0150  0085               	movwf	5
  4542  0151  3F00               	moviw [0]fsr0
  4543  0152  00B2               	movwf	??_printf+2
  4544  0153  3F01               	moviw [1]fsr0
  4545  0154  00B3               	movwf	??_printf+3
  4546  0155  3F02               	moviw [2]fsr0
  4547  0156  00B4               	movwf	??_printf+4
  4548  0157  3F03               	moviw [3]fsr0
  4549  0158  00B5               	movwf	??_printf+5
  4550  0159  0835               	movf	??_printf+5,w
  4551  015A  023D               	subwf	printf@val+3,w
  4552  015B  1D03               	skipz
  4553  015C  2967               	goto	u1125
  4554  015D  0834               	movf	??_printf+4,w
  4555  015E  023C               	subwf	printf@val+2,w
  4556  015F  1D03               	skipz
  4557  0160  2967               	goto	u1125
  4558  0161  0833               	movf	??_printf+3,w
  4559  0162  023B               	subwf	printf@val+1,w
  4560  0163  1D03               	skipz
  4561  0164  2967               	goto	u1125
  4562  0165  0832               	movf	??_printf+2,w
  4563  0166  023A               	subwf	printf@val,w
  4564  0167                     u1125:	
  4565  0167  1C03               	btfss	3,0
  4566  0168  297B               	goto	l1882
  4567  0169  3001               	movlw	1
  4568  016A  00B0               	movwf	??_printf
  4569  016B  0830               	movf	??_printf,w
  4570  016C  07C1               	addwf	printf@c,f
  4571  016D  3008               	movlw	8
  4572  016E  0641               	xorwf	printf@c,w
  4573  016F  1903               	btfsc	3,2
  4574  0170  297B               	goto	l1882
  4575  0171  2944               	goto	l1872
  4576  0172                     l1880:	
  4577  0172  0840               	movf	printf@flag,w
  4578  0173  3980               	andlw	128
  4579                           
  4580                           ; Switch size 1, requested type "simple"
  4581                           ; Number of cases is 2, Range of values is 0 to 128
  4582                           ; switch strategies available:
  4583                           ; Name         Instructions Cycles
  4584                           ; simple_byte            7     4 (average)
  4585                           ; jumptable            260     6 (fixed)
  4586                           ;	Chosen strategy is simple_byte
  4587  0174  3A00               	xorlw	0	; case 0
  4588  0175  1903               	skipnz
  4589  0176  2912               	goto	l560
  4590  0177  3A80               	xorlw	128	; case 128
  4591  0178  1903               	skipnz
  4592  0179  2942               	goto	l565
  4593  017A  297B               	goto	l1882
  4594  017B                     l1882:	
  4595                           
  4596                           ;doprnt.c: 1371: if(width && flag & 0x03)
  4597  017B  083E               	movf	printf@width,w
  4598  017C  043F               	iorwf	printf@width+1,w
  4599  017D  1903               	btfsc	3,2
  4600  017E  2987               	goto	l569
  4601  017F  0840               	movf	printf@flag,w
  4602  0180  3903               	andlw	3
  4603  0181  1903               	btfsc	3,2
  4604  0182  2987               	goto	l569
  4605                           
  4606                           ;doprnt.c: 1372: width--;
  4607  0183  30FF               	movlw	255
  4608  0184  07BE               	addwf	printf@width,f
  4609  0185  30FF               	movlw	255
  4610  0186  3DBF               	addwfc	printf@width+1,f
  4611  0187                     l569:	
  4612                           
  4613                           ;doprnt.c: 1407: if(width > c)
  4614  0187  083F               	movf	printf@width+1,w
  4615  0188  3A80               	xorlw	128
  4616  0189  3C80               	sublw	128
  4617  018A  1D03               	skipz
  4618  018B  298E               	goto	u1165
  4619  018C  083E               	movf	printf@width,w
  4620  018D  0241               	subwf	printf@c,w
  4621  018E                     u1165:	
  4622  018E  1803               	skipnc
  4623  018F  2999               	goto	l1890
  4624                           
  4625                           ;doprnt.c: 1408: width -= c;
  4626  0190  0020               	movlb	0	; select bank0
  4627  0191  0841               	movf	printf@c,w
  4628  0192  00B0               	movwf	??_printf
  4629  0193  01B1               	clrf	??_printf+1
  4630  0194  0830               	movf	??_printf,w
  4631  0195  02BE               	subwf	printf@width,f
  4632  0196  0831               	movf	??_printf+1,w
  4633  0197  3BBF               	subwfb	printf@width+1,f
  4634  0198  299C               	goto	l1892
  4635  0199                     l1890:	
  4636                           
  4637                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  4638  0199  0020               	movlb	0	; select bank0
  4639  019A  01BE               	clrf	printf@width
  4640  019B  01BF               	clrf	printf@width+1
  4641  019C                     l1892:	
  4642                           
  4643                           ;doprnt.c: 1413: if(flag & 0x04) {
  4644  019C  1D40               	btfss	printf@flag,2
  4645  019D  29B5               	goto	l1904
  4646                           
  4647                           ;doprnt.c: 1418: if(flag & 0x03)
  4648  019E  0840               	movf	printf@flag,w
  4649  019F  3903               	andlw	3
  4650  01A0  1903               	btfsc	3,2
  4651  01A1  29A6               	goto	l1898
  4652                           
  4653                           ;doprnt.c: 1419: (putch('-') );
  4654  01A2  302D               	movlw	45
  4655  01A3  3186  26AC  3180   	fcall	_putch
  4656  01A6                     l1898:	
  4657                           
  4658                           ;doprnt.c: 1441: if(width)
  4659  01A6  0020               	movlb	0	; select bank0
  4660  01A7                     L4:	
  4661  01A7  083E               	movf	printf@width,w
  4662  01A8  043F               	iorwf	printf@width+1,w
  4663  01A9  1903               	btfsc	3,2
  4664  01AA  29CE               	goto	l1914
  4665                           
  4666                           ;doprnt.c: 1443: (putch('0') );
  4667  01AB  3030               	movlw	48
  4668  01AC  3186  26AC  3180   	fcall	_putch
  4669                           
  4670                           ;doprnt.c: 1444: while(--width);
  4671  01AF  30FF               	movlw	255
  4672  01B0  0020               	movlb	0	; select bank0
  4673  01B1  07BE               	addwf	printf@width,f
  4674  01B2  30FF               	movlw	255
  4675  01B3  3DBF               	addwfc	printf@width+1,f
  4676  01B4  29A7               	goto	L4
  4677  01B5                     l1904:	
  4678                           
  4679                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  4680  01B5  083E               	movf	printf@width,w
  4681  01B6  043F               	iorwf	printf@width+1,w
  4682  01B7  1903               	btfsc	3,2
  4683  01B8  29C6               	goto	l1910
  4684  01B9                     l1906:	
  4685                           
  4686                           ;doprnt.c: 1456: (putch(' ') );
  4687  01B9  3020               	movlw	32
  4688  01BA  3186  26AC  3180   	fcall	_putch
  4689                           
  4690                           ;doprnt.c: 1457: while(--width);
  4691  01BD  30FF               	movlw	255
  4692  01BE  0020               	movlb	0	; select bank0
  4693  01BF  07BE               	addwf	printf@width,f
  4694  01C0  30FF               	movlw	255
  4695  01C1  3DBF               	addwfc	printf@width+1,f
  4696  01C2  083E               	movf	printf@width,w
  4697  01C3  043F               	iorwf	printf@width+1,w
  4698  01C4  1D03               	btfss	3,2
  4699  01C5  29B9               	goto	l1906
  4700  01C6                     l1910:	
  4701                           
  4702                           ;doprnt.c: 1464: if(flag & 0x03)
  4703  01C6  0840               	movf	printf@flag,w
  4704  01C7  3903               	andlw	3
  4705  01C8  1903               	btfsc	3,2
  4706  01C9  29CE               	goto	l1914
  4707                           
  4708                           ;doprnt.c: 1465: (putch('-') );
  4709  01CA  302D               	movlw	45
  4710  01CB  3186  26AC  3180   	fcall	_putch
  4711  01CE                     l1914:	
  4712                           
  4713                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  4714  01CE  0020               	movlb	0	; select bank0
  4715  01CF  0841               	movf	printf@c,w
  4716  01D0  00B0               	movwf	??_printf
  4717  01D1  01B1               	clrf	??_printf+1
  4718  01D2  0830               	movf	??_printf,w
  4719  01D3  00B7               	movwf	printf@prec
  4720  01D4  0831               	movf	??_printf+1,w
  4721  01D5  00B8               	movwf	printf@prec+1
  4722                           
  4723                           ;doprnt.c: 1500: while(prec--) {
  4724  01D6  2A42               	goto	l1928
  4725  01D7                     l1916:	
  4726                           
  4727                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  4728  01D7  3000               	movlw	0
  4729  01D8  00A3               	movwf	___llmod@divisor+3
  4730  01D9  3000               	movlw	0
  4731  01DA  00A2               	movwf	___llmod@divisor+2
  4732  01DB  3000               	movlw	0
  4733  01DC  00A1               	movwf	___llmod@divisor+1
  4734  01DD  300A               	movlw	10
  4735  01DE  00A0               	movwf	___llmod@divisor
  4736  01DF  0838               	movf	printf@prec+1,w
  4737  01E0  0085               	movwf	5
  4738  01E1  0837               	movf	printf@prec,w
  4739  01E2  0084               	movwf	4
  4740  01E3  3584               	lslf	4,f
  4741  01E4  0D85               	rlf	5,f
  4742  01E5  3584               	lslf	4,f
  4743  01E6  0D85               	rlf	5,f
  4744  01E7  30C5               	movlw	low (_dpowers| (0+32768))
  4745  01E8  0784               	addwf	4,f
  4746  01E9  3084               	movlw	high (_dpowers| (0+32768))
  4747  01EA  3D85               	addwfc	5,f
  4748  01EB  3F00               	moviw [0]fsr0
  4749  01EC  00F0               	movwf	___lldiv@divisor
  4750  01ED  3F01               	moviw [1]fsr0
  4751  01EE  00F1               	movwf	___lldiv@divisor+1
  4752  01EF  3F02               	moviw [2]fsr0
  4753  01F0  00F2               	movwf	___lldiv@divisor+2
  4754  01F1  3F03               	moviw [3]fsr0
  4755  01F2  00F3               	movwf	___lldiv@divisor+3
  4756  01F3  083D               	movf	printf@val+3,w
  4757  01F4  00F7               	movwf	___lldiv@dividend+3
  4758  01F5  083C               	movf	printf@val+2,w
  4759  01F6  00F6               	movwf	___lldiv@dividend+2
  4760  01F7  083B               	movf	printf@val+1,w
  4761  01F8  00F5               	movwf	___lldiv@dividend+1
  4762  01F9  083A               	movf	printf@val,w
  4763  01FA  00F4               	movwf	___lldiv@dividend
  4764  01FB  3183  23D6  3180   	fcall	___lldiv
  4765  01FE  0873               	movf	?___lldiv+3,w
  4766  01FF  0020               	movlb	0	; select bank0
  4767  0200  00A7               	movwf	___llmod@dividend+3
  4768  0201  0872               	movf	?___lldiv+2,w
  4769  0202  00A6               	movwf	___llmod@dividend+2
  4770  0203  0871               	movf	?___lldiv+1,w
  4771  0204  00A5               	movwf	___llmod@dividend+1
  4772  0205  0870               	movf	?___lldiv,w
  4773  0206  00A4               	movwf	___llmod@dividend
  4774  0207  3184  2428  3180   	fcall	___llmod
  4775  020A  0020               	movlb	0	; select bank0
  4776  020B  0820               	movf	?___llmod,w
  4777  020C  3E30               	addlw	48
  4778  020D  2A3B               	goto	L3
  4779  020E                     l1918:	
  4780                           ;doprnt.c: 1517: break;
  4781                           
  4782                           
  4783                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned int)pr
      +                          ec]) & 0xF;
  4784  020E  0838               	movf	printf@prec+1,w
  4785  020F  0085               	movwf	5
  4786  0210  0837               	movf	printf@prec,w
  4787  0211  0084               	movwf	4
  4788  0212  3584               	lslf	4,f
  4789  0213  0D85               	rlf	5,f
  4790  0214  3584               	lslf	4,f
  4791  0215  0D85               	rlf	5,f
  4792  0216  300E               	movlw	low (_hexpowers| (0+32768))
  4793  0217  0784               	addwf	4,f
  4794  0218  3085               	movlw	high (_hexpowers| (0+32768))
  4795  0219  3D85               	addwfc	5,f
  4796  021A  3F00               	moviw [0]fsr0
  4797  021B  00F0               	movwf	___lldiv@divisor
  4798  021C  3F01               	moviw [1]fsr0
  4799  021D  00F1               	movwf	___lldiv@divisor+1
  4800  021E  3F02               	moviw [2]fsr0
  4801  021F  00F2               	movwf	___lldiv@divisor+2
  4802  0220  3F03               	moviw [3]fsr0
  4803  0221  00F3               	movwf	___lldiv@divisor+3
  4804  0222  083D               	movf	printf@val+3,w
  4805  0223  00F7               	movwf	___lldiv@dividend+3
  4806  0224  083C               	movf	printf@val+2,w
  4807  0225  00F6               	movwf	___lldiv@dividend+2
  4808  0226  083B               	movf	printf@val+1,w
  4809  0227  00F5               	movwf	___lldiv@dividend+1
  4810  0228  083A               	movf	printf@val,w
  4811  0229  00F4               	movwf	___lldiv@dividend
  4812  022A  3183  23D6  3180   	fcall	___lldiv
  4813  022D  0870               	movf	?___lldiv,w
  4814  022E  390F               	andlw	15
  4815  022F  0020               	movlb	0	; select bank0
  4816  0230  00B0               	movwf	??_printf
  4817  0231  0830               	movf	??_printf,w
  4818  0232  00B6               	movwf	printf@idx
  4819                           
  4820                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  4821  0233  0836               	movf	printf@idx,w
  4822  0234  3E1D               	addlw	low (STR_9| (0+32768))
  4823  0235  0084               	movwf	4
  4824  0236  3086               	movlw	high (STR_9| (0+32768))
  4825  0237  1803               	skipnc
  4826  0238  3E01               	addlw	1
  4827  0239  0085               	movwf	5
  4828  023A  0800               	movf	0,w	;code access
  4829  023B                     L3:	
  4830  023B  00B0               	movwf	??_printf
  4831  023C  0830               	movf	??_printf,w
  4832  023D  00C1               	movwf	printf@c
  4833  023E                     l1926:	
  4834                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  4835                           
  4836                           
  4837                           ;doprnt.c: 1550: (putch(c) );
  4838  023E  0841               	movf	printf@c,w
  4839  023F  3186  26AC  3180   	fcall	_putch
  4840  0242                     l1928:	
  4841  0242  30FF               	movlw	255
  4842  0243  0020               	movlb	0	; select bank0
  4843  0244  07B7               	addwf	printf@prec,f
  4844  0245  30FF               	movlw	255
  4845  0246  3DB8               	addwfc	printf@prec+1,f
  4846  0247  0A37               	incf	printf@prec,w
  4847  0248  1903               	btfsc	3,2
  4848  0249  0A38               	incf	printf@prec+1,w
  4849  024A  1903               	btfsc	3,2
  4850  024B  282E               	goto	l1930
  4851  024C  0840               	movf	printf@flag,w
  4852  024D  3980               	andlw	128
  4853                           
  4854                           ; Switch size 1, requested type "simple"
  4855                           ; Number of cases is 2, Range of values is 0 to 128
  4856                           ; switch strategies available:
  4857                           ; Name         Instructions Cycles
  4858                           ; simple_byte            7     4 (average)
  4859                           ; jumptable            260     6 (fixed)
  4860                           ;	Chosen strategy is simple_byte
  4861  024E  3A00               	xorlw	0	; case 0
  4862  024F  1903               	skipnz
  4863  0250  29D7               	goto	l1916
  4864  0251  3A80               	xorlw	128	; case 128
  4865  0252  1903               	skipnz
  4866  0253  2A0E               	goto	l1918
  4867  0254  2A3E               	goto	l1926
  4868  0255  2A3E               	goto	l1926
  4869  0256                     l590:	
  4870  0256  0008               	return
  4871  0257                     __end_of_printf:	
  4872                           
  4873                           	psect	text4
  4874  06AC                     __ptext4:	
  4875 ;; *************** function _putch *****************
  4876 ;; Defined at:
  4877 ;;		line 146 in file "mcc_generated_files/eusart.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  txData          1    wreg     unsigned char 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  txData          1    1[COMMON] unsigned char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1    wreg      void 
  4884 ;; Registers used:
  4885 ;;		wreg, status,2, status,0, pclath, cstack
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4891 ;;      Params:         0       0       0       0       0       0       0       0
  4892 ;;      Locals:         1       0       0       0       0       0       0       0
  4893 ;;      Temps:          0       0       0       0       0       0       0       0
  4894 ;;      Totals:         1       0       0       0       0       0       0       0
  4895 ;;Total ram usage:        1 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    5
  4898 ;; This function calls:
  4899 ;;		_EUSART_Write
  4900 ;; This function is called by:
  4901 ;;		_printf
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           
  4906                           ;psect for function _putch
  4907  06AC                     _putch:	
  4908                           
  4909                           ;incstack = 0
  4910                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4911                           ;putch@txData stored from wreg
  4912  06AC  00F1               	movwf	putch@txData
  4913                           
  4914                           ;eusart.c: 148: EUSART_Write(txData);
  4915  06AD  0871               	movf	putch@txData,w
  4916  06AE  3186  266A         	fcall	_EUSART_Write
  4917  06B0  0008               	return
  4918  06B1                     __end_of_putch:	
  4919                           
  4920                           	psect	text5
  4921  066A                     __ptext5:	
  4922 ;; *************** function _EUSART_Write *****************
  4923 ;; Defined at:
  4924 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  txData          1    wreg     unsigned char 
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;  txData          1    0[COMMON] unsigned char 
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  1    wreg      void 
  4931 ;; Registers used:
  4932 ;;		wreg
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4938 ;;      Params:         0       0       0       0       0       0       0       0
  4939 ;;      Locals:         1       0       0       0       0       0       0       0
  4940 ;;      Temps:          0       0       0       0       0       0       0       0
  4941 ;;      Totals:         1       0       0       0       0       0       0       0
  4942 ;;Total ram usage:        1 bytes
  4943 ;; Hardware stack levels used:    1
  4944 ;; Hardware stack levels required when called:    4
  4945 ;; This function calls:
  4946 ;;		Nothing
  4947 ;; This function is called by:
  4948 ;;		_putch
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           
  4953                           ;psect for function _EUSART_Write
  4954  066A                     _EUSART_Write:	
  4955                           
  4956                           ;incstack = 0
  4957                           ; Regs used in _EUSART_Write: [wreg]
  4958                           ;EUSART_Write@txData stored from wreg
  4959  066A  00F0               	movwf	EUSART_Write@txData
  4960  066B                     l195:	
  4961                           ;eusart.c: 135: {
  4962                           
  4963  066B  0020               	movlb	0	; select bank0
  4964  066C  1E11               	btfss	17,4	;volatile
  4965  066D  2E6B               	goto	l195
  4966                           
  4967                           ;eusart.c: 136: };eusart.c: 138: TX1REG = txData;
  4968  066E  0870               	movf	EUSART_Write@txData,w
  4969  066F  0023               	movlb	3	; select bank3
  4970  0670  009A               	movwf	26	;volatile
  4971  0671  0008               	return
  4972  0672                     __end_of_EUSART_Write:	
  4973                           
  4974                           	psect	text6
  4975  062E                     __ptext6:	
  4976 ;; *************** function _isdigit *****************
  4977 ;; Defined at:
  4978 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c90/common/isdigit.c"
  4979 ;; Parameters:    Size  Location     Type
  4980 ;;  c               1    wreg     unsigned char 
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;  c               1    1[COMMON] unsigned char 
  4983 ;; Return value:  Size  Location     Type
  4984 ;;		None               void
  4985 ;; Registers used:
  4986 ;;		wreg, status,2, status,0
  4987 ;; Tracked objects:
  4988 ;;		On entry : 0/0
  4989 ;;		On exit  : 0/0
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4992 ;;      Params:         0       0       0       0       0       0       0       0
  4993 ;;      Locals:         2       0       0       0       0       0       0       0
  4994 ;;      Temps:          0       0       0       0       0       0       0       0
  4995 ;;      Totals:         2       0       0       0       0       0       0       0
  4996 ;;Total ram usage:        2 bytes
  4997 ;; Hardware stack levels used:    1
  4998 ;; Hardware stack levels required when called:    4
  4999 ;; This function calls:
  5000 ;;		Nothing
  5001 ;; This function is called by:
  5002 ;;		_printf
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           
  5006                           
  5007                           ;psect for function _isdigit
  5008  062E                     _isdigit:	
  5009                           
  5010                           ;incstack = 0
  5011                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5012                           ;isdigit@c stored from wreg
  5013  062E  00F1               	movwf	isdigit@c
  5014  062F  01F0               	clrf	_isdigit$1248
  5015  0630  303A               	movlw	58
  5016  0631  0271               	subwf	isdigit@c,w
  5017  0632  1803               	skipnc
  5018  0633  2E3A               	goto	l1610
  5019  0634  3030               	movlw	48
  5020  0635  0271               	subwf	isdigit@c,w
  5021  0636  1C03               	skipc
  5022  0637  2E3A               	goto	l1610
  5023  0638  01F0               	clrf	_isdigit$1248
  5024  0639  0AF0               	incf	_isdigit$1248,f
  5025  063A                     l1610:	
  5026  063A  0C70               	rrf	_isdigit$1248,w
  5027  063B  0008               	return
  5028  063C                     __end_of_isdigit:	
  5029                           
  5030                           	psect	text7
  5031  05D3                     __ptext7:	
  5032 ;; *************** function ___wmul *****************
  5033 ;; Defined at:
  5034 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c90/common/Umul16.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  multiplier      2    0[COMMON] unsigned int 
  5037 ;;  multiplicand    2    2[COMMON] unsigned int 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  product         2    4[COMMON] unsigned int 
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  2    0[COMMON] unsigned int 
  5042 ;; Registers used:
  5043 ;;		wreg, status,2, status,0
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5049 ;;      Params:         4       0       0       0       0       0       0       0
  5050 ;;      Locals:         2       0       0       0       0       0       0       0
  5051 ;;      Temps:          0       0       0       0       0       0       0       0
  5052 ;;      Totals:         6       0       0       0       0       0       0       0
  5053 ;;Total ram usage:        6 bytes
  5054 ;; Hardware stack levels used:    1
  5055 ;; Hardware stack levels required when called:    4
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_printf
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           
  5064                           ;psect for function ___wmul
  5065  05D3                     ___wmul:	
  5066                           
  5067                           ;incstack = 0
  5068                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5069  05D3  01F4               	clrf	___wmul@product
  5070  05D4  01F5               	clrf	___wmul@product+1
  5071  05D5                     l1616:	
  5072  05D5  1C70               	btfss	___wmul@multiplier,0
  5073  05D6  2DDB               	goto	l594
  5074  05D7  0872               	movf	___wmul@multiplicand,w
  5075  05D8  07F4               	addwf	___wmul@product,f
  5076  05D9  0873               	movf	___wmul@multiplicand+1,w
  5077  05DA  3DF5               	addwfc	___wmul@product+1,f
  5078  05DB                     l594:	
  5079  05DB  3001               	movlw	1
  5080  05DC                     u745:	
  5081  05DC  35F2               	lslf	___wmul@multiplicand,f
  5082  05DD  0DF3               	rlf	___wmul@multiplicand+1,f
  5083  05DE  0B89               	decfsz	9,f
  5084  05DF  2DDC               	goto	u745
  5085  05E0  3001               	movlw	1
  5086  05E1                     u755:	
  5087  05E1  36F1               	lsrf	___wmul@multiplier+1,f
  5088  05E2  0CF0               	rrf	___wmul@multiplier,f
  5089  05E3  0B89               	decfsz	9,f
  5090  05E4  2DE1               	goto	u755
  5091  05E5  0870               	movf	___wmul@multiplier,w
  5092  05E6  0471               	iorwf	___wmul@multiplier+1,w
  5093  05E7  1D03               	btfss	3,2
  5094  05E8  2DD5               	goto	l1616
  5095  05E9  0875               	movf	___wmul@product+1,w
  5096  05EA  00F1               	movwf	?___wmul+1
  5097  05EB  0874               	movf	___wmul@product,w
  5098  05EC  00F0               	movwf	?___wmul
  5099  05ED  0008               	return
  5100  05EE                     __end_of___wmul:	
  5101                           
  5102                           	psect	text8
  5103  0428                     __ptext8:	
  5104 ;; *************** function ___llmod *****************
  5105 ;; Defined at:
  5106 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c90/common/llmod.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  divisor         4    0[BANK0 ] unsigned long 
  5109 ;;  dividend        4    4[BANK0 ] unsigned long 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;  counter         1    9[BANK0 ] unsigned char 
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  4    0[BANK0 ] unsigned long 
  5114 ;; Registers used:
  5115 ;;		wreg, status,2, status,0
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5121 ;;      Params:         0       8       0       0       0       0       0       0
  5122 ;;      Locals:         0       1       0       0       0       0       0       0
  5123 ;;      Temps:          0       1       0       0       0       0       0       0
  5124 ;;      Totals:         0      10       0       0       0       0       0       0
  5125 ;;Total ram usage:       10 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:    4
  5128 ;; This function calls:
  5129 ;;		Nothing
  5130 ;; This function is called by:
  5131 ;;		_printf
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           
  5136                           ;psect for function ___llmod
  5137  0428                     ___llmod:	
  5138                           
  5139                           ;incstack = 0
  5140                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5141  0428  0020               	movlb	0	; select bank0
  5142  0429  0823               	movf	___llmod@divisor+3,w
  5143  042A  0422               	iorwf	___llmod@divisor+2,w
  5144  042B  0421               	iorwf	___llmod@divisor+1,w
  5145  042C  0420               	iorwf	___llmod@divisor,w
  5146  042D  1903               	skipnz
  5147  042E  2C62               	goto	l1708
  5148  042F  01A9               	clrf	___llmod@counter
  5149  0430  0AA9               	incf	___llmod@counter,f
  5150  0431                     l1698:	
  5151  0431  1BA3               	btfsc	___llmod@divisor+3,7
  5152  0432  2C3F               	goto	l1700
  5153  0433  3001               	movlw	1
  5154  0434                     u955:	
  5155  0434  35A0               	lslf	___llmod@divisor,f
  5156  0435  0DA1               	rlf	___llmod@divisor+1,f
  5157  0436  0DA2               	rlf	___llmod@divisor+2,f
  5158  0437  0DA3               	rlf	___llmod@divisor+3,f
  5159  0438  0B89               	decfsz	9,f
  5160  0439  2C34               	goto	u955
  5161  043A  3001               	movlw	1
  5162  043B  00A8               	movwf	??___llmod
  5163  043C  0828               	movf	??___llmod,w
  5164  043D  07A9               	addwf	___llmod@counter,f
  5165  043E  2C31               	goto	l1698
  5166  043F                     l1700:	
  5167  043F  0823               	movf	___llmod@divisor+3,w
  5168  0440  0227               	subwf	___llmod@dividend+3,w
  5169  0441  1D03               	skipz
  5170  0442  2C4D               	goto	u975
  5171  0443  0822               	movf	___llmod@divisor+2,w
  5172  0444  0226               	subwf	___llmod@dividend+2,w
  5173  0445  1D03               	skipz
  5174  0446  2C4D               	goto	u975
  5175  0447  0821               	movf	___llmod@divisor+1,w
  5176  0448  0225               	subwf	___llmod@dividend+1,w
  5177  0449  1D03               	skipz
  5178  044A  2C4D               	goto	u975
  5179  044B  0820               	movf	___llmod@divisor,w
  5180  044C  0224               	subwf	___llmod@dividend,w
  5181  044D                     u975:	
  5182  044D  1C03               	skipc
  5183  044E  2C57               	goto	l1704
  5184  044F  0820               	movf	___llmod@divisor,w
  5185  0450  02A4               	subwf	___llmod@dividend,f
  5186  0451  0821               	movf	___llmod@divisor+1,w
  5187  0452  3BA5               	subwfb	___llmod@dividend+1,f
  5188  0453  0822               	movf	___llmod@divisor+2,w
  5189  0454  3BA6               	subwfb	___llmod@dividend+2,f
  5190  0455  0823               	movf	___llmod@divisor+3,w
  5191  0456  3BA7               	subwfb	___llmod@dividend+3,f
  5192  0457                     l1704:	
  5193  0457  3001               	movlw	1
  5194  0458                     u985:	
  5195  0458  36A3               	lsrf	___llmod@divisor+3,f
  5196  0459  0CA2               	rrf	___llmod@divisor+2,f
  5197  045A  0CA1               	rrf	___llmod@divisor+1,f
  5198  045B  0CA0               	rrf	___llmod@divisor,f
  5199  045C  0B89               	decfsz	9,f
  5200  045D  2C58               	goto	u985
  5201  045E  3001               	movlw	1
  5202  045F  02A9               	subwf	___llmod@counter,f
  5203  0460  1D03               	btfss	3,2
  5204  0461  2C3F               	goto	l1700
  5205  0462                     l1708:	
  5206  0462  0827               	movf	___llmod@dividend+3,w
  5207  0463  00A3               	movwf	?___llmod+3
  5208  0464  0826               	movf	___llmod@dividend+2,w
  5209  0465  00A2               	movwf	?___llmod+2
  5210  0466  0825               	movf	___llmod@dividend+1,w
  5211  0467  00A1               	movwf	?___llmod+1
  5212  0468  0824               	movf	___llmod@dividend,w
  5213  0469  00A0               	movwf	?___llmod
  5214  046A  0008               	return
  5215  046B                     __end_of___llmod:	
  5216                           
  5217                           	psect	text9
  5218  03D6                     __ptext9:	
  5219 ;; *************** function ___lldiv *****************
  5220 ;; Defined at:
  5221 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c90/common/__lldiv.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;  divisor         4    0[COMMON] unsigned long 
  5224 ;;  dividend        4    4[COMMON] unsigned long 
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;  quotient        4    9[COMMON] unsigned long 
  5227 ;;  counter         1   13[COMMON] unsigned char 
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  4    0[COMMON] unsigned long 
  5230 ;; Registers used:
  5231 ;;		wreg, status,2, status,0
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5237 ;;      Params:         8       0       0       0       0       0       0       0
  5238 ;;      Locals:         5       0       0       0       0       0       0       0
  5239 ;;      Temps:          1       0       0       0       0       0       0       0
  5240 ;;      Totals:        14       0       0       0       0       0       0       0
  5241 ;;Total ram usage:       14 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; Hardware stack levels required when called:    4
  5244 ;; This function calls:
  5245 ;;		Nothing
  5246 ;; This function is called by:
  5247 ;;		_printf
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           
  5252                           ;psect for function ___lldiv
  5253  03D6                     ___lldiv:	
  5254                           
  5255                           ;incstack = 0
  5256                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5257  03D6  3000               	movlw	0
  5258  03D7  00FC               	movwf	___lldiv@quotient+3
  5259  03D8  3000               	movlw	0
  5260  03D9  00FB               	movwf	___lldiv@quotient+2
  5261  03DA  3000               	movlw	0
  5262  03DB  00FA               	movwf	___lldiv@quotient+1
  5263  03DC  3000               	movlw	0
  5264  03DD  00F9               	movwf	___lldiv@quotient
  5265  03DE  0873               	movf	___lldiv@divisor+3,w
  5266  03DF  0472               	iorwf	___lldiv@divisor+2,w
  5267  03E0  0471               	iorwf	___lldiv@divisor+1,w
  5268  03E1  0470               	iorwf	___lldiv@divisor,w
  5269  03E2  1903               	skipnz
  5270  03E3  2C1F               	goto	l1648
  5271  03E4  01FD               	clrf	___lldiv@counter
  5272  03E5  0AFD               	incf	___lldiv@counter,f
  5273  03E6                     l1634:	
  5274  03E6  1BF3               	btfsc	___lldiv@divisor+3,7
  5275  03E7  2BF4               	goto	l1636
  5276  03E8  3001               	movlw	1
  5277  03E9                     u785:	
  5278  03E9  35F0               	lslf	___lldiv@divisor,f
  5279  03EA  0DF1               	rlf	___lldiv@divisor+1,f
  5280  03EB  0DF2               	rlf	___lldiv@divisor+2,f
  5281  03EC  0DF3               	rlf	___lldiv@divisor+3,f
  5282  03ED  0B89               	decfsz	9,f
  5283  03EE  2BE9               	goto	u785
  5284  03EF  3001               	movlw	1
  5285  03F0  00F8               	movwf	??___lldiv
  5286  03F1  0878               	movf	??___lldiv,w
  5287  03F2  07FD               	addwf	___lldiv@counter,f
  5288  03F3  2BE6               	goto	l1634
  5289  03F4                     l1636:	
  5290  03F4  3001               	movlw	1
  5291  03F5                     u805:	
  5292  03F5  35F9               	lslf	___lldiv@quotient,f
  5293  03F6  0DFA               	rlf	___lldiv@quotient+1,f
  5294  03F7  0DFB               	rlf	___lldiv@quotient+2,f
  5295  03F8  0DFC               	rlf	___lldiv@quotient+3,f
  5296  03F9  0B89               	decfsz	9,f
  5297  03FA  2BF5               	goto	u805
  5298  03FB  0873               	movf	___lldiv@divisor+3,w
  5299  03FC  0277               	subwf	___lldiv@dividend+3,w
  5300  03FD  1D03               	skipz
  5301  03FE  2C09               	goto	u815
  5302  03FF  0872               	movf	___lldiv@divisor+2,w
  5303  0400  0276               	subwf	___lldiv@dividend+2,w
  5304  0401  1D03               	skipz
  5305  0402  2C09               	goto	u815
  5306  0403  0871               	movf	___lldiv@divisor+1,w
  5307  0404  0275               	subwf	___lldiv@dividend+1,w
  5308  0405  1D03               	skipz
  5309  0406  2C09               	goto	u815
  5310  0407  0870               	movf	___lldiv@divisor,w
  5311  0408  0274               	subwf	___lldiv@dividend,w
  5312  0409                     u815:	
  5313  0409  1C03               	skipc
  5314  040A  2C14               	goto	l1644
  5315  040B  0870               	movf	___lldiv@divisor,w
  5316  040C  02F4               	subwf	___lldiv@dividend,f
  5317  040D  0871               	movf	___lldiv@divisor+1,w
  5318  040E  3BF5               	subwfb	___lldiv@dividend+1,f
  5319  040F  0872               	movf	___lldiv@divisor+2,w
  5320  0410  3BF6               	subwfb	___lldiv@dividend+2,f
  5321  0411  0873               	movf	___lldiv@divisor+3,w
  5322  0412  3BF7               	subwfb	___lldiv@dividend+3,f
  5323  0413  1479               	bsf	___lldiv@quotient,0
  5324  0414                     l1644:	
  5325  0414  3001               	movlw	1
  5326  0415                     u825:	
  5327  0415  36F3               	lsrf	___lldiv@divisor+3,f
  5328  0416  0CF2               	rrf	___lldiv@divisor+2,f
  5329  0417  0CF1               	rrf	___lldiv@divisor+1,f
  5330  0418  0CF0               	rrf	___lldiv@divisor,f
  5331  0419  0B89               	decfsz	9,f
  5332  041A  2C15               	goto	u825
  5333  041B  3001               	movlw	1
  5334  041C  02FD               	subwf	___lldiv@counter,f
  5335  041D  1D03               	btfss	3,2
  5336  041E  2BF4               	goto	l1636
  5337  041F                     l1648:	
  5338  041F  087C               	movf	___lldiv@quotient+3,w
  5339  0420  00F3               	movwf	?___lldiv+3
  5340  0421  087B               	movf	___lldiv@quotient+2,w
  5341  0422  00F2               	movwf	?___lldiv+2
  5342  0423  087A               	movf	___lldiv@quotient+1,w
  5343  0424  00F1               	movwf	?___lldiv+1
  5344  0425  0879               	movf	___lldiv@quotient,w
  5345  0426  00F0               	movwf	?___lldiv
  5346  0427  0008               	return
  5347  0428                     __end_of___lldiv:	
  5348                           
  5349                           	psect	text10
  5350  049A                     __ptext10:	
  5351 ;; *************** function _battery_voltage *****************
  5352 ;; Defined at:
  5353 ;;		line 88 in file "main.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;		None
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  2    6[BANK0 ] unsigned int 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0, pclath, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5367 ;;      Params:         0       2       0       0       0       0       0       0
  5368 ;;      Locals:         0       0       0       0       0       0       0       0
  5369 ;;      Temps:          0       0       0       0       0       0       0       0
  5370 ;;      Totals:         0       2       0       0       0       0       0       0
  5371 ;;Total ram usage:        2 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:    5
  5374 ;; This function calls:
  5375 ;;		___aldiv
  5376 ;; This function is called by:
  5377 ;;		_process_remote_command
  5378 ;;		_main
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           
  5383                           ;psect for function _battery_voltage
  5384  049A                     _battery_voltage:	
  5385                           
  5386                           ;main.c: 90: FVRCON = 0b10000001;
  5387                           
  5388                           ;incstack = 0
  5389                           ; Regs used in _battery_voltage: [wreg+status,2+status,0+pclath+cstack]
  5390  049A  3081               	movlw	129
  5391  049B  0022               	movlb	2	; select bank2
  5392  049C  0097               	movwf	23	;volatile
  5393                           
  5394                           ;main.c: 91: ADCON0 = 0b01111101;
  5395  049D  307D               	movlw	125
  5396  049E  0021               	movlb	1	; select bank1
  5397  049F  009D               	movwf	29	;volatile
  5398                           
  5399                           ;main.c: 92: ADCON1 = 0b10010000;
  5400  04A0  3090               	movlw	144
  5401  04A1  009E               	movwf	30	;volatile
  5402  04A2                     l390:	
  5403                           ;main.c: 93: while(!FVRCONbits.FVRRDY){ }
  5404                           
  5405  04A2  0022               	movlb	2	; select bank2
  5406  04A3  1F17               	btfss	23,6	;volatile
  5407  04A4  2CA2               	goto	l390
  5408                           
  5409                           ;main.c: 94: __nop();
  5410  04A5  0000               	nop
  5411                           
  5412                           ;main.c: 95: __nop();
  5413  04A6  0000               	nop
  5414                           
  5415                           ;main.c: 96: __nop();
  5416  04A7  0000               	nop
  5417                           
  5418                           ;main.c: 97: __nop();
  5419  04A8  0000               	nop
  5420                           
  5421                           ;main.c: 98: __nop();
  5422  04A9  0000               	nop
  5423                           
  5424                           ;main.c: 99: ADCON0bits.GO_nDONE = 1;
  5425  04AA  0021               	movlb	1	; select bank1
  5426  04AB  149D               	bsf	29,1	;volatile
  5427  04AC                     l393:	
  5428                           ;main.c: 100: while(ADCON0bits.GO_nDONE){ }
  5429                           
  5430  04AC  189D               	btfsc	29,1	;volatile
  5431  04AD  2CAC               	goto	l393
  5432                           
  5433                           ;main.c: 101: ADCON0bits.ADON = 0;
  5434  04AE  101D               	bcf	29,0	;volatile
  5435                           
  5436                           ;main.c: 106: return 1047552L / ADRES;
  5437  04AF  081B               	movf	27,w	;volatile
  5438  04B0  00F0               	movwf	___aldiv@divisor
  5439  04B1  081C               	movf	28,w	;volatile
  5440  04B2  00F1               	movwf	___aldiv@divisor+1
  5441  04B3  01F2               	clrf	___aldiv@divisor+2
  5442  04B4  01F3               	clrf	___aldiv@divisor+3
  5443  04B5  3000               	movlw	0
  5444  04B6  00F7               	movwf	___aldiv@dividend+3
  5445  04B7  300F               	movlw	15
  5446  04B8  00F6               	movwf	___aldiv@dividend+2
  5447  04B9  30FC               	movlw	252
  5448  04BA  00F5               	movwf	___aldiv@dividend+1
  5449  04BB  3000               	movlw	0
  5450  04BC  00F4               	movwf	___aldiv@dividend
  5451  04BD  3182  22EF         	fcall	___aldiv
  5452  04BF  0871               	movf	?___aldiv+1,w
  5453  04C0  0020               	movlb	0	; select bank0
  5454  04C1  00A7               	movwf	?_battery_voltage+1
  5455  04C2  0870               	movf	?___aldiv,w
  5456  04C3  00A6               	movwf	?_battery_voltage
  5457  04C4  0008               	return
  5458  04C5                     __end_of_battery_voltage:	
  5459                           
  5460                           	psect	text11
  5461  02EF                     __ptext11:	
  5462 ;; *************** function ___aldiv *****************
  5463 ;; Defined at:
  5464 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c90/common/aldiv.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;  divisor         4    0[COMMON] long 
  5467 ;;  dividend        4    4[COMMON] long 
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  quotient        4    2[BANK0 ] long 
  5470 ;;  sign            1    1[BANK0 ] unsigned char 
  5471 ;;  counter         1    0[BANK0 ] unsigned char 
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  4    0[COMMON] long 
  5474 ;; Registers used:
  5475 ;;		wreg, status,2, status,0
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5481 ;;      Params:         8       0       0       0       0       0       0       0
  5482 ;;      Locals:         0       6       0       0       0       0       0       0
  5483 ;;      Temps:          1       0       0       0       0       0       0       0
  5484 ;;      Totals:         9       6       0       0       0       0       0       0
  5485 ;;Total ram usage:       15 bytes
  5486 ;; Hardware stack levels used:    1
  5487 ;; Hardware stack levels required when called:    4
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_battery_voltage
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           
  5496                           ;psect for function ___aldiv
  5497  02EF                     ___aldiv:	
  5498                           
  5499                           ;incstack = 0
  5500                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5501  02EF  0020               	movlb	0	; select bank0
  5502  02F0  01A1               	clrf	___aldiv@sign
  5503  02F1  1FF3               	btfss	___aldiv@divisor+3,7
  5504  02F2  2B00               	goto	l665
  5505  02F3  09F0               	comf	___aldiv@divisor,f
  5506  02F4  09F1               	comf	___aldiv@divisor+1,f
  5507  02F5  09F2               	comf	___aldiv@divisor+2,f
  5508  02F6  09F3               	comf	___aldiv@divisor+3,f
  5509  02F7  0AF0               	incf	___aldiv@divisor,f
  5510  02F8  1903               	skipnz
  5511  02F9  0AF1               	incf	___aldiv@divisor+1,f
  5512  02FA  1903               	skipnz
  5513  02FB  0AF2               	incf	___aldiv@divisor+2,f
  5514  02FC  1903               	skipnz
  5515  02FD  0AF3               	incf	___aldiv@divisor+3,f
  5516  02FE  01A1               	clrf	___aldiv@sign
  5517  02FF  0AA1               	incf	___aldiv@sign,f
  5518  0300                     l665:	
  5519  0300  1FF7               	btfss	___aldiv@dividend+3,7
  5520  0301  2B11               	goto	l1662
  5521  0302  09F4               	comf	___aldiv@dividend,f
  5522  0303  09F5               	comf	___aldiv@dividend+1,f
  5523  0304  09F6               	comf	___aldiv@dividend+2,f
  5524  0305  09F7               	comf	___aldiv@dividend+3,f
  5525  0306  0AF4               	incf	___aldiv@dividend,f
  5526  0307  1903               	skipnz
  5527  0308  0AF5               	incf	___aldiv@dividend+1,f
  5528  0309  1903               	skipnz
  5529  030A  0AF6               	incf	___aldiv@dividend+2,f
  5530  030B  1903               	skipnz
  5531  030C  0AF7               	incf	___aldiv@dividend+3,f
  5532  030D  3001               	movlw	1
  5533  030E  00F8               	movwf	??___aldiv
  5534  030F  0878               	movf	??___aldiv,w
  5535  0310  06A1               	xorwf	___aldiv@sign,f
  5536  0311                     l1662:	
  5537  0311  3000               	movlw	0
  5538  0312  00A5               	movwf	___aldiv@quotient+3
  5539  0313  3000               	movlw	0
  5540  0314  00A4               	movwf	___aldiv@quotient+2
  5541  0315  3000               	movlw	0
  5542  0316  00A3               	movwf	___aldiv@quotient+1
  5543  0317  3000               	movlw	0
  5544  0318  00A2               	movwf	___aldiv@quotient
  5545  0319  0873               	movf	___aldiv@divisor+3,w
  5546  031A  0472               	iorwf	___aldiv@divisor+2,w
  5547  031B  0471               	iorwf	___aldiv@divisor+1,w
  5548  031C  0470               	iorwf	___aldiv@divisor,w
  5549  031D  1903               	skipnz
  5550  031E  2B5A               	goto	l1684
  5551  031F  01A0               	clrf	___aldiv@counter
  5552  0320  0AA0               	incf	___aldiv@counter,f
  5553  0321                     l1670:	
  5554  0321  1BF3               	btfsc	___aldiv@divisor+3,7
  5555  0322  2B2F               	goto	l1672
  5556  0323  3001               	movlw	1
  5557  0324                     u875:	
  5558  0324  35F0               	lslf	___aldiv@divisor,f
  5559  0325  0DF1               	rlf	___aldiv@divisor+1,f
  5560  0326  0DF2               	rlf	___aldiv@divisor+2,f
  5561  0327  0DF3               	rlf	___aldiv@divisor+3,f
  5562  0328  0B89               	decfsz	9,f
  5563  0329  2B24               	goto	u875
  5564  032A  3001               	movlw	1
  5565  032B  00F8               	movwf	??___aldiv
  5566  032C  0878               	movf	??___aldiv,w
  5567  032D  07A0               	addwf	___aldiv@counter,f
  5568  032E  2B21               	goto	l1670
  5569  032F                     l1672:	
  5570  032F  3001               	movlw	1
  5571  0330                     u895:	
  5572  0330  35A2               	lslf	___aldiv@quotient,f
  5573  0331  0DA3               	rlf	___aldiv@quotient+1,f
  5574  0332  0DA4               	rlf	___aldiv@quotient+2,f
  5575  0333  0DA5               	rlf	___aldiv@quotient+3,f
  5576  0334  0B89               	decfsz	9,f
  5577  0335  2B30               	goto	u895
  5578  0336  0873               	movf	___aldiv@divisor+3,w
  5579  0337  0277               	subwf	___aldiv@dividend+3,w
  5580  0338  1D03               	skipz
  5581  0339  2B44               	goto	u905
  5582  033A  0872               	movf	___aldiv@divisor+2,w
  5583  033B  0276               	subwf	___aldiv@dividend+2,w
  5584  033C  1D03               	skipz
  5585  033D  2B44               	goto	u905
  5586  033E  0871               	movf	___aldiv@divisor+1,w
  5587  033F  0275               	subwf	___aldiv@dividend+1,w
  5588  0340  1D03               	skipz
  5589  0341  2B44               	goto	u905
  5590  0342  0870               	movf	___aldiv@divisor,w
  5591  0343  0274               	subwf	___aldiv@dividend,w
  5592  0344                     u905:	
  5593  0344  1C03               	skipc
  5594  0345  2B4F               	goto	l1680
  5595  0346  0870               	movf	___aldiv@divisor,w
  5596  0347  02F4               	subwf	___aldiv@dividend,f
  5597  0348  0871               	movf	___aldiv@divisor+1,w
  5598  0349  3BF5               	subwfb	___aldiv@dividend+1,f
  5599  034A  0872               	movf	___aldiv@divisor+2,w
  5600  034B  3BF6               	subwfb	___aldiv@dividend+2,f
  5601  034C  0873               	movf	___aldiv@divisor+3,w
  5602  034D  3BF7               	subwfb	___aldiv@dividend+3,f
  5603  034E  1422               	bsf	___aldiv@quotient,0
  5604  034F                     l1680:	
  5605  034F  3001               	movlw	1
  5606  0350                     u915:	
  5607  0350  36F3               	lsrf	___aldiv@divisor+3,f
  5608  0351  0CF2               	rrf	___aldiv@divisor+2,f
  5609  0352  0CF1               	rrf	___aldiv@divisor+1,f
  5610  0353  0CF0               	rrf	___aldiv@divisor,f
  5611  0354  0B89               	decfsz	9,f
  5612  0355  2B50               	goto	u915
  5613  0356  3001               	movlw	1
  5614  0357  02A0               	subwf	___aldiv@counter,f
  5615  0358  1D03               	btfss	3,2
  5616  0359  2B2F               	goto	l1672
  5617  035A                     l1684:	
  5618  035A  0821               	movf	___aldiv@sign,w
  5619  035B  1903               	btfsc	3,2
  5620  035C  2B68               	goto	l1688
  5621  035D  09A2               	comf	___aldiv@quotient,f
  5622  035E  09A3               	comf	___aldiv@quotient+1,f
  5623  035F  09A4               	comf	___aldiv@quotient+2,f
  5624  0360  09A5               	comf	___aldiv@quotient+3,f
  5625  0361  0AA2               	incf	___aldiv@quotient,f
  5626  0362  1903               	skipnz
  5627  0363  0AA3               	incf	___aldiv@quotient+1,f
  5628  0364  1903               	skipnz
  5629  0365  0AA4               	incf	___aldiv@quotient+2,f
  5630  0366  1903               	skipnz
  5631  0367  0AA5               	incf	___aldiv@quotient+3,f
  5632  0368                     l1688:	
  5633  0368  0825               	movf	___aldiv@quotient+3,w
  5634  0369  00F3               	movwf	?___aldiv+3
  5635  036A  0824               	movf	___aldiv@quotient+2,w
  5636  036B  00F2               	movwf	?___aldiv+2
  5637  036C  0823               	movf	___aldiv@quotient+1,w
  5638  036D  00F1               	movwf	?___aldiv+1
  5639  036E  0822               	movf	___aldiv@quotient,w
  5640  036F  00F0               	movwf	?___aldiv
  5641  0370  0008               	return
  5642  0371                     __end_of___aldiv:	
  5643                           
  5644                           	psect	text12
  5645  052E                     __ptext12:	
  5646 ;; *************** function _SYSTEM_Initialize *****************
  5647 ;; Defined at:
  5648 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;		None
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;		None
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  1    wreg      void 
  5655 ;; Registers used:
  5656 ;;		wreg, status,2, status,0, pclath, cstack
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5662 ;;      Params:         0       0       0       0       0       0       0       0
  5663 ;;      Locals:         0       0       0       0       0       0       0       0
  5664 ;;      Temps:          0       0       0       0       0       0       0       0
  5665 ;;      Totals:         0       0       0       0       0       0       0       0
  5666 ;;Total ram usage:        0 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    6
  5669 ;; This function calls:
  5670 ;;		_DAC_Initialize
  5671 ;;		_EUSART_Initialize
  5672 ;;		_EXT_INT_Initialize
  5673 ;;		_OPA1_Initialize
  5674 ;;		_OPA2_Initialize
  5675 ;;		_OSCILLATOR_Initialize
  5676 ;;		_PIN_MANAGER_Initialize
  5677 ;;		_TMR0_Initialize
  5678 ;;		_TMR2_Initialize
  5679 ;;		_WDT_Initialize
  5680 ;; This function is called by:
  5681 ;;		_main
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           
  5686                           ;psect for function _SYSTEM_Initialize
  5687  052E                     _SYSTEM_Initialize:	
  5688                           
  5689                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  5690                           
  5691                           ;incstack = 0
  5692                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5693  052E  3184  246B  3185   	fcall	_PIN_MANAGER_Initialize
  5694                           
  5695                           ;mcc.c: 54: OSCILLATOR_Initialize();
  5696  0531  3186  267A  3185   	fcall	_OSCILLATOR_Initialize
  5697                           
  5698                           ;mcc.c: 55: WDT_Initialize();
  5699  0534  3186  26B5  3185   	fcall	_WDT_Initialize
  5700                           
  5701                           ;mcc.c: 56: DAC_Initialize();
  5702  0537  3186  26A6  3185   	fcall	_DAC_Initialize
  5703                           
  5704                           ;mcc.c: 57: OPA1_Initialize();
  5705  053A  3186  26BD  3185   	fcall	_OPA1_Initialize
  5706                           
  5707                           ;mcc.c: 58: OPA2_Initialize();
  5708  053D  3186  26B9  3185   	fcall	_OPA2_Initialize
  5709                           
  5710                           ;mcc.c: 59: TMR2_Initialize();
  5711  0540  3186  2672  3185   	fcall	_TMR2_Initialize
  5712                           
  5713                           ;mcc.c: 60: EXT_INT_Initialize();
  5714  0543  3186  264A  3185   	fcall	_EXT_INT_Initialize
  5715                           
  5716                           ;mcc.c: 61: TMR0_Initialize();
  5717  0546  3186  2608  3185   	fcall	_TMR0_Initialize
  5718                           
  5719                           ;mcc.c: 62: EUSART_Initialize();
  5720  0549  3184  24ED         	fcall	_EUSART_Initialize
  5721  054B  0008               	return
  5722  054C                     __end_of_SYSTEM_Initialize:	
  5723                           
  5724                           	psect	text13
  5725  06B5                     __ptext13:	
  5726 ;; *************** function _WDT_Initialize *****************
  5727 ;; Defined at:
  5728 ;;		line 77 in file "mcc_generated_files/mcc.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;		None
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;		None
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  1    wreg      void 
  5735 ;; Registers used:
  5736 ;;		wreg
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5742 ;;      Params:         0       0       0       0       0       0       0       0
  5743 ;;      Locals:         0       0       0       0       0       0       0       0
  5744 ;;      Temps:          0       0       0       0       0       0       0       0
  5745 ;;      Totals:         0       0       0       0       0       0       0       0
  5746 ;;Total ram usage:        0 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:    4
  5749 ;; This function calls:
  5750 ;;		Nothing
  5751 ;; This function is called by:
  5752 ;;		_SYSTEM_Initialize
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           
  5757                           ;psect for function _WDT_Initialize
  5758  06B5                     _WDT_Initialize:	
  5759                           
  5760                           ;mcc.c: 80: WDTCON = 0x16;
  5761                           
  5762                           ;incstack = 0
  5763                           ; Regs used in _WDT_Initialize: [wreg]
  5764  06B5  3016               	movlw	22
  5765  06B6  0021               	movlb	1	; select bank1
  5766  06B7  0097               	movwf	23	;volatile
  5767  06B8  0008               	return
  5768  06B9                     __end_of_WDT_Initialize:	
  5769                           
  5770                           	psect	text14
  5771  0672                     __ptext14:	
  5772 ;; *************** function _TMR2_Initialize *****************
  5773 ;; Defined at:
  5774 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;		None
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;		None
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  1    wreg      void 
  5781 ;; Registers used:
  5782 ;;		wreg, status,2
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5788 ;;      Params:         0       0       0       0       0       0       0       0
  5789 ;;      Locals:         0       0       0       0       0       0       0       0
  5790 ;;      Temps:          0       0       0       0       0       0       0       0
  5791 ;;      Totals:         0       0       0       0       0       0       0       0
  5792 ;;Total ram usage:        0 bytes
  5793 ;; Hardware stack levels used:    1
  5794 ;; Hardware stack levels required when called:    4
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_SYSTEM_Initialize
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           
  5803                           ;psect for function _TMR2_Initialize
  5804  0672                     _TMR2_Initialize:	
  5805                           
  5806                           ;tmr2.c: 67: PR2 = 0x7F;
  5807                           
  5808                           ;incstack = 0
  5809                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5810  0672  307F               	movlw	127
  5811  0673  0020               	movlb	0	; select bank0
  5812  0674  009B               	movwf	27	;volatile
  5813                           
  5814                           ;tmr2.c: 70: TMR2 = 0x00;
  5815  0675  019A               	clrf	26	;volatile
  5816                           
  5817                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
  5818  0676  1091               	bcf	17,1	;volatile
  5819                           
  5820                           ;tmr2.c: 76: T2CON = 0x04;
  5821  0677  3004               	movlw	4
  5822  0678  009C               	movwf	28	;volatile
  5823  0679  0008               	return
  5824  067A                     __end_of_TMR2_Initialize:	
  5825                           
  5826                           	psect	text15
  5827  0608                     __ptext15:	
  5828 ;; *************** function _TMR0_Initialize *****************
  5829 ;; Defined at:
  5830 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;		None
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;		None
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  1    wreg      void 
  5837 ;; Registers used:
  5838 ;;		wreg, status,2, status,0, pclath, cstack
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5844 ;;      Params:         0       0       0       0       0       0       0       0
  5845 ;;      Locals:         0       0       0       0       0       0       0       0
  5846 ;;      Temps:          1       0       0       0       0       0       0       0
  5847 ;;      Totals:         1       0       0       0       0       0       0       0
  5848 ;;Total ram usage:        1 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; Hardware stack levels required when called:    5
  5851 ;; This function calls:
  5852 ;;		_TMR0_SetInterruptHandler
  5853 ;; This function is called by:
  5854 ;;		_SYSTEM_Initialize
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           
  5859                           ;psect for function _TMR0_Initialize
  5860  0608                     _TMR0_Initialize:	
  5861                           
  5862                           ;tmr0.c: 69: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD5 & 0x3F));
  5863                           
  5864                           ;incstack = 0
  5865                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5866  0608  0021               	movlb	1	; select bank1
  5867  0609  0815               	movf	21,w	;volatile
  5868  060A  39C0               	andlw	192
  5869  060B  3815               	iorlw	21
  5870  060C  0095               	movwf	21	;volatile
  5871                           
  5872                           ;tmr0.c: 72: TMR0 = 0xD8;
  5873  060D  30D8               	movlw	216
  5874  060E  0020               	movlb	0	; select bank0
  5875  060F  0095               	movwf	21	;volatile
  5876                           
  5877                           ;tmr0.c: 75: timer0ReloadVal= 216;
  5878  0610  30D8               	movlw	216
  5879  0611  00F2               	movwf	??_TMR0_Initialize
  5880  0612  0872               	movf	??_TMR0_Initialize,w
  5881  0613  00D1               	movwf	_timer0ReloadVal	;volatile
  5882                           
  5883                           ;tmr0.c: 78: INTCONbits.TMR0IF = 0;
  5884  0614  110B               	bcf	11,2	;volatile
  5885                           
  5886                           ;tmr0.c: 81: INTCONbits.TMR0IE = 1;
  5887  0615  168B               	bsf	11,5	;volatile
  5888                           
  5889                           ;tmr0.c: 84: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  5890  0616  30C5               	movlw	low _TMR0_DefaultInterruptHandler
  5891  0617  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  5892  0618  3006               	movlw	high _TMR0_DefaultInterruptHandler
  5893  0619  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  5894  061A  3186  2688         	fcall	_TMR0_SetInterruptHandler
  5895  061C  0008               	return
  5896  061D                     __end_of_TMR0_Initialize:	
  5897                           
  5898                           	psect	text16
  5899  0688                     __ptext16:	
  5900 ;; *************** function _TMR0_SetInterruptHandler *****************
  5901 ;; Defined at:
  5902 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  5905 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;		None
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      void 
  5910 ;; Registers used:
  5911 ;;		wreg
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5917 ;;      Params:         2       0       0       0       0       0       0       0
  5918 ;;      Locals:         0       0       0       0       0       0       0       0
  5919 ;;      Temps:          0       0       0       0       0       0       0       0
  5920 ;;      Totals:         2       0       0       0       0       0       0       0
  5921 ;;Total ram usage:        2 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:    4
  5924 ;; This function calls:
  5925 ;;		Nothing
  5926 ;; This function is called by:
  5927 ;;		_TMR0_Initialize
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           
  5932                           ;psect for function _TMR0_SetInterruptHandler
  5933  0688                     _TMR0_SetInterruptHandler:	
  5934                           
  5935                           ;tmr0.c: 126: TMR0_InterruptHandler = InterruptHandler;
  5936                           
  5937                           ;incstack = 0
  5938                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  5939  0688  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  5940  0689  0020               	movlb	0	; select bank0
  5941  068A  00C8               	movwf	_TMR0_InterruptHandler+1
  5942  068B  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  5943  068C  00C7               	movwf	_TMR0_InterruptHandler
  5944  068D  0008               	return
  5945  068E                     __end_of_TMR0_SetInterruptHandler:	
  5946                           
  5947                           	psect	text17
  5948  046B                     __ptext17:	
  5949 ;; *************** function _PIN_MANAGER_Initialize *****************
  5950 ;; Defined at:
  5951 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;		None
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;		None
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  1    wreg      void 
  5958 ;; Registers used:
  5959 ;;		wreg, status,2
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5965 ;;      Params:         0       0       0       0       0       0       0       0
  5966 ;;      Locals:         0       0       0       0       0       0       0       0
  5967 ;;      Temps:          0       0       0       0       0       0       0       0
  5968 ;;      Totals:         0       0       0       0       0       0       0       0
  5969 ;;Total ram usage:        0 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; Hardware stack levels required when called:    4
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_SYSTEM_Initialize
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           
  5980                           ;psect for function _PIN_MANAGER_Initialize
  5981  046B                     _PIN_MANAGER_Initialize:	
  5982                           
  5983                           ;pin_manager.c: 60: LATA = 0x00;
  5984                           
  5985                           ;incstack = 0
  5986                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5987  046B  0022               	movlb	2	; select bank2
  5988  046C  018C               	clrf	12	;volatile
  5989                           
  5990                           ;pin_manager.c: 61: LATB = 0x00;
  5991  046D  018D               	clrf	13	;volatile
  5992                           
  5993                           ;pin_manager.c: 62: LATC = 0x00;
  5994  046E  018E               	clrf	14	;volatile
  5995                           
  5996                           ;pin_manager.c: 67: TRISA = 0x04;
  5997  046F  3004               	movlw	4
  5998  0470  0021               	movlb	1	; select bank1
  5999  0471  008C               	movwf	12	;volatile
  6000                           
  6001                           ;pin_manager.c: 68: TRISB = 0x20;
  6002  0472  3020               	movlw	32
  6003  0473  008D               	movwf	13	;volatile
  6004                           
  6005                           ;pin_manager.c: 69: TRISC = 0x00;
  6006  0474  018E               	clrf	14	;volatile
  6007                           
  6008                           ;pin_manager.c: 74: ANSELC = 0x00;
  6009  0475  0023               	movlb	3	; select bank3
  6010  0476  018E               	clrf	14	;volatile
  6011                           
  6012                           ;pin_manager.c: 75: ANSELB = 0x00;
  6013  0477  018D               	clrf	13	;volatile
  6014                           
  6015                           ;pin_manager.c: 76: ANSELA = 0x00;
  6016  0478  018C               	clrf	12	;volatile
  6017                           
  6018                           ;pin_manager.c: 81: WPUB = 0x00;
  6019  0479  0024               	movlb	4	; select bank4
  6020  047A  018D               	clrf	13	;volatile
  6021                           
  6022                           ;pin_manager.c: 82: WPUA = 0x00;
  6023  047B  018C               	clrf	12	;volatile
  6024                           
  6025                           ;pin_manager.c: 83: WPUC = 0x00;
  6026  047C  018E               	clrf	14	;volatile
  6027                           
  6028                           ;pin_manager.c: 84: OPTION_REGbits.nWPUEN = 0;
  6029  047D  0021               	movlb	1	; select bank1
  6030  047E  1395               	bcf	21,7	;volatile
  6031                           
  6032                           ;pin_manager.c: 89: ODCONA = 0x00;
  6033  047F  0025               	movlb	5	; select bank5
  6034  0480  018C               	clrf	12	;volatile
  6035                           
  6036                           ;pin_manager.c: 90: ODCONB = 0x00;
  6037  0481  018D               	clrf	13	;volatile
  6038                           
  6039                           ;pin_manager.c: 91: ODCONC = 0x00;
  6040  0482  018E               	clrf	14	;volatile
  6041                           
  6042                           ;pin_manager.c: 96: SLRCONA = 0x37;
  6043  0483  3037               	movlw	55
  6044  0484  0026               	movlb	6	; select bank6
  6045  0485  008C               	movwf	12	;volatile
  6046                           
  6047                           ;pin_manager.c: 97: SLRCONB = 0xF0;
  6048  0486  30F0               	movlw	240
  6049  0487  008D               	movwf	13	;volatile
  6050                           
  6051                           ;pin_manager.c: 98: SLRCONC = 0xFF;
  6052  0488  30FF               	movlw	255
  6053  0489  008E               	movwf	14	;volatile
  6054                           
  6055                           ;pin_manager.c: 103: INLVLA = 0x3F;
  6056  048A  303F               	movlw	63
  6057  048B  0027               	movlb	7	; select bank7
  6058  048C  008C               	movwf	12	;volatile
  6059                           
  6060                           ;pin_manager.c: 104: INLVLB = 0xF0;
  6061  048D  30F0               	movlw	240
  6062  048E  008D               	movwf	13	;volatile
  6063                           
  6064                           ;pin_manager.c: 105: INLVLC = 0xFF;
  6065  048F  30FF               	movlw	255
  6066  0490  008E               	movwf	14	;volatile
  6067                           
  6068                           ;pin_manager.c: 114: INTPPS = 0x02;
  6069  0491  3002               	movlw	2
  6070  0492  003C               	movlb	28	; select bank28
  6071  0493  0090               	movwf	16	;volatile
  6072                           
  6073                           ;pin_manager.c: 115: RXPPS = 0x0D;
  6074  0494  300D               	movlw	13
  6075  0495  00A4               	movwf	36	;volatile
  6076                           
  6077                           ;pin_manager.c: 116: RB7PPS = 0x14;
  6078  0496  3014               	movlw	20
  6079  0497  003D               	movlb	29	; select bank29
  6080  0498  009F               	movwf	31	;volatile
  6081  0499  0008               	return
  6082  049A                     __end_of_PIN_MANAGER_Initialize:	
  6083                           
  6084                           	psect	text18
  6085  067A                     __ptext18:	
  6086 ;; *************** function _OSCILLATOR_Initialize *****************
  6087 ;; Defined at:
  6088 ;;		line 65 in file "mcc_generated_files/mcc.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;		None
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;		None
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  1    wreg      void 
  6095 ;; Registers used:
  6096 ;;		wreg, status,2
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6102 ;;      Params:         0       0       0       0       0       0       0       0
  6103 ;;      Locals:         0       0       0       0       0       0       0       0
  6104 ;;      Temps:          0       0       0       0       0       0       0       0
  6105 ;;      Totals:         0       0       0       0       0       0       0       0
  6106 ;;Total ram usage:        0 bytes
  6107 ;; Hardware stack levels used:    1
  6108 ;; Hardware stack levels required when called:    4
  6109 ;; This function calls:
  6110 ;;		Nothing
  6111 ;; This function is called by:
  6112 ;;		_SYSTEM_Initialize
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           
  6117                           ;psect for function _OSCILLATOR_Initialize
  6118  067A                     _OSCILLATOR_Initialize:	
  6119                           
  6120                           ;mcc.c: 68: OSCCON = 0x6A;
  6121                           
  6122                           ;incstack = 0
  6123                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6124  067A  306A               	movlw	106
  6125  067B  0021               	movlb	1	; select bank1
  6126  067C  0099               	movwf	25	;volatile
  6127                           
  6128                           ;mcc.c: 70: OSCSTAT = 0x00;
  6129  067D  019A               	clrf	26	;volatile
  6130                           
  6131                           ;mcc.c: 72: OSCTUNE = 0x00;
  6132  067E  0198               	clrf	24	;volatile
  6133                           
  6134                           ;mcc.c: 74: BORCON = 0x00;
  6135  067F  0022               	movlb	2	; select bank2
  6136  0680  0196               	clrf	22	;volatile
  6137  0681  0008               	return
  6138  0682                     __end_of_OSCILLATOR_Initialize:	
  6139                           
  6140                           	psect	text19
  6141  06B9                     __ptext19:	
  6142 ;; *************** function _OPA2_Initialize *****************
  6143 ;; Defined at:
  6144 ;;		line 58 in file "mcc_generated_files/opa2.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;		None
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;		None
  6149 ;; Return value:  Size  Location     Type
  6150 ;;                  1    wreg      void 
  6151 ;; Registers used:
  6152 ;;		wreg
  6153 ;; Tracked objects:
  6154 ;;		On entry : 0/0
  6155 ;;		On exit  : 0/0
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6158 ;;      Params:         0       0       0       0       0       0       0       0
  6159 ;;      Locals:         0       0       0       0       0       0       0       0
  6160 ;;      Temps:          0       0       0       0       0       0       0       0
  6161 ;;      Totals:         0       0       0       0       0       0       0       0
  6162 ;;Total ram usage:        0 bytes
  6163 ;; Hardware stack levels used:    1
  6164 ;; Hardware stack levels required when called:    4
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		_SYSTEM_Initialize
  6169 ;;		_main
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           
  6174                           ;psect for function _OPA2_Initialize
  6175  06B9                     _OPA2_Initialize:	
  6176                           
  6177                           ;opa2.c: 61: OPA2CON = 0xD2;
  6178                           
  6179                           ;incstack = 0
  6180                           ; Regs used in _OPA2_Initialize: [wreg]
  6181  06B9  30D2               	movlw	210
  6182  06BA  002A               	movlb	10	; select bank10
  6183  06BB  0095               	movwf	21	;volatile
  6184  06BC  0008               	return
  6185  06BD                     __end_of_OPA2_Initialize:	
  6186                           
  6187                           	psect	text20
  6188  06BD                     __ptext20:	
  6189 ;; *************** function _OPA1_Initialize *****************
  6190 ;; Defined at:
  6191 ;;		line 58 in file "mcc_generated_files/opa1.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;		None
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;		None
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1    wreg      void 
  6198 ;; Registers used:
  6199 ;;		wreg
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6205 ;;      Params:         0       0       0       0       0       0       0       0
  6206 ;;      Locals:         0       0       0       0       0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0       0       0       0
  6208 ;;      Totals:         0       0       0       0       0       0       0       0
  6209 ;;Total ram usage:        0 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:    4
  6212 ;; This function calls:
  6213 ;;		Nothing
  6214 ;; This function is called by:
  6215 ;;		_SYSTEM_Initialize
  6216 ;;		_main
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           
  6221                           ;psect for function _OPA1_Initialize
  6222  06BD                     _OPA1_Initialize:	
  6223                           
  6224                           ;opa1.c: 61: OPA1CON = 0xD2;
  6225                           
  6226                           ;incstack = 0
  6227                           ; Regs used in _OPA1_Initialize: [wreg]
  6228  06BD  30D2               	movlw	210
  6229  06BE  002A               	movlb	10	; select bank10
  6230  06BF  0091               	movwf	17	;volatile
  6231  06C0  0008               	return
  6232  06C1                     __end_of_OPA1_Initialize:	
  6233                           
  6234                           	psect	text21
  6235  064A                     __ptext21:	
  6236 ;; *************** function _EXT_INT_Initialize *****************
  6237 ;; Defined at:
  6238 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;		None
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;		None
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  1    wreg      void 
  6245 ;; Registers used:
  6246 ;;		wreg, status,2, status,0, pclath, cstack
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6252 ;;      Params:         0       0       0       0       0       0       0       0
  6253 ;;      Locals:         0       0       0       0       0       0       0       0
  6254 ;;      Temps:          0       0       0       0       0       0       0       0
  6255 ;;      Totals:         0       0       0       0       0       0       0       0
  6256 ;;Total ram usage:        0 bytes
  6257 ;; Hardware stack levels used:    1
  6258 ;; Hardware stack levels required when called:    5
  6259 ;; This function calls:
  6260 ;;		_INT_SetInterruptHandler
  6261 ;; This function is called by:
  6262 ;;		_SYSTEM_Initialize
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           
  6267                           ;psect for function _EXT_INT_Initialize
  6268  064A                     _EXT_INT_Initialize:	
  6269                           
  6270                           ;ext_int.c: 64: (INTCONbits.INTF = 0);
  6271                           
  6272                           ;incstack = 0
  6273                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6274  064A  108B               	bcf	11,1	;volatile
  6275                           
  6276                           ;ext_int.c: 65: (OPTION_REGbits.INTEDG = 0);
  6277  064B  0021               	movlb	1	; select bank1
  6278  064C  1315               	bcf	21,6	;volatile
  6279                           
  6280                           ;ext_int.c: 67: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
  6281  064D  30C6               	movlw	low _INT_DefaultInterruptHandler
  6282  064E  00F0               	movwf	INT_SetInterruptHandler@InterruptHandler
  6283  064F  3006               	movlw	high _INT_DefaultInterruptHandler
  6284  0650  00F1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  6285  0651  3186  268E         	fcall	_INT_SetInterruptHandler
  6286                           
  6287                           ;ext_int.c: 68: (INTCONbits.INTE = 1);
  6288  0653  160B               	bsf	11,4	;volatile
  6289  0654  0008               	return
  6290  0655                     __end_of_EXT_INT_Initialize:	
  6291                           
  6292                           	psect	text22
  6293  068E                     __ptext22:	
  6294 ;; *************** function _INT_SetInterruptHandler *****************
  6295 ;; Defined at:
  6296 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  6299 ;;		 -> INT_DefaultInterruptHandler(1), 
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;		None
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  1    wreg      void 
  6304 ;; Registers used:
  6305 ;;		wreg
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6311 ;;      Params:         2       0       0       0       0       0       0       0
  6312 ;;      Locals:         0       0       0       0       0       0       0       0
  6313 ;;      Temps:          0       0       0       0       0       0       0       0
  6314 ;;      Totals:         2       0       0       0       0       0       0       0
  6315 ;;Total ram usage:        2 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; Hardware stack levels required when called:    4
  6318 ;; This function calls:
  6319 ;;		Nothing
  6320 ;; This function is called by:
  6321 ;;		_EXT_INT_Initialize
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           
  6326                           ;psect for function _INT_SetInterruptHandler
  6327  068E                     _INT_SetInterruptHandler:	
  6328                           
  6329                           ;ext_int.c: 51: INT_InterruptHandler = InterruptHandler;
  6330                           
  6331                           ;incstack = 0
  6332                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  6333  068E  0871               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  6334  068F  0020               	movlb	0	; select bank0
  6335  0690  00CA               	movwf	_INT_InterruptHandler+1
  6336  0691  0870               	movf	INT_SetInterruptHandler@InterruptHandler,w
  6337  0692  00C9               	movwf	_INT_InterruptHandler
  6338  0693  0008               	return
  6339  0694                     __end_of_INT_SetInterruptHandler:	
  6340                           
  6341                           	psect	text23
  6342  04ED                     __ptext23:	
  6343 ;; *************** function _EUSART_Initialize *****************
  6344 ;; Defined at:
  6345 ;;		line 66 in file "mcc_generated_files/eusart.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;		None
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1    wreg      void 
  6352 ;; Registers used:
  6353 ;;		wreg, status,2, status,0, pclath, cstack
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6359 ;;      Params:         0       0       0       0       0       0       0       0
  6360 ;;      Locals:         0       0       0       0       0       0       0       0
  6361 ;;      Temps:          0       0       0       0       0       0       0       0
  6362 ;;      Totals:         0       0       0       0       0       0       0       0
  6363 ;;Total ram usage:        0 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; Hardware stack levels required when called:    5
  6366 ;; This function calls:
  6367 ;;		_EUSART_SetErrorHandler
  6368 ;;		_EUSART_SetFramingErrorHandler
  6369 ;;		_EUSART_SetOverrunErrorHandler
  6370 ;; This function is called by:
  6371 ;;		_SYSTEM_Initialize
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           
  6376                           ;psect for function _EUSART_Initialize
  6377  04ED                     _EUSART_Initialize:	
  6378                           
  6379                           ;eusart.c: 71: BAUD1CON = 0x08;
  6380                           
  6381                           ;incstack = 0
  6382                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6383  04ED  3008               	movlw	8
  6384  04EE  0023               	movlb	3	; select bank3
  6385  04EF  009F               	movwf	31	;volatile
  6386                           
  6387                           ;eusart.c: 74: RC1STA = 0x90;
  6388  04F0  3090               	movlw	144
  6389  04F1  009D               	movwf	29	;volatile
  6390                           
  6391                           ;eusart.c: 77: TX1STA = 0x24;
  6392  04F2  3024               	movlw	36
  6393  04F3  009E               	movwf	30	;volatile
  6394                           
  6395                           ;eusart.c: 80: SP1BRGL = 0x08;
  6396  04F4  3008               	movlw	8
  6397  04F5  009B               	movwf	27	;volatile
  6398                           
  6399                           ;eusart.c: 83: SP1BRGH = 0x00;
  6400  04F6  019C               	clrf	28	;volatile
  6401                           
  6402                           ;eusart.c: 86: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  6403  04F7  3000               	movlw	0
  6404  04F8  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  6405  04F9  3000               	movlw	0
  6406  04FA  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  6407  04FB  3186  269A  3184   	fcall	_EUSART_SetFramingErrorHandler
  6408                           
  6409                           ;eusart.c: 87: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  6410  04FE  3000               	movlw	0
  6411  04FF  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  6412  0500  3000               	movlw	0
  6413  0501  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  6414  0502  3186  2694  3184   	fcall	_EUSART_SetOverrunErrorHandler
  6415                           
  6416                           ;eusart.c: 88: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  6417  0505  3000               	movlw	0
  6418  0506  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  6419  0507  3000               	movlw	0
  6420  0508  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  6421  0509  3186  26A0         	fcall	_EUSART_SetErrorHandler
  6422                           
  6423                           ;eusart.c: 90: eusartRxLastError.status = 0;
  6424  050B  0020               	movlb	0	; select bank0
  6425  050C  01D5               	clrf	_eusartRxLastError	;volatile
  6426  050D  0008               	return
  6427  050E                     __end_of_EUSART_Initialize:	
  6428                           
  6429                           	psect	text24
  6430  0694                     __ptext24:	
  6431 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6432 ;; Defined at:
  6433 ;;		line 170 in file "mcc_generated_files/eusart.c"
  6434 ;; Parameters:    Size  Location     Type
  6435 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6436 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;		None
  6439 ;; Return value:  Size  Location     Type
  6440 ;;                  1    wreg      void 
  6441 ;; Registers used:
  6442 ;;		wreg
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6448 ;;      Params:         2       0       0       0       0       0       0       0
  6449 ;;      Locals:         0       0       0       0       0       0       0       0
  6450 ;;      Temps:          0       0       0       0       0       0       0       0
  6451 ;;      Totals:         2       0       0       0       0       0       0       0
  6452 ;;Total ram usage:        2 bytes
  6453 ;; Hardware stack levels used:    1
  6454 ;; Hardware stack levels required when called:    4
  6455 ;; This function calls:
  6456 ;;		Nothing
  6457 ;; This function is called by:
  6458 ;;		_EUSART_Initialize
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           
  6463                           ;psect for function _EUSART_SetOverrunErrorHandler
  6464  0694                     _EUSART_SetOverrunErrorHandler:	
  6465                           
  6466                           ;eusart.c: 171: EUSART_OverrunErrorHandler = interruptHandler;
  6467                           
  6468                           ;incstack = 0
  6469                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6470  0694  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  6471  0695  0020               	movlb	0	; select bank0
  6472  0696  00CE               	movwf	_EUSART_OverrunErrorHandler+1
  6473  0697  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  6474  0698  00CD               	movwf	_EUSART_OverrunErrorHandler
  6475  0699  0008               	return
  6476  069A                     __end_of_EUSART_SetOverrunErrorHandler:	
  6477                           
  6478                           	psect	text25
  6479  069A                     __ptext25:	
  6480 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6481 ;; Defined at:
  6482 ;;		line 166 in file "mcc_generated_files/eusart.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6485 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;		None
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  1    wreg      void 
  6490 ;; Registers used:
  6491 ;;		wreg
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6497 ;;      Params:         2       0       0       0       0       0       0       0
  6498 ;;      Locals:         0       0       0       0       0       0       0       0
  6499 ;;      Temps:          0       0       0       0       0       0       0       0
  6500 ;;      Totals:         2       0       0       0       0       0       0       0
  6501 ;;Total ram usage:        2 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; Hardware stack levels required when called:    4
  6504 ;; This function calls:
  6505 ;;		Nothing
  6506 ;; This function is called by:
  6507 ;;		_EUSART_Initialize
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           
  6512                           ;psect for function _EUSART_SetFramingErrorHandler
  6513  069A                     _EUSART_SetFramingErrorHandler:	
  6514                           
  6515                           ;eusart.c: 167: EUSART_FramingErrorHandler = interruptHandler;
  6516                           
  6517                           ;incstack = 0
  6518                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6519  069A  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  6520  069B  0020               	movlb	0	; select bank0
  6521  069C  00D0               	movwf	_EUSART_FramingErrorHandler+1
  6522  069D  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  6523  069E  00CF               	movwf	_EUSART_FramingErrorHandler
  6524  069F  0008               	return
  6525  06A0                     __end_of_EUSART_SetFramingErrorHandler:	
  6526                           
  6527                           	psect	text26
  6528  06A0                     __ptext26:	
  6529 ;; *************** function _EUSART_SetErrorHandler *****************
  6530 ;; Defined at:
  6531 ;;		line 174 in file "mcc_generated_files/eusart.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6534 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;		None
  6537 ;; Return value:  Size  Location     Type
  6538 ;;                  1    wreg      void 
  6539 ;; Registers used:
  6540 ;;		wreg
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/0
  6543 ;;		On exit  : 0/0
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6546 ;;      Params:         2       0       0       0       0       0       0       0
  6547 ;;      Locals:         0       0       0       0       0       0       0       0
  6548 ;;      Temps:          0       0       0       0       0       0       0       0
  6549 ;;      Totals:         2       0       0       0       0       0       0       0
  6550 ;;Total ram usage:        2 bytes
  6551 ;; Hardware stack levels used:    1
  6552 ;; Hardware stack levels required when called:    4
  6553 ;; This function calls:
  6554 ;;		Nothing
  6555 ;; This function is called by:
  6556 ;;		_EUSART_Initialize
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           
  6560                           
  6561                           ;psect for function _EUSART_SetErrorHandler
  6562  06A0                     _EUSART_SetErrorHandler:	
  6563                           
  6564                           ;eusart.c: 175: EUSART_ErrorHandler = interruptHandler;
  6565                           
  6566                           ;incstack = 0
  6567                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6568  06A0  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  6569  06A1  0020               	movlb	0	; select bank0
  6570  06A2  00CC               	movwf	_EUSART_ErrorHandler+1
  6571  06A3  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  6572  06A4  00CB               	movwf	_EUSART_ErrorHandler
  6573  06A5  0008               	return
  6574  06A6                     __end_of_EUSART_SetErrorHandler:	
  6575                           
  6576                           	psect	text27
  6577  06A6                     __ptext27:	
  6578 ;; *************** function _DAC_Initialize *****************
  6579 ;; Defined at:
  6580 ;;		line 58 in file "mcc_generated_files/dac.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;		None
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;		None
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  1    wreg      void 
  6587 ;; Registers used:
  6588 ;;		wreg
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6594 ;;      Params:         0       0       0       0       0       0       0       0
  6595 ;;      Locals:         0       0       0       0       0       0       0       0
  6596 ;;      Temps:          0       0       0       0       0       0       0       0
  6597 ;;      Totals:         0       0       0       0       0       0       0       0
  6598 ;;Total ram usage:        0 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; Hardware stack levels required when called:    4
  6601 ;; This function calls:
  6602 ;;		Nothing
  6603 ;; This function is called by:
  6604 ;;		_SYSTEM_Initialize
  6605 ;;		_main
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           
  6610                           ;psect for function _DAC_Initialize
  6611  06A6                     _DAC_Initialize:	
  6612                           
  6613                           ;dac.c: 61: DAC1CON0 = 0x80;
  6614                           
  6615                           ;incstack = 0
  6616                           ; Regs used in _DAC_Initialize: [wreg]
  6617  06A6  3080               	movlw	128
  6618  06A7  0022               	movlb	2	; select bank2
  6619  06A8  0098               	movwf	24	;volatile
  6620                           
  6621                           ;dac.c: 63: DAC1CON1 = 0xFF;
  6622  06A9  30FF               	movlw	255
  6623  06AA  0099               	movwf	25	;volatile
  6624  06AB  0008               	return
  6625  06AC                     __end_of_DAC_Initialize:	
  6626                           
  6627                           	psect	intentry
  6628  0004                     __pintentry:	
  6629 ;; *************** function _INTERRUPT_InterruptManager *****************
  6630 ;; Defined at:
  6631 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;		None
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg, status,2, status,0, pclath, cstack
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6645 ;;      Params:         0       0       0       0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0
  6648 ;;      Totals:         0       0       0       0       0       0       0       0
  6649 ;;Total ram usage:        0 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:    3
  6652 ;; This function calls:
  6653 ;;		_INT_ISR
  6654 ;;		_TMR0_ISR
  6655 ;; This function is called by:
  6656 ;;		Interrupt level 1
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660  0004                     _INTERRUPT_InterruptManager:	
  6661                           
  6662                           ;incstack = 0
  6663  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6664                           
  6665                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  6666  0005  3180               	pagesel	$
  6667                           
  6668                           ;interrupt_manager.c: 55: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  6669  0006  1A8B               	btfsc	11,5	;volatile
  6670  0007  1D0B               	btfss	11,2	;volatile
  6671  0008  280D               	goto	i1l124
  6672                           
  6673                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: TMR0_ISR();
  6674  0009  3186  263C  3180   	fcall	_TMR0_ISR
  6675                           
  6676                           ;interrupt_manager.c: 58: }
  6677  000C  2812               	goto	i1l128
  6678  000D                     i1l124:	
  6679                           
  6680                           ;interrupt_manager.c: 59: else if(INTCONbits.INTE == 1 && INTCONbits.INTF == 1)
  6681  000D  1A0B               	btfsc	11,4	;volatile
  6682  000E  1C8B               	btfss	11,1	;volatile
  6683  000F  2812               	goto	i1l128
  6684                           
  6685                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: INT_ISR();
  6686  0010  3186  26C1         	fcall	_INT_ISR
  6687  0012                     i1l128:	
  6688                           ;interrupt_manager.c: 62: }
  6689                           
  6690  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6691  0013  0009               	retfie
  6692  0014                     __end_of_INTERRUPT_InterruptManager:	
  6693                           
  6694                           	psect	text29
  6695  063C                     __ptext29:	
  6696 ;; *************** function _TMR0_ISR *****************
  6697 ;; Defined at:
  6698 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;		None
  6701 ;; Auto vars:     Size  Location     Type
  6702 ;;		None
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  1    wreg      void 
  6705 ;; Registers used:
  6706 ;;		wreg, status,2, status,0, pclath, cstack
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6712 ;;      Params:         0       0       0       0       0       0       0       0
  6713 ;;      Locals:         0       0       0       0       0       0       0       0
  6714 ;;      Temps:          0       0       0       0       0       0       0       0
  6715 ;;      Totals:         0       0       0       0       0       0       0       0
  6716 ;;Total ram usage:        0 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:    1
  6719 ;; This function calls:
  6720 ;;		Absolute function
  6721 ;;		_TMR0_DefaultInterruptHandler
  6722 ;; This function is called by:
  6723 ;;		_INTERRUPT_InterruptManager
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           
  6728                           ;psect for function _TMR0_ISR
  6729  063C                     _TMR0_ISR:	
  6730                           
  6731                           ;tmr0.c: 112: INTCONbits.TMR0IF = 0;
  6732                           
  6733                           ;incstack = 0
  6734                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6735  063C  110B               	bcf	11,2	;volatile
  6736                           
  6737                           ;tmr0.c: 114: TMR0 = timer0ReloadVal;
  6738  063D  0020               	movlb	0	; select bank0
  6739  063E  0851               	movf	_timer0ReloadVal,w	;volatile
  6740  063F  0095               	movwf	21	;volatile
  6741                           
  6742                           ;tmr0.c: 116: if(TMR0_InterruptHandler)
  6743  0640  0847               	movf	_TMR0_InterruptHandler,w
  6744  0641  0448               	iorwf	_TMR0_InterruptHandler+1,w
  6745  0642  1903               	btfsc	3,2
  6746  0643  0008               	return
  6747                           
  6748                           ;tmr0.c: 117: {;tmr0.c: 118: TMR0_InterruptHandler();
  6749  0644  0848               	movf	_TMR0_InterruptHandler+1,w
  6750  0645  008A               	movwf	10
  6751  0646  0847               	movf	_TMR0_InterruptHandler,w
  6752  0647  000A               	callw
  6753  0648  3186               	pagesel	$
  6754  0649  0008               	return
  6755  064A                     __end_of_TMR0_ISR:	
  6756                           
  6757                           	psect	text30
  6758  06C5                     __ptext30:	
  6759 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6760 ;; Defined at:
  6761 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;		None
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;		None
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  1    wreg      void 
  6768 ;; Registers used:
  6769 ;;		None
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6775 ;;      Params:         0       0       0       0       0       0       0       0
  6776 ;;      Locals:         0       0       0       0       0       0       0       0
  6777 ;;      Temps:          0       0       0       0       0       0       0       0
  6778 ;;      Totals:         0       0       0       0       0       0       0       0
  6779 ;;Total ram usage:        0 bytes
  6780 ;; Hardware stack levels used:    1
  6781 ;; This function calls:
  6782 ;;		Nothing
  6783 ;; This function is called by:
  6784 ;;		_TMR0_Initialize
  6785 ;;		_TMR0_ISR
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           
  6790                           ;psect for function _TMR0_DefaultInterruptHandler
  6791  06C5                     _TMR0_DefaultInterruptHandler:	
  6792                           
  6793                           ;incstack = 0
  6794                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6795  06C5  0008               	return
  6796  06C6                     __end_of_TMR0_DefaultInterruptHandler:	
  6797                           
  6798                           	psect	text31
  6799  06C1                     __ptext31:	
  6800 ;; *************** function _INT_ISR *****************
  6801 ;; Defined at:
  6802 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;		None
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;		None
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  1    wreg      void 
  6809 ;; Registers used:
  6810 ;;		wreg, status,2, status,0, pclath, cstack
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6816 ;;      Params:         0       0       0       0       0       0       0       0
  6817 ;;      Locals:         0       0       0       0       0       0       0       0
  6818 ;;      Temps:          0       0       0       0       0       0       0       0
  6819 ;;      Totals:         0       0       0       0       0       0       0       0
  6820 ;;Total ram usage:        0 bytes
  6821 ;; Hardware stack levels used:    1
  6822 ;; Hardware stack levels required when called:    2
  6823 ;; This function calls:
  6824 ;;		_INT_CallBack
  6825 ;; This function is called by:
  6826 ;;		_INTERRUPT_InterruptManager
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           
  6831                           ;psect for function _INT_ISR
  6832  06C1                     _INT_ISR:	
  6833                           
  6834                           ;ext_int.c: 34: (INTCONbits.INTF = 0);
  6835                           
  6836                           ;incstack = 0
  6837                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  6838  06C1  108B               	bcf	11,1	;volatile
  6839                           
  6840                           ;ext_int.c: 37: INT_CallBack();
  6841  06C2  3186  2655         	fcall	_INT_CallBack
  6842  06C4  0008               	return
  6843  06C5                     __end_of_INT_ISR:	
  6844                           
  6845                           	psect	text32
  6846  0655                     __ptext32:	
  6847 ;; *************** function _INT_CallBack *****************
  6848 ;; Defined at:
  6849 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;		None
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  1    wreg      void 
  6856 ;; Registers used:
  6857 ;;		wreg, status,2, status,0, pclath, cstack
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6863 ;;      Params:         0       0       0       0       0       0       0       0
  6864 ;;      Locals:         0       0       0       0       0       0       0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0       0
  6866 ;;      Totals:         0       0       0       0       0       0       0       0
  6867 ;;Total ram usage:        0 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    1
  6870 ;; This function calls:
  6871 ;;		Absolute function
  6872 ;;		_INT_DefaultInterruptHandler
  6873 ;; This function is called by:
  6874 ;;		_INT_ISR
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           
  6879                           ;psect for function _INT_CallBack
  6880  0655                     _INT_CallBack:	
  6881                           
  6882                           ;ext_int.c: 44: if(INT_InterruptHandler)
  6883                           
  6884                           ;incstack = 0
  6885                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  6886  0655  0020               	movlb	0	; select bank0
  6887  0656  0849               	movf	_INT_InterruptHandler,w
  6888  0657  044A               	iorwf	_INT_InterruptHandler+1,w
  6889  0658  1903               	btfsc	3,2
  6890  0659  0008               	return
  6891                           
  6892                           ;ext_int.c: 45: {;ext_int.c: 46: INT_InterruptHandler();
  6893  065A  084A               	movf	_INT_InterruptHandler+1,w
  6894  065B  008A               	movwf	10
  6895  065C  0849               	movf	_INT_InterruptHandler,w
  6896  065D  000A               	callw
  6897  065E  3186               	pagesel	$
  6898  065F  0008               	return
  6899  0660                     __end_of_INT_CallBack:	
  6900                           
  6901                           	psect	text33
  6902  06C6                     __ptext33:	
  6903 ;; *************** function _INT_DefaultInterruptHandler *****************
  6904 ;; Defined at:
  6905 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;		None
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;		None
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  1    wreg      void 
  6912 ;; Registers used:
  6913 ;;		None
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6919 ;;      Params:         0       0       0       0       0       0       0       0
  6920 ;;      Locals:         0       0       0       0       0       0       0       0
  6921 ;;      Temps:          0       0       0       0       0       0       0       0
  6922 ;;      Totals:         0       0       0       0       0       0       0       0
  6923 ;;Total ram usage:        0 bytes
  6924 ;; Hardware stack levels used:    1
  6925 ;; This function calls:
  6926 ;;		Nothing
  6927 ;; This function is called by:
  6928 ;;		_EXT_INT_Initialize
  6929 ;;		_INT_CallBack
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           
  6934                           ;psect for function _INT_DefaultInterruptHandler
  6935  06C6                     _INT_DefaultInterruptHandler:	
  6936                           
  6937                           ;incstack = 0
  6938                           ; Regs used in _INT_DefaultInterruptHandler: []
  6939  06C6  0008               	return
  6940  06C7                     __end_of_INT_DefaultInterruptHandler:	
  6941  007E                     btemp	set	126	;btemp
  6942  007E                     int$flags	set	126
  6943  007E                     wtemp0	set	126


Data Sizes:
    Strings     182
    Constant    72
    Data        0
    BSS         43
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     39      60
    BANK1            80      0      33
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_8(CODE[27]), STR_7(CODE[27]), STR_6(CODE[27]), STR_5(CODE[27]), 
		 -> STR_4(CODE[27]), STR_3(CODE[26]), STR_2(CODE[4]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    process_remote_command@code	PTR struct . size(1) Largest target is 6
		 -> ir_code(BANK0[6]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _printf->___lldiv
    _putch->_EUSART_Write
    ___llmod->___lldiv
    _battery_voltage->___aldiv
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_process_remote_command
    _process_remote_command->_printf
    _printf->___llmod
    _battery_voltage->___aldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8496
                                             37 BANK0      2     2      0
                     _DAC_Initialize
                    _OPA1_Initialize
                    _OPA2_Initialize
                  _SYSTEM_Initialize
                    _battery_voltage
                             _printf
             _process_remote_command
 ---------------------------------------------------------------------------------
 (1) _process_remote_command                               3     3      0    4102
                                             34 BANK0      3     3      0
                    _battery_voltage
                             _printf
                        _setLEDColor
 ---------------------------------------------------------------------------------
 (2) _setLEDColor                                          3     1      2     272
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _printf                                              32    26      6    3263
                                             10 BANK0     24    18      6
                            ___lldiv
                            ___llmod
                             ___wmul
                    _battery_voltage (ARG)
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     365
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     574
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _battery_voltage                                      2     0      2     506
                                              6 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     506
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     625
                     _DAC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
                    _OPA1_Initialize
                    _OPA2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     125
                                              2 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     125
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OPA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OPA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     125
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     125
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     375
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     125
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     125
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     125
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
                            _INT_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT_CallBack                                         0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DAC_Initialize
   _OPA1_Initialize
   _OPA2_Initialize
   _SYSTEM_Initialize
     _DAC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OPA1_Initialize
     _OPA2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize
   _battery_voltage
     ___aldiv
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     _battery_voltage (ARG)
       ___aldiv
     _isdigit (ARG)
     _putch (ARG)
       _EUSART_Write
   _process_remote_command
     _battery_voltage
       ___aldiv
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _battery_voltage (ARG)
         ___aldiv
       _isdigit (ARG)
       _putch (ARG)
         _EUSART_Write
     _setLEDColor

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     27      3C       6       75.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      21       8       41.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      6B      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jul  2 14:28:03 2020

                                  __CFG_CP$OFF 0000                        __end_of_OPA1_Initialize 06C1  
                          ___wmul@multiplicand 0072                                _timer0ReloadVal 0051  
                                  __CFG_LVP$ON 0000                                            l195 066B  
                                          l390 04A2                                            l550 009A  
                                          l535 004E                                            l560 0112  
                                          l552 00F1                                            l393 04AC  
                                          l546 0098                                            l565 0142  
                                          l549 00BA                                            l590 0256  
                                          l665 0300                                            l569 0187  
                                          l594 05DB                                            _PR2 001B  
                                          u805 03F5                                            u815 0409  
                                          u905 0344                                            u825 0415  
                                          u745 05DC                                            u915 0350  
                                          u755 05E1                                            u785 03E9  
                                          u875 0324                                            u955 0434  
                                          u895 0330                                            u975 044D  
                                          u985 0458                 ?_EUSART_SetFramingErrorHandler 0070  
                              _TMR2_Initialize 0672                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                           l2006 0288  
                                         l1610 063A                                           l1700 043F  
                                         l1704 0457                                           l1616 05D5  
                                         l1634 03E6                                           l1810 004A  
                                         l1644 0414                                           l1636 03F4  
                                         l1708 0462                                           l1670 0321  
                                         l1662 0311                                           l1910 01C6  
                                         l1822 0069                                           l1680 034F  
                                         l1672 032F                                           l1648 041F  
                                         l1904 01B5                                           l1840 00CB  
                                         l1832 009C                                           l1816 0053  
                                         l1906 01B9                                           l1914 01CE  
                                         l1818 005C                                           l1930 002E  
                                         l1684 035A                                           l1916 01D7  
                                         l1918 020E                                           l1926 023E  
                                         l1862 0114                                           l1854 0100  
                                         l1688 0368                                           l1928 0242  
                                         l1872 0144                                           l1880 0172  
                                         l1960 0374                                           l1698 0431  
                                         l1890 0199                                           l1882 017B  
                                         l1970 0389                                           l1962 0379  
                                         l1892 019C                                           l1972 038C  
                                         l1964 037C                                           l1966 0381  
                                         l1968 0384                                           l1976 039C  
                                         l1898 01A6                                           l1978 03C9  
                                         l1998 0263                                           STR_1 06B1  
                                         STR_2 06B1                                           STR_3 05EE  
                                         STR_4 054C                                           STR_5 0582  
                                         STR_6 0567                                           STR_7 059D  
                                         STR_8 05B8                                           STR_9 061D  
                                         u1105 0137                                           u1125 0167  
                                         u1165 018E                                           _LATA 010C  
                                         _LATB 010D                                __end_of_INT_ISR 06C5  
                                         u1335 0274                                           _LATC 010E  
                                         _TMR0 0015                                           _TMR2 001A  
                      __end_of_OPA2_Initialize 06BD                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         _main 0257                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
          __end_of_INT_DefaultInterruptHandler 06C7                    _INT_DefaultInterruptHandler 06C6  
                                         start 0014                                  __CFG_IESO$OFF 0000  
              __end_of_INT_SetInterruptHandler 0694                                  __CFG_MCLRE$ON 0000  
                      __end_of_TMR0_Initialize 061D                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0008  
                __end_of_OSCILLATOR_Initialize 0682                                __end_of___aldiv 0371  
                                        ?_main 0070                                          _ADRES 009B  
                                __CFG_WDTE$OFF 0000                                __end_of___lldiv 0428  
                              __end_of___llmod 046B                                          _T2CON 001C  
                                        i1l124 000D                                          i1l128 0012  
                                 ?_setLEDColor 0070                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _RXPPS 0E24                                          _TXREG 019A  
            __size_of_TMR0_SetInterruptHandler 0006                      ?_TMR0_SetInterruptHandler 0070  
                             __end_of_TMR0_ISR 064A                                __end_of_dpowers 04ED  
                               _WDT_Initialize 06B5                                __end_of_isdigit 063C  
                                        _putch 06AC                                          _stats 00A0  
                               __CFG_BOREN$OFF 0000                                          pclath 000A  
                                        status 0003                        ?_process_remote_command 0070  
                                        wtemp0 007E                               ??_DAC_Initialize 0070  
                              __initialization 0016                                   __end_of_main 02EF  
                               ??_EUSART_Write 0070                        __end_of_TMR2_Initialize 067A  
                               __CFG_LPBOR$OFF 0000                    ?_INTERRUPT_InterruptManager 0070  
                             ?_OPA1_Initialize 0070                                         ??_main 0045  
                     __size_of_battery_voltage 002B                                 __CFG_PLLEN$OFF 0000  
                       __end_of_WDT_Initialize 06B9                                      ??_INT_ISR 0070  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 004D  
                             ___llmod@dividend 0024                                         _CCPR1L 0291  
                               __CFG_ZCDDIS$ON 0000                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RA5PPS 0E95  
                                       _RC1STA 019D                                         _RC4PPS 0EA4  
                                       _RB7PPS 0E9F                                         _RC5PPS 0EA5  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                 __end_of_process_remote_command 03D6  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         _FVRCON 0117  
                                       _INTPPS 0E10                               ?_OPA2_Initialize 0070  
                                       _OSCCON 0099                                         _TX1REG 019A  
                                       _WDTCON 0097                                         _TX1STA 019E  
                               __CFG_PWRTE$OFF 0000                                      ??___aldiv 0078  
                                       ___wmul 05D3                                 __CFG_STVREN$ON 0000  
                                    ??___lldiv 0078                                      ??___llmod 0028  
                             ?_TMR0_Initialize 0070                                         _printf 0029  
                                ?_INT_CallBack 0070                                      ??_isdigit 0070  
                              ?_WDT_Initialize 0070               __size_of_INT_SetInterruptHandler 0006  
     TMR0_SetInterruptHandler@InterruptHandler 0070        INT_SetInterruptHandler@InterruptHandler 0070  
                            _SYSTEM_Initialize 052E                        __end_of__initialization 0025  
                           ?_SYSTEM_Initialize 0070                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0073                                      ?_TMR0_ISR 0070  
                                __end_of_putch 06B1                               ?_TMR2_Initialize 0070  
                               ??_INT_CallBack 0070                    __size_of_EXT_INT_Initialize 000B  
                               _OPTION_REGbits 0095                           __size_of_setLEDColor 000A  
              ??_EUSART_SetOverrunErrorHandler 0072                              ??_battery_voltage 0079  
                    __end_of_SYSTEM_Initialize 054C                                        ??_putch 0071  
                                   __pbssBANK0 0052                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 0672                                     __pmaintext 0257  
             __end_of_TMR0_SetInterruptHandler 068E                                        ?___wmul 0070  
                                   ??_TMR0_ISR 0070                                __CFG_PPS1WAY$ON 0000  
                                   __pintentry 0004                                        ?_printf 002A  
                                      _OPA1CON 0511                                        _OPA2CON 0515  
                                      _LED_red 0054                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                                        _INT_ISR 06C1  
                                      _OSCSTAT 009A                                        _OSCTUNE 0098  
                                      _PWM3DCH 0618                                        _PWM4DCH 061B  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                       ??_EUSART_SetErrorHandler 0072  
                                      ___aldiv 02EF                                        ___lldiv 03D6  
                              __size_of___wmul 001B                                        ___llmod 0428  
                                      __ptext1 0371                                        __ptext2 0660  
                                      __ptext3 0029                                        __ptext4 06AC  
                                      __ptext5 066A                                        __ptext6 062E  
                                      __ptext7 05D3                                        __ptext8 0428  
                                      __ptext9 03D6                                __size_of_printf 022E  
                            __end_of_hexpowers 052E                                        _ir_code 0056  
                                      _dpowers 04C5                          _OSCILLATOR_Initialize 067A  
                                    _T2CONbits 001C                                        _isdigit 062E  
                             ___aldiv@dividend 0074                       ??_PIN_MANAGER_Initialize 0070  
                      _INT_SetInterruptHandler 068E                     __size_of_SYSTEM_Initialize 001E  
                                      clrloop0 0683                           end_of_initialization 0025  
        __end_of_EUSART_SetOverrunErrorHandler 069A         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 0694                                      _LED_green 0053  
                         __end_of_INT_CallBack 0660                              _EUSART_Initialize 04ED  
                              ___lldiv@divisor 0070                               __CFG_CLKOUTEN$ON 0000  
                              ___lldiv@counter 007D                             ?_EUSART_Initialize 0070  
                                      printf@c 0041                                        printf@f 002A  
                             ___aldiv@quotient 0022                                setLEDColor@blue 0071  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
                     _TMR0_SetInterruptHandler 0688                               __CFG_FOSC$INTOSC 0000  
                        __size_of_EUSART_Write 0008                       __size_of_OPA1_Initialize 0004  
              __size_of_EUSART_SetErrorHandler 0006                      __end_of_EUSART_Initialize 050E  
                                  _CCP1CONbits 0293                                    printf@width 003E  
                     __size_of_OPA2_Initialize 0004                     _EUSART_DefaultErrorHandler 0000  
                               __end_of___wmul 05EE                                _battery_voltage 049A  
                                 _EUSART_Write 066A                              __size_of_TMR0_ISR 000E  
                       ?_OSCILLATOR_Initialize 0070                      ??_INT_SetInterruptHandler 0072  
                      __size_of_DAC_Initialize 0006                                 __end_of_printf 0257  
                          start_initialization 0016                       __size_of_TMR0_Initialize 0015  
              __size_of_PIN_MANAGER_Initialize 002F                                    putch@txData 0071  
                              ___llmod@divisor 0020                                ___llmod@counter 0029  
                 ?_INT_DefaultInterruptHandler 0070                 ?_EUSART_SetOverrunErrorHandler 0070  
                   _EUSART_FramingErrorHandler 004F                                       ??___wmul 0074  
                       _EUSART_SetErrorHandler 06A0                                    _CCPTMRSbits 029E  
                   __end_of_EXT_INT_Initialize 0655                                       ??_printf 0030  
                                ??_setLEDColor 0072                                      ___latbits 0001  
                     ??_process_remote_command 0042                                       ?_INT_ISR 0070  
                                __pcstackBANK0 0020                       __size_of_TMR2_Initialize 0008  
                                 _isdigit$1248 0070                          __size_of_INT_CallBack 000B  
                   __size_of_EUSART_Initialize 0021                              ??_OPA1_Initialize 0070  
                        _TMR0_InterruptHandler 0047                                      __pnvBANK0 0047  
                       _PIN_MANAGER_Initialize 046B                        __end_of_battery_voltage 04C5  
                ??_INT_DefaultInterruptHandler 0070                                       ?___aldiv 0070  
                                     ?___lldiv 0070                                       ?___llmod 0020  
                                     _DAC1CON0 0118                                       _DAC1CON1 0119  
                 ??_INTERRUPT_InterruptManager 0070                              ??_OPA2_Initialize 0070  
                                 _INT_CallBack 0655                                       _BAUD1CON 019F  
                                     ?_isdigit 0070                                      _hexpowers 050E  
                          __end_of_setLEDColor 066A                                 __size_of_putch 0005  
                              ___aldiv@divisor 0070                              ??_TMR0_Initialize 0072  
                              ___aldiv@counter 0020                                 ___wmul@product 0074  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0070  
                                     _LATCbits 010E                                       _LED_blue 0052  
                                    clear_ram0 0682                              _eusartRxLastError 0055  
          __size_of_INTERRUPT_InterruptManager 0010                     ??_TMR0_SetInterruptHandler 0072  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0072  
                               setLEDColor@red 0072                                       _TMR0_ISR 063C  
            _EUSART_DefaultOverrunErrorHandler 0000                                     _ADCON0bits 009D  
                            ___wmul@multiplier 0070                                 _DAC_Initialize 06A6  
                                   printf@flag 0040                                     printf@prec 0037  
         __size_of_INT_DefaultInterruptHandler 0001                __size_of_process_remote_command 0065  
                             __size_of_INT_ISR 0004                              ??_TMR2_Initialize 0070  
                             ?_battery_voltage 0026                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 004B                               __size_of___aldiv 0082  
                       __end_of_DAC_Initialize 06AC                               __size_of___lldiv 0052  
                             __size_of___llmod 0043                                    _setLEDColor 0660  
                             __size_of_isdigit 000E                                       __ptext10 049A  
                                     __ptext11 02EF                                       __ptext20 06BD  
                                     __ptext12 052E                                       __ptext21 064A  
                                     __ptext13 06B5                                       __ptext30 06C5  
                                     __ptext22 068E                                       __ptext14 0672  
                                     __ptext31 06C1                                       __ptext23 04ED  
                                     __ptext15 0608                                       __ptext32 0655  
                                     __ptext24 0694                                       __ptext16 0688  
                                     __ptext33 06C6                                       __ptext25 069A  
                                     __ptext17 046B                                       __ptext26 06A0  
                                     __ptext18 067A                                       __ptext27 06A6  
                                     __ptext19 06B9                                       __ptext29 063C  
                                __size_of_main 0098           __end_of_TMR0_DefaultInterruptHandler 06C6  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 06C5  
                      ?_EUSART_SetErrorHandler 0070                         _process_remote_command 0371  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 0014  
                   _INTERRUPT_InterruptManager 0004                                      printf@idx 0036  
        __end_of_EUSART_SetFramingErrorHandler 06A0         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 069A                                ?_DAC_Initialize 0070  
                                    printf@val 003A                                     _INTCONbits 000B  
                                  _PWM3DCLbits 0617                                _OPA1_Initialize 06BD  
                                  _PWM4DCLbits 061A                                     _FVRCONbits 0117  
                         _INT_InterruptHandler 0049                                    _PWM3CONbits 0619  
                               __pstringtext10 06B1                                 __pstringtext11 0000  
                                     isdigit@c 0071                                    _PWM4CONbits 061C  
                           _EXT_INT_Initialize 064A                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000                               ___lldiv@dividend 0074  
                      ?_PIN_MANAGER_Initialize 0070                     process_remote_command@code 0044  
               __end_of_EUSART_SetErrorHandler 06A6                            ?_EXT_INT_Initialize 0070  
                              _OPA2_Initialize 06B9                  ?_TMR0_DefaultInterruptHandler 0070  
                                     printf@ap 0039  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                     ?_INT_SetInterruptHandler 0070                                  __pstringtext1 04C5  
                                __pstringtext2 050E                                  __pstringtext3 054C  
                                __pstringtext4 0567                                  __pstringtext5 0582  
                                __pstringtext6 059D                                  __pstringtext7 05B8  
                                __pstringtext8 05EE                                  __pstringtext9 061D  
                         ??_EXT_INT_Initialize 0072                                     _OPTION_REG 0095  
                             setLEDColor@green 0070                               ___lldiv@quotient 0079  
                              _TMR0_Initialize 0608                                   ___aldiv@sign 0021  
                                   _TX1STAbits 019E                             EUSART_Write@txData 0070  
               __end_of_PIN_MANAGER_Initialize 049A  
